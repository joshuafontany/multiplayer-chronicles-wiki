{"tiddlers":{"$:/plugins/commons/yjs/yjs.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar observable = require('./lib0/dist/observable.cjs');\nvar array = require('./lib0/dist/array.cjs');\nvar math = require('./lib0/dist/math.cjs');\nvar map = require('./lib0/dist/map.cjs');\nvar encoding = require('./lib0/dist/encoding.cjs');\nvar decoding = require('./lib0/dist/decoding.cjs');\nvar random = require('./lib0/dist/random.cjs');\nvar buffer = require('./lib0/dist/buffer.cjs');\nvar error = require('./lib0/dist/error.cjs');\nvar binary = require('./lib0/dist/binary.cjs');\nvar f = require('./lib0/dist/function.cjs');\nvar set = require('./lib0/dist/set.cjs');\nvar logging = require('./lib0/dist/logging.cjs');\nvar time = require('./lib0/dist/time.cjs');\nvar iterator = require('./lib0/dist/iterator.cjs');\nvar object = require('./lib0/dist/object.cjs');\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends observable.Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal();\n    encoding.writeVarUint(encoder.restEncoder, client);\n    const len = dsitems.length;\n    encoding.writeVarUint(encoder.restEncoder, len);\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i];\n      encoder.writeDsClock(item.clock);\n      encoder.writeDsLen(item.len);\n    }\n  });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => []);\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends observable.Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), gc = true, gcFilter = () => true, meta = null, autoLoad = false } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    /**\n     * @type {Map<string, AbstractType<YEvent>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = autoLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin);\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YMap<any>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      if (item.deleted) {\n        // @ts-ignore\n        content.doc = null;\n      } else {\n        content.doc = new Doc({ guid: this.guid, ...content.opts });\n        content.doc._item = item;\n      }\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(content.doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(this.keyClock++);\n    }\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  sv.forEach((clock, client) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} [conf]\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (\n  snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1];\n  const right = structs[pos];\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1);\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc._transaction = null;\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                );\n              events\n                .forEach(event => {\n                  event.currentTarget = type;\n                });\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length);\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction);\n            }\n          })\n        );\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      });\n      f.callAll(fs, []);\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1);\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        doc.clientID = generateNewClientId();\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      transaction.subdocsAdded.forEach(subdoc => doc.subdocs.add(subdoc));\n      transaction.subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n\n      doc.emit('subdocs', [{ loaded: transaction.subdocsLoaded, added: transaction.subdocsAdded, removed: transaction.subdocsRemoved }]);\n      transaction.subdocsRemoved.forEach(subdoc => subdoc.destroy());\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    f(doc._transaction);\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0);\n    }\n  }\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\n */\nclass UndoManager extends observable.Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, { captureTimeout = 500, deleteFilter = () => true, trackedOrigins = new Set([null]) } = {}) {\n    super();\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope];\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.doc = /** @type {Doc} */ (this.scope[0].doc);\n    this.lastChange = 0;\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      // Only track certain transactions\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.redoStack = [];\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]);\n    });\n  }\n\n  clear () {\n    this.doc.transact(transaction => {\n      /**\n       * @param {StackItem} stackItem\n       */\n      const clearItem = stackItem => {\n        iterateDeletedStructs(transaction, stackItem.deletions, item => {\n          if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n            keepItem(item, false);\n          }\n        });\n      };\n      this.undoStack.forEach(clearItem);\n      this.redoStack.forEach(clearItem);\n    });\n    this.undoStack = [];\n    this.redoStack = [];\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor ? 0 : (\n              dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n            )\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1);\n\n/**\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {AbstractType<any>} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {AbstractType<any>}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    switch (c.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        jsonContent.push(c);\n        break\n      default:\n        packJsonContent();\n        switch (c.constructor) {\n          case Uint8Array:\n          case ArrayBuffer:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n            left.integrate(transaction, 0);\n            break\n          case Doc:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n            left.integrate(transaction, 0);\n            break\n          default:\n            if (c instanceof AbstractType) {\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n              left.integrate(transaction, 0);\n            } else {\n              throw new Error('Unexpected content type in insert operation')\n            }\n        }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template T,M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYArray = decoder => new YArray();\n\n/**\n * @template T\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template T number|string|Object|Array|Uint8Array\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<T>}\n   */\n  clone () {\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,T>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(T,string,YMap<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n    return map\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {T} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {T|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYMap = decoder => new YMap();\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map();\n  const marker = findMarker(parent, index);\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left;\n    const right = currPos.right;\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n    currPos.forward();\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : new ContentEmbed(text);\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  while (length > 0 && currPos.right !== null) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          }\n          break\n        }\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} end exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} endAttributes This attribute is modified!\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, end, startAttributes, endAttributes) => {\n  while (end && end.content.constructor !== ContentString && end.content.constructor !== ContentEmbed) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content));\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  while (start !== end) {\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || (item.right.content.constructor !== ContentString && item.right.content.constructor !== ContentEmbed))) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || (item.content.constructor !== ContentString && item.content.constructor !== ContentEmbed))) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          case ContentEmbed:\n          case ContentString:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, map.copy(currPos.currentAttributes));\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op;\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen };\n                deleteLen = 0;\n                break\n              case 'insert':\n                op = { insert };\n                if (currentAttributes.size > 0) {\n                  op.attributes = {};\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value;\n                    }\n                  });\n                }\n                insert = '';\n                break\n              case 'retain':\n                op = { retain };\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {};\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key];\n                  }\n                }\n                retain = 0;\n                break\n            }\n            delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = /** @type {ContentEmbed} */ (item.content).embed;\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      attributes[key] = value;\n                    } else {\n                      delete attributes[key];\n                    }\n                  } else {\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    const doc = transaction.doc;\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false;\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0;\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this);\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot);\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot);\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: /** @type {ContentEmbed} */ (n.content).embed\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    }, splitSnapshotAffectedStructs);\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    if (embed.constructor !== Object) {\n      throw new Error('Embed must be an Object')\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        insertText(transaction, this, pos, embed, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = decoder => new YXmlFragment();\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key]);\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key]);\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(this.doc)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(new Doc({ guid: decoder.readString(), ...decoder.readAny() }));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readString(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<YEvent>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // Whis will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n  } else {\n    // Is a map item. Insert as current value\n    left = item;\n    while (left.right !== null) {\n      left = left.right;\n      if (left.id.client !== ownClientID) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    }\n    if (left.right !== null) {\n      left = /** @type {Item} */ (/** @type {AbstractType<any>} */ (item.parent)._map.get(item.parentSub));\n    }\n    right = null;\n  }\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\n    // try to undo parent if it will be undone anyway\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems) === null) {\n      return null\n    }\n  }\n  if (parentItem !== null && parentItem.redone !== null) {\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is reundone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nexports.AbstractConnector = AbstractConnector;\nexports.AbstractStruct = AbstractStruct;\nexports.AbstractType = AbstractType;\nexports.Array = YArray;\nexports.ContentAny = ContentAny;\nexports.ContentBinary = ContentBinary;\nexports.ContentDeleted = ContentDeleted;\nexports.ContentEmbed = ContentEmbed;\nexports.ContentFormat = ContentFormat;\nexports.ContentJSON = ContentJSON;\nexports.ContentString = ContentString;\nexports.ContentType = ContentType;\nexports.Doc = Doc;\nexports.GC = GC;\nexports.ID = ID;\nexports.Item = Item;\nexports.Map = YMap;\nexports.PermanentUserData = PermanentUserData;\nexports.RelativePosition = RelativePosition;\nexports.Snapshot = Snapshot;\nexports.Text = YText;\nexports.Transaction = Transaction;\nexports.UndoManager = UndoManager;\nexports.XmlElement = YXmlElement;\nexports.XmlFragment = YXmlFragment;\nexports.XmlHook = YXmlHook;\nexports.XmlText = YXmlText;\nexports.YArrayEvent = YArrayEvent;\nexports.YEvent = YEvent;\nexports.YMapEvent = YMapEvent;\nexports.YTextEvent = YTextEvent;\nexports.YXmlEvent = YXmlEvent;\nexports.applyUpdate = applyUpdate;\nexports.applyUpdateV2 = applyUpdateV2;\nexports.compareIDs = compareIDs;\nexports.compareRelativePositions = compareRelativePositions;\nexports.createAbsolutePositionFromRelativePosition = createAbsolutePositionFromRelativePosition;\nexports.createDeleteSet = createDeleteSet;\nexports.createDeleteSetFromStructStore = createDeleteSetFromStructStore;\nexports.createDocFromSnapshot = createDocFromSnapshot;\nexports.createID = createID;\nexports.createRelativePositionFromJSON = createRelativePositionFromJSON;\nexports.createRelativePositionFromTypeIndex = createRelativePositionFromTypeIndex;\nexports.createSnapshot = createSnapshot;\nexports.decodeRelativePosition = decodeRelativePosition;\nexports.decodeSnapshot = decodeSnapshot;\nexports.decodeSnapshotV2 = decodeSnapshotV2;\nexports.decodeStateVector = decodeStateVector;\nexports.diffUpdate = diffUpdate;\nexports.diffUpdateV2 = diffUpdateV2;\nexports.emptySnapshot = emptySnapshot;\nexports.encodeRelativePosition = encodeRelativePosition;\nexports.encodeSnapshot = encodeSnapshot;\nexports.encodeSnapshotV2 = encodeSnapshotV2;\nexports.encodeStateAsUpdate = encodeStateAsUpdate;\nexports.encodeStateAsUpdateV2 = encodeStateAsUpdateV2;\nexports.encodeStateVector = encodeStateVector;\nexports.encodeStateVectorFromUpdate = encodeStateVectorFromUpdate;\nexports.encodeStateVectorFromUpdateV2 = encodeStateVectorFromUpdateV2;\nexports.equalSnapshots = equalSnapshots;\nexports.findRootTypeKey = findRootTypeKey;\nexports.getItem = getItem;\nexports.getState = getState;\nexports.getTypeChildren = getTypeChildren;\nexports.isDeleted = isDeleted;\nexports.isParentOf = isParentOf;\nexports.iterateDeletedStructs = iterateDeletedStructs;\nexports.logType = logType;\nexports.logUpdate = logUpdate;\nexports.logUpdateV2 = logUpdateV2;\nexports.mergeUpdates = mergeUpdates;\nexports.mergeUpdatesV2 = mergeUpdatesV2;\nexports.parseUpdateMeta = parseUpdateMeta;\nexports.parseUpdateMetaV2 = parseUpdateMetaV2;\nexports.readUpdate = readUpdate;\nexports.readUpdateV2 = readUpdateV2;\nexports.relativePositionToJSON = relativePositionToJSON;\nexports.snapshot = snapshot;\nexports.transact = transact;\nexports.tryGc = tryGc;\nexports.typeListToArraySnapshot = typeListToArraySnapshot;\nexports.typeMapGetSnapshot = typeMapGetSnapshot;\n////# sourceMappingURL=yjs.cjs.map\n","title":"$:/plugins/commons/yjs/yjs.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/yjs","version":"13.5.12"},"$:/plugins/commons/yjs/yjs.cjs.map":{"text":"{\"version\":3,\"file\":\"yjs.cjs\",\"sources\":[\"../src/utils/AbstractConnector.js\",\"../src/utils/DeleteSet.js\",\"../src/utils/Doc.js\",\"../src/utils/UpdateDecoder.js\",\"../src/utils/UpdateEncoder.js\",\"../src/utils/encoding.js\",\"../src/utils/EventHandler.js\",\"../src/utils/ID.js\",\"../src/utils/isParentOf.js\",\"../src/utils/logging.js\",\"../src/utils/PermanentUserData.js\",\"../src/utils/RelativePosition.js\",\"../src/utils/Snapshot.js\",\"../src/utils/StructStore.js\",\"../src/utils/Transaction.js\",\"../src/utils/UndoManager.js\",\"../src/utils/updates.js\",\"../src/utils/YEvent.js\",\"../src/types/AbstractType.js\",\"../src/types/YArray.js\",\"../src/types/YMap.js\",\"../src/types/YText.js\",\"../src/types/YXmlFragment.js\",\"../src/types/YXmlElement.js\",\"../src/types/YXmlEvent.js\",\"../src/types/YXmlHook.js\",\"../src/types/YXmlText.js\",\"../src/structs/AbstractStruct.js\",\"../src/structs/GC.js\",\"../src/structs/ContentBinary.js\",\"../src/structs/ContentDeleted.js\",\"../src/structs/ContentDoc.js\",\"../src/structs/ContentEmbed.js\",\"../src/structs/ContentFormat.js\",\"../src/structs/ContentJSON.js\",\"../src/structs/ContentAny.js\",\"../src/structs/ContentString.js\",\"../src/structs/ContentType.js\",\"../src/structs/Item.js\",\"../src/structs/Skip.js\"],\"sourcesContent\":[\"\\nimport { Observable } from 'lib0/observable'\\n\\nimport {\\n  Doc // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\\n *\\n * @note This interface is experimental and it is not advised to actually inherit this class.\\n *       It just serves as typing information.\\n *\\n * @extends {Observable<any>}\\n */\\nexport class AbstractConnector extends Observable {\\n  /**\\n   * @param {Doc} ydoc\\n   * @param {any} awareness\\n   */\\n  constructor (ydoc, awareness) {\\n    super()\\n    this.doc = ydoc\\n    this.awareness = awareness\\n  }\\n}\\n\",\"\\nimport {\\n  findIndexSS,\\n  getState,\\n  splitItem,\\n  iterateStructs,\\n  UpdateEncoderV2,\\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as array from 'lib0/array'\\nimport * as math from 'lib0/math'\\nimport * as map from 'lib0/map'\\nimport * as encoding from 'lib0/encoding'\\nimport * as decoding from 'lib0/decoding'\\n\\nexport class DeleteItem {\\n  /**\\n   * @param {number} clock\\n   * @param {number} len\\n   */\\n  constructor (clock, len) {\\n    /**\\n     * @type {number}\\n     */\\n    this.clock = clock\\n    /**\\n     * @type {number}\\n     */\\n    this.len = len\\n  }\\n}\\n\\n/**\\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\\n * - When created in a transaction, it must only be accessed after sorting, and merging\\n *   - This DeleteSet is send to other clients\\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\\n */\\nexport class DeleteSet {\\n  constructor () {\\n    /**\\n     * @type {Map<number,Array<DeleteItem>>}\\n     */\\n    this.clients = new Map()\\n  }\\n}\\n\\n/**\\n * Iterate over all structs that the DeleteSet gc's.\\n *\\n * @param {Transaction} transaction\\n * @param {DeleteSet} ds\\n * @param {function(GC|Item):void} f\\n *\\n * @function\\n */\\nexport const iterateDeletedStructs = (transaction, ds, f) =>\\n  ds.clients.forEach((deletes, clientid) => {\\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\\n    for (let i = 0; i < deletes.length; i++) {\\n      const del = deletes[i]\\n      iterateStructs(transaction, structs, del.clock, del.len, f)\\n    }\\n  })\\n\\n/**\\n * @param {Array<DeleteItem>} dis\\n * @param {number} clock\\n * @return {number|null}\\n *\\n * @private\\n * @function\\n */\\nexport const findIndexDS = (dis, clock) => {\\n  let left = 0\\n  let right = dis.length - 1\\n  while (left <= right) {\\n    const midindex = math.floor((left + right) / 2)\\n    const mid = dis[midindex]\\n    const midclock = mid.clock\\n    if (midclock <= clock) {\\n      if (clock < midclock + mid.len) {\\n        return midindex\\n      }\\n      left = midindex + 1\\n    } else {\\n      right = midindex - 1\\n    }\\n  }\\n  return null\\n}\\n\\n/**\\n * @param {DeleteSet} ds\\n * @param {ID} id\\n * @return {boolean}\\n *\\n * @private\\n * @function\\n */\\nexport const isDeleted = (ds, id) => {\\n  const dis = ds.clients.get(id.client)\\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\\n}\\n\\n/**\\n * @param {DeleteSet} ds\\n *\\n * @private\\n * @function\\n */\\nexport const sortAndMergeDeleteSet = ds => {\\n  ds.clients.forEach(dels => {\\n    dels.sort((a, b) => a.clock - b.clock)\\n    // merge items without filtering or splicing the array\\n    // i is the current pointer\\n    // j refers to the current insert position for the pointed item\\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\\n    let i, j\\n    for (i = 1, j = 1; i < dels.length; i++) {\\n      const left = dels[j - 1]\\n      const right = dels[i]\\n      if (left.clock + left.len >= right.clock) {\\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\\n      } else {\\n        if (j < i) {\\n          dels[j] = right\\n        }\\n        j++\\n      }\\n    }\\n    dels.length = j\\n  })\\n}\\n\\n/**\\n * @param {Array<DeleteSet>} dss\\n * @return {DeleteSet} A fresh DeleteSet\\n */\\nexport const mergeDeleteSets = dss => {\\n  const merged = new DeleteSet()\\n  for (let dssI = 0; dssI < dss.length; dssI++) {\\n    dss[dssI].clients.forEach((delsLeft, client) => {\\n      if (!merged.clients.has(client)) {\\n        // Write all missing keys from current ds and all following.\\n        // If merged already contains `client` current ds has already been added.\\n        /**\\n         * @type {Array<DeleteItem>}\\n         */\\n        const dels = delsLeft.slice()\\n        for (let i = dssI + 1; i < dss.length; i++) {\\n          array.appendTo(dels, dss[i].clients.get(client) || [])\\n        }\\n        merged.clients.set(client, dels)\\n      }\\n    })\\n  }\\n  sortAndMergeDeleteSet(merged)\\n  return merged\\n}\\n\\n/**\\n * @param {DeleteSet} ds\\n * @param {number} client\\n * @param {number} clock\\n * @param {number} length\\n *\\n * @private\\n * @function\\n */\\nexport const addToDeleteSet = (ds, client, clock, length) => {\\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length))\\n}\\n\\nexport const createDeleteSet = () => new DeleteSet()\\n\\n/**\\n * @param {StructStore} ss\\n * @return {DeleteSet} Merged and sorted DeleteSet\\n *\\n * @private\\n * @function\\n */\\nexport const createDeleteSetFromStructStore = ss => {\\n  const ds = createDeleteSet()\\n  ss.clients.forEach((structs, client) => {\\n    /**\\n     * @type {Array<DeleteItem>}\\n     */\\n    const dsitems = []\\n    for (let i = 0; i < structs.length; i++) {\\n      const struct = structs[i]\\n      if (struct.deleted) {\\n        const clock = struct.id.clock\\n        let len = struct.length\\n        if (i + 1 < structs.length) {\\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\\n            len += next.length\\n          }\\n        }\\n        dsitems.push(new DeleteItem(clock, len))\\n      }\\n    }\\n    if (dsitems.length > 0) {\\n      ds.clients.set(client, dsitems)\\n    }\\n  })\\n  return ds\\n}\\n\\n/**\\n * @param {DSEncoderV1 | DSEncoderV2} encoder\\n * @param {DeleteSet} ds\\n *\\n * @private\\n * @function\\n */\\nexport const writeDeleteSet = (encoder, ds) => {\\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\\n  ds.clients.forEach((dsitems, client) => {\\n    encoder.resetDsCurVal()\\n    encoding.writeVarUint(encoder.restEncoder, client)\\n    const len = dsitems.length\\n    encoding.writeVarUint(encoder.restEncoder, len)\\n    for (let i = 0; i < len; i++) {\\n      const item = dsitems[i]\\n      encoder.writeDsClock(item.clock)\\n      encoder.writeDsLen(item.len)\\n    }\\n  })\\n}\\n\\n/**\\n * @param {DSDecoderV1 | DSDecoderV2} decoder\\n * @return {DeleteSet}\\n *\\n * @private\\n * @function\\n */\\nexport const readDeleteSet = decoder => {\\n  const ds = new DeleteSet()\\n  const numClients = decoding.readVarUint(decoder.restDecoder)\\n  for (let i = 0; i < numClients; i++) {\\n    decoder.resetDsCurVal()\\n    const client = decoding.readVarUint(decoder.restDecoder)\\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\\n    if (numberOfDeletes > 0) {\\n      const dsField = map.setIfUndefined(ds.clients, client, () => [])\\n      for (let i = 0; i < numberOfDeletes; i++) {\\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\\n      }\\n    }\\n  }\\n  return ds\\n}\\n\\n/**\\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\\n */\\n\\n/**\\n * @param {DSDecoderV1 | DSDecoderV2} decoder\\n * @param {Transaction} transaction\\n * @param {StructStore} store\\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\\n *\\n * @private\\n * @function\\n */\\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\\n  const unappliedDS = new DeleteSet()\\n  const numClients = decoding.readVarUint(decoder.restDecoder)\\n  for (let i = 0; i < numClients; i++) {\\n    decoder.resetDsCurVal()\\n    const client = decoding.readVarUint(decoder.restDecoder)\\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\\n    const structs = store.clients.get(client) || []\\n    const state = getState(store, client)\\n    for (let i = 0; i < numberOfDeletes; i++) {\\n      const clock = decoder.readDsClock()\\n      const clockEnd = clock + decoder.readDsLen()\\n      if (clock < state) {\\n        if (state < clockEnd) {\\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\\n        }\\n        let index = findIndexSS(structs, clock)\\n        /**\\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\\n         * @type {Item}\\n         */\\n        // @ts-ignore\\n        let struct = structs[index]\\n        // split the first item if necessary\\n        if (!struct.deleted && struct.id.clock < clock) {\\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\\n          index++ // increase we now want to use the next struct\\n        }\\n        while (index < structs.length) {\\n          // @ts-ignore\\n          struct = structs[index++]\\n          if (struct.id.clock < clockEnd) {\\n            if (!struct.deleted) {\\n              if (clockEnd < struct.id.clock + struct.length) {\\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\\n              }\\n              struct.delete(transaction)\\n            }\\n          } else {\\n            break\\n          }\\n        }\\n      } else {\\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\\n      }\\n    }\\n  }\\n  if (unappliedDS.clients.size > 0) {\\n    const ds = new UpdateEncoderV2()\\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\\n    writeDeleteSet(ds, unappliedDS)\\n    return ds.toUint8Array()\\n  }\\n  return null\\n}\\n\",\"/**\\n * @module Y\\n */\\n\\nimport {\\n  StructStore,\\n  AbstractType,\\n  YArray,\\n  YText,\\n  YMap,\\n  YXmlFragment,\\n  transact,\\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\\n} from '../internals.js'\\n\\nimport { Observable } from 'lib0/observable'\\nimport * as random from 'lib0/random'\\nimport * as map from 'lib0/map'\\nimport * as array from 'lib0/array'\\n\\nexport const generateNewClientId = random.uint32\\n\\n/**\\n * @typedef {Object} DocOpts\\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\\n */\\n\\n/**\\n * A Yjs instance handles the state of shared data.\\n * @extends Observable<string>\\n */\\nexport class Doc extends Observable {\\n  /**\\n   * @param {DocOpts} [opts] configuration\\n   */\\n  constructor ({ guid = random.uuidv4(), gc = true, gcFilter = () => true, meta = null, autoLoad = false } = {}) {\\n    super()\\n    this.gc = gc\\n    this.gcFilter = gcFilter\\n    this.clientID = generateNewClientId()\\n    this.guid = guid\\n    /**\\n     * @type {Map<string, AbstractType<YEvent>>}\\n     */\\n    this.share = new Map()\\n    this.store = new StructStore()\\n    /**\\n     * @type {Transaction | null}\\n     */\\n    this._transaction = null\\n    /**\\n     * @type {Array<Transaction>}\\n     */\\n    this._transactionCleanups = []\\n    /**\\n     * @type {Set<Doc>}\\n     */\\n    this.subdocs = new Set()\\n    /**\\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\\n     * @type {Item?}\\n     */\\n    this._item = null\\n    this.shouldLoad = autoLoad\\n    this.autoLoad = autoLoad\\n    this.meta = meta\\n  }\\n\\n  /**\\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\\n   *\\n   * `load()` might be used in the future to request any provider to load the most current data.\\n   *\\n   * It is safe to call `load()` multiple times.\\n   */\\n  load () {\\n    const item = this._item\\n    if (item !== null && !this.shouldLoad) {\\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\\n        transaction.subdocsLoaded.add(this)\\n      }, null, true)\\n    }\\n    this.shouldLoad = true\\n  }\\n\\n  getSubdocs () {\\n    return this.subdocs\\n  }\\n\\n  getSubdocGuids () {\\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\\n  }\\n\\n  /**\\n   * Changes that happen inside of a transaction are bundled. This means that\\n   * the observer fires _after_ the transaction is finished and that all changes\\n   * that happened inside of the transaction are sent as one message to the\\n   * other peers.\\n   *\\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\\n   *\\n   * @public\\n   */\\n  transact (f, origin = null) {\\n    transact(this, f, origin)\\n  }\\n\\n  /**\\n   * Define a shared data type.\\n   *\\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\\n   * and do not overwrite each other. I.e.\\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\\n   *\\n   * After this method is called, the type is also available on `y.share.get(name)`.\\n   *\\n   * *Best Practices:*\\n   * Define all types right after the Yjs instance is created and store them in a separate object.\\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\\n   *\\n   * @example\\n   *   const y = new Y(..)\\n   *   const appState = {\\n   *     document: y.getText('document')\\n   *     comments: y.getArray('comments')\\n   *   }\\n   *\\n   * @param {string} name\\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\\n   *\\n   * @public\\n   */\\n  get (name, TypeConstructor = AbstractType) {\\n    const type = map.setIfUndefined(this.share, name, () => {\\n      // @ts-ignore\\n      const t = new TypeConstructor()\\n      t._integrate(this, null)\\n      return t\\n    })\\n    const Constr = type.constructor\\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\\n      if (Constr === AbstractType) {\\n        // @ts-ignore\\n        const t = new TypeConstructor()\\n        t._map = type._map\\n        type._map.forEach(/** @param {Item?} n */ n => {\\n          for (; n !== null; n = n.left) {\\n            // @ts-ignore\\n            n.parent = t\\n          }\\n        })\\n        t._start = type._start\\n        for (let n = t._start; n !== null; n = n.right) {\\n          n.parent = t\\n        }\\n        t._length = type._length\\n        this.share.set(name, t)\\n        t._integrate(this, null)\\n        return t\\n      } else {\\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\\n      }\\n    }\\n    return type\\n  }\\n\\n  /**\\n   * @template T\\n   * @param {string} [name]\\n   * @return {YArray<T>}\\n   *\\n   * @public\\n   */\\n  getArray (name = '') {\\n    // @ts-ignore\\n    return this.get(name, YArray)\\n  }\\n\\n  /**\\n   * @param {string} [name]\\n   * @return {YText}\\n   *\\n   * @public\\n   */\\n  getText (name = '') {\\n    // @ts-ignore\\n    return this.get(name, YText)\\n  }\\n\\n  /**\\n   * @param {string} [name]\\n   * @return {YMap<any>}\\n   *\\n   * @public\\n   */\\n  getMap (name = '') {\\n    // @ts-ignore\\n    return this.get(name, YMap)\\n  }\\n\\n  /**\\n   * @param {string} [name]\\n   * @return {YXmlFragment}\\n   *\\n   * @public\\n   */\\n  getXmlFragment (name = '') {\\n    // @ts-ignore\\n    return this.get(name, YXmlFragment)\\n  }\\n\\n  /**\\n   * Converts the entire document into a js object, recursively traversing each yjs type\\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\\n   *\\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\\n   *\\n   * @return {Object<string, any>}\\n   */\\n  toJSON () {\\n    /**\\n     * @type {Object<string, any>}\\n     */\\n    const doc = {}\\n\\n    this.share.forEach((value, key) => {\\n      doc[key] = value.toJSON()\\n    })\\n\\n    return doc\\n  }\\n\\n  /**\\n   * Emit `destroy` event and unregister all event handlers.\\n   */\\n  destroy () {\\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\\n    const item = this._item\\n    if (item !== null) {\\n      this._item = null\\n      const content = /** @type {ContentDoc} */ (item.content)\\n      if (item.deleted) {\\n        // @ts-ignore\\n        content.doc = null\\n      } else {\\n        content.doc = new Doc({ guid: this.guid, ...content.opts })\\n        content.doc._item = item\\n      }\\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\\n        if (!item.deleted) {\\n          transaction.subdocsAdded.add(content.doc)\\n        }\\n        transaction.subdocsRemoved.add(this)\\n      }, null, true)\\n    }\\n    this.emit('destroyed', [true])\\n    this.emit('destroy', [this])\\n    super.destroy()\\n  }\\n\\n  /**\\n   * @param {string} eventName\\n   * @param {function(...any):any} f\\n   */\\n  on (eventName, f) {\\n    super.on(eventName, f)\\n  }\\n\\n  /**\\n   * @param {string} eventName\\n   * @param {function} f\\n   */\\n  off (eventName, f) {\\n    super.off(eventName, f)\\n  }\\n}\\n\",\"import * as buffer from 'lib0/buffer'\\nimport * as decoding from 'lib0/decoding'\\nimport {\\n  ID, createID\\n} from '../internals.js'\\n\\nexport class DSDecoderV1 {\\n  /**\\n   * @param {decoding.Decoder} decoder\\n   */\\n  constructor (decoder) {\\n    this.restDecoder = decoder\\n  }\\n\\n  resetDsCurVal () {\\n    // nop\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  readDsClock () {\\n    return decoding.readVarUint(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  readDsLen () {\\n    return decoding.readVarUint(this.restDecoder)\\n  }\\n}\\n\\nexport class UpdateDecoderV1 extends DSDecoderV1 {\\n  /**\\n   * @return {ID}\\n   */\\n  readLeftID () {\\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\\n  }\\n\\n  /**\\n   * @return {ID}\\n   */\\n  readRightID () {\\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\\n  }\\n\\n  /**\\n   * Read the next client id.\\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\\n   */\\n  readClient () {\\n    return decoding.readVarUint(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {number} info An unsigned 8-bit integer\\n   */\\n  readInfo () {\\n    return decoding.readUint8(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  readString () {\\n    return decoding.readVarString(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {boolean} isKey\\n   */\\n  readParentInfo () {\\n    return decoding.readVarUint(this.restDecoder) === 1\\n  }\\n\\n  /**\\n   * @return {number} info An unsigned 8-bit integer\\n   */\\n  readTypeRef () {\\n    return decoding.readVarUint(this.restDecoder)\\n  }\\n\\n  /**\\n   * Write len of a struct - well suited for Opt RLE encoder.\\n   *\\n   * @return {number} len\\n   */\\n  readLen () {\\n    return decoding.readVarUint(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {any}\\n   */\\n  readAny () {\\n    return decoding.readAny(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {Uint8Array}\\n   */\\n  readBuf () {\\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\\n  }\\n\\n  /**\\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\\n   *\\n   * @return {any}\\n   */\\n  readJSON () {\\n    return JSON.parse(decoding.readVarString(this.restDecoder))\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  readKey () {\\n    return decoding.readVarString(this.restDecoder)\\n  }\\n}\\n\\nexport class DSDecoderV2 {\\n  /**\\n   * @param {decoding.Decoder} decoder\\n   */\\n  constructor (decoder) {\\n    /**\\n     * @private\\n     */\\n    this.dsCurrVal = 0\\n    this.restDecoder = decoder\\n  }\\n\\n  resetDsCurVal () {\\n    this.dsCurrVal = 0\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  readDsClock () {\\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\\n    return this.dsCurrVal\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  readDsLen () {\\n    const diff = decoding.readVarUint(this.restDecoder) + 1\\n    this.dsCurrVal += diff\\n    return diff\\n  }\\n}\\n\\nexport class UpdateDecoderV2 extends DSDecoderV2 {\\n  /**\\n   * @param {decoding.Decoder} decoder\\n   */\\n  constructor (decoder) {\\n    super(decoder)\\n    /**\\n     * List of cached keys. If the keys[id] does not exist, we read a new key\\n     * from stringEncoder and push it to keys.\\n     *\\n     * @type {Array<string>}\\n     */\\n    this.keys = []\\n    decoding.readVarUint(decoder) // read feature flag - currently unused\\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\\n  }\\n\\n  /**\\n   * @return {ID}\\n   */\\n  readLeftID () {\\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\\n  }\\n\\n  /**\\n   * @return {ID}\\n   */\\n  readRightID () {\\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\\n  }\\n\\n  /**\\n   * Read the next client id.\\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\\n   */\\n  readClient () {\\n    return this.clientDecoder.read()\\n  }\\n\\n  /**\\n   * @return {number} info An unsigned 8-bit integer\\n   */\\n  readInfo () {\\n    return /** @type {number} */ (this.infoDecoder.read())\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  readString () {\\n    return this.stringDecoder.read()\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  readParentInfo () {\\n    return this.parentInfoDecoder.read() === 1\\n  }\\n\\n  /**\\n   * @return {number} An unsigned 8-bit integer\\n   */\\n  readTypeRef () {\\n    return this.typeRefDecoder.read()\\n  }\\n\\n  /**\\n   * Write len of a struct - well suited for Opt RLE encoder.\\n   *\\n   * @return {number}\\n   */\\n  readLen () {\\n    return this.lenDecoder.read()\\n  }\\n\\n  /**\\n   * @return {any}\\n   */\\n  readAny () {\\n    return decoding.readAny(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {Uint8Array}\\n   */\\n  readBuf () {\\n    return decoding.readVarUint8Array(this.restDecoder)\\n  }\\n\\n  /**\\n   * This is mainly here for legacy purposes.\\n   *\\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\\n   *\\n   * @return {any}\\n   */\\n  readJSON () {\\n    return decoding.readAny(this.restDecoder)\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  readKey () {\\n    const keyClock = this.keyClockDecoder.read()\\n    if (keyClock < this.keys.length) {\\n      return this.keys[keyClock]\\n    } else {\\n      const key = this.stringDecoder.read()\\n      this.keys.push(key)\\n      return key\\n    }\\n  }\\n}\\n\",\"\\nimport * as error from 'lib0/error'\\nimport * as encoding from 'lib0/encoding'\\n\\nimport {\\n  ID // eslint-disable-line\\n} from '../internals.js'\\n\\nexport class DSEncoderV1 {\\n  constructor () {\\n    this.restEncoder = encoding.createEncoder()\\n  }\\n\\n  toUint8Array () {\\n    return encoding.toUint8Array(this.restEncoder)\\n  }\\n\\n  resetDsCurVal () {\\n    // nop\\n  }\\n\\n  /**\\n   * @param {number} clock\\n   */\\n  writeDsClock (clock) {\\n    encoding.writeVarUint(this.restEncoder, clock)\\n  }\\n\\n  /**\\n   * @param {number} len\\n   */\\n  writeDsLen (len) {\\n    encoding.writeVarUint(this.restEncoder, len)\\n  }\\n}\\n\\nexport class UpdateEncoderV1 extends DSEncoderV1 {\\n  /**\\n   * @param {ID} id\\n   */\\n  writeLeftID (id) {\\n    encoding.writeVarUint(this.restEncoder, id.client)\\n    encoding.writeVarUint(this.restEncoder, id.clock)\\n  }\\n\\n  /**\\n   * @param {ID} id\\n   */\\n  writeRightID (id) {\\n    encoding.writeVarUint(this.restEncoder, id.client)\\n    encoding.writeVarUint(this.restEncoder, id.clock)\\n  }\\n\\n  /**\\n   * Use writeClient and writeClock instead of writeID if possible.\\n   * @param {number} client\\n   */\\n  writeClient (client) {\\n    encoding.writeVarUint(this.restEncoder, client)\\n  }\\n\\n  /**\\n   * @param {number} info An unsigned 8-bit integer\\n   */\\n  writeInfo (info) {\\n    encoding.writeUint8(this.restEncoder, info)\\n  }\\n\\n  /**\\n   * @param {string} s\\n   */\\n  writeString (s) {\\n    encoding.writeVarString(this.restEncoder, s)\\n  }\\n\\n  /**\\n   * @param {boolean} isYKey\\n   */\\n  writeParentInfo (isYKey) {\\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\\n  }\\n\\n  /**\\n   * @param {number} info An unsigned 8-bit integer\\n   */\\n  writeTypeRef (info) {\\n    encoding.writeVarUint(this.restEncoder, info)\\n  }\\n\\n  /**\\n   * Write len of a struct - well suited for Opt RLE encoder.\\n   *\\n   * @param {number} len\\n   */\\n  writeLen (len) {\\n    encoding.writeVarUint(this.restEncoder, len)\\n  }\\n\\n  /**\\n   * @param {any} any\\n   */\\n  writeAny (any) {\\n    encoding.writeAny(this.restEncoder, any)\\n  }\\n\\n  /**\\n   * @param {Uint8Array} buf\\n   */\\n  writeBuf (buf) {\\n    encoding.writeVarUint8Array(this.restEncoder, buf)\\n  }\\n\\n  /**\\n   * @param {any} embed\\n   */\\n  writeJSON (embed) {\\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\\n  }\\n\\n  /**\\n   * @param {string} key\\n   */\\n  writeKey (key) {\\n    encoding.writeVarString(this.restEncoder, key)\\n  }\\n}\\n\\nexport class DSEncoderV2 {\\n  constructor () {\\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\\n    this.dsCurrVal = 0\\n  }\\n\\n  toUint8Array () {\\n    return encoding.toUint8Array(this.restEncoder)\\n  }\\n\\n  resetDsCurVal () {\\n    this.dsCurrVal = 0\\n  }\\n\\n  /**\\n   * @param {number} clock\\n   */\\n  writeDsClock (clock) {\\n    const diff = clock - this.dsCurrVal\\n    this.dsCurrVal = clock\\n    encoding.writeVarUint(this.restEncoder, diff)\\n  }\\n\\n  /**\\n   * @param {number} len\\n   */\\n  writeDsLen (len) {\\n    if (len === 0) {\\n      error.unexpectedCase()\\n    }\\n    encoding.writeVarUint(this.restEncoder, len - 1)\\n    this.dsCurrVal += len\\n  }\\n}\\n\\nexport class UpdateEncoderV2 extends DSEncoderV2 {\\n  constructor () {\\n    super()\\n    /**\\n     * @type {Map<string,number>}\\n     */\\n    this.keyMap = new Map()\\n    /**\\n     * Refers to the next uniqe key-identifier to me used.\\n     * See writeKey method for more information.\\n     *\\n     * @type {number}\\n     */\\n    this.keyClock = 0\\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\\n    this.clientEncoder = new encoding.UintOptRleEncoder()\\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\\n    this.stringEncoder = new encoding.StringEncoder()\\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\\n    this.lenEncoder = new encoding.UintOptRleEncoder()\\n  }\\n\\n  toUint8Array () {\\n    const encoder = encoding.createEncoder()\\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\\n    // @note The rest encoder is appended! (note the missing var)\\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\\n    return encoding.toUint8Array(encoder)\\n  }\\n\\n  /**\\n   * @param {ID} id\\n   */\\n  writeLeftID (id) {\\n    this.clientEncoder.write(id.client)\\n    this.leftClockEncoder.write(id.clock)\\n  }\\n\\n  /**\\n   * @param {ID} id\\n   */\\n  writeRightID (id) {\\n    this.clientEncoder.write(id.client)\\n    this.rightClockEncoder.write(id.clock)\\n  }\\n\\n  /**\\n   * @param {number} client\\n   */\\n  writeClient (client) {\\n    this.clientEncoder.write(client)\\n  }\\n\\n  /**\\n   * @param {number} info An unsigned 8-bit integer\\n   */\\n  writeInfo (info) {\\n    this.infoEncoder.write(info)\\n  }\\n\\n  /**\\n   * @param {string} s\\n   */\\n  writeString (s) {\\n    this.stringEncoder.write(s)\\n  }\\n\\n  /**\\n   * @param {boolean} isYKey\\n   */\\n  writeParentInfo (isYKey) {\\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\\n  }\\n\\n  /**\\n   * @param {number} info An unsigned 8-bit integer\\n   */\\n  writeTypeRef (info) {\\n    this.typeRefEncoder.write(info)\\n  }\\n\\n  /**\\n   * Write len of a struct - well suited for Opt RLE encoder.\\n   *\\n   * @param {number} len\\n   */\\n  writeLen (len) {\\n    this.lenEncoder.write(len)\\n  }\\n\\n  /**\\n   * @param {any} any\\n   */\\n  writeAny (any) {\\n    encoding.writeAny(this.restEncoder, any)\\n  }\\n\\n  /**\\n   * @param {Uint8Array} buf\\n   */\\n  writeBuf (buf) {\\n    encoding.writeVarUint8Array(this.restEncoder, buf)\\n  }\\n\\n  /**\\n   * This is mainly here for legacy purposes.\\n   *\\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\\n   *\\n   * @param {any} embed\\n   */\\n  writeJSON (embed) {\\n    encoding.writeAny(this.restEncoder, embed)\\n  }\\n\\n  /**\\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\\n   * occur very often. For a 3d application, the key `position` might occur very often.\\n   *\\n   * We cache these keys in a Map and refer to them via a unique number.\\n   *\\n   * @param {string} key\\n   */\\n  writeKey (key) {\\n    const clock = this.keyMap.get(key)\\n    if (clock === undefined) {\\n      this.keyClockEncoder.write(this.keyClock++)\\n      this.stringEncoder.write(key)\\n    } else {\\n      this.keyClockEncoder.write(this.keyClock++)\\n    }\\n  }\\n}\\n\",\"\\n/**\\n * @module encoding\\n */\\n/*\\n * We use the first five bits in the info flag for determining the type of the struct.\\n *\\n * 0: GC\\n * 1: Item with Deleted content\\n * 2: Item with JSON content\\n * 3: Item with Binary content\\n * 4: Item with String content\\n * 5: Item with Embed content (for richtext content)\\n * 6: Item with Format content (a formatting marker for richtext content)\\n * 7: Item with Type\\n */\\n\\nimport {\\n  findIndexSS,\\n  getState,\\n  createID,\\n  getStateVector,\\n  readAndApplyDeleteSet,\\n  writeDeleteSet,\\n  createDeleteSetFromStructStore,\\n  transact,\\n  readItemContent,\\n  UpdateDecoderV1,\\n  UpdateDecoderV2,\\n  UpdateEncoderV1,\\n  UpdateEncoderV2,\\n  DSEncoderV2,\\n  DSDecoderV1,\\n  DSEncoderV1,\\n  mergeUpdates,\\n  mergeUpdatesV2,\\n  Skip,\\n  diffUpdateV2,\\n  convertUpdateFormatV2ToV1,\\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as encoding from 'lib0/encoding'\\nimport * as decoding from 'lib0/decoding'\\nimport * as binary from 'lib0/binary'\\nimport * as map from 'lib0/map'\\nimport * as math from 'lib0/math'\\n\\n/**\\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n * @param {Array<GC|Item>} structs All structs by `client`\\n * @param {number} client\\n * @param {number} clock write structs starting with `ID(client,clock)`\\n *\\n * @function\\n */\\nconst writeStructs = (encoder, structs, client, clock) => {\\n  // write first id\\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\\n  const startNewStructs = findIndexSS(structs, clock)\\n  // write # encoded structs\\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\\n  encoder.writeClient(client)\\n  encoding.writeVarUint(encoder.restEncoder, clock)\\n  const firstStruct = structs[startNewStructs]\\n  // write first struct with an offset\\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\\n    structs[i].write(encoder, 0)\\n  }\\n}\\n\\n/**\\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n * @param {StructStore} store\\n * @param {Map<number,number>} _sm\\n *\\n * @private\\n * @function\\n */\\nexport const writeClientsStructs = (encoder, store, _sm) => {\\n  // we filter all valid _sm entries into sm\\n  const sm = new Map()\\n  _sm.forEach((clock, client) => {\\n    // only write if new structs are available\\n    if (getState(store, client) > clock) {\\n      sm.set(client, clock)\\n    }\\n  })\\n  getStateVector(store).forEach((clock, client) => {\\n    if (!_sm.has(client)) {\\n      sm.set(client, 0)\\n    }\\n  })\\n  // write # states that were updated\\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\\n  // Write items with higher client ids first\\n  // This heavily improves the conflict algorithm.\\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\\n    // @ts-ignore\\n    writeStructs(encoder, store.clients.get(client), client, clock)\\n  })\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\\n * @param {Doc} doc\\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\\n *\\n * @private\\n * @function\\n */\\nexport const readClientsStructRefs = (decoder, doc) => {\\n  /**\\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\\n   */\\n  const clientRefs = map.create()\\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\\n  for (let i = 0; i < numOfStateUpdates; i++) {\\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\\n    /**\\n     * @type {Array<GC|Item>}\\n     */\\n    const refs = new Array(numberOfStructs)\\n    const client = decoder.readClient()\\n    let clock = decoding.readVarUint(decoder.restDecoder)\\n    // const start = performance.now()\\n    clientRefs.set(client, { i: 0, refs })\\n    for (let i = 0; i < numberOfStructs; i++) {\\n      const info = decoder.readInfo()\\n      switch (binary.BITS5 & info) {\\n        case 0: { // GC\\n          const len = decoder.readLen()\\n          refs[i] = new GC(createID(client, clock), len)\\n          clock += len\\n          break\\n        }\\n        case 10: { // Skip Struct (nothing to apply)\\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\\n          const len = decoding.readVarUint(decoder.restDecoder)\\n          refs[i] = new Skip(createID(client, clock), len)\\n          clock += len\\n          break\\n        }\\n        default: { // Item with content\\n          /**\\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\\n           * Below a non-optimized version is shown that implements the basic algorithm with\\n           * a few comments\\n           */\\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\\n          // and we read the next string as parentYKey.\\n          // It indicates how we store/retrieve parent from `y.share`\\n          // @type {string|null}\\n          const struct = new Item(\\n            createID(client, clock),\\n            null, // leftd\\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\\n            null, // right\\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\\n            readItemContent(decoder, info) // item content\\n          )\\n          /* A non-optimized implementation of the above algorithm:\\n\\n          // The item that was originally to the left of this item.\\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\\n          // The item that was originally to the right of this item.\\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\\n          // and we read the next string as parentYKey.\\n          // It indicates how we store/retrieve parent from `y.share`\\n          // @type {string|null}\\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\\n\\n          const struct = new Item(\\n            createID(client, clock),\\n            null, // leftd\\n            origin, // origin\\n            null, // right\\n            rightOrigin, // right origin\\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\\n            readItemContent(decoder, info) // item content\\n          )\\n          */\\n          refs[i] = struct\\n          clock += struct.length\\n        }\\n      }\\n    }\\n    // console.log('time to read: ', performance.now() - start) // @todo remove\\n  }\\n  return clientRefs\\n}\\n\\n/**\\n * Resume computing structs generated by struct readers.\\n *\\n * While there is something to do, we integrate structs in this order\\n * 1. top element on stack, if stack is not empty\\n * 2. next element from current struct reader (if empty, use next struct reader)\\n *\\n * If struct causally depends on another struct (ref.missing), we put next reader of\\n * `ref.id.client` on top of stack.\\n *\\n * At some point we find a struct that has no causal dependencies,\\n * then we start emptying the stack.\\n *\\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\\n *\\n * This method is implemented in a way so that we can resume computation if this update\\n * causally depends on another update.\\n *\\n * @param {Transaction} transaction\\n * @param {StructStore} store\\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\\n *\\n * @private\\n * @function\\n */\\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\\n  /**\\n   * @type {Array<Item | GC>}\\n   */\\n  const stack = []\\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\\n  if (clientsStructRefsIds.length === 0) {\\n    return null\\n  }\\n  const getNextStructTarget = () => {\\n    if (clientsStructRefsIds.length === 0) {\\n      return null\\n    }\\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\\n      clientsStructRefsIds.pop()\\n      if (clientsStructRefsIds.length > 0) {\\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\\n      } else {\\n        return null\\n      }\\n    }\\n    return nextStructsTarget\\n  }\\n  let curStructsTarget = getNextStructTarget()\\n  if (curStructsTarget === null && stack.length === 0) {\\n    return null\\n  }\\n\\n  /**\\n   * @type {StructStore}\\n   */\\n  const restStructs = new StructStore()\\n  const missingSV = new Map()\\n  /**\\n   * @param {number} client\\n   * @param {number} clock\\n   */\\n  const updateMissingSv = (client, clock) => {\\n    const mclock = missingSV.get(client)\\n    if (mclock == null || mclock > clock) {\\n      missingSV.set(client, clock)\\n    }\\n  }\\n  /**\\n   * @type {GC|Item}\\n   */\\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\\n  // caching the state because it is used very often\\n  const state = new Map()\\n\\n  const addStackToRestSS = () => {\\n    for (const item of stack) {\\n      const client = item.id.client\\n      const unapplicableItems = clientsStructRefs.get(client)\\n      if (unapplicableItems) {\\n        // decrement because we weren't able to apply previous operation\\n        unapplicableItems.i--\\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\\n        clientsStructRefs.delete(client)\\n        unapplicableItems.i = 0\\n        unapplicableItems.refs = []\\n      } else {\\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\\n        restStructs.clients.set(client, [item])\\n      }\\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\\n    }\\n    stack.length = 0\\n  }\\n\\n  // iterate over all struct readers until we are done\\n  while (true) {\\n    if (stackHead.constructor !== Skip) {\\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\\n      const offset = localClock - stackHead.id.clock\\n      if (offset < 0) {\\n        // update from the same client is missing\\n        stack.push(stackHead)\\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\\n        // hid a dead wall, add all items from stack to restSS\\n        addStackToRestSS()\\n      } else {\\n        const missing = stackHead.getMissing(transaction, store)\\n        if (missing !== null) {\\n          stack.push(stackHead)\\n          // get the struct reader that has the missing struct\\n          /**\\n           * @type {{ refs: Array<GC|Item>, i: number }}\\n           */\\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\\n          if (structRefs.refs.length === structRefs.i) {\\n            // This update message causally depends on another update message that doesn't exist yet\\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\\n            addStackToRestSS()\\n          } else {\\n            stackHead = structRefs.refs[structRefs.i++]\\n            continue\\n          }\\n        } else if (offset === 0 || offset < stackHead.length) {\\n          // all fine, apply the stackhead\\n          stackHead.integrate(transaction, offset)\\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\\n        }\\n      }\\n    }\\n    // iterate to next stackHead\\n    if (stack.length > 0) {\\n      stackHead = /** @type {GC|Item} */ (stack.pop())\\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\\n    } else {\\n      curStructsTarget = getNextStructTarget()\\n      if (curStructsTarget === null) {\\n        // we are done!\\n        break\\n      } else {\\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\\n      }\\n    }\\n  }\\n  if (restStructs.clients.size > 0) {\\n    const encoder = new UpdateEncoderV2()\\n    writeClientsStructs(encoder, restStructs, new Map())\\n    // write empty deleteset\\n    // writeDeleteSet(encoder, new DeleteSet())\\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\\n    return { missing: missingSV, update: encoder.toUint8Array() }\\n  }\\n  return null\\n}\\n\\n/**\\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n * @param {Transaction} transaction\\n *\\n * @private\\n * @function\\n */\\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\\n\\n/**\\n * Read and apply a document update.\\n *\\n * This function has the same effect as `applyUpdate` but accepts an decoder.\\n *\\n * @param {decoding.Decoder} decoder\\n * @param {Doc} ydoc\\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\\n *\\n * @function\\n */\\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\\n  transact(ydoc, transaction => {\\n    // force that transaction.local is set to non-local\\n    transaction.local = false\\n    let retry = false\\n    const doc = transaction.doc\\n    const store = doc.store\\n    // let start = performance.now()\\n    const ss = readClientsStructRefs(structDecoder, doc)\\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\\n    // start = performance.now()\\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\\n    // start = performance.now()\\n    const restStructs = integrateStructs(transaction, store, ss)\\n    const pending = store.pendingStructs\\n    if (pending) {\\n      // check if we can apply something\\n      for (const [client, clock] of pending.missing) {\\n        if (clock < getState(store, client)) {\\n          retry = true\\n          break\\n        }\\n      }\\n      if (restStructs) {\\n        // merge restStructs into store.pending\\n        for (const [client, clock] of restStructs.missing) {\\n          const mclock = pending.missing.get(client)\\n          if (mclock == null || mclock > clock) {\\n            pending.missing.set(client, clock)\\n          }\\n        }\\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\\n      }\\n    } else {\\n      store.pendingStructs = restStructs\\n    }\\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\\n    // start = performance.now()\\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\\n    if (store.pendingDs) {\\n      // @todo we could make a lower-bound state-vector check as we do above\\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\\n      if (dsRest && dsRest2) {\\n        // case 1: ds1 != null && ds2 != null\\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\\n      } else {\\n        // case 2: ds1 != null\\n        // case 3: ds2 != null\\n        // case 4: ds1 == null && ds2 == null\\n        store.pendingDs = dsRest || dsRest2\\n      }\\n    } else {\\n      // Either dsRest == null && pendingDs == null OR dsRest != null\\n      store.pendingDs = dsRest\\n    }\\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\\n    // start = performance.now()\\n\\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\\n    // start = performance.now()\\n    if (retry) {\\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\\n      store.pendingStructs = null\\n      applyUpdateV2(transaction.doc, update)\\n    }\\n  }, transactionOrigin, false)\\n\\n/**\\n * Read and apply a document update.\\n *\\n * This function has the same effect as `applyUpdate` but accepts an decoder.\\n *\\n * @param {decoding.Decoder} decoder\\n * @param {Doc} ydoc\\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\\n *\\n * @function\\n */\\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\\n\\n/**\\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\\n *\\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\\n *\\n * @param {Doc} ydoc\\n * @param {Uint8Array} update\\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\\n *\\n * @function\\n */\\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\\n  const decoder = decoding.createDecoder(update)\\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\\n}\\n\\n/**\\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\\n *\\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\\n *\\n * @param {Doc} ydoc\\n * @param {Uint8Array} update\\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\\n *\\n * @function\\n */\\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\\n\\n/**\\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\\n * only write the operations that are missing.\\n *\\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n * @param {Doc} doc\\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\\n *\\n * @function\\n */\\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\\n  writeClientsStructs(encoder, doc.store, targetStateVector)\\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\\n}\\n\\n/**\\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\\n * only write the operations that are missing.\\n *\\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\\n *\\n * @param {Doc} doc\\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\\n * @return {Uint8Array}\\n *\\n * @function\\n */\\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\\n  writeStateAsUpdate(encoder, doc, targetStateVector)\\n  const updates = [encoder.toUint8Array()]\\n  // also add the pending updates (if there are any)\\n  if (doc.store.pendingDs) {\\n    updates.push(doc.store.pendingDs)\\n  }\\n  if (doc.store.pendingStructs) {\\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\\n  }\\n  if (updates.length > 1) {\\n    if (encoder.constructor === UpdateEncoderV1) {\\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\\n    } else if (encoder.constructor === UpdateEncoderV2) {\\n      return mergeUpdatesV2(updates)\\n    }\\n  }\\n  return updates[0]\\n}\\n\\n/**\\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\\n * only write the operations that are missing.\\n *\\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\\n *\\n * @param {Doc} doc\\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\\n * @return {Uint8Array}\\n *\\n * @function\\n */\\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\\n\\n/**\\n * Read state vector from Decoder and return as Map\\n *\\n * @param {DSDecoderV1 | DSDecoderV2} decoder\\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\\n *\\n * @function\\n */\\nexport const readStateVector = decoder => {\\n  const ss = new Map()\\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\\n  for (let i = 0; i < ssLength; i++) {\\n    const client = decoding.readVarUint(decoder.restDecoder)\\n    const clock = decoding.readVarUint(decoder.restDecoder)\\n    ss.set(client, clock)\\n  }\\n  return ss\\n}\\n\\n/**\\n * Read decodedState and return State as Map.\\n *\\n * @param {Uint8Array} decodedState\\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\\n *\\n * @function\\n */\\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\\n\\n/**\\n * Read decodedState and return State as Map.\\n *\\n * @param {Uint8Array} decodedState\\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\\n *\\n * @function\\n */\\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\\n\\n/**\\n * @param {DSEncoderV1 | DSEncoderV2} encoder\\n * @param {Map<number,number>} sv\\n * @function\\n */\\nexport const writeStateVector = (encoder, sv) => {\\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\\n  sv.forEach((clock, client) => {\\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\\n    encoding.writeVarUint(encoder.restEncoder, clock)\\n  })\\n  return encoder\\n}\\n\\n/**\\n * @param {DSEncoderV1 | DSEncoderV2} encoder\\n * @param {Doc} doc\\n *\\n * @function\\n */\\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\\n\\n/**\\n * Encode State as Uint8Array.\\n *\\n * @param {Doc|Map<number,number>} doc\\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\\n * @return {Uint8Array}\\n *\\n * @function\\n */\\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\\n  if (doc instanceof Map) {\\n    writeStateVector(encoder, doc)\\n  } else {\\n    writeDocumentStateVector(encoder, doc)\\n  }\\n  return encoder.toUint8Array()\\n}\\n\\n/**\\n * Encode State as Uint8Array.\\n *\\n * @param {Doc|Map<number,number>} doc\\n * @return {Uint8Array}\\n *\\n * @function\\n */\\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\\n\",\"import * as f from 'lib0/function'\\n\\n/**\\n * General event handler implementation.\\n *\\n * @template ARG0, ARG1\\n *\\n * @private\\n */\\nexport class EventHandler {\\n  constructor () {\\n    /**\\n     * @type {Array<function(ARG0, ARG1):void>}\\n     */\\n    this.l = []\\n  }\\n}\\n\\n/**\\n * @template ARG0,ARG1\\n * @returns {EventHandler<ARG0,ARG1>}\\n *\\n * @private\\n * @function\\n */\\nexport const createEventHandler = () => new EventHandler()\\n\\n/**\\n * Adds an event listener that is called when\\n * {@link EventHandler#callEventListeners} is called.\\n *\\n * @template ARG0,ARG1\\n * @param {EventHandler<ARG0,ARG1>} eventHandler\\n * @param {function(ARG0,ARG1):void} f The event handler.\\n *\\n * @private\\n * @function\\n */\\nexport const addEventHandlerListener = (eventHandler, f) =>\\n  eventHandler.l.push(f)\\n\\n/**\\n * Removes an event listener.\\n *\\n * @template ARG0,ARG1\\n * @param {EventHandler<ARG0,ARG1>} eventHandler\\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\\n *                     {@link EventHandler#addEventListener}\\n *\\n * @private\\n * @function\\n */\\nexport const removeEventHandlerListener = (eventHandler, f) => {\\n  const l = eventHandler.l\\n  const len = l.length\\n  eventHandler.l = l.filter(g => f !== g)\\n  if (len === eventHandler.l.length) {\\n    console.error('[yjs] Tried to remove event handler that doesn\\\\'t exist.')\\n  }\\n}\\n\\n/**\\n * Removes all event listeners.\\n * @template ARG0,ARG1\\n * @param {EventHandler<ARG0,ARG1>} eventHandler\\n *\\n * @private\\n * @function\\n */\\nexport const removeAllEventHandlerListeners = eventHandler => {\\n  eventHandler.l.length = 0\\n}\\n\\n/**\\n * Call all event listeners that were added via\\n * {@link EventHandler#addEventListener}.\\n *\\n * @template ARG0,ARG1\\n * @param {EventHandler<ARG0,ARG1>} eventHandler\\n * @param {ARG0} arg0\\n * @param {ARG1} arg1\\n *\\n * @private\\n * @function\\n */\\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\\n  f.callAll(eventHandler.l, [arg0, arg1])\\n\",\"\\nimport { AbstractType } from '../internals.js' // eslint-disable-line\\n\\nimport * as decoding from 'lib0/decoding'\\nimport * as encoding from 'lib0/encoding'\\nimport * as error from 'lib0/error'\\n\\nexport class ID {\\n  /**\\n   * @param {number} client client id\\n   * @param {number} clock unique per client id, continuous number\\n   */\\n  constructor (client, clock) {\\n    /**\\n     * Client id\\n     * @type {number}\\n     */\\n    this.client = client\\n    /**\\n     * unique per client id, continuous number\\n     * @type {number}\\n     */\\n    this.clock = clock\\n  }\\n}\\n\\n/**\\n * @param {ID | null} a\\n * @param {ID | null} b\\n * @return {boolean}\\n *\\n * @function\\n */\\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\\n\\n/**\\n * @param {number} client\\n * @param {number} clock\\n *\\n * @private\\n * @function\\n */\\nexport const createID = (client, clock) => new ID(client, clock)\\n\\n/**\\n * @param {encoding.Encoder} encoder\\n * @param {ID} id\\n *\\n * @private\\n * @function\\n */\\nexport const writeID = (encoder, id) => {\\n  encoding.writeVarUint(encoder, id.client)\\n  encoding.writeVarUint(encoder, id.clock)\\n}\\n\\n/**\\n * Read ID.\\n * * If first varUint read is 0xFFFFFF a RootID is returned.\\n * * Otherwise an ID is returned\\n *\\n * @param {decoding.Decoder} decoder\\n * @return {ID}\\n *\\n * @private\\n * @function\\n */\\nexport const readID = decoder =>\\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\\n\\n/**\\n * The top types are mapped from y.share.get(keyname) => type.\\n * `type` does not store any information about the `keyname`.\\n * This function finds the correct `keyname` for `type` and throws otherwise.\\n *\\n * @param {AbstractType<any>} type\\n * @return {string}\\n *\\n * @private\\n * @function\\n */\\nexport const findRootTypeKey = type => {\\n  // @ts-ignore _y must be defined, otherwise unexpected case\\n  for (const [key, value] of type.doc.share.entries()) {\\n    if (value === type) {\\n      return key\\n    }\\n  }\\n  throw error.unexpectedCase()\\n}\\n\",\"\\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\\n\\n/**\\n * Check if `parent` is a parent of `child`.\\n *\\n * @param {AbstractType<any>} parent\\n * @param {Item|null} child\\n * @return {Boolean} Whether `parent` is a parent of `child`.\\n *\\n * @private\\n * @function\\n */\\nexport const isParentOf = (parent, child) => {\\n  while (child !== null) {\\n    if (child.parent === parent) {\\n      return true\\n    }\\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\\n  }\\n  return false\\n}\\n\",\"\\nimport {\\n  AbstractType // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * Convenient helper to log type information.\\n *\\n * Do not use in productive systems as the output can be immense!\\n *\\n * @param {AbstractType<any>} type\\n */\\nexport const logType = type => {\\n  const res = []\\n  let n = type._start\\n  while (n) {\\n    res.push(n)\\n    n = n.right\\n  }\\n  console.log('Children: ', res)\\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\\n}\\n\",\"\\nimport {\\n  YArray,\\n  YMap,\\n  readDeleteSet,\\n  writeDeleteSet,\\n  createDeleteSet,\\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as decoding from 'lib0/decoding'\\n\\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\\n\\nexport class PermanentUserData {\\n  /**\\n   * @param {Doc} doc\\n   * @param {YMap<any>} [storeType]\\n   */\\n  constructor (doc, storeType = doc.getMap('users')) {\\n    /**\\n     * @type {Map<string,DeleteSet>}\\n     */\\n    const dss = new Map()\\n    this.yusers = storeType\\n    this.doc = doc\\n    /**\\n     * Maps from clientid to userDescription\\n     *\\n     * @type {Map<number,string>}\\n     */\\n    this.clients = new Map()\\n    this.dss = dss\\n    /**\\n     * @param {YMap<any>} user\\n     * @param {string} userDescription\\n     */\\n    const initUser = (user, userDescription) => {\\n      /**\\n       * @type {YArray<Uint8Array>}\\n       */\\n      const ds = user.get('ds')\\n      const ids = user.get('ids')\\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\\n        event.changes.added.forEach(item => {\\n          item.content.getContent().forEach(encodedDs => {\\n            if (encodedDs instanceof Uint8Array) {\\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\\n            }\\n          })\\n        })\\n      })\\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\\n      )\\n      ids.forEach(addClientId)\\n    }\\n    // observe users\\n    storeType.observe(event => {\\n      event.keysChanged.forEach(userDescription =>\\n        initUser(storeType.get(userDescription), userDescription)\\n      )\\n    })\\n    // add intial data\\n    storeType.forEach(initUser)\\n  }\\n\\n  /**\\n   * @param {Doc} doc\\n   * @param {number} clientid\\n   * @param {string} userDescription\\n   * @param {Object} [conf]\\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\\n   */\\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\\n    const users = this.yusers\\n    let user = users.get(userDescription)\\n    if (!user) {\\n      user = new YMap()\\n      user.set('ids', new YArray())\\n      user.set('ds', new YArray())\\n      users.set(userDescription, user)\\n    }\\n    user.get('ids').push([clientid])\\n    users.observe(event => {\\n      setTimeout(() => {\\n        const userOverwrite = users.get(userDescription)\\n        if (userOverwrite !== user) {\\n          // user was overwritten, port all data over to the next user object\\n          // @todo Experiment with Y.Sets here\\n          user = userOverwrite\\n          // @todo iterate over old type\\n          this.clients.forEach((_userDescription, clientid) => {\\n            if (userDescription === _userDescription) {\\n              user.get('ids').push([clientid])\\n            }\\n          })\\n          const encoder = new DSEncoderV1()\\n          const ds = this.dss.get(userDescription)\\n          if (ds) {\\n            writeDeleteSet(encoder, ds)\\n            user.get('ds').push([encoder.toUint8Array()])\\n          }\\n        }\\n      }, 0)\\n    })\\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\\n      setTimeout(() => {\\n        const yds = user.get('ds')\\n        const ds = transaction.deleteSet\\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\\n          const encoder = new DSEncoderV1()\\n          writeDeleteSet(encoder, ds)\\n          yds.push([encoder.toUint8Array()])\\n        }\\n      })\\n    })\\n  }\\n\\n  /**\\n   * @param {number} clientid\\n   * @return {any}\\n   */\\n  getUserByClientId (clientid) {\\n    return this.clients.get(clientid) || null\\n  }\\n\\n  /**\\n   * @param {ID} id\\n   * @return {string | null}\\n   */\\n  getUserByDeletedId (id) {\\n    for (const [userDescription, ds] of this.dss.entries()) {\\n      if (isDeleted(ds, id)) {\\n        return userDescription\\n      }\\n    }\\n    return null\\n  }\\n}\\n\",\"\\nimport {\\n  writeID,\\n  readID,\\n  compareIDs,\\n  getState,\\n  findRootTypeKey,\\n  Item,\\n  createID,\\n  ContentType,\\n  followRedone,\\n  ID, Doc, AbstractType // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as encoding from 'lib0/encoding'\\nimport * as decoding from 'lib0/decoding'\\nimport * as error from 'lib0/error'\\n\\n/**\\n * A relative position is based on the Yjs model and is not affected by document changes.\\n * E.g. If you place a relative position before a certain character, it will always point to this character.\\n * If you place a relative position at the end of a type, it will always point to the end of the type.\\n *\\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\\n * before or after.\\n *\\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\\n *\\n * One of the properties must be defined.\\n *\\n * @example\\n *   // Current cursor position is at position 10\\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\\n *   // modify yText\\n *   yText.insert(0, 'abc')\\n *   yText.delete(3, 10)\\n *   // Compute the cursor position\\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\\n *   absolutePosition.type === yText // => true\\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\\n *\\n */\\nexport class RelativePosition {\\n  /**\\n   * @param {ID|null} type\\n   * @param {string|null} tname\\n   * @param {ID|null} item\\n   * @param {number} assoc\\n   */\\n  constructor (type, tname, item, assoc = 0) {\\n    /**\\n     * @type {ID|null}\\n     */\\n    this.type = type\\n    /**\\n     * @type {string|null}\\n     */\\n    this.tname = tname\\n    /**\\n     * @type {ID | null}\\n     */\\n    this.item = item\\n    /**\\n     * A relative position is associated to a specific character. By default\\n     * assoc >= 0, the relative position is associated to the character\\n     * after the meant position.\\n     * I.e. position 1 in 'ab' is associated to character 'b'.\\n     *\\n     * If assoc < 0, then the relative position is associated to the caharacter\\n     * before the meant position.\\n     *\\n     * @type {number}\\n     */\\n    this.assoc = assoc\\n  }\\n}\\n\\n/**\\n * @param {RelativePosition} rpos\\n * @return {any}\\n */\\nexport const relativePositionToJSON = rpos => {\\n  const json = {}\\n  if (rpos.type) {\\n    json.type = rpos.type\\n  }\\n  if (rpos.tname) {\\n    json.tname = rpos.tname\\n  }\\n  if (rpos.item) {\\n    json.item = rpos.item\\n  }\\n  if (rpos.assoc != null) {\\n    json.assoc = rpos.assoc\\n  }\\n  return json\\n}\\n\\n/**\\n * @param {any} json\\n * @return {RelativePosition}\\n *\\n * @function\\n */\\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\\n\\nexport class AbsolutePosition {\\n  /**\\n   * @param {AbstractType<any>} type\\n   * @param {number} index\\n   * @param {number} [assoc]\\n   */\\n  constructor (type, index, assoc = 0) {\\n    /**\\n     * @type {AbstractType<any>}\\n     */\\n    this.type = type\\n    /**\\n     * @type {number}\\n     */\\n    this.index = index\\n    this.assoc = assoc\\n  }\\n}\\n\\n/**\\n * @param {AbstractType<any>} type\\n * @param {number} index\\n * @param {number} [assoc]\\n *\\n * @function\\n */\\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\\n\\n/**\\n * @param {AbstractType<any>} type\\n * @param {ID|null} item\\n * @param {number} [assoc]\\n *\\n * @function\\n */\\nexport const createRelativePosition = (type, item, assoc) => {\\n  let typeid = null\\n  let tname = null\\n  if (type._item === null) {\\n    tname = findRootTypeKey(type)\\n  } else {\\n    typeid = createID(type._item.id.client, type._item.id.clock)\\n  }\\n  return new RelativePosition(typeid, tname, item, assoc)\\n}\\n\\n/**\\n * Create a relativePosition based on a absolute position.\\n *\\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\\n * @param {number} index The absolute position.\\n * @param {number} [assoc]\\n * @return {RelativePosition}\\n *\\n * @function\\n */\\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\\n  let t = type._start\\n  if (assoc < 0) {\\n    // associated to the left character or the beginning of a type, increment index if possible.\\n    if (index === 0) {\\n      return createRelativePosition(type, null, assoc)\\n    }\\n    index--\\n  }\\n  while (t !== null) {\\n    if (!t.deleted && t.countable) {\\n      if (t.length > index) {\\n        // case 1: found position somewhere in the linked list\\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\\n      }\\n      index -= t.length\\n    }\\n    if (t.right === null && assoc < 0) {\\n      // left-associated position, return last available id\\n      return createRelativePosition(type, t.lastId, assoc)\\n    }\\n    t = t.right\\n  }\\n  return createRelativePosition(type, null, assoc)\\n}\\n\\n/**\\n * @param {encoding.Encoder} encoder\\n * @param {RelativePosition} rpos\\n *\\n * @function\\n */\\nexport const writeRelativePosition = (encoder, rpos) => {\\n  const { type, tname, item, assoc } = rpos\\n  if (item !== null) {\\n    encoding.writeVarUint(encoder, 0)\\n    writeID(encoder, item)\\n  } else if (tname !== null) {\\n    // case 2: found position at the end of the list and type is stored in y.share\\n    encoding.writeUint8(encoder, 1)\\n    encoding.writeVarString(encoder, tname)\\n  } else if (type !== null) {\\n    // case 3: found position at the end of the list and type is attached to an item\\n    encoding.writeUint8(encoder, 2)\\n    writeID(encoder, type)\\n  } else {\\n    throw error.unexpectedCase()\\n  }\\n  encoding.writeVarInt(encoder, assoc)\\n  return encoder\\n}\\n\\n/**\\n * @param {RelativePosition} rpos\\n * @return {Uint8Array}\\n */\\nexport const encodeRelativePosition = rpos => {\\n  const encoder = encoding.createEncoder()\\n  writeRelativePosition(encoder, rpos)\\n  return encoding.toUint8Array(encoder)\\n}\\n\\n/**\\n * @param {decoding.Decoder} decoder\\n * @return {RelativePosition}\\n *\\n * @function\\n */\\nexport const readRelativePosition = decoder => {\\n  let type = null\\n  let tname = null\\n  let itemID = null\\n  switch (decoding.readVarUint(decoder)) {\\n    case 0:\\n      // case 1: found position somewhere in the linked list\\n      itemID = readID(decoder)\\n      break\\n    case 1:\\n      // case 2: found position at the end of the list and type is stored in y.share\\n      tname = decoding.readVarString(decoder)\\n      break\\n    case 2: {\\n      // case 3: found position at the end of the list and type is attached to an item\\n      type = readID(decoder)\\n    }\\n  }\\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\\n  return new RelativePosition(type, tname, itemID, assoc)\\n}\\n\\n/**\\n * @param {Uint8Array} uint8Array\\n * @return {RelativePosition}\\n */\\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\\n\\n/**\\n * @param {RelativePosition} rpos\\n * @param {Doc} doc\\n * @return {AbsolutePosition|null}\\n *\\n * @function\\n */\\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\\n  const store = doc.store\\n  const rightID = rpos.item\\n  const typeID = rpos.type\\n  const tname = rpos.tname\\n  const assoc = rpos.assoc\\n  let type = null\\n  let index = 0\\n  if (rightID !== null) {\\n    if (getState(store, rightID.client) <= rightID.clock) {\\n      return null\\n    }\\n    const res = followRedone(store, rightID)\\n    const right = res.item\\n    if (!(right instanceof Item)) {\\n      return null\\n    }\\n    type = /** @type {AbstractType<any>} */ (right.parent)\\n    if (type._item === null || !type._item.deleted) {\\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\\n      let n = right.left\\n      while (n !== null) {\\n        if (!n.deleted && n.countable) {\\n          index += n.length\\n        }\\n        n = n.left\\n      }\\n    }\\n  } else {\\n    if (tname !== null) {\\n      type = doc.get(tname)\\n    } else if (typeID !== null) {\\n      if (getState(store, typeID.client) <= typeID.clock) {\\n        // type does not exist yet\\n        return null\\n      }\\n      const { item } = followRedone(store, typeID)\\n      if (item instanceof Item && item.content instanceof ContentType) {\\n        type = item.content.type\\n      } else {\\n        // struct is garbage collected\\n        return null\\n      }\\n    } else {\\n      throw error.unexpectedCase()\\n    }\\n    if (assoc >= 0) {\\n      index = type._length\\n    } else {\\n      index = 0\\n    }\\n  }\\n  return createAbsolutePosition(type, index, rpos.assoc)\\n}\\n\\n/**\\n * @param {RelativePosition|null} a\\n * @param {RelativePosition|null} b\\n * @return {boolean}\\n *\\n * @function\\n */\\nexport const compareRelativePositions = (a, b) => a === b || (\\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\\n)\\n\",\"\\nimport {\\n  isDeleted,\\n  createDeleteSetFromStructStore,\\n  getStateVector,\\n  getItemCleanStart,\\n  iterateDeletedStructs,\\n  writeDeleteSet,\\n  writeStateVector,\\n  readDeleteSet,\\n  readStateVector,\\n  createDeleteSet,\\n  createID,\\n  getState,\\n  findIndexSS,\\n  UpdateEncoderV2,\\n  applyUpdateV2,\\n  DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as map from 'lib0/map'\\nimport * as set from 'lib0/set'\\nimport * as decoding from 'lib0/decoding'\\nimport * as encoding from 'lib0/encoding'\\n\\nexport class Snapshot {\\n  /**\\n   * @param {DeleteSet} ds\\n   * @param {Map<number,number>} sv state map\\n   */\\n  constructor (ds, sv) {\\n    /**\\n     * @type {DeleteSet}\\n     */\\n    this.ds = ds\\n    /**\\n     * State Map\\n     * @type {Map<number,number>}\\n     */\\n    this.sv = sv\\n  }\\n}\\n\\n/**\\n * @param {Snapshot} snap1\\n * @param {Snapshot} snap2\\n * @return {boolean}\\n */\\nexport const equalSnapshots = (snap1, snap2) => {\\n  const ds1 = snap1.ds.clients\\n  const ds2 = snap2.ds.clients\\n  const sv1 = snap1.sv\\n  const sv2 = snap2.sv\\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\\n    return false\\n  }\\n  for (const [key, value] of sv1.entries()) {\\n    if (sv2.get(key) !== value) {\\n      return false\\n    }\\n  }\\n  for (const [client, dsitems1] of ds1.entries()) {\\n    const dsitems2 = ds2.get(client) || []\\n    if (dsitems1.length !== dsitems2.length) {\\n      return false\\n    }\\n    for (let i = 0; i < dsitems1.length; i++) {\\n      const dsitem1 = dsitems1[i]\\n      const dsitem2 = dsitems2[i]\\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\\n        return false\\n      }\\n    }\\n  }\\n  return true\\n}\\n\\n/**\\n * @param {Snapshot} snapshot\\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\\n * @return {Uint8Array}\\n */\\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\\n  writeDeleteSet(encoder, snapshot.ds)\\n  writeStateVector(encoder, snapshot.sv)\\n  return encoder.toUint8Array()\\n}\\n\\n/**\\n * @param {Snapshot} snapshot\\n * @return {Uint8Array}\\n */\\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\\n\\n/**\\n * @param {Uint8Array} buf\\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\\n * @return {Snapshot}\\n */\\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\\n}\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {Snapshot}\\n */\\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\\n\\n/**\\n * @param {DeleteSet} ds\\n * @param {Map<number,number>} sm\\n * @return {Snapshot}\\n */\\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\\n\\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\\n\\n/**\\n * @param {Doc} doc\\n * @return {Snapshot}\\n */\\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\\n\\n/**\\n * @param {Item} item\\n * @param {Snapshot|undefined} snapshot\\n *\\n * @protected\\n * @function\\n */\\nexport const isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (\\n  snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\\n)\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {Snapshot} snapshot\\n */\\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\\n  const store = transaction.doc.store\\n  // check if we already split for this snapshot\\n  if (!meta.has(snapshot)) {\\n    snapshot.sv.forEach((clock, client) => {\\n      if (clock < getState(store, client)) {\\n        getItemCleanStart(transaction, createID(client, clock))\\n      }\\n    })\\n    iterateDeletedStructs(transaction, snapshot.ds, item => {})\\n    meta.add(snapshot)\\n  }\\n}\\n\\n/**\\n * @param {Doc} originDoc\\n * @param {Snapshot} snapshot\\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\\n * @return {Doc}\\n */\\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\\n  if (originDoc.gc) {\\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\\n    throw new Error('originDoc must not be garbage collected')\\n  }\\n  const { sv, ds } = snapshot\\n\\n  const encoder = new UpdateEncoderV2()\\n  originDoc.transact(transaction => {\\n    let size = 0\\n    sv.forEach(clock => {\\n      if (clock > 0) {\\n        size++\\n      }\\n    })\\n    encoding.writeVarUint(encoder.restEncoder, size)\\n    // splitting the structs before writing them to the encoder\\n    for (const [client, clock] of sv) {\\n      if (clock === 0) {\\n        continue\\n      }\\n      if (clock < getState(originDoc.store, client)) {\\n        getItemCleanStart(transaction, createID(client, clock))\\n      }\\n      const structs = originDoc.store.clients.get(client) || []\\n      const lastStructIndex = findIndexSS(structs, clock - 1)\\n      // write # encoded structs\\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\\n      encoder.writeClient(client)\\n      // first clock written is 0\\n      encoding.writeVarUint(encoder.restEncoder, 0)\\n      for (let i = 0; i <= lastStructIndex; i++) {\\n        structs[i].write(encoder, 0)\\n      }\\n    }\\n    writeDeleteSet(encoder, ds)\\n  })\\n\\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\\n  return newDoc\\n}\\n\",\"\\nimport {\\n  GC,\\n  splitItem,\\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as math from 'lib0/math'\\nimport * as error from 'lib0/error'\\n\\nexport class StructStore {\\n  constructor () {\\n    /**\\n     * @type {Map<number,Array<GC|Item>>}\\n     */\\n    this.clients = new Map()\\n    /**\\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\\n     */\\n    this.pendingStructs = null\\n    /**\\n     * @type {null | Uint8Array}\\n     */\\n    this.pendingDs = null\\n  }\\n}\\n\\n/**\\n * Return the states as a Map<client,clock>.\\n * Note that clock refers to the next expected clock id.\\n *\\n * @param {StructStore} store\\n * @return {Map<number,number>}\\n *\\n * @public\\n * @function\\n */\\nexport const getStateVector = store => {\\n  const sm = new Map()\\n  store.clients.forEach((structs, client) => {\\n    const struct = structs[structs.length - 1]\\n    sm.set(client, struct.id.clock + struct.length)\\n  })\\n  return sm\\n}\\n\\n/**\\n * @param {StructStore} store\\n * @param {number} client\\n * @return {number}\\n *\\n * @public\\n * @function\\n */\\nexport const getState = (store, client) => {\\n  const structs = store.clients.get(client)\\n  if (structs === undefined) {\\n    return 0\\n  }\\n  const lastStruct = structs[structs.length - 1]\\n  return lastStruct.id.clock + lastStruct.length\\n}\\n\\n/**\\n * @param {StructStore} store\\n *\\n * @private\\n * @function\\n */\\nexport const integretyCheck = store => {\\n  store.clients.forEach(structs => {\\n    for (let i = 1; i < structs.length; i++) {\\n      const l = structs[i - 1]\\n      const r = structs[i]\\n      if (l.id.clock + l.length !== r.id.clock) {\\n        throw new Error('StructStore failed integrety check')\\n      }\\n    }\\n  })\\n}\\n\\n/**\\n * @param {StructStore} store\\n * @param {GC|Item} struct\\n *\\n * @private\\n * @function\\n */\\nexport const addStruct = (store, struct) => {\\n  let structs = store.clients.get(struct.id.client)\\n  if (structs === undefined) {\\n    structs = []\\n    store.clients.set(struct.id.client, structs)\\n  } else {\\n    const lastStruct = structs[structs.length - 1]\\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\\n      throw error.unexpectedCase()\\n    }\\n  }\\n  structs.push(struct)\\n}\\n\\n/**\\n * Perform a binary search on a sorted array\\n * @param {Array<Item|GC>} structs\\n * @param {number} clock\\n * @return {number}\\n *\\n * @private\\n * @function\\n */\\nexport const findIndexSS = (structs, clock) => {\\n  let left = 0\\n  let right = structs.length - 1\\n  let mid = structs[right]\\n  let midclock = mid.id.clock\\n  if (midclock === clock) {\\n    return right\\n  }\\n  // @todo does it even make sense to pivot the search?\\n  // If a good split misses, it might actually increase the time to find the correct item.\\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\\n  while (left <= right) {\\n    mid = structs[midindex]\\n    midclock = mid.id.clock\\n    if (midclock <= clock) {\\n      if (clock < midclock + mid.length) {\\n        return midindex\\n      }\\n      left = midindex + 1\\n    } else {\\n      right = midindex - 1\\n    }\\n    midindex = math.floor((left + right) / 2)\\n  }\\n  // Always check state before looking for a struct in StructStore\\n  // Therefore the case of not finding a struct is unexpected\\n  throw error.unexpectedCase()\\n}\\n\\n/**\\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\\n *\\n * @param {StructStore} store\\n * @param {ID} id\\n * @return {GC|Item}\\n *\\n * @private\\n * @function\\n */\\nexport const find = (store, id) => {\\n  /**\\n   * @type {Array<GC|Item>}\\n   */\\n  // @ts-ignore\\n  const structs = store.clients.get(id.client)\\n  return structs[findIndexSS(structs, id.clock)]\\n}\\n\\n/**\\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\\n * @private\\n * @function\\n */\\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {Array<Item|GC>} structs\\n * @param {number} clock\\n */\\nexport const findIndexCleanStart = (transaction, structs, clock) => {\\n  const index = findIndexSS(structs, clock)\\n  const struct = structs[index]\\n  if (struct.id.clock < clock && struct instanceof Item) {\\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\\n    return index + 1\\n  }\\n  return index\\n}\\n\\n/**\\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\\n *\\n * @param {Transaction} transaction\\n * @param {ID} id\\n * @return {Item}\\n *\\n * @private\\n * @function\\n */\\nexport const getItemCleanStart = (transaction, id) => {\\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\\n}\\n\\n/**\\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\\n *\\n * @param {Transaction} transaction\\n * @param {StructStore} store\\n * @param {ID} id\\n * @return {Item}\\n *\\n * @private\\n * @function\\n */\\nexport const getItemCleanEnd = (transaction, store, id) => {\\n  /**\\n   * @type {Array<Item>}\\n   */\\n  // @ts-ignore\\n  const structs = store.clients.get(id.client)\\n  const index = findIndexSS(structs, id.clock)\\n  const struct = structs[index]\\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\\n  }\\n  return struct\\n}\\n\\n/**\\n * Replace `item` with `newitem` in store\\n * @param {StructStore} store\\n * @param {GC|Item} struct\\n * @param {GC|Item} newStruct\\n *\\n * @private\\n * @function\\n */\\nexport const replaceStruct = (store, struct, newStruct) => {\\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\\n}\\n\\n/**\\n * Iterate over a range of structs\\n *\\n * @param {Transaction} transaction\\n * @param {Array<Item|GC>} structs\\n * @param {number} clockStart Inclusive start\\n * @param {number} len\\n * @param {function(GC|Item):void} f\\n *\\n * @function\\n */\\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\\n  if (len === 0) {\\n    return\\n  }\\n  const clockEnd = clockStart + len\\n  let index = findIndexCleanStart(transaction, structs, clockStart)\\n  let struct\\n  do {\\n    struct = structs[index++]\\n    if (clockEnd < struct.id.clock + struct.length) {\\n      findIndexCleanStart(transaction, structs, clockEnd)\\n    }\\n    f(struct)\\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\\n}\\n\",\"\\nimport {\\n  getState,\\n  writeStructsFromTransaction,\\n  writeDeleteSet,\\n  DeleteSet,\\n  sortAndMergeDeleteSet,\\n  getStateVector,\\n  findIndexSS,\\n  callEventHandlerListeners,\\n  Item,\\n  generateNewClientId,\\n  createID,\\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as map from 'lib0/map'\\nimport * as math from 'lib0/math'\\nimport * as set from 'lib0/set'\\nimport * as logging from 'lib0/logging'\\nimport { callAll } from 'lib0/function'\\n\\n/**\\n * A transaction is created for every change on the Yjs model. It is possible\\n * to bundle changes on the Yjs model in a single transaction to\\n * minimize the number on messages sent and the number of observer calls.\\n * If possible the user of this library should bundle as many changes as\\n * possible. Here is an example to illustrate the advantages of bundling:\\n *\\n * @example\\n * const map = y.define('map', YMap)\\n * // Log content when change is triggered\\n * map.observe(() => {\\n *   console.log('change triggered')\\n * })\\n * // Each change on the map type triggers a log message:\\n * map.set('a', 0) // => \\\"change triggered\\\"\\n * map.set('b', 0) // => \\\"change triggered\\\"\\n * // When put in a transaction, it will trigger the log after the transaction:\\n * y.transact(() => {\\n *   map.set('a', 1)\\n *   map.set('b', 1)\\n * }) // => \\\"change triggered\\\"\\n *\\n * @public\\n */\\nexport class Transaction {\\n  /**\\n   * @param {Doc} doc\\n   * @param {any} origin\\n   * @param {boolean} local\\n   */\\n  constructor (doc, origin, local) {\\n    /**\\n     * The Yjs instance.\\n     * @type {Doc}\\n     */\\n    this.doc = doc\\n    /**\\n     * Describes the set of deleted items by ids\\n     * @type {DeleteSet}\\n     */\\n    this.deleteSet = new DeleteSet()\\n    /**\\n     * Holds the state before the transaction started.\\n     * @type {Map<Number,Number>}\\n     */\\n    this.beforeState = getStateVector(doc.store)\\n    /**\\n     * Holds the state after the transaction.\\n     * @type {Map<Number,Number>}\\n     */\\n    this.afterState = new Map()\\n    /**\\n     * All types that were directly modified (property added or child\\n     * inserted/deleted). New types are not included in this Set.\\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\\n     */\\n    this.changed = new Map()\\n    /**\\n     * Stores the events for the types that observe also child elements.\\n     * It is mainly used by `observeDeep`.\\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\\n     */\\n    this.changedParentTypes = new Map()\\n    /**\\n     * @type {Array<AbstractStruct>}\\n     */\\n    this._mergeStructs = []\\n    /**\\n     * @type {any}\\n     */\\n    this.origin = origin\\n    /**\\n     * Stores meta information on the transaction\\n     * @type {Map<any,any>}\\n     */\\n    this.meta = new Map()\\n    /**\\n     * Whether this change originates from this doc.\\n     * @type {boolean}\\n     */\\n    this.local = local\\n    /**\\n     * @type {Set<Doc>}\\n     */\\n    this.subdocsAdded = new Set()\\n    /**\\n     * @type {Set<Doc>}\\n     */\\n    this.subdocsRemoved = new Set()\\n    /**\\n     * @type {Set<Doc>}\\n     */\\n    this.subdocsLoaded = new Set()\\n  }\\n}\\n\\n/**\\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n * @param {Transaction} transaction\\n * @return {boolean} Whether data was written.\\n */\\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\\n    return false\\n  }\\n  sortAndMergeDeleteSet(transaction.deleteSet)\\n  writeStructsFromTransaction(encoder, transaction)\\n  writeDeleteSet(encoder, transaction.deleteSet)\\n  return true\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n *\\n * @private\\n * @function\\n */\\nexport const nextID = transaction => {\\n  const y = transaction.doc\\n  return createID(y.clientID, getState(y.store, y.clientID))\\n}\\n\\n/**\\n * If `type.parent` was added in current transaction, `type` technically\\n * did not change, it was just added and we should not fire events for `type`.\\n *\\n * @param {Transaction} transaction\\n * @param {AbstractType<YEvent>} type\\n * @param {string|null} parentSub\\n */\\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\\n  const item = type._item\\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\\n  }\\n}\\n\\n/**\\n * @param {Array<AbstractStruct>} structs\\n * @param {number} pos\\n */\\nconst tryToMergeWithLeft = (structs, pos) => {\\n  const left = structs[pos - 1]\\n  const right = structs[pos]\\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\\n    if (left.mergeWith(right)) {\\n      structs.splice(pos, 1)\\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * @param {DeleteSet} ds\\n * @param {StructStore} store\\n * @param {function(Item):boolean} gcFilter\\n */\\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\\n  for (const [client, deleteItems] of ds.clients.entries()) {\\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\\n      const deleteItem = deleteItems[di]\\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\\n      for (\\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\\n        si < structs.length && struct.id.clock < endDeleteItemClock;\\n        struct = structs[++si]\\n      ) {\\n        const struct = structs[si]\\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\\n          break\\n        }\\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\\n          struct.gc(store, false)\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * @param {DeleteSet} ds\\n * @param {StructStore} store\\n */\\nconst tryMergeDeleteSet = (ds, store) => {\\n  // try to merge deleted / gc'd items\\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\\n  ds.clients.forEach((deleteItems, client) => {\\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\\n      const deleteItem = deleteItems[di]\\n      // start with merging the item next to the last deleted item\\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\\n      for (\\n        let si = mostRightIndexToCheck, struct = structs[si];\\n        si > 0 && struct.id.clock >= deleteItem.clock;\\n        struct = structs[--si]\\n      ) {\\n        tryToMergeWithLeft(structs, si)\\n      }\\n    }\\n  })\\n}\\n\\n/**\\n * @param {DeleteSet} ds\\n * @param {StructStore} store\\n * @param {function(Item):boolean} gcFilter\\n */\\nexport const tryGc = (ds, store, gcFilter) => {\\n  tryGcDeleteSet(ds, store, gcFilter)\\n  tryMergeDeleteSet(ds, store)\\n}\\n\\n/**\\n * @param {Array<Transaction>} transactionCleanups\\n * @param {number} i\\n */\\nconst cleanupTransactions = (transactionCleanups, i) => {\\n  if (i < transactionCleanups.length) {\\n    const transaction = transactionCleanups[i]\\n    const doc = transaction.doc\\n    const store = doc.store\\n    const ds = transaction.deleteSet\\n    const mergeStructs = transaction._mergeStructs\\n    try {\\n      sortAndMergeDeleteSet(ds)\\n      transaction.afterState = getStateVector(transaction.doc.store)\\n      doc._transaction = null\\n      doc.emit('beforeObserverCalls', [transaction, doc])\\n      /**\\n       * An array of event callbacks.\\n       *\\n       * Each callback is called even if the other ones throw errors.\\n       *\\n       * @type {Array<function():void>}\\n       */\\n      const fs = []\\n      // observe events on changed types\\n      transaction.changed.forEach((subs, itemtype) =>\\n        fs.push(() => {\\n          if (itemtype._item === null || !itemtype._item.deleted) {\\n            itemtype._callObserver(transaction, subs)\\n          }\\n        })\\n      )\\n      fs.push(() => {\\n        // deep observe events\\n        transaction.changedParentTypes.forEach((events, type) =>\\n          fs.push(() => {\\n            // We need to think about the possibility that the user transforms the\\n            // Y.Doc in the event.\\n            if (type._item === null || !type._item.deleted) {\\n              events = events\\n                .filter(event =>\\n                  event.target._item === null || !event.target._item.deleted\\n                )\\n              events\\n                .forEach(event => {\\n                  event.currentTarget = type\\n                })\\n              // sort events by path length so that top-level events are fired first.\\n              events\\n                .sort((event1, event2) => event1.path.length - event2.path.length)\\n              // We don't need to check for events.length\\n              // because we know it has at least one element\\n              callEventHandlerListeners(type._dEH, events, transaction)\\n            }\\n          })\\n        )\\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\\n      })\\n      callAll(fs, [])\\n    } finally {\\n      // Replace deleted items with ItemDeleted / GC.\\n      // This is where content is actually remove from the Yjs Doc.\\n      if (doc.gc) {\\n        tryGcDeleteSet(ds, store, doc.gcFilter)\\n      }\\n      tryMergeDeleteSet(ds, store)\\n\\n      // on all affected store.clients props, try to merge\\n      transaction.afterState.forEach((clock, client) => {\\n        const beforeClock = transaction.beforeState.get(client) || 0\\n        if (beforeClock !== clock) {\\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\\n          // we iterate from right to left so we can safely remove entries\\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\\n            tryToMergeWithLeft(structs, i)\\n          }\\n        }\\n      })\\n      // try to merge mergeStructs\\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\\n      //        but at the moment DS does not handle duplicates\\n      for (let i = 0; i < mergeStructs.length; i++) {\\n        const { client, clock } = mergeStructs[i].id\\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\\n        const replacedStructPos = findIndexSS(structs, clock)\\n        if (replacedStructPos + 1 < structs.length) {\\n          tryToMergeWithLeft(structs, replacedStructPos + 1)\\n        }\\n        if (replacedStructPos > 0) {\\n          tryToMergeWithLeft(structs, replacedStructPos)\\n        }\\n      }\\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\\n        doc.clientID = generateNewClientId()\\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\\n      }\\n      // @todo Merge all the transactions into one and provide send the data as a single update message\\n      doc.emit('afterTransactionCleanup', [transaction, doc])\\n      if (doc._observers.has('update')) {\\n        const encoder = new UpdateEncoderV1()\\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\\n        if (hasContent) {\\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\\n        }\\n      }\\n      if (doc._observers.has('updateV2')) {\\n        const encoder = new UpdateEncoderV2()\\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\\n        if (hasContent) {\\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\\n        }\\n      }\\n      transaction.subdocsAdded.forEach(subdoc => doc.subdocs.add(subdoc))\\n      transaction.subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\\n\\n      doc.emit('subdocs', [{ loaded: transaction.subdocsLoaded, added: transaction.subdocsAdded, removed: transaction.subdocsRemoved }])\\n      transaction.subdocsRemoved.forEach(subdoc => subdoc.destroy())\\n\\n      if (transactionCleanups.length <= i + 1) {\\n        doc._transactionCleanups = []\\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\\n      } else {\\n        cleanupTransactions(transactionCleanups, i + 1)\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * Implements the functionality of `y.transact(()=>{..})`\\n *\\n * @param {Doc} doc\\n * @param {function(Transaction):void} f\\n * @param {any} [origin=true]\\n *\\n * @function\\n */\\nexport const transact = (doc, f, origin = null, local = true) => {\\n  const transactionCleanups = doc._transactionCleanups\\n  let initialCall = false\\n  if (doc._transaction === null) {\\n    initialCall = true\\n    doc._transaction = new Transaction(doc, origin, local)\\n    transactionCleanups.push(doc._transaction)\\n    if (transactionCleanups.length === 1) {\\n      doc.emit('beforeAllTransactions', [doc])\\n    }\\n    doc.emit('beforeTransaction', [doc._transaction, doc])\\n  }\\n  try {\\n    f(doc._transaction)\\n  } finally {\\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\\n      // The first transaction ended, now process observer calls.\\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\\n      // We don't want to nest these calls, so we execute these calls one after\\n      // another.\\n      // Also we need to ensure that all cleanups are called, even if the\\n      // observes throw errors.\\n      // This file is full of hacky try {} finally {} blocks to ensure that an\\n      // event can throw errors and also that the cleanup is called.\\n      cleanupTransactions(transactionCleanups, 0)\\n    }\\n  }\\n}\\n\",\"import {\\n  mergeDeleteSets,\\n  iterateDeletedStructs,\\n  keepItem,\\n  transact,\\n  createID,\\n  redoItem,\\n  isParentOf,\\n  followRedone,\\n  getItemCleanStart,\\n  isDeleted,\\n  addToDeleteSet,\\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType, YEvent // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as time from 'lib0/time'\\nimport { Observable } from 'lib0/observable'\\n\\nclass StackItem {\\n  /**\\n   * @param {DeleteSet} deletions\\n   * @param {DeleteSet} insertions\\n   */\\n  constructor (deletions, insertions) {\\n    this.insertions = insertions\\n    this.deletions = deletions\\n    /**\\n     * Use this to save and restore metadata like selection range\\n     */\\n    this.meta = new Map()\\n  }\\n}\\n\\n/**\\n * @param {UndoManager} undoManager\\n * @param {Array<StackItem>} stack\\n * @param {string} eventType\\n * @return {StackItem?}\\n */\\nconst popStackItem = (undoManager, stack, eventType) => {\\n  /**\\n   * Whether a change happened\\n   * @type {StackItem?}\\n   */\\n  let result = null\\n  /**\\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\\n   * @type {any}\\n   */\\n  let _tr = null\\n  const doc = undoManager.doc\\n  const scope = undoManager.scope\\n  transact(doc, transaction => {\\n    while (stack.length > 0 && result === null) {\\n      const store = doc.store\\n      const stackItem = /** @type {StackItem} */ (stack.pop())\\n      /**\\n       * @type {Set<Item>}\\n       */\\n      const itemsToRedo = new Set()\\n      /**\\n       * @type {Array<Item>}\\n       */\\n      const itemsToDelete = []\\n      let performedChange = false\\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\\n        if (struct instanceof Item) {\\n          if (struct.redone !== null) {\\n            let { item, diff } = followRedone(store, struct.id)\\n            if (diff > 0) {\\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\\n            }\\n            struct = item\\n          }\\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\\n            itemsToDelete.push(struct)\\n          }\\n        }\\n      })\\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\\n        if (\\n          struct instanceof Item &&\\n          scope.some(type => isParentOf(type, struct)) &&\\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\\n          !isDeleted(stackItem.insertions, struct.id)\\n        ) {\\n          itemsToRedo.add(struct)\\n        }\\n      })\\n      itemsToRedo.forEach(struct => {\\n        performedChange = redoItem(transaction, struct, itemsToRedo) !== null || performedChange\\n      })\\n      // We want to delete in reverse order so that children are deleted before\\n      // parents, so we have more information available when items are filtered.\\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\\n        const item = itemsToDelete[i]\\n        if (undoManager.deleteFilter(item)) {\\n          item.delete(transaction)\\n          performedChange = true\\n        }\\n      }\\n      result = performedChange ? stackItem : null\\n    }\\n    transaction.changed.forEach((subProps, type) => {\\n      // destroy search marker if necessary\\n      if (subProps.has(null) && type._searchMarker) {\\n        type._searchMarker.length = 0\\n      }\\n    })\\n    _tr = transaction\\n  }, undoManager)\\n  if (result != null) {\\n    const changedParentTypes = _tr.changedParentTypes\\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\\n  }\\n  return result\\n}\\n\\n/**\\n * @typedef {Object} UndoManagerOptions\\n * @property {number} [UndoManagerOptions.captureTimeout=500]\\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\\n * filter returns false, the type/item won't be deleted even it is in the\\n * undo/redo scope.\\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\\n */\\n\\n/**\\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\\n * the redo-stack. You may store additional stack information via the\\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\\n * Fires 'stack-item-popped' event when a stack item was popped from either the\\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\\n *\\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\\n */\\nexport class UndoManager extends Observable {\\n  /**\\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\\n   * @param {UndoManagerOptions} options\\n   */\\n  constructor (typeScope, { captureTimeout = 500, deleteFilter = () => true, trackedOrigins = new Set([null]) } = {}) {\\n    super()\\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope]\\n    this.deleteFilter = deleteFilter\\n    trackedOrigins.add(this)\\n    this.trackedOrigins = trackedOrigins\\n    /**\\n     * @type {Array<StackItem>}\\n     */\\n    this.undoStack = []\\n    /**\\n     * @type {Array<StackItem>}\\n     */\\n    this.redoStack = []\\n    /**\\n     * Whether the client is currently undoing (calling UndoManager.undo)\\n     *\\n     * @type {boolean}\\n     */\\n    this.undoing = false\\n    this.redoing = false\\n    this.doc = /** @type {Doc} */ (this.scope[0].doc)\\n    this.lastChange = 0\\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\\n      // Only track certain transactions\\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\\n        return\\n      }\\n      const undoing = this.undoing\\n      const redoing = this.redoing\\n      const stack = undoing ? this.redoStack : this.undoStack\\n      if (undoing) {\\n        this.stopCapturing() // next undo should not be appended to last stack item\\n      } else if (!redoing) {\\n        // neither undoing nor redoing: delete redoStack\\n        this.redoStack = []\\n      }\\n      const insertions = new DeleteSet()\\n      transaction.afterState.forEach((endClock, client) => {\\n        const startClock = transaction.beforeState.get(client) || 0\\n        const len = endClock - startClock\\n        if (len > 0) {\\n          addToDeleteSet(insertions, client, startClock, len)\\n        }\\n      })\\n      const now = time.getUnixTime()\\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\\n        // append change to last stack op\\n        const lastOp = stack[stack.length - 1]\\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\\n      } else {\\n        // create a new stack op\\n        stack.push(new StackItem(transaction.deleteSet, insertions))\\n      }\\n      if (!undoing && !redoing) {\\n        this.lastChange = now\\n      }\\n      // make sure that deleted structs are not gc'd\\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\\n          keepItem(item, true)\\n        }\\n      })\\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this])\\n    })\\n  }\\n\\n  clear () {\\n    this.doc.transact(transaction => {\\n      /**\\n       * @param {StackItem} stackItem\\n       */\\n      const clearItem = stackItem => {\\n        iterateDeletedStructs(transaction, stackItem.deletions, item => {\\n          if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\\n            keepItem(item, false)\\n          }\\n        })\\n      }\\n      this.undoStack.forEach(clearItem)\\n      this.redoStack.forEach(clearItem)\\n    })\\n    this.undoStack = []\\n    this.redoStack = []\\n  }\\n\\n  /**\\n   * UndoManager merges Undo-StackItem if they are created within time-gap\\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\\n   * StackItem won't be merged.\\n   *\\n   *\\n   * @example\\n   *     // without stopCapturing\\n   *     ytext.insert(0, 'a')\\n   *     ytext.insert(1, 'b')\\n   *     um.undo()\\n   *     ytext.toString() // => '' (note that 'ab' was removed)\\n   *     // with stopCapturing\\n   *     ytext.insert(0, 'a')\\n   *     um.stopCapturing()\\n   *     ytext.insert(0, 'b')\\n   *     um.undo()\\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\\n   *\\n   */\\n  stopCapturing () {\\n    this.lastChange = 0\\n  }\\n\\n  /**\\n   * Undo last changes on type.\\n   *\\n   * @return {StackItem?} Returns StackItem if a change was applied\\n   */\\n  undo () {\\n    this.undoing = true\\n    let res\\n    try {\\n      res = popStackItem(this, this.undoStack, 'undo')\\n    } finally {\\n      this.undoing = false\\n    }\\n    return res\\n  }\\n\\n  /**\\n   * Redo last undo operation.\\n   *\\n   * @return {StackItem?} Returns StackItem if a change was applied\\n   */\\n  redo () {\\n    this.redoing = true\\n    let res\\n    try {\\n      res = popStackItem(this, this.redoStack, 'redo')\\n    } finally {\\n      this.redoing = false\\n    }\\n    return res\\n  }\\n}\\n\",\"\\nimport * as binary from 'lib0/binary'\\nimport * as decoding from 'lib0/decoding'\\nimport * as encoding from 'lib0/encoding'\\nimport * as logging from 'lib0/logging'\\nimport * as math from 'lib0/math'\\nimport {\\n  createID,\\n  readItemContent,\\n  readDeleteSet,\\n  writeDeleteSet,\\n  Skip,\\n  mergeDeleteSets,\\n  DSEncoderV1,\\n  DSEncoderV2,\\n  decodeStateVector,\\n  Item, GC, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n */\\nfunction * lazyStructReaderGenerator (decoder) {\\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\\n  for (let i = 0; i < numOfStateUpdates; i++) {\\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\\n    const client = decoder.readClient()\\n    let clock = decoding.readVarUint(decoder.restDecoder)\\n    for (let i = 0; i < numberOfStructs; i++) {\\n      const info = decoder.readInfo()\\n      // @todo use switch instead of ifs\\n      if (info === 10) {\\n        const len = decoding.readVarUint(decoder.restDecoder)\\n        yield new Skip(createID(client, clock), len)\\n        clock += len\\n      } else if ((binary.BITS5 & info) !== 0) {\\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\\n        // and we read the next string as parentYKey.\\n        // It indicates how we store/retrieve parent from `y.share`\\n        // @type {string|null}\\n        const struct = new Item(\\n          createID(client, clock),\\n          null, // left\\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\\n          null, // right\\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\\n          // @ts-ignore Force writing a string here.\\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\\n          readItemContent(decoder, info) // item content\\n        )\\n        yield struct\\n        clock += struct.length\\n      } else {\\n        const len = decoder.readLen()\\n        yield new GC(createID(client, clock), len)\\n        clock += len\\n      }\\n    }\\n  }\\n}\\n\\nexport class LazyStructReader {\\n  /**\\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n   * @param {boolean} filterSkips\\n   */\\n  constructor (decoder, filterSkips) {\\n    this.gen = lazyStructReaderGenerator(decoder)\\n    /**\\n     * @type {null | Item | Skip | GC}\\n     */\\n    this.curr = null\\n    this.done = false\\n    this.filterSkips = filterSkips\\n    this.next()\\n  }\\n\\n  /**\\n   * @return {Item | GC | Skip |null}\\n   */\\n  next () {\\n    // ignore \\\"Skip\\\" structs\\n    do {\\n      this.curr = this.gen.next().value || null\\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\\n    return this.curr\\n  }\\n}\\n\\n/**\\n * @param {Uint8Array} update\\n *\\n */\\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\\n\\n/**\\n * @param {Uint8Array} update\\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\\n *\\n */\\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\\n  const structs = []\\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\\n    structs.push(curr)\\n  }\\n  logging.print('Structs: ', structs)\\n  const ds = readDeleteSet(updateDecoder)\\n  logging.print('DeleteSet: ', ds)\\n}\\n\\nexport class LazyStructWriter {\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   */\\n  constructor (encoder) {\\n    this.currClient = 0\\n    this.startClock = 0\\n    this.written = 0\\n    this.encoder = encoder\\n    /**\\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\\n     *\\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\\n     *\\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\\n     *\\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\\n     */\\n    this.clientStructs = []\\n  }\\n}\\n\\n/**\\n * @param {Array<Uint8Array>} updates\\n * @return {Uint8Array}\\n */\\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\\n\\n/**\\n * @param {Uint8Array} update\\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\\n * @return {Uint8Array}\\n */\\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\\n  const encoder = new YEncoder()\\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\\n  let curr = updateDecoder.curr\\n  if (curr !== null) {\\n    let size = 0\\n    let currClient = curr.id.client\\n    let stopCounting = curr.id.clock !== 0 // must start at 0\\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\\n    for (; curr !== null; curr = updateDecoder.next()) {\\n      if (currClient !== curr.id.client) {\\n        if (currClock !== 0) {\\n          size++\\n          // We found a new client\\n          // write what we have to the encoder\\n          encoding.writeVarUint(encoder.restEncoder, currClient)\\n          encoding.writeVarUint(encoder.restEncoder, currClock)\\n        }\\n        currClient = curr.id.client\\n        currClock = 0\\n        stopCounting = curr.id.clock !== 0\\n      }\\n      // we ignore skips\\n      if (curr.constructor === Skip) {\\n        stopCounting = true\\n      }\\n      if (!stopCounting) {\\n        currClock = curr.id.clock + curr.length\\n      }\\n    }\\n    // write what we have\\n    if (currClock !== 0) {\\n      size++\\n      encoding.writeVarUint(encoder.restEncoder, currClient)\\n      encoding.writeVarUint(encoder.restEncoder, currClock)\\n    }\\n    // prepend the size of the state vector\\n    const enc = encoding.createEncoder()\\n    encoding.writeVarUint(enc, size)\\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\\n    encoder.restEncoder = enc\\n    return encoder.toUint8Array()\\n  } else {\\n    encoding.writeVarUint(encoder.restEncoder, 0)\\n    return encoder.toUint8Array()\\n  }\\n}\\n\\n/**\\n * @param {Uint8Array} update\\n * @return {Uint8Array}\\n */\\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\\n\\n/**\\n * @param {Uint8Array} update\\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\\n */\\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\\n  /**\\n   * @type {Map<number, number>}\\n   */\\n  const from = new Map()\\n  /**\\n   * @type {Map<number, number>}\\n   */\\n  const to = new Map()\\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\\n  let curr = updateDecoder.curr\\n  if (curr !== null) {\\n    let currClient = curr.id.client\\n    let currClock = curr.id.clock\\n    // write the beginning to `from`\\n    from.set(currClient, currClock)\\n    for (; curr !== null; curr = updateDecoder.next()) {\\n      if (currClient !== curr.id.client) {\\n        // We found a new client\\n        // write the end to `to`\\n        to.set(currClient, currClock)\\n        // write the beginning to `from`\\n        from.set(curr.id.client, curr.id.clock)\\n        // update currClient\\n        currClient = curr.id.client\\n      }\\n      currClock = curr.id.clock + curr.length\\n    }\\n    // write the end to `to`\\n    to.set(currClient, currClock)\\n  }\\n  return { from, to }\\n}\\n\\n/**\\n * @param {Uint8Array} update\\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\\n */\\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\\n\\n/**\\n * This method is intended to slice any kind of struct and retrieve the right part.\\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\\n *\\n * @param {Item | GC | Skip} left\\n * @param {number} diff\\n * @return {Item | GC}\\n */\\nconst sliceStruct = (left, diff) => {\\n  if (left.constructor === GC) {\\n    const { client, clock } = left.id\\n    return new GC(createID(client, clock + diff), left.length - diff)\\n  } else if (left.constructor === Skip) {\\n    const { client, clock } = left.id\\n    return new Skip(createID(client, clock + diff), left.length - diff)\\n  } else {\\n    const leftItem = /** @type {Item} */ (left)\\n    const { client, clock } = leftItem.id\\n    return new Item(\\n      createID(client, clock + diff),\\n      null,\\n      createID(client, clock + diff - 1),\\n      null,\\n      leftItem.rightOrigin,\\n      leftItem.parent,\\n      leftItem.parentSub,\\n      leftItem.content.splice(diff)\\n    )\\n  }\\n}\\n\\n/**\\n *\\n * This function works similarly to `readUpdateV2`.\\n *\\n * @param {Array<Uint8Array>} updates\\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\\n * @return {Uint8Array}\\n */\\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\\n  if (updates.length === 1) {\\n    return updates[0]\\n  }\\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\\n\\n  /**\\n   * @todo we don't need offset because we always slice before\\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\\n   */\\n  let currWrite = null\\n\\n  const updateEncoder = new YEncoder()\\n  // write structs lazily\\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\\n\\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\\n  // Note: Should merge document updates whenever possible - even from different updates\\n  // Note: Should handle that some operations cannot be applied yet ()\\n\\n  while (true) {\\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\\n    lazyStructDecoders.sort(\\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\\n        if (dec1.curr.id.client === dec2.curr.id.client) {\\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\\n          if (clockDiff === 0) {\\n            // @todo remove references to skip since the structDecoders must filter Skips.\\n            return dec1.curr.constructor === dec2.curr.constructor ? 0 : (\\n              dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\\n            )\\n          } else {\\n            return clockDiff\\n          }\\n        } else {\\n          return dec2.curr.id.client - dec1.curr.id.client\\n        }\\n      }\\n    )\\n    if (lazyStructDecoders.length === 0) {\\n      break\\n    }\\n    const currDecoder = lazyStructDecoders[0]\\n    // write from currDecoder until the next operation is from another client or if filler-struct\\n    // then we need to reorder the decoders and find the next operation to write\\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\\n\\n    if (currWrite !== null) {\\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\\n      let iterated = false\\n\\n      // iterate until we find something that we haven't written already\\n      // remember: first the high client-ids are written\\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\\n        curr = currDecoder.next()\\n        iterated = true\\n      }\\n      if (\\n        curr === null || // current decoder is empty\\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\\n      ) {\\n        continue\\n      }\\n\\n      if (firstClient !== currWrite.struct.id.client) {\\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\\n        currWrite = { struct: curr, offset: 0 }\\n        currDecoder.next()\\n      } else {\\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\\n          if (currWrite.struct.constructor === Skip) {\\n            // extend existing skip\\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\\n          } else {\\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\\n            /**\\n             * @type {Skip}\\n             */\\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\\n            currWrite = { struct, offset: 0 }\\n          }\\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\\n          if (diff > 0) {\\n            if (currWrite.struct.constructor === Skip) {\\n              // prefer to slice Skip because the other struct might contain more information\\n              currWrite.struct.length -= diff\\n            } else {\\n              curr = sliceStruct(curr, diff)\\n            }\\n          }\\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\\n            currWrite = { struct: curr, offset: 0 }\\n            currDecoder.next()\\n          }\\n        }\\n      }\\n    } else {\\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\\n      currDecoder.next()\\n    }\\n    for (\\n      let next = currDecoder.curr;\\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\\n      next = currDecoder.next()\\n    ) {\\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\\n      currWrite = { struct: next, offset: 0 }\\n    }\\n  }\\n  if (currWrite !== null) {\\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\\n    currWrite = null\\n  }\\n  finishLazyStructWriting(lazyStructEncoder)\\n\\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\\n  const ds = mergeDeleteSets(dss)\\n  writeDeleteSet(updateEncoder, ds)\\n  return updateEncoder.toUint8Array()\\n}\\n\\n/**\\n * @param {Uint8Array} update\\n * @param {Uint8Array} sv\\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\\n */\\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\\n  const state = decodeStateVector(sv)\\n  const encoder = new YEncoder()\\n  const lazyStructWriter = new LazyStructWriter(encoder)\\n  const decoder = new YDecoder(decoding.createDecoder(update))\\n  const reader = new LazyStructReader(decoder, false)\\n  while (reader.curr) {\\n    const curr = reader.curr\\n    const currClient = curr.id.client\\n    const svClock = state.get(currClient) || 0\\n    if (reader.curr.constructor === Skip) {\\n      // the first written struct shouldn't be a skip\\n      reader.next()\\n      continue\\n    }\\n    if (curr.id.clock + curr.length > svClock) {\\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\\n      reader.next()\\n      while (reader.curr && reader.curr.id.client === currClient) {\\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\\n        reader.next()\\n      }\\n    } else {\\n      // read until something new comes up\\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\\n        reader.next()\\n      }\\n    }\\n  }\\n  finishLazyStructWriting(lazyStructWriter)\\n  // write ds\\n  const ds = readDeleteSet(decoder)\\n  writeDeleteSet(encoder, ds)\\n  return encoder.toUint8Array()\\n}\\n\\n/**\\n * @param {Uint8Array} update\\n * @param {Uint8Array} sv\\n */\\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\\n\\n/**\\n * @param {LazyStructWriter} lazyWriter\\n */\\nconst flushLazyStructWriter = lazyWriter => {\\n  if (lazyWriter.written > 0) {\\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\\n    lazyWriter.written = 0\\n  }\\n}\\n\\n/**\\n * @param {LazyStructWriter} lazyWriter\\n * @param {Item | GC} struct\\n * @param {number} offset\\n */\\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\\n  // flush curr if we start another client\\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\\n    flushLazyStructWriter(lazyWriter)\\n  }\\n  if (lazyWriter.written === 0) {\\n    lazyWriter.currClient = struct.id.client\\n    // write next client\\n    lazyWriter.encoder.writeClient(struct.id.client)\\n    // write startClock\\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\\n  }\\n  struct.write(lazyWriter.encoder, offset)\\n  lazyWriter.written++\\n}\\n/**\\n * Call this function when we collected all parts and want to\\n * put all the parts together. After calling this method,\\n * you can continue using the UpdateEncoder.\\n *\\n * @param {LazyStructWriter} lazyWriter\\n */\\nconst finishLazyStructWriting = (lazyWriter) => {\\n  flushLazyStructWriter(lazyWriter)\\n\\n  // this is a fresh encoder because we called flushCurr\\n  const restEncoder = lazyWriter.encoder.restEncoder\\n\\n  /**\\n   * Now we put all the fragments together.\\n   * This works similarly to `writeClientsStructs`\\n   */\\n\\n  // write # states that were updated - i.e. the clients\\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\\n\\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\\n    const partStructs = lazyWriter.clientStructs[i]\\n    /**\\n     * Works similarly to `writeStructs`\\n     */\\n    // write # encoded structs\\n    encoding.writeVarUint(restEncoder, partStructs.written)\\n    // write the rest of the fragment\\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\\n  }\\n}\\n\\n/**\\n * @param {Uint8Array} update\\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\\n */\\nexport const convertUpdateFormat = (update, YDecoder, YEncoder) => {\\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\\n  const updateEncoder = new YEncoder()\\n  const lazyWriter = new LazyStructWriter(updateEncoder)\\n\\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\\n    writeStructToLazyStructWriter(lazyWriter, curr, 0)\\n  }\\n  finishLazyStructWriting(lazyWriter)\\n  const ds = readDeleteSet(updateDecoder)\\n  writeDeleteSet(updateEncoder, ds)\\n  return updateEncoder.toUint8Array()\\n}\\n\\n/**\\n * @param {Uint8Array} update\\n */\\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, UpdateDecoderV1, UpdateEncoderV2)\\n\\n/**\\n * @param {Uint8Array} update\\n */\\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1)\\n\",\"\\nimport {\\n  isDeleted,\\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as set from 'lib0/set'\\nimport * as array from 'lib0/array'\\n\\n/**\\n * YEvent describes the changes on a YType.\\n */\\nexport class YEvent {\\n  /**\\n   * @param {AbstractType<any>} target The changed type.\\n   * @param {Transaction} transaction\\n   */\\n  constructor (target, transaction) {\\n    /**\\n     * The type on which this event was created on.\\n     * @type {AbstractType<any>}\\n     */\\n    this.target = target\\n    /**\\n     * The current target on which the observe callback is called.\\n     * @type {AbstractType<any>}\\n     */\\n    this.currentTarget = target\\n    /**\\n     * The transaction that triggered this event.\\n     * @type {Transaction}\\n     */\\n    this.transaction = transaction\\n    /**\\n     * @type {Object|null}\\n     */\\n    this._changes = null\\n    /**\\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\\n     */\\n    this._keys = null\\n    /**\\n     * @type {null | Array<{ insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\\n     */\\n    this._delta = null\\n  }\\n\\n  /**\\n   * Computes the path from `y` to the changed type.\\n   *\\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\\n   *\\n   * The following property holds:\\n   * @example\\n   *   let type = y\\n   *   event.path.forEach(dir => {\\n   *     type = type.get(dir)\\n   *   })\\n   *   type === event.target // => true\\n   */\\n  get path () {\\n    // @ts-ignore _item is defined because target is integrated\\n    return getPathTo(this.currentTarget, this.target)\\n  }\\n\\n  /**\\n   * Check if a struct is deleted by this event.\\n   *\\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\\n   *\\n   * @param {AbstractStruct} struct\\n   * @return {boolean}\\n   */\\n  deletes (struct) {\\n    return isDeleted(this.transaction.deleteSet, struct.id)\\n  }\\n\\n  /**\\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\\n   */\\n  get keys () {\\n    if (this._keys === null) {\\n      const keys = new Map()\\n      const target = this.target\\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\\n      changed.forEach(key => {\\n        if (key !== null) {\\n          const item = /** @type {Item} */ (target._map.get(key))\\n          /**\\n           * @type {'delete' | 'add' | 'update'}\\n           */\\n          let action\\n          let oldValue\\n          if (this.adds(item)) {\\n            let prev = item.left\\n            while (prev !== null && this.adds(prev)) {\\n              prev = prev.left\\n            }\\n            if (this.deletes(item)) {\\n              if (prev !== null && this.deletes(prev)) {\\n                action = 'delete'\\n                oldValue = array.last(prev.content.getContent())\\n              } else {\\n                return\\n              }\\n            } else {\\n              if (prev !== null && this.deletes(prev)) {\\n                action = 'update'\\n                oldValue = array.last(prev.content.getContent())\\n              } else {\\n                action = 'add'\\n                oldValue = undefined\\n              }\\n            }\\n          } else {\\n            if (this.deletes(item)) {\\n              action = 'delete'\\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\\n            } else {\\n              return // nop\\n            }\\n          }\\n          keys.set(key, { action, oldValue })\\n        }\\n      })\\n      this._keys = keys\\n    }\\n    return this._keys\\n  }\\n\\n  /**\\n   * @type {Array<{insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\\n   */\\n  get delta () {\\n    return this.changes.delta\\n  }\\n\\n  /**\\n   * Check if a struct is added by this event.\\n   *\\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\\n   *\\n   * @param {AbstractStruct} struct\\n   * @return {boolean}\\n   */\\n  adds (struct) {\\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\\n  }\\n\\n  /**\\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\\n   */\\n  get changes () {\\n    let changes = this._changes\\n    if (changes === null) {\\n      const target = this.target\\n      const added = set.create()\\n      const deleted = set.create()\\n      /**\\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\\n       */\\n      const delta = []\\n      changes = {\\n        added,\\n        deleted,\\n        delta,\\n        keys: this.keys\\n      }\\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\\n      if (changed.has(null)) {\\n        /**\\n         * @type {any}\\n         */\\n        let lastOp = null\\n        const packOp = () => {\\n          if (lastOp) {\\n            delta.push(lastOp)\\n          }\\n        }\\n        for (let item = target._start; item !== null; item = item.right) {\\n          if (item.deleted) {\\n            if (this.deletes(item) && !this.adds(item)) {\\n              if (lastOp === null || lastOp.delete === undefined) {\\n                packOp()\\n                lastOp = { delete: 0 }\\n              }\\n              lastOp.delete += item.length\\n              deleted.add(item)\\n            } // else nop\\n          } else {\\n            if (this.adds(item)) {\\n              if (lastOp === null || lastOp.insert === undefined) {\\n                packOp()\\n                lastOp = { insert: [] }\\n              }\\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\\n              added.add(item)\\n            } else {\\n              if (lastOp === null || lastOp.retain === undefined) {\\n                packOp()\\n                lastOp = { retain: 0 }\\n              }\\n              lastOp.retain += item.length\\n            }\\n          }\\n        }\\n        if (lastOp !== null && lastOp.retain === undefined) {\\n          packOp()\\n        }\\n      }\\n      this._changes = changes\\n    }\\n    return /** @type {any} */ (changes)\\n  }\\n}\\n\\n/**\\n * Compute the path from this type to the specified target.\\n *\\n * @example\\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\\n *   const path = type.getPathTo(child)\\n *   // assuming `type instanceof YArray`\\n *   console.log(path) // might look like => [2, 'key1']\\n *   child === type.get(path[0]).get(path[1])\\n *\\n * @param {AbstractType<any>} parent\\n * @param {AbstractType<any>} child target\\n * @return {Array<string|number>} Path to the target\\n *\\n * @private\\n * @function\\n */\\nconst getPathTo = (parent, child) => {\\n  const path = []\\n  while (child._item !== null && child !== parent) {\\n    if (child._item.parentSub !== null) {\\n      // parent is map-ish\\n      path.unshift(child._item.parentSub)\\n    } else {\\n      // parent is array-ish\\n      let i = 0\\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\\n      while (c !== child._item && c !== null) {\\n        if (!c.deleted) {\\n          i++\\n        }\\n        c = c.right\\n      }\\n      path.unshift(i)\\n    }\\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\\n  }\\n  return path\\n}\\n\",\"\\nimport {\\n  removeEventHandlerListener,\\n  callEventHandlerListeners,\\n  addEventHandlerListener,\\n  createEventHandler,\\n  getState,\\n  isVisible,\\n  ContentType,\\n  createID,\\n  ContentAny,\\n  ContentBinary,\\n  getItemCleanStart,\\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as map from 'lib0/map'\\nimport * as iterator from 'lib0/iterator'\\nimport * as error from 'lib0/error'\\nimport * as math from 'lib0/math'\\n\\nconst maxSearchMarker = 80\\n\\n/**\\n * A unique timestamp that identifies each marker.\\n *\\n * Time is relative,.. this is more like an ever-increasing clock.\\n *\\n * @type {number}\\n */\\nlet globalSearchMarkerTimestamp = 0\\n\\nexport class ArraySearchMarker {\\n  /**\\n   * @param {Item} p\\n   * @param {number} index\\n   */\\n  constructor (p, index) {\\n    p.marker = true\\n    this.p = p\\n    this.index = index\\n    this.timestamp = globalSearchMarkerTimestamp++\\n  }\\n}\\n\\n/**\\n * @param {ArraySearchMarker} marker\\n */\\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\\n\\n/**\\n * This is rather complex so this function is the only thing that should overwrite a marker\\n *\\n * @param {ArraySearchMarker} marker\\n * @param {Item} p\\n * @param {number} index\\n */\\nconst overwriteMarker = (marker, p, index) => {\\n  marker.p.marker = false\\n  marker.p = p\\n  p.marker = true\\n  marker.index = index\\n  marker.timestamp = globalSearchMarkerTimestamp++\\n}\\n\\n/**\\n * @param {Array<ArraySearchMarker>} searchMarker\\n * @param {Item} p\\n * @param {number} index\\n */\\nconst markPosition = (searchMarker, p, index) => {\\n  if (searchMarker.length >= maxSearchMarker) {\\n    // override oldest marker (we don't want to create more objects)\\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\\n    overwriteMarker(marker, p, index)\\n    return marker\\n  } else {\\n    // create new marker\\n    const pm = new ArraySearchMarker(p, index)\\n    searchMarker.push(pm)\\n    return pm\\n  }\\n}\\n\\n/**\\n * Search marker help us to find positions in the associative array faster.\\n *\\n * They speed up the process of finding a position without much bookkeeping.\\n *\\n * A maximum of `maxSearchMarker` objects are created.\\n *\\n * This function always returns a refreshed marker (updated timestamp)\\n *\\n * @param {AbstractType<any>} yarray\\n * @param {number} index\\n */\\nexport const findMarker = (yarray, index) => {\\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\\n    return null\\n  }\\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\\n  let p = yarray._start\\n  let pindex = 0\\n  if (marker !== null) {\\n    p = marker.p\\n    pindex = marker.index\\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\\n  }\\n  // iterate to right if possible\\n  while (p.right !== null && pindex < index) {\\n    if (!p.deleted && p.countable) {\\n      if (index < pindex + p.length) {\\n        break\\n      }\\n      pindex += p.length\\n    }\\n    p = p.right\\n  }\\n  // iterate to left if necessary (might be that pindex > index)\\n  while (p.left !== null && pindex > index) {\\n    p = p.left\\n    if (!p.deleted && p.countable) {\\n      pindex -= p.length\\n    }\\n  }\\n  // we want to make sure that p can't be merged with left, because that would screw up everything\\n  // in that cas just return what we have (it is most likely the best marker anyway)\\n  // iterate to left until p can't be merged with left\\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\\n    p = p.left\\n    if (!p.deleted && p.countable) {\\n      pindex -= p.length\\n    }\\n  }\\n\\n  // @todo remove!\\n  // assure position\\n  // {\\n  //   let start = yarray._start\\n  //   let pos = 0\\n  //   while (start !== p) {\\n  //     if (!start.deleted && start.countable) {\\n  //       pos += start.length\\n  //     }\\n  //     start = /** @type {Item} */ (start.right)\\n  //   }\\n  //   if (pos !== pindex) {\\n  //     debugger\\n  //     throw new Error('Gotcha position fail!')\\n  //   }\\n  // }\\n  // if (marker) {\\n  //   if (window.lengthes == null) {\\n  //     window.lengthes = []\\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\\n  //   }\\n  //   window.lengthes.push(marker.index - pindex)\\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\\n  // }\\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\\n    // adjust existing marker\\n    overwriteMarker(marker, p, pindex)\\n    return marker\\n  } else {\\n    // create new marker\\n    return markPosition(yarray._searchMarker, p, pindex)\\n  }\\n}\\n\\n/**\\n * Update markers when a change happened.\\n *\\n * This should be called before doing a deletion!\\n *\\n * @param {Array<ArraySearchMarker>} searchMarker\\n * @param {number} index\\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\\n */\\nexport const updateMarkerChanges = (searchMarker, index, len) => {\\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\\n    const m = searchMarker[i]\\n    if (len > 0) {\\n      /**\\n       * @type {Item|null}\\n       */\\n      let p = m.p\\n      p.marker = false\\n      // Ideally we just want to do a simple position comparison, but this will only work if\\n      // search markers don't point to deleted items for formats.\\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\\n      while (p && (p.deleted || !p.countable)) {\\n        p = p.left\\n        if (p && !p.deleted && p.countable) {\\n          // adjust position. the loop should break now\\n          m.index -= p.length\\n        }\\n      }\\n      if (p === null || p.marker === true) {\\n        // remove search marker if updated position is null or if position is already marked\\n        searchMarker.splice(i, 1)\\n        continue\\n      }\\n      m.p = p\\n      p.marker = true\\n    }\\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\\n      m.index = math.max(index, m.index + len)\\n    }\\n  }\\n}\\n\\n/**\\n * Accumulate all (list) children of a type and return them as an Array.\\n *\\n * @param {AbstractType<any>} t\\n * @return {Array<Item>}\\n */\\nexport const getTypeChildren = t => {\\n  let s = t._start\\n  const arr = []\\n  while (s) {\\n    arr.push(s)\\n    s = s.right\\n  }\\n  return arr\\n}\\n\\n/**\\n * Call event listeners with an event. This will also add an event to all\\n * parents (for `.observeDeep` handlers).\\n *\\n * @template EventType\\n * @param {AbstractType<EventType>} type\\n * @param {Transaction} transaction\\n * @param {EventType} event\\n */\\nexport const callTypeObservers = (type, transaction, event) => {\\n  const changedType = type\\n  const changedParentTypes = transaction.changedParentTypes\\n  while (true) {\\n    // @ts-ignore\\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\\n    if (type._item === null) {\\n      break\\n    }\\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\\n  }\\n  callEventHandlerListeners(changedType._eH, event, transaction)\\n}\\n\\n/**\\n * @template EventType\\n * Abstract Yjs Type class\\n */\\nexport class AbstractType {\\n  constructor () {\\n    /**\\n     * @type {Item|null}\\n     */\\n    this._item = null\\n    /**\\n     * @type {Map<string,Item>}\\n     */\\n    this._map = new Map()\\n    /**\\n     * @type {Item|null}\\n     */\\n    this._start = null\\n    /**\\n     * @type {Doc|null}\\n     */\\n    this.doc = null\\n    this._length = 0\\n    /**\\n     * Event handlers\\n     * @type {EventHandler<EventType,Transaction>}\\n     */\\n    this._eH = createEventHandler()\\n    /**\\n     * Deep event handlers\\n     * @type {EventHandler<Array<YEvent>,Transaction>}\\n     */\\n    this._dEH = createEventHandler()\\n    /**\\n     * @type {null | Array<ArraySearchMarker>}\\n     */\\n    this._searchMarker = null\\n  }\\n\\n  /**\\n   * @return {AbstractType<any>|null}\\n   */\\n  get parent () {\\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\\n  }\\n\\n  /**\\n   * Integrate this type into the Yjs instance.\\n   *\\n   * * Save this struct in the os\\n   * * This type is sent to other client\\n   * * Observer functions are fired\\n   *\\n   * @param {Doc} y The Yjs instance\\n   * @param {Item|null} item\\n   */\\n  _integrate (y, item) {\\n    this.doc = y\\n    this._item = item\\n  }\\n\\n  /**\\n   * @return {AbstractType<EventType>}\\n   */\\n  _copy () {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @return {AbstractType<EventType>}\\n   */\\n  clone () {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   */\\n  _write (encoder) { }\\n\\n  /**\\n   * The first non-deleted item\\n   */\\n  get _first () {\\n    let n = this._start\\n    while (n !== null && n.deleted) {\\n      n = n.right\\n    }\\n    return n\\n  }\\n\\n  /**\\n   * Creates YEvent and calls all type observers.\\n   * Must be implemented by each type.\\n   *\\n   * @param {Transaction} transaction\\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\\n   */\\n  _callObserver (transaction, parentSubs) {\\n    if (!transaction.local && this._searchMarker) {\\n      this._searchMarker.length = 0\\n    }\\n  }\\n\\n  /**\\n   * Observe all events that are created on this type.\\n   *\\n   * @param {function(EventType, Transaction):void} f Observer function\\n   */\\n  observe (f) {\\n    addEventHandlerListener(this._eH, f)\\n  }\\n\\n  /**\\n   * Observe all events that are created by this type and its children.\\n   *\\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\\n   */\\n  observeDeep (f) {\\n    addEventHandlerListener(this._dEH, f)\\n  }\\n\\n  /**\\n   * Unregister an observer function.\\n   *\\n   * @param {function(EventType,Transaction):void} f Observer function\\n   */\\n  unobserve (f) {\\n    removeEventHandlerListener(this._eH, f)\\n  }\\n\\n  /**\\n   * Unregister an observer function.\\n   *\\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\\n   */\\n  unobserveDeep (f) {\\n    removeEventHandlerListener(this._dEH, f)\\n  }\\n\\n  /**\\n   * @abstract\\n   * @return {any}\\n   */\\n  toJSON () {}\\n}\\n\\n/**\\n * @param {AbstractType<any>} type\\n * @param {number} start\\n * @param {number} end\\n * @return {Array<any>}\\n *\\n * @private\\n * @function\\n */\\nexport const typeListSlice = (type, start, end) => {\\n  if (start < 0) {\\n    start = type._length + start\\n  }\\n  if (end < 0) {\\n    end = type._length + end\\n  }\\n  let len = end - start\\n  const cs = []\\n  let n = type._start\\n  while (n !== null && len > 0) {\\n    if (n.countable && !n.deleted) {\\n      const c = n.content.getContent()\\n      if (c.length <= start) {\\n        start -= c.length\\n      } else {\\n        for (let i = start; i < c.length && len > 0; i++) {\\n          cs.push(c[i])\\n          len--\\n        }\\n        start = 0\\n      }\\n    }\\n    n = n.right\\n  }\\n  return cs\\n}\\n\\n/**\\n * @param {AbstractType<any>} type\\n * @return {Array<any>}\\n *\\n * @private\\n * @function\\n */\\nexport const typeListToArray = type => {\\n  const cs = []\\n  let n = type._start\\n  while (n !== null) {\\n    if (n.countable && !n.deleted) {\\n      const c = n.content.getContent()\\n      for (let i = 0; i < c.length; i++) {\\n        cs.push(c[i])\\n      }\\n    }\\n    n = n.right\\n  }\\n  return cs\\n}\\n\\n/**\\n * @param {AbstractType<any>} type\\n * @param {Snapshot} snapshot\\n * @return {Array<any>}\\n *\\n * @private\\n * @function\\n */\\nexport const typeListToArraySnapshot = (type, snapshot) => {\\n  const cs = []\\n  let n = type._start\\n  while (n !== null) {\\n    if (n.countable && isVisible(n, snapshot)) {\\n      const c = n.content.getContent()\\n      for (let i = 0; i < c.length; i++) {\\n        cs.push(c[i])\\n      }\\n    }\\n    n = n.right\\n  }\\n  return cs\\n}\\n\\n/**\\n * Executes a provided function on once on overy element of this YArray.\\n *\\n * @param {AbstractType<any>} type\\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\\n *\\n * @private\\n * @function\\n */\\nexport const typeListForEach = (type, f) => {\\n  let index = 0\\n  let n = type._start\\n  while (n !== null) {\\n    if (n.countable && !n.deleted) {\\n      const c = n.content.getContent()\\n      for (let i = 0; i < c.length; i++) {\\n        f(c[i], index++, type)\\n      }\\n    }\\n    n = n.right\\n  }\\n}\\n\\n/**\\n * @template C,R\\n * @param {AbstractType<any>} type\\n * @param {function(C,number,AbstractType<any>):R} f\\n * @return {Array<R>}\\n *\\n * @private\\n * @function\\n */\\nexport const typeListMap = (type, f) => {\\n  /**\\n   * @type {Array<any>}\\n   */\\n  const result = []\\n  typeListForEach(type, (c, i) => {\\n    result.push(f(c, i, type))\\n  })\\n  return result\\n}\\n\\n/**\\n * @param {AbstractType<any>} type\\n * @return {IterableIterator<any>}\\n *\\n * @private\\n * @function\\n */\\nexport const typeListCreateIterator = type => {\\n  let n = type._start\\n  /**\\n   * @type {Array<any>|null}\\n   */\\n  let currentContent = null\\n  let currentContentIndex = 0\\n  return {\\n    [Symbol.iterator] () {\\n      return this\\n    },\\n    next: () => {\\n      // find some content\\n      if (currentContent === null) {\\n        while (n !== null && n.deleted) {\\n          n = n.right\\n        }\\n        // check if we reached the end, no need to check currentContent, because it does not exist\\n        if (n === null) {\\n          return {\\n            done: true,\\n            value: undefined\\n          }\\n        }\\n        // we found n, so we can set currentContent\\n        currentContent = n.content.getContent()\\n        currentContentIndex = 0\\n        n = n.right // we used the content of n, now iterate to next\\n      }\\n      const value = currentContent[currentContentIndex++]\\n      // check if we need to empty currentContent\\n      if (currentContent.length <= currentContentIndex) {\\n        currentContent = null\\n      }\\n      return {\\n        done: false,\\n        value\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * Executes a provided function on once on overy element of this YArray.\\n * Operates on a snapshotted state of the document.\\n *\\n * @param {AbstractType<any>} type\\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\\n * @param {Snapshot} snapshot\\n *\\n * @private\\n * @function\\n */\\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\\n  let index = 0\\n  let n = type._start\\n  while (n !== null) {\\n    if (n.countable && isVisible(n, snapshot)) {\\n      const c = n.content.getContent()\\n      for (let i = 0; i < c.length; i++) {\\n        f(c[i], index++, type)\\n      }\\n    }\\n    n = n.right\\n  }\\n}\\n\\n/**\\n * @param {AbstractType<any>} type\\n * @param {number} index\\n * @return {any}\\n *\\n * @private\\n * @function\\n */\\nexport const typeListGet = (type, index) => {\\n  const marker = findMarker(type, index)\\n  let n = type._start\\n  if (marker !== null) {\\n    n = marker.p\\n    index -= marker.index\\n  }\\n  for (; n !== null; n = n.right) {\\n    if (!n.deleted && n.countable) {\\n      if (index < n.length) {\\n        return n.content.getContent()[index]\\n      }\\n      index -= n.length\\n    }\\n  }\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {Item?} referenceItem\\n * @param {Array<Object<string,any>|Array<any>|boolean|number|string|Uint8Array>} content\\n *\\n * @private\\n * @function\\n */\\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\\n  let left = referenceItem\\n  const doc = transaction.doc\\n  const ownClientId = doc.clientID\\n  const store = doc.store\\n  const right = referenceItem === null ? parent._start : referenceItem.right\\n  /**\\n   * @type {Array<Object|Array<any>|number>}\\n   */\\n  let jsonContent = []\\n  const packJsonContent = () => {\\n    if (jsonContent.length > 0) {\\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\\n      left.integrate(transaction, 0)\\n      jsonContent = []\\n    }\\n  }\\n  content.forEach(c => {\\n    switch (c.constructor) {\\n      case Number:\\n      case Object:\\n      case Boolean:\\n      case Array:\\n      case String:\\n        jsonContent.push(c)\\n        break\\n      default:\\n        packJsonContent()\\n        switch (c.constructor) {\\n          case Uint8Array:\\n          case ArrayBuffer:\\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\\n            left.integrate(transaction, 0)\\n            break\\n          case Doc:\\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\\n            left.integrate(transaction, 0)\\n            break\\n          default:\\n            if (c instanceof AbstractType) {\\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\\n              left.integrate(transaction, 0)\\n            } else {\\n              throw new Error('Unexpected content type in insert operation')\\n            }\\n        }\\n    }\\n  })\\n  packJsonContent()\\n}\\n\\nconst lengthExceeded = error.create('Length exceeded!')\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {number} index\\n * @param {Array<Object<string,any>|Array<any>|number|string|Uint8Array>} content\\n *\\n * @private\\n * @function\\n */\\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\\n  if (index > parent._length) {\\n    throw lengthExceeded\\n  }\\n  if (index === 0) {\\n    if (parent._searchMarker) {\\n      updateMarkerChanges(parent._searchMarker, index, content.length)\\n    }\\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\\n  }\\n  const startIndex = index\\n  const marker = findMarker(parent, index)\\n  let n = parent._start\\n  if (marker !== null) {\\n    n = marker.p\\n    index -= marker.index\\n    // we need to iterate one to the left so that the algorithm works\\n    if (index === 0) {\\n      // @todo refactor this as it actually doesn't consider formats\\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\\n      index += (n && n.countable && !n.deleted) ? n.length : 0\\n    }\\n  }\\n  for (; n !== null; n = n.right) {\\n    if (!n.deleted && n.countable) {\\n      if (index <= n.length) {\\n        if (index < n.length) {\\n          // insert in-between\\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\\n        }\\n        break\\n      }\\n      index -= n.length\\n    }\\n  }\\n  if (parent._searchMarker) {\\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\\n  }\\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {number} index\\n * @param {number} length\\n *\\n * @private\\n * @function\\n */\\nexport const typeListDelete = (transaction, parent, index, length) => {\\n  if (length === 0) { return }\\n  const startIndex = index\\n  const startLength = length\\n  const marker = findMarker(parent, index)\\n  let n = parent._start\\n  if (marker !== null) {\\n    n = marker.p\\n    index -= marker.index\\n  }\\n  // compute the first item to be deleted\\n  for (; n !== null && index > 0; n = n.right) {\\n    if (!n.deleted && n.countable) {\\n      if (index < n.length) {\\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\\n      }\\n      index -= n.length\\n    }\\n  }\\n  // delete all items until done\\n  while (length > 0 && n !== null) {\\n    if (!n.deleted) {\\n      if (length < n.length) {\\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\\n      }\\n      n.delete(transaction)\\n      length -= n.length\\n    }\\n    n = n.right\\n  }\\n  if (length > 0) {\\n    throw lengthExceeded\\n  }\\n  if (parent._searchMarker) {\\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\\n  }\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {string} key\\n *\\n * @private\\n * @function\\n */\\nexport const typeMapDelete = (transaction, parent, key) => {\\n  const c = parent._map.get(key)\\n  if (c !== undefined) {\\n    c.delete(transaction)\\n  }\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {string} key\\n * @param {Object|number|Array<any>|string|Uint8Array|AbstractType<any>} value\\n *\\n * @private\\n * @function\\n */\\nexport const typeMapSet = (transaction, parent, key, value) => {\\n  const left = parent._map.get(key) || null\\n  const doc = transaction.doc\\n  const ownClientId = doc.clientID\\n  let content\\n  if (value == null) {\\n    content = new ContentAny([value])\\n  } else {\\n    switch (value.constructor) {\\n      case Number:\\n      case Object:\\n      case Boolean:\\n      case Array:\\n      case String:\\n        content = new ContentAny([value])\\n        break\\n      case Uint8Array:\\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\\n        break\\n      case Doc:\\n        content = new ContentDoc(/** @type {Doc} */ (value))\\n        break\\n      default:\\n        if (value instanceof AbstractType) {\\n          content = new ContentType(value)\\n        } else {\\n          throw new Error('Unexpected content type')\\n        }\\n    }\\n  }\\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\\n}\\n\\n/**\\n * @param {AbstractType<any>} parent\\n * @param {string} key\\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\\n *\\n * @private\\n * @function\\n */\\nexport const typeMapGet = (parent, key) => {\\n  const val = parent._map.get(key)\\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\\n}\\n\\n/**\\n * @param {AbstractType<any>} parent\\n * @return {Object<string,Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\\n *\\n * @private\\n * @function\\n */\\nexport const typeMapGetAll = (parent) => {\\n  /**\\n   * @type {Object<string,any>}\\n   */\\n  const res = {}\\n  parent._map.forEach((value, key) => {\\n    if (!value.deleted) {\\n      res[key] = value.content.getContent()[value.length - 1]\\n    }\\n  })\\n  return res\\n}\\n\\n/**\\n * @param {AbstractType<any>} parent\\n * @param {string} key\\n * @return {boolean}\\n *\\n * @private\\n * @function\\n */\\nexport const typeMapHas = (parent, key) => {\\n  const val = parent._map.get(key)\\n  return val !== undefined && !val.deleted\\n}\\n\\n/**\\n * @param {AbstractType<any>} parent\\n * @param {string} key\\n * @param {Snapshot} snapshot\\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\\n *\\n * @private\\n * @function\\n */\\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\\n  let v = parent._map.get(key) || null\\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\\n    v = v.left\\n  }\\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\\n}\\n\\n/**\\n * @param {Map<string,Item>} map\\n * @return {IterableIterator<Array<any>>}\\n *\\n * @private\\n * @function\\n */\\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\\n\",\"/**\\n * @module YArray\\n */\\n\\nimport {\\n  YEvent,\\n  AbstractType,\\n  typeListGet,\\n  typeListToArray,\\n  typeListForEach,\\n  typeListCreateIterator,\\n  typeListInsertGenerics,\\n  typeListDelete,\\n  typeListMap,\\n  YArrayRefID,\\n  callTypeObservers,\\n  transact,\\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\\n} from '../internals.js'\\nimport { typeListSlice } from './AbstractType.js'\\n\\n/**\\n * Event that describes the changes on a YArray\\n * @template T\\n */\\nexport class YArrayEvent extends YEvent {\\n  /**\\n   * @param {YArray<T>} yarray The changed type\\n   * @param {Transaction} transaction The transaction object\\n   */\\n  constructor (yarray, transaction) {\\n    super(yarray, transaction)\\n    this._transaction = transaction\\n  }\\n}\\n\\n/**\\n * A shared Array implementation.\\n * @template T\\n * @extends AbstractType<YArrayEvent<T>>\\n * @implements {Iterable<T>}\\n */\\nexport class YArray extends AbstractType {\\n  constructor () {\\n    super()\\n    /**\\n     * @type {Array<any>?}\\n     * @private\\n     */\\n    this._prelimContent = []\\n    /**\\n     * @type {Array<ArraySearchMarker>}\\n     */\\n    this._searchMarker = []\\n  }\\n\\n  /**\\n   * Construct a new YArray containing the specified items.\\n   * @template T\\n   * @param {Array<T>} items\\n   * @return {YArray<T>}\\n   */\\n  static from (items) {\\n    const a = new YArray()\\n    a.push(items)\\n    return a\\n  }\\n\\n  /**\\n   * Integrate this type into the Yjs instance.\\n   *\\n   * * Save this struct in the os\\n   * * This type is sent to other client\\n   * * Observer functions are fired\\n   *\\n   * @param {Doc} y The Yjs instance\\n   * @param {Item} item\\n   */\\n  _integrate (y, item) {\\n    super._integrate(y, item)\\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\\n    this._prelimContent = null\\n  }\\n\\n  _copy () {\\n    return new YArray()\\n  }\\n\\n  /**\\n   * @return {YArray<T>}\\n   */\\n  clone () {\\n    const arr = new YArray()\\n    arr.insert(0, this.toArray().map(el =>\\n      el instanceof AbstractType ? el.clone() : el\\n    ))\\n    return arr\\n  }\\n\\n  get length () {\\n    return this._prelimContent === null ? this._length : this._prelimContent.length\\n  }\\n\\n  /**\\n   * Creates YArrayEvent and calls observers.\\n   *\\n   * @param {Transaction} transaction\\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\\n   */\\n  _callObserver (transaction, parentSubs) {\\n    super._callObserver(transaction, parentSubs)\\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\\n  }\\n\\n  /**\\n   * Inserts new content at an index.\\n   *\\n   * Important: This function expects an array of content. Not just a content\\n   * object. The reason for this \\\"weirdness\\\" is that inserting several elements\\n   * is very efficient when it is done as a single operation.\\n   *\\n   * @example\\n   *  // Insert character 'a' at position 0\\n   *  yarray.insert(0, ['a'])\\n   *  // Insert numbers 1, 2 at position 1\\n   *  yarray.insert(1, [1, 2])\\n   *\\n   * @param {number} index The index to insert content at.\\n   * @param {Array<T>} content The array of content\\n   */\\n  insert (index, content) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeListInsertGenerics(transaction, this, index, content)\\n      })\\n    } else {\\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\\n    }\\n  }\\n\\n  /**\\n   * Appends content to this YArray.\\n   *\\n   * @param {Array<T>} content Array of content to append.\\n   */\\n  push (content) {\\n    this.insert(this.length, content)\\n  }\\n\\n  /**\\n   * Preppends content to this YArray.\\n   *\\n   * @param {Array<T>} content Array of content to preppend.\\n   */\\n  unshift (content) {\\n    this.insert(0, content)\\n  }\\n\\n  /**\\n   * Deletes elements starting from an index.\\n   *\\n   * @param {number} index Index at which to start deleting elements\\n   * @param {number} length The number of elements to remove. Defaults to 1.\\n   */\\n  delete (index, length = 1) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeListDelete(transaction, this, index, length)\\n      })\\n    } else {\\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\\n    }\\n  }\\n\\n  /**\\n   * Returns the i-th element from a YArray.\\n   *\\n   * @param {number} index The index of the element to return from the YArray\\n   * @return {T}\\n   */\\n  get (index) {\\n    return typeListGet(this, index)\\n  }\\n\\n  /**\\n   * Transforms this YArray to a JavaScript Array.\\n   *\\n   * @return {Array<T>}\\n   */\\n  toArray () {\\n    return typeListToArray(this)\\n  }\\n\\n  /**\\n   * Transforms this YArray to a JavaScript Array.\\n   *\\n   * @param {number} [start]\\n   * @param {number} [end]\\n   * @return {Array<T>}\\n   */\\n  slice (start = 0, end = this.length) {\\n    return typeListSlice(this, start, end)\\n  }\\n\\n  /**\\n   * Transforms this Shared Type to a JSON object.\\n   *\\n   * @return {Array<any>}\\n   */\\n  toJSON () {\\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\\n  }\\n\\n  /**\\n   * Returns an Array with the result of calling a provided function on every\\n   * element of this YArray.\\n   *\\n   * @template T,M\\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\\n   * @return {Array<M>} A new array with each element being the result of the\\n   *                 callback function\\n   */\\n  map (f) {\\n    return typeListMap(this, /** @type {any} */ (f))\\n  }\\n\\n  /**\\n   * Executes a provided function on once on overy element of this YArray.\\n   *\\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\\n   */\\n  forEach (f) {\\n    typeListForEach(this, f)\\n  }\\n\\n  /**\\n   * @return {IterableIterator<T>}\\n   */\\n  [Symbol.iterator] () {\\n    return typeListCreateIterator(this)\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   */\\n  _write (encoder) {\\n    encoder.writeTypeRef(YArrayRefID)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n *\\n * @private\\n * @function\\n */\\nexport const readYArray = decoder => new YArray()\\n\",\"\\n/**\\n * @module YMap\\n */\\n\\nimport {\\n  YEvent,\\n  AbstractType,\\n  typeMapDelete,\\n  typeMapSet,\\n  typeMapGet,\\n  typeMapHas,\\n  createMapIterator,\\n  YMapRefID,\\n  callTypeObservers,\\n  transact,\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as iterator from 'lib0/iterator'\\n\\n/**\\n * @template T\\n * Event that describes the changes on a YMap.\\n */\\nexport class YMapEvent extends YEvent {\\n  /**\\n   * @param {YMap<T>} ymap The YArray that changed.\\n   * @param {Transaction} transaction\\n   * @param {Set<any>} subs The keys that changed.\\n   */\\n  constructor (ymap, transaction, subs) {\\n    super(ymap, transaction)\\n    this.keysChanged = subs\\n  }\\n}\\n\\n/**\\n * @template T number|string|Object|Array|Uint8Array\\n * A shared Map implementation.\\n *\\n * @extends AbstractType<YMapEvent<T>>\\n * @implements {Iterable<T>}\\n */\\nexport class YMap extends AbstractType {\\n  /**\\n   *\\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\\n   */\\n  constructor (entries) {\\n    super()\\n    /**\\n     * @type {Map<string,any>?}\\n     * @private\\n     */\\n    this._prelimContent = null\\n\\n    if (entries === undefined) {\\n      this._prelimContent = new Map()\\n    } else {\\n      this._prelimContent = new Map(entries)\\n    }\\n  }\\n\\n  /**\\n   * Integrate this type into the Yjs instance.\\n   *\\n   * * Save this struct in the os\\n   * * This type is sent to other client\\n   * * Observer functions are fired\\n   *\\n   * @param {Doc} y The Yjs instance\\n   * @param {Item} item\\n   */\\n  _integrate (y, item) {\\n    super._integrate(y, item)\\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\\n      this.set(key, value)\\n    })\\n    this._prelimContent = null\\n  }\\n\\n  _copy () {\\n    return new YMap()\\n  }\\n\\n  /**\\n   * @return {YMap<T>}\\n   */\\n  clone () {\\n    const map = new YMap()\\n    this.forEach((value, key) => {\\n      map.set(key, value instanceof AbstractType ? value.clone() : value)\\n    })\\n    return map\\n  }\\n\\n  /**\\n   * Creates YMapEvent and calls observers.\\n   *\\n   * @param {Transaction} transaction\\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\\n   */\\n  _callObserver (transaction, parentSubs) {\\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\\n  }\\n\\n  /**\\n   * Transforms this Shared Type to a JSON object.\\n   *\\n   * @return {Object<string,T>}\\n   */\\n  toJSON () {\\n    /**\\n     * @type {Object<string,T>}\\n     */\\n    const map = {}\\n    this._map.forEach((item, key) => {\\n      if (!item.deleted) {\\n        const v = item.content.getContent()[item.length - 1]\\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\\n      }\\n    })\\n    return map\\n  }\\n\\n  /**\\n   * Returns the size of the YMap (count of key/value pairs)\\n   *\\n   * @return {number}\\n   */\\n  get size () {\\n    return [...createMapIterator(this._map)].length\\n  }\\n\\n  /**\\n   * Returns the keys for each element in the YMap Type.\\n   *\\n   * @return {IterableIterator<string>}\\n   */\\n  keys () {\\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\\n  }\\n\\n  /**\\n   * Returns the values for each element in the YMap Type.\\n   *\\n   * @return {IterableIterator<any>}\\n   */\\n  values () {\\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\\n  }\\n\\n  /**\\n   * Returns an Iterator of [key, value] pairs\\n   *\\n   * @return {IterableIterator<any>}\\n   */\\n  entries () {\\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\\n  }\\n\\n  /**\\n   * Executes a provided function on once on every key-value pair.\\n   *\\n   * @param {function(T,string,YMap<T>):void} f A function to execute on every element of this YArray.\\n   */\\n  forEach (f) {\\n    /**\\n     * @type {Object<string,T>}\\n     */\\n    const map = {}\\n    this._map.forEach((item, key) => {\\n      if (!item.deleted) {\\n        f(item.content.getContent()[item.length - 1], key, this)\\n      }\\n    })\\n    return map\\n  }\\n\\n  /**\\n   * @return {IterableIterator<T>}\\n   */\\n  [Symbol.iterator] () {\\n    return this.entries()\\n  }\\n\\n  /**\\n   * Remove a specified element from this YMap.\\n   *\\n   * @param {string} key The key of the element to remove.\\n   */\\n  delete (key) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeMapDelete(transaction, this, key)\\n      })\\n    } else {\\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\\n    }\\n  }\\n\\n  /**\\n   * Adds or updates an element with a specified key and value.\\n   *\\n   * @param {string} key The key of the element to add to this YMap\\n   * @param {T} value The value of the element to add\\n   */\\n  set (key, value) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeMapSet(transaction, this, key, value)\\n      })\\n    } else {\\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\\n    }\\n    return value\\n  }\\n\\n  /**\\n   * Returns a specified element from this YMap.\\n   *\\n   * @param {string} key\\n   * @return {T|undefined}\\n   */\\n  get (key) {\\n    return /** @type {any} */ (typeMapGet(this, key))\\n  }\\n\\n  /**\\n   * Returns a boolean indicating whether the specified key exists or not.\\n   *\\n   * @param {string} key The key to test.\\n   * @return {boolean}\\n   */\\n  has (key) {\\n    return typeMapHas(this, key)\\n  }\\n\\n  /**\\n   * Removes all elements from this YMap.\\n   */\\n  clear () {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        this.forEach(function (value, key, map) {\\n          typeMapDelete(transaction, map, key)\\n        })\\n      })\\n    } else {\\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\\n    }\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   */\\n  _write (encoder) {\\n    encoder.writeTypeRef(YMapRefID)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n *\\n * @private\\n * @function\\n */\\nexport const readYMap = decoder => new YMap()\\n\",\"\\n/**\\n * @module YText\\n */\\n\\nimport {\\n  YEvent,\\n  AbstractType,\\n  getItemCleanStart,\\n  getState,\\n  isVisible,\\n  createID,\\n  YTextRefID,\\n  callTypeObservers,\\n  transact,\\n  ContentEmbed,\\n  GC,\\n  ContentFormat,\\n  ContentString,\\n  splitSnapshotAffectedStructs,\\n  iterateDeletedStructs,\\n  iterateStructs,\\n  findMarker,\\n  typeMapDelete,\\n  typeMapSet,\\n  typeMapGet,\\n  typeMapGetAll,\\n  updateMarkerChanges,\\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as object from 'lib0/object'\\nimport * as map from 'lib0/map'\\nimport * as error from 'lib0/error'\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @return {boolean}\\n */\\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\\n\\nexport class ItemTextListPosition {\\n  /**\\n   * @param {Item|null} left\\n   * @param {Item|null} right\\n   * @param {number} index\\n   * @param {Map<string,any>} currentAttributes\\n   */\\n  constructor (left, right, index, currentAttributes) {\\n    this.left = left\\n    this.right = right\\n    this.index = index\\n    this.currentAttributes = currentAttributes\\n  }\\n\\n  /**\\n   * Only call this if you know that this.right is defined\\n   */\\n  forward () {\\n    if (this.right === null) {\\n      error.unexpectedCase()\\n    }\\n    switch (this.right.content.constructor) {\\n      case ContentEmbed:\\n      case ContentString:\\n        if (!this.right.deleted) {\\n          this.index += this.right.length\\n        }\\n        break\\n      case ContentFormat:\\n        if (!this.right.deleted) {\\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\\n        }\\n        break\\n    }\\n    this.left = this.right\\n    this.right = this.right.right\\n  }\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {ItemTextListPosition} pos\\n * @param {number} count steps to move forward\\n * @return {ItemTextListPosition}\\n *\\n * @private\\n * @function\\n */\\nconst findNextPosition = (transaction, pos, count) => {\\n  while (pos.right !== null && count > 0) {\\n    switch (pos.right.content.constructor) {\\n      case ContentEmbed:\\n      case ContentString:\\n        if (!pos.right.deleted) {\\n          if (count < pos.right.length) {\\n            // split right\\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\\n          }\\n          pos.index += pos.right.length\\n          count -= pos.right.length\\n        }\\n        break\\n      case ContentFormat:\\n        if (!pos.right.deleted) {\\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\\n        }\\n        break\\n    }\\n    pos.left = pos.right\\n    pos.right = pos.right.right\\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\\n  }\\n  return pos\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {number} index\\n * @return {ItemTextListPosition}\\n *\\n * @private\\n * @function\\n */\\nconst findPosition = (transaction, parent, index) => {\\n  const currentAttributes = new Map()\\n  const marker = findMarker(parent, index)\\n  if (marker) {\\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\\n    return findNextPosition(transaction, pos, index - marker.index)\\n  } else {\\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\\n    return findNextPosition(transaction, pos, index)\\n  }\\n}\\n\\n/**\\n * Negate applied formats\\n *\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {ItemTextListPosition} currPos\\n * @param {Map<string,any>} negatedAttributes\\n *\\n * @private\\n * @function\\n */\\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\\n  // check if we really need to remove attributes\\n  while (\\n    currPos.right !== null && (\\n      currPos.right.deleted === true || (\\n        currPos.right.content.constructor === ContentFormat &&\\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\\n      )\\n    )\\n  ) {\\n    if (!currPos.right.deleted) {\\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\\n    }\\n    currPos.forward()\\n  }\\n  const doc = transaction.doc\\n  const ownClientId = doc.clientID\\n  negatedAttributes.forEach((val, key) => {\\n    const left = currPos.left\\n    const right = currPos.right\\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\\n    nextFormat.integrate(transaction, 0)\\n    currPos.right = nextFormat\\n    currPos.forward()\\n  })\\n}\\n\\n/**\\n * @param {Map<string,any>} currentAttributes\\n * @param {ContentFormat} format\\n *\\n * @private\\n * @function\\n */\\nconst updateCurrentAttributes = (currentAttributes, format) => {\\n  const { key, value } = format\\n  if (value === null) {\\n    currentAttributes.delete(key)\\n  } else {\\n    currentAttributes.set(key, value)\\n  }\\n}\\n\\n/**\\n * @param {ItemTextListPosition} currPos\\n * @param {Object<string,any>} attributes\\n *\\n * @private\\n * @function\\n */\\nconst minimizeAttributeChanges = (currPos, attributes) => {\\n  // go right while attributes[right.key] === right.value (or right is deleted)\\n  while (true) {\\n    if (currPos.right === null) {\\n      break\\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\\n      //\\n    } else {\\n      break\\n    }\\n    currPos.forward()\\n  }\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {ItemTextListPosition} currPos\\n * @param {Object<string,any>} attributes\\n * @return {Map<string,any>}\\n *\\n * @private\\n * @function\\n **/\\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\\n  const doc = transaction.doc\\n  const ownClientId = doc.clientID\\n  const negatedAttributes = new Map()\\n  // insert format-start items\\n  for (const key in attributes) {\\n    const val = attributes[key]\\n    const currentVal = currPos.currentAttributes.get(key) || null\\n    if (!equalAttrs(currentVal, val)) {\\n      // save negated attribute (set null if currentVal undefined)\\n      negatedAttributes.set(key, currentVal)\\n      const { left, right } = currPos\\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\\n      currPos.right.integrate(transaction, 0)\\n      currPos.forward()\\n    }\\n  }\\n  return negatedAttributes\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {ItemTextListPosition} currPos\\n * @param {string|object} text\\n * @param {Object<string,any>} attributes\\n *\\n * @private\\n * @function\\n **/\\nconst insertText = (transaction, parent, currPos, text, attributes) => {\\n  currPos.currentAttributes.forEach((val, key) => {\\n    if (attributes[key] === undefined) {\\n      attributes[key] = null\\n    }\\n  })\\n  const doc = transaction.doc\\n  const ownClientId = doc.clientID\\n  minimizeAttributeChanges(currPos, attributes)\\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\\n  // insert content\\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : new ContentEmbed(text)\\n  let { left, right, index } = currPos\\n  if (parent._searchMarker) {\\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\\n  }\\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\\n  right.integrate(transaction, 0)\\n  currPos.right = right\\n  currPos.index = index\\n  currPos.forward()\\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {AbstractType<any>} parent\\n * @param {ItemTextListPosition} currPos\\n * @param {number} length\\n * @param {Object<string,any>} attributes\\n *\\n * @private\\n * @function\\n */\\nconst formatText = (transaction, parent, currPos, length, attributes) => {\\n  const doc = transaction.doc\\n  const ownClientId = doc.clientID\\n  minimizeAttributeChanges(currPos, attributes)\\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\\n  // iterate until first non-format or null is found\\n  // delete all formats with attributes[format.key] != null\\n  while (length > 0 && currPos.right !== null) {\\n    if (!currPos.right.deleted) {\\n      switch (currPos.right.content.constructor) {\\n        case ContentFormat: {\\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\\n          const attr = attributes[key]\\n          if (attr !== undefined) {\\n            if (equalAttrs(attr, value)) {\\n              negatedAttributes.delete(key)\\n            } else {\\n              negatedAttributes.set(key, value)\\n            }\\n            currPos.right.delete(transaction)\\n          }\\n          break\\n        }\\n        case ContentEmbed:\\n        case ContentString:\\n          if (length < currPos.right.length) {\\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\\n          }\\n          length -= currPos.right.length\\n          break\\n      }\\n    }\\n    currPos.forward()\\n  }\\n  // Quill just assumes that the editor starts with a newline and that it always\\n  // ends with a newline. We only insert that newline when a new newline is\\n  // inserted - i.e when length is bigger than type.length\\n  if (length > 0) {\\n    let newlines = ''\\n    for (; length > 0; length--) {\\n      newlines += '\\\\n'\\n    }\\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\\n    currPos.right.integrate(transaction, 0)\\n    currPos.forward()\\n  }\\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\\n}\\n\\n/**\\n * Call this function after string content has been deleted in order to\\n * clean up formatting Items.\\n *\\n * @param {Transaction} transaction\\n * @param {Item} start\\n * @param {Item|null} end exclusive end, automatically iterates to the next Content Item\\n * @param {Map<string,any>} startAttributes\\n * @param {Map<string,any>} endAttributes This attribute is modified!\\n * @return {number} The amount of formatting Items deleted.\\n *\\n * @function\\n */\\nconst cleanupFormattingGap = (transaction, start, end, startAttributes, endAttributes) => {\\n  while (end && end.content.constructor !== ContentString && end.content.constructor !== ContentEmbed) {\\n    if (!end.deleted && end.content.constructor === ContentFormat) {\\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content))\\n    }\\n    end = end.right\\n  }\\n  let cleanups = 0\\n  while (start !== end) {\\n    if (!start.deleted) {\\n      const content = start.content\\n      switch (content.constructor) {\\n        case ContentFormat: {\\n          const { key, value } = /** @type {ContentFormat} */ (content)\\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\\n            start.delete(transaction)\\n            cleanups++\\n          }\\n          break\\n        }\\n      }\\n    }\\n    start = /** @type {Item} */ (start.right)\\n  }\\n  return cleanups\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {Item | null} item\\n */\\nconst cleanupContextlessFormattingGap = (transaction, item) => {\\n  // iterate until item.right is null or content\\n  while (item && item.right && (item.right.deleted || (item.right.content.constructor !== ContentString && item.right.content.constructor !== ContentEmbed))) {\\n    item = item.right\\n  }\\n  const attrs = new Set()\\n  // iterate back until a content item is found\\n  while (item && (item.deleted || (item.content.constructor !== ContentString && item.content.constructor !== ContentEmbed))) {\\n    if (!item.deleted && item.content.constructor === ContentFormat) {\\n      const key = /** @type {ContentFormat} */ (item.content).key\\n      if (attrs.has(key)) {\\n        item.delete(transaction)\\n      } else {\\n        attrs.add(key)\\n      }\\n    }\\n    item = item.left\\n  }\\n}\\n\\n/**\\n * This function is experimental and subject to change / be removed.\\n *\\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\\n * automatically after each change. This function iterates twice over the complete YText type\\n * and removes unnecessary formatting attributes. This is also helpful for testing.\\n *\\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\\n *\\n * @param {YText} type\\n * @return {number} How many formatting attributes have been cleaned up.\\n */\\nexport const cleanupYTextFormatting = type => {\\n  let res = 0\\n  transact(/** @type {Doc} */ (type.doc), transaction => {\\n    let start = /** @type {Item} */ (type._start)\\n    let end = type._start\\n    let startAttributes = map.create()\\n    const currentAttributes = map.copy(startAttributes)\\n    while (end) {\\n      if (end.deleted === false) {\\n        switch (end.content.constructor) {\\n          case ContentFormat:\\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\\n            break\\n          case ContentEmbed:\\n          case ContentString:\\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\\n            startAttributes = map.copy(currentAttributes)\\n            start = end\\n            break\\n        }\\n      }\\n      end = end.right\\n    }\\n  })\\n  return res\\n}\\n\\n/**\\n * @param {Transaction} transaction\\n * @param {ItemTextListPosition} currPos\\n * @param {number} length\\n * @return {ItemTextListPosition}\\n *\\n * @private\\n * @function\\n */\\nconst deleteText = (transaction, currPos, length) => {\\n  const startLength = length\\n  const startAttrs = map.copy(currPos.currentAttributes)\\n  const start = currPos.right\\n  while (length > 0 && currPos.right !== null) {\\n    if (currPos.right.deleted === false) {\\n      switch (currPos.right.content.constructor) {\\n        case ContentEmbed:\\n        case ContentString:\\n          if (length < currPos.right.length) {\\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\\n          }\\n          length -= currPos.right.length\\n          currPos.right.delete(transaction)\\n          break\\n      }\\n    }\\n    currPos.forward()\\n  }\\n  if (start) {\\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, map.copy(currPos.currentAttributes))\\n  }\\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\\n  if (parent._searchMarker) {\\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\\n  }\\n  return currPos\\n}\\n\\n/**\\n * The Quill Delta format represents changes on a text document with\\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\\n *\\n * @example\\n *   {\\n *     ops: [\\n *       { insert: 'Gandalf', attributes: { bold: true } },\\n *       { insert: ' the ' },\\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\\n *     ]\\n *   }\\n *\\n */\\n\\n/**\\n  * Attributes that can be assigned to a selection of text.\\n  *\\n  * @example\\n  *   {\\n  *     bold: true,\\n  *     font-size: '40px'\\n  *   }\\n  *\\n  * @typedef {Object} TextAttributes\\n  */\\n\\n/**\\n * Event that describes the changes on a YText type.\\n */\\nexport class YTextEvent extends YEvent {\\n  /**\\n   * @param {YText} ytext\\n   * @param {Transaction} transaction\\n   * @param {Set<any>} subs The keys that changed\\n   */\\n  constructor (ytext, transaction, subs) {\\n    super(ytext, transaction)\\n    /**\\n     * Whether the children changed.\\n     * @type {Boolean}\\n     * @private\\n     */\\n    this.childListChanged = false\\n    /**\\n     * Set of all changed attributes.\\n     * @type {Set<string>}\\n     */\\n    this.keysChanged = new Set()\\n    subs.forEach((sub) => {\\n      if (sub === null) {\\n        this.childListChanged = true\\n      } else {\\n        this.keysChanged.add(sub)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\\n   */\\n  get changes () {\\n    if (this._changes === null) {\\n      /**\\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\\n       */\\n      const changes = {\\n        keys: this.keys,\\n        delta: this.delta,\\n        added: new Set(),\\n        deleted: new Set()\\n      }\\n      this._changes = changes\\n    }\\n    return /** @type {any} */ (this._changes)\\n  }\\n\\n  /**\\n   * Compute the changes in the delta format.\\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\\n   *\\n   * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\\n   *\\n   * @public\\n   */\\n  get delta () {\\n    if (this._delta === null) {\\n      const y = /** @type {Doc} */ (this.target.doc)\\n      /**\\n       * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\\n       */\\n      const delta = []\\n      transact(y, transaction => {\\n        const currentAttributes = new Map() // saves all current attributes for insert\\n        const oldAttributes = new Map()\\n        let item = this.target._start\\n        /**\\n         * @type {string?}\\n         */\\n        let action = null\\n        /**\\n         * @type {Object<string,any>}\\n         */\\n        const attributes = {} // counts added or removed new attributes for retain\\n        /**\\n         * @type {string|object}\\n         */\\n        let insert = ''\\n        let retain = 0\\n        let deleteLen = 0\\n        const addOp = () => {\\n          if (action !== null) {\\n            /**\\n             * @type {any}\\n             */\\n            let op\\n            switch (action) {\\n              case 'delete':\\n                op = { delete: deleteLen }\\n                deleteLen = 0\\n                break\\n              case 'insert':\\n                op = { insert }\\n                if (currentAttributes.size > 0) {\\n                  op.attributes = {}\\n                  currentAttributes.forEach((value, key) => {\\n                    if (value !== null) {\\n                      op.attributes[key] = value\\n                    }\\n                  })\\n                }\\n                insert = ''\\n                break\\n              case 'retain':\\n                op = { retain }\\n                if (Object.keys(attributes).length > 0) {\\n                  op.attributes = {}\\n                  for (const key in attributes) {\\n                    op.attributes[key] = attributes[key]\\n                  }\\n                }\\n                retain = 0\\n                break\\n            }\\n            delta.push(op)\\n            action = null\\n          }\\n        }\\n        while (item !== null) {\\n          switch (item.content.constructor) {\\n            case ContentEmbed:\\n              if (this.adds(item)) {\\n                if (!this.deletes(item)) {\\n                  addOp()\\n                  action = 'insert'\\n                  insert = /** @type {ContentEmbed} */ (item.content).embed\\n                  addOp()\\n                }\\n              } else if (this.deletes(item)) {\\n                if (action !== 'delete') {\\n                  addOp()\\n                  action = 'delete'\\n                }\\n                deleteLen += 1\\n              } else if (!item.deleted) {\\n                if (action !== 'retain') {\\n                  addOp()\\n                  action = 'retain'\\n                }\\n                retain += 1\\n              }\\n              break\\n            case ContentString:\\n              if (this.adds(item)) {\\n                if (!this.deletes(item)) {\\n                  if (action !== 'insert') {\\n                    addOp()\\n                    action = 'insert'\\n                  }\\n                  insert += /** @type {ContentString} */ (item.content).str\\n                }\\n              } else if (this.deletes(item)) {\\n                if (action !== 'delete') {\\n                  addOp()\\n                  action = 'delete'\\n                }\\n                deleteLen += item.length\\n              } else if (!item.deleted) {\\n                if (action !== 'retain') {\\n                  addOp()\\n                  action = 'retain'\\n                }\\n                retain += item.length\\n              }\\n              break\\n            case ContentFormat: {\\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\\n              if (this.adds(item)) {\\n                if (!this.deletes(item)) {\\n                  const curVal = currentAttributes.get(key) || null\\n                  if (!equalAttrs(curVal, value)) {\\n                    if (action === 'retain') {\\n                      addOp()\\n                    }\\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\\n                      delete attributes[key]\\n                    } else {\\n                      attributes[key] = value\\n                    }\\n                  } else {\\n                    item.delete(transaction)\\n                  }\\n                }\\n              } else if (this.deletes(item)) {\\n                oldAttributes.set(key, value)\\n                const curVal = currentAttributes.get(key) || null\\n                if (!equalAttrs(curVal, value)) {\\n                  if (action === 'retain') {\\n                    addOp()\\n                  }\\n                  attributes[key] = curVal\\n                }\\n              } else if (!item.deleted) {\\n                oldAttributes.set(key, value)\\n                const attr = attributes[key]\\n                if (attr !== undefined) {\\n                  if (!equalAttrs(attr, value)) {\\n                    if (action === 'retain') {\\n                      addOp()\\n                    }\\n                    if (value === null) {\\n                      attributes[key] = value\\n                    } else {\\n                      delete attributes[key]\\n                    }\\n                  } else {\\n                    item.delete(transaction)\\n                  }\\n                }\\n              }\\n              if (!item.deleted) {\\n                if (action === 'insert') {\\n                  addOp()\\n                }\\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\\n              }\\n              break\\n            }\\n          }\\n          item = item.right\\n        }\\n        addOp()\\n        while (delta.length > 0) {\\n          const lastOp = delta[delta.length - 1]\\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\\n            // retain delta's if they don't assign attributes\\n            delta.pop()\\n          } else {\\n            break\\n          }\\n        }\\n      })\\n      this._delta = delta\\n    }\\n    return /** @type {any} */ (this._delta)\\n  }\\n}\\n\\n/**\\n * Type that represents text with formatting information.\\n *\\n * This type replaces y-richtext as this implementation is able to handle\\n * block formats (format information on a paragraph), embeds (complex elements\\n * like pictures and videos), and text formats (**bold**, *italic*).\\n *\\n * @extends AbstractType<YTextEvent>\\n */\\nexport class YText extends AbstractType {\\n  /**\\n   * @param {String} [string] The initial value of the YText.\\n   */\\n  constructor (string) {\\n    super()\\n    /**\\n     * Array of pending operations on this type\\n     * @type {Array<function():void>?}\\n     */\\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\\n    /**\\n     * @type {Array<ArraySearchMarker>}\\n     */\\n    this._searchMarker = []\\n  }\\n\\n  /**\\n   * Number of characters of this text type.\\n   *\\n   * @type {number}\\n   */\\n  get length () {\\n    return this._length\\n  }\\n\\n  /**\\n   * @param {Doc} y\\n   * @param {Item} item\\n   */\\n  _integrate (y, item) {\\n    super._integrate(y, item)\\n    try {\\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\\n    } catch (e) {\\n      console.error(e)\\n    }\\n    this._pending = null\\n  }\\n\\n  _copy () {\\n    return new YText()\\n  }\\n\\n  /**\\n   * @return {YText}\\n   */\\n  clone () {\\n    const text = new YText()\\n    text.applyDelta(this.toDelta())\\n    return text\\n  }\\n\\n  /**\\n   * Creates YTextEvent and calls observers.\\n   *\\n   * @param {Transaction} transaction\\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\\n   */\\n  _callObserver (transaction, parentSubs) {\\n    super._callObserver(transaction, parentSubs)\\n    const event = new YTextEvent(this, transaction, parentSubs)\\n    const doc = transaction.doc\\n    callTypeObservers(this, transaction, event)\\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\\n    if (!transaction.local) {\\n      // check if another formatting item was inserted\\n      let foundFormattingItem = false\\n      for (const [client, afterClock] of transaction.afterState.entries()) {\\n        const clock = transaction.beforeState.get(client) || 0\\n        if (afterClock === clock) {\\n          continue\\n        }\\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\\n            foundFormattingItem = true\\n          }\\n        })\\n        if (foundFormattingItem) {\\n          break\\n        }\\n      }\\n      if (!foundFormattingItem) {\\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\\n          if (item instanceof GC || foundFormattingItem) {\\n            return\\n          }\\n          if (item.parent === this && item.content.constructor === ContentFormat) {\\n            foundFormattingItem = true\\n          }\\n        })\\n      }\\n      transact(doc, (t) => {\\n        if (foundFormattingItem) {\\n          // If a formatting item was inserted, we simply clean the whole type.\\n          // We need to compute currentAttributes for the current position anyway.\\n          cleanupYTextFormatting(this)\\n        } else {\\n          // If no formatting attribute was inserted, we can make due with contextless\\n          // formatting cleanups.\\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\\n          iterateDeletedStructs(t, t.deleteSet, item => {\\n            if (item instanceof GC) {\\n              return\\n            }\\n            if (item.parent === this) {\\n              cleanupContextlessFormattingGap(t, item)\\n            }\\n          })\\n        }\\n      })\\n    }\\n  }\\n\\n  /**\\n   * Returns the unformatted string representation of this YText type.\\n   *\\n   * @public\\n   */\\n  toString () {\\n    let str = ''\\n    /**\\n     * @type {Item|null}\\n     */\\n    let n = this._start\\n    while (n !== null) {\\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\\n        str += /** @type {ContentString} */ (n.content).str\\n      }\\n      n = n.right\\n    }\\n    return str\\n  }\\n\\n  /**\\n   * Returns the unformatted string representation of this YText type.\\n   *\\n   * @return {string}\\n   * @public\\n   */\\n  toJSON () {\\n    return this.toString()\\n  }\\n\\n  /**\\n   * Apply a {@link Delta} on this shared YText type.\\n   *\\n   * @param {any} delta The changes to apply on this element.\\n   * @param {object}  [opts]\\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\\n   *\\n   *\\n   * @public\\n   */\\n  applyDelta (delta, { sanitize = true } = {}) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\\n        for (let i = 0; i < delta.length; i++) {\\n          const op = delta[i]\\n          if (op.insert !== undefined) {\\n            // Quill assumes that the content starts with an empty paragraph.\\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\\n            // there is a newline at the end of the content.\\n            // If we omit this step, clients will see a different number of\\n            // paragraphs, but nothing bad will happen.\\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\\\n') ? op.insert.slice(0, -1) : op.insert\\n            if (typeof ins !== 'string' || ins.length > 0) {\\n              insertText(transaction, this, currPos, ins, op.attributes || {})\\n            }\\n          } else if (op.retain !== undefined) {\\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\\n          } else if (op.delete !== undefined) {\\n            deleteText(transaction, currPos, op.delete)\\n          }\\n        }\\n      })\\n    } else {\\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\\n    }\\n  }\\n\\n  /**\\n   * Returns the Delta representation of this YText type.\\n   *\\n   * @param {Snapshot} [snapshot]\\n   * @param {Snapshot} [prevSnapshot]\\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\\n   * @return {any} The Delta representation of this type.\\n   *\\n   * @public\\n   */\\n  toDelta (snapshot, prevSnapshot, computeYChange) {\\n    /**\\n     * @type{Array<any>}\\n     */\\n    const ops = []\\n    const currentAttributes = new Map()\\n    const doc = /** @type {Doc} */ (this.doc)\\n    let str = ''\\n    let n = this._start\\n    function packStr () {\\n      if (str.length > 0) {\\n        // pack str with attributes to ops\\n        /**\\n         * @type {Object<string,any>}\\n         */\\n        const attributes = {}\\n        let addAttributes = false\\n        currentAttributes.forEach((value, key) => {\\n          addAttributes = true\\n          attributes[key] = value\\n        })\\n        /**\\n         * @type {Object<string,any>}\\n         */\\n        const op = { insert: str }\\n        if (addAttributes) {\\n          op.attributes = attributes\\n        }\\n        ops.push(op)\\n        str = ''\\n      }\\n    }\\n    // snapshots are merged again after the transaction, so we need to keep the\\n    // transalive until we are done\\n    transact(doc, transaction => {\\n      if (snapshot) {\\n        splitSnapshotAffectedStructs(transaction, snapshot)\\n      }\\n      if (prevSnapshot) {\\n        splitSnapshotAffectedStructs(transaction, prevSnapshot)\\n      }\\n      while (n !== null) {\\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\\n          switch (n.content.constructor) {\\n            case ContentString: {\\n              const cur = currentAttributes.get('ychange')\\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\\n                  packStr()\\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\\n                }\\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\\n                  packStr()\\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\\n                }\\n              } else if (cur !== undefined) {\\n                packStr()\\n                currentAttributes.delete('ychange')\\n              }\\n              str += /** @type {ContentString} */ (n.content).str\\n              break\\n            }\\n            case ContentEmbed: {\\n              packStr()\\n              /**\\n               * @type {Object<string,any>}\\n               */\\n              const op = {\\n                insert: /** @type {ContentEmbed} */ (n.content).embed\\n              }\\n              if (currentAttributes.size > 0) {\\n                const attrs = /** @type {Object<string,any>} */ ({})\\n                op.attributes = attrs\\n                currentAttributes.forEach((value, key) => {\\n                  attrs[key] = value\\n                })\\n              }\\n              ops.push(op)\\n              break\\n            }\\n            case ContentFormat:\\n              if (isVisible(n, snapshot)) {\\n                packStr()\\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\\n              }\\n              break\\n          }\\n        }\\n        n = n.right\\n      }\\n      packStr()\\n    }, splitSnapshotAffectedStructs)\\n    return ops\\n  }\\n\\n  /**\\n   * Insert text at a given index.\\n   *\\n   * @param {number} index The index at which to start inserting.\\n   * @param {String} text The text to insert at the specified position.\\n   * @param {TextAttributes} [attributes] Optionally define some formatting\\n   *                                    information to apply on the inserted\\n   *                                    Text.\\n   * @public\\n   */\\n  insert (index, text, attributes) {\\n    if (text.length <= 0) {\\n      return\\n    }\\n    const y = this.doc\\n    if (y !== null) {\\n      transact(y, transaction => {\\n        const pos = findPosition(transaction, this, index)\\n        if (!attributes) {\\n          attributes = {}\\n          // @ts-ignore\\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\\n        }\\n        insertText(transaction, this, pos, text, attributes)\\n      })\\n    } else {\\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\\n    }\\n  }\\n\\n  /**\\n   * Inserts an embed at a index.\\n   *\\n   * @param {number} index The index to insert the embed at.\\n   * @param {Object} embed The Object that represents the embed.\\n   * @param {TextAttributes} attributes Attribute information to apply on the\\n   *                                    embed\\n   *\\n   * @public\\n   */\\n  insertEmbed (index, embed, attributes = {}) {\\n    if (embed.constructor !== Object) {\\n      throw new Error('Embed must be an Object')\\n    }\\n    const y = this.doc\\n    if (y !== null) {\\n      transact(y, transaction => {\\n        const pos = findPosition(transaction, this, index)\\n        insertText(transaction, this, pos, embed, attributes)\\n      })\\n    } else {\\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\\n    }\\n  }\\n\\n  /**\\n   * Deletes text starting from an index.\\n   *\\n   * @param {number} index Index at which to start deleting.\\n   * @param {number} length The number of characters to remove. Defaults to 1.\\n   *\\n   * @public\\n   */\\n  delete (index, length) {\\n    if (length === 0) {\\n      return\\n    }\\n    const y = this.doc\\n    if (y !== null) {\\n      transact(y, transaction => {\\n        deleteText(transaction, findPosition(transaction, this, index), length)\\n      })\\n    } else {\\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\\n    }\\n  }\\n\\n  /**\\n   * Assigns properties to a range of text.\\n   *\\n   * @param {number} index The position where to start formatting.\\n   * @param {number} length The amount of characters to assign properties to.\\n   * @param {TextAttributes} attributes Attribute information to apply on the\\n   *                                    text.\\n   *\\n   * @public\\n   */\\n  format (index, length, attributes) {\\n    if (length === 0) {\\n      return\\n    }\\n    const y = this.doc\\n    if (y !== null) {\\n      transact(y, transaction => {\\n        const pos = findPosition(transaction, this, index)\\n        if (pos.right === null) {\\n          return\\n        }\\n        formatText(transaction, this, pos, length, attributes)\\n      })\\n    } else {\\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\\n    }\\n  }\\n\\n  /**\\n   * Removes an attribute.\\n   *\\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\\n   *\\n   * @param {String} attributeName The attribute name that is to be removed.\\n   *\\n   * @public\\n   */\\n  removeAttribute (attributeName) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeMapDelete(transaction, this, attributeName)\\n      })\\n    } else {\\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\\n    }\\n  }\\n\\n  /**\\n   * Sets or updates an attribute.\\n   *\\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\\n   *\\n   * @param {String} attributeName The attribute name that is to be set.\\n   * @param {any} attributeValue The attribute value that is to be set.\\n   *\\n   * @public\\n   */\\n  setAttribute (attributeName, attributeValue) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeMapSet(transaction, this, attributeName, attributeValue)\\n      })\\n    } else {\\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\\n    }\\n  }\\n\\n  /**\\n   * Returns an attribute value that belongs to the attribute name.\\n   *\\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\\n   *\\n   * @param {String} attributeName The attribute name that identifies the\\n   *                               queried value.\\n   * @return {any} The queried attribute value.\\n   *\\n   * @public\\n   */\\n  getAttribute (attributeName) {\\n    return /** @type {any} */ (typeMapGet(this, attributeName))\\n  }\\n\\n  /**\\n   * Returns all attribute name/value pairs in a JSON Object.\\n   *\\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\\n   *\\n   * @param {Snapshot} [snapshot]\\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\\n   *\\n   * @public\\n   */\\n  getAttributes (snapshot) {\\n    return typeMapGetAll(this)\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   */\\n  _write (encoder) {\\n    encoder.writeTypeRef(YTextRefID)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {YText}\\n *\\n * @private\\n * @function\\n */\\nexport const readYText = decoder => new YText()\\n\",\"/**\\n * @module YXml\\n */\\n\\nimport {\\n  YXmlEvent,\\n  YXmlElement,\\n  AbstractType,\\n  typeListMap,\\n  typeListForEach,\\n  typeListInsertGenerics,\\n  typeListInsertGenericsAfter,\\n  typeListDelete,\\n  typeListToArray,\\n  YXmlFragmentRefID,\\n  callTypeObservers,\\n  transact,\\n  typeListGet,\\n  typeListSlice,\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook, Snapshot // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\n\\n/**\\n * Define the elements to which a set of CSS queries apply.\\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\\n *\\n * @example\\n *   query = '.classSelector'\\n *   query = 'nodeSelector'\\n *   query = '#idSelector'\\n *\\n * @typedef {string} CSS_Selector\\n */\\n\\n/**\\n * Dom filter function.\\n *\\n * @callback domFilter\\n * @param {string} nodeName The nodeName of the element\\n * @param {Map} attributes The map of attributes.\\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\\n */\\n\\n/**\\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\\n * position within them.\\n *\\n * Can be created with {@link YXmlFragment#createTreeWalker}\\n *\\n * @public\\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\\n */\\nexport class YXmlTreeWalker {\\n  /**\\n   * @param {YXmlFragment | YXmlElement} root\\n   * @param {function(AbstractType<any>):boolean} [f]\\n   */\\n  constructor (root, f = () => true) {\\n    this._filter = f\\n    this._root = root\\n    /**\\n     * @type {Item}\\n     */\\n    this._currentNode = /** @type {Item} */ (root._start)\\n    this._firstCall = true\\n  }\\n\\n  [Symbol.iterator] () {\\n    return this\\n  }\\n\\n  /**\\n   * Get the next node.\\n   *\\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\\n   *\\n   * @public\\n   */\\n  next () {\\n    /**\\n     * @type {Item|null}\\n     */\\n    let n = this._currentNode\\n    let type = n && n.content && /** @type {any} */ (n.content).type\\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\\n      do {\\n        type = /** @type {any} */ (n.content).type\\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\\n          // walk down in the tree\\n          n = type._start\\n        } else {\\n          // walk right or up in the tree\\n          while (n !== null) {\\n            if (n.right !== null) {\\n              n = n.right\\n              break\\n            } else if (n.parent === this._root) {\\n              n = null\\n            } else {\\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\\n            }\\n          }\\n        }\\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\\n    }\\n    this._firstCall = false\\n    if (n === null) {\\n      // @ts-ignore\\n      return { value: undefined, done: true }\\n    }\\n    this._currentNode = n\\n    return { value: /** @type {any} */ (n.content).type, done: false }\\n  }\\n}\\n\\n/**\\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\\n * nodeName and it does not have attributes. Though it can be bound to a DOM\\n * element - in this case the attributes and the nodeName are not shared.\\n *\\n * @public\\n * @extends AbstractType<YXmlEvent>\\n */\\nexport class YXmlFragment extends AbstractType {\\n  constructor () {\\n    super()\\n    /**\\n     * @type {Array<any>|null}\\n     */\\n    this._prelimContent = []\\n  }\\n\\n  /**\\n   * @type {YXmlElement|YXmlText|null}\\n   */\\n  get firstChild () {\\n    const first = this._first\\n    return first ? first.content.getContent()[0] : null\\n  }\\n\\n  /**\\n   * Integrate this type into the Yjs instance.\\n   *\\n   * * Save this struct in the os\\n   * * This type is sent to other client\\n   * * Observer functions are fired\\n   *\\n   * @param {Doc} y The Yjs instance\\n   * @param {Item} item\\n   */\\n  _integrate (y, item) {\\n    super._integrate(y, item)\\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\\n    this._prelimContent = null\\n  }\\n\\n  _copy () {\\n    return new YXmlFragment()\\n  }\\n\\n  /**\\n   * @return {YXmlFragment}\\n   */\\n  clone () {\\n    const el = new YXmlFragment()\\n    // @ts-ignore\\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\\n    return el\\n  }\\n\\n  get length () {\\n    return this._prelimContent === null ? this._length : this._prelimContent.length\\n  }\\n\\n  /**\\n   * Create a subtree of childNodes.\\n   *\\n   * @example\\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\\n   * for (let node in walker) {\\n   *   // `node` is a div node\\n   *   nop(node)\\n   * }\\n   *\\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\\n   *                          returns a Boolean indicating whether the child\\n   *                          is to be included in the subtree.\\n   * @return {YXmlTreeWalker} A subtree and a position within it.\\n   *\\n   * @public\\n   */\\n  createTreeWalker (filter) {\\n    return new YXmlTreeWalker(this, filter)\\n  }\\n\\n  /**\\n   * Returns the first YXmlElement that matches the query.\\n   * Similar to DOM's {@link querySelector}.\\n   *\\n   * Query support:\\n   *   - tagname\\n   * TODO:\\n   *   - id\\n   *   - attribute\\n   *\\n   * @param {CSS_Selector} query The query on the children.\\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\\n   *\\n   * @public\\n   */\\n  querySelector (query) {\\n    query = query.toUpperCase()\\n    // @ts-ignore\\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\\n    const next = iterator.next()\\n    if (next.done) {\\n      return null\\n    } else {\\n      return next.value\\n    }\\n  }\\n\\n  /**\\n   * Returns all YXmlElements that match the query.\\n   * Similar to Dom's {@link querySelectorAll}.\\n   *\\n   * @todo Does not yet support all queries. Currently only query by tagName.\\n   *\\n   * @param {CSS_Selector} query The query on the children\\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\\n   *\\n   * @public\\n   */\\n  querySelectorAll (query) {\\n    query = query.toUpperCase()\\n    // @ts-ignore\\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\\n  }\\n\\n  /**\\n   * Creates YXmlEvent and calls observers.\\n   *\\n   * @param {Transaction} transaction\\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\\n   */\\n  _callObserver (transaction, parentSubs) {\\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\\n  }\\n\\n  /**\\n   * Get the string representation of all the children of this YXmlFragment.\\n   *\\n   * @return {string} The string representation of all children.\\n   */\\n  toString () {\\n    return typeListMap(this, xml => xml.toString()).join('')\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  toJSON () {\\n    return this.toString()\\n  }\\n\\n  /**\\n   * Creates a Dom Element that mirrors this YXmlElement.\\n   *\\n   * @param {Document} [_document=document] The document object (you must define\\n   *                                        this when calling this method in\\n   *                                        nodejs)\\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\\n   *                                             are presented in the DOM\\n   * @param {any} [binding] You should not set this property. This is\\n   *                               used if DomBinding wants to create a\\n   *                               association to the created DOM type.\\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\\n   *\\n   * @public\\n   */\\n  toDOM (_document = document, hooks = {}, binding) {\\n    const fragment = _document.createDocumentFragment()\\n    if (binding !== undefined) {\\n      binding._createAssociation(fragment, this)\\n    }\\n    typeListForEach(this, xmlType => {\\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\\n    })\\n    return fragment\\n  }\\n\\n  /**\\n   * Inserts new content at an index.\\n   *\\n   * @example\\n   *  // Insert character 'a' at position 0\\n   *  xml.insert(0, [new Y.XmlText('text')])\\n   *\\n   * @param {number} index The index to insert content at\\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\\n   */\\n  insert (index, content) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeListInsertGenerics(transaction, this, index, content)\\n      })\\n    } else {\\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\\n      this._prelimContent.splice(index, 0, ...content)\\n    }\\n  }\\n\\n  /**\\n   * Inserts new content at an index.\\n   *\\n   * @example\\n   *  // Insert character 'a' at position 0\\n   *  xml.insert(0, [new Y.XmlText('text')])\\n   *\\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\\n   */\\n  insertAfter (ref, content) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\\n      })\\n    } else {\\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\\n      if (index === 0 && ref !== null) {\\n        throw error.create('Reference item not found')\\n      }\\n      pc.splice(index, 0, ...content)\\n    }\\n  }\\n\\n  /**\\n   * Deletes elements starting from an index.\\n   *\\n   * @param {number} index Index at which to start deleting elements\\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\\n   */\\n  delete (index, length = 1) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeListDelete(transaction, this, index, length)\\n      })\\n    } else {\\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\\n      this._prelimContent.splice(index, length)\\n    }\\n  }\\n\\n  /**\\n   * Transforms this YArray to a JavaScript Array.\\n   *\\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\\n   */\\n  toArray () {\\n    return typeListToArray(this)\\n  }\\n\\n  /**\\n   * Appends content to this YArray.\\n   *\\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\\n   */\\n  push (content) {\\n    this.insert(this.length, content)\\n  }\\n\\n  /**\\n   * Preppends content to this YArray.\\n   *\\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\\n   */\\n  unshift (content) {\\n    this.insert(0, content)\\n  }\\n\\n  /**\\n   * Returns the i-th element from a YArray.\\n   *\\n   * @param {number} index The index of the element to return from the YArray\\n   * @return {YXmlElement|YXmlText}\\n   */\\n  get (index) {\\n    return typeListGet(this, index)\\n  }\\n\\n  /**\\n   * Transforms this YArray to a JavaScript Array.\\n   *\\n   * @param {number} [start]\\n   * @param {number} [end]\\n   * @return {Array<YXmlElement|YXmlText>}\\n   */\\n  slice (start = 0, end = this.length) {\\n    return typeListSlice(this, start, end)\\n  }\\n\\n  /**\\n   * Transform the properties of this type to binary and write it to an\\n   * BinaryEncoder.\\n   *\\n   * This is called when this Item is sent to a remote peer.\\n   *\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\\n   */\\n  _write (encoder) {\\n    encoder.writeTypeRef(YXmlFragmentRefID)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {YXmlFragment}\\n *\\n * @private\\n * @function\\n */\\nexport const readYXmlFragment = decoder => new YXmlFragment()\\n\",\"\\nimport {\\n  YXmlFragment,\\n  transact,\\n  typeMapDelete,\\n  typeMapHas,\\n  typeMapSet,\\n  typeMapGet,\\n  typeMapGetAll,\\n  typeListForEach,\\n  YXmlElementRefID,\\n  YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Snapshot, Doc, Item // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * An YXmlElement imitates the behavior of a\\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\\n *\\n * * An YXmlElement has attributes (key value pairs)\\n * * An YXmlElement has childElements that must inherit from YXmlElement\\n */\\nexport class YXmlElement extends YXmlFragment {\\n  constructor (nodeName = 'UNDEFINED') {\\n    super()\\n    this.nodeName = nodeName\\n    /**\\n     * @type {Map<string, any>|null}\\n     */\\n    this._prelimAttrs = new Map()\\n  }\\n\\n  /**\\n   * @type {YXmlElement|YXmlText|null}\\n   */\\n  get nextSibling () {\\n    const n = this._item ? this._item.next : null\\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\\n  }\\n\\n  /**\\n   * @type {YXmlElement|YXmlText|null}\\n   */\\n  get prevSibling () {\\n    const n = this._item ? this._item.prev : null\\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\\n  }\\n\\n  /**\\n   * Integrate this type into the Yjs instance.\\n   *\\n   * * Save this struct in the os\\n   * * This type is sent to other client\\n   * * Observer functions are fired\\n   *\\n   * @param {Doc} y The Yjs instance\\n   * @param {Item} item\\n   */\\n  _integrate (y, item) {\\n    super._integrate(y, item)\\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\\n      this.setAttribute(key, value)\\n    })\\n    this._prelimAttrs = null\\n  }\\n\\n  /**\\n   * Creates an Item with the same effect as this Item (without position effect)\\n   *\\n   * @return {YXmlElement}\\n   */\\n  _copy () {\\n    return new YXmlElement(this.nodeName)\\n  }\\n\\n  /**\\n   * @return {YXmlElement}\\n   */\\n  clone () {\\n    const el = new YXmlElement(this.nodeName)\\n    const attrs = this.getAttributes()\\n    for (const key in attrs) {\\n      el.setAttribute(key, attrs[key])\\n    }\\n    // @ts-ignore\\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\\n    return el\\n  }\\n\\n  /**\\n   * Returns the XML serialization of this YXmlElement.\\n   * The attributes are ordered by attribute-name, so you can easily use this\\n   * method to compare YXmlElements\\n   *\\n   * @return {string} The string representation of this type.\\n   *\\n   * @public\\n   */\\n  toString () {\\n    const attrs = this.getAttributes()\\n    const stringBuilder = []\\n    const keys = []\\n    for (const key in attrs) {\\n      keys.push(key)\\n    }\\n    keys.sort()\\n    const keysLen = keys.length\\n    for (let i = 0; i < keysLen; i++) {\\n      const key = keys[i]\\n      stringBuilder.push(key + '=\\\"' + attrs[key] + '\\\"')\\n    }\\n    const nodeName = this.nodeName.toLocaleLowerCase()\\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\\n  }\\n\\n  /**\\n   * Removes an attribute from this YXmlElement.\\n   *\\n   * @param {String} attributeName The attribute name that is to be removed.\\n   *\\n   * @public\\n   */\\n  removeAttribute (attributeName) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeMapDelete(transaction, this, attributeName)\\n      })\\n    } else {\\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\\n    }\\n  }\\n\\n  /**\\n   * Sets or updates an attribute.\\n   *\\n   * @param {String} attributeName The attribute name that is to be set.\\n   * @param {String} attributeValue The attribute value that is to be set.\\n   *\\n   * @public\\n   */\\n  setAttribute (attributeName, attributeValue) {\\n    if (this.doc !== null) {\\n      transact(this.doc, transaction => {\\n        typeMapSet(transaction, this, attributeName, attributeValue)\\n      })\\n    } else {\\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\\n    }\\n  }\\n\\n  /**\\n   * Returns an attribute value that belongs to the attribute name.\\n   *\\n   * @param {String} attributeName The attribute name that identifies the\\n   *                               queried value.\\n   * @return {String} The queried attribute value.\\n   *\\n   * @public\\n   */\\n  getAttribute (attributeName) {\\n    return /** @type {any} */ (typeMapGet(this, attributeName))\\n  }\\n\\n  /**\\n   * Returns whether an attribute exists\\n   *\\n   * @param {String} attributeName The attribute name to check for existence.\\n   * @return {boolean} whether the attribute exists.\\n   *\\n   * @public\\n   */\\n  hasAttribute (attributeName) {\\n    return /** @type {any} */ (typeMapHas(this, attributeName))\\n  }\\n\\n  /**\\n   * Returns all attribute name/value pairs in a JSON Object.\\n   *\\n   * @param {Snapshot} [snapshot]\\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\\n   *\\n   * @public\\n   */\\n  getAttributes (snapshot) {\\n    return typeMapGetAll(this)\\n  }\\n\\n  /**\\n   * Creates a Dom Element that mirrors this YXmlElement.\\n   *\\n   * @param {Document} [_document=document] The document object (you must define\\n   *                                        this when calling this method in\\n   *                                        nodejs)\\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\\n   *                                             are presented in the DOM\\n   * @param {any} [binding] You should not set this property. This is\\n   *                               used if DomBinding wants to create a\\n   *                               association to the created DOM type.\\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\\n   *\\n   * @public\\n   */\\n  toDOM (_document = document, hooks = {}, binding) {\\n    const dom = _document.createElement(this.nodeName)\\n    const attrs = this.getAttributes()\\n    for (const key in attrs) {\\n      dom.setAttribute(key, attrs[key])\\n    }\\n    typeListForEach(this, yxml => {\\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\\n    })\\n    if (binding !== undefined) {\\n      binding._createAssociation(dom, this)\\n    }\\n    return dom\\n  }\\n\\n  /**\\n   * Transform the properties of this type to binary and write it to an\\n   * BinaryEncoder.\\n   *\\n   * This is called when this Item is sent to a remote peer.\\n   *\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\\n   */\\n  _write (encoder) {\\n    encoder.writeTypeRef(YXmlElementRefID)\\n    encoder.writeKey(this.nodeName)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {YXmlElement}\\n *\\n * @function\\n */\\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\\n\",\"\\nimport {\\n  YEvent,\\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * An Event that describes changes on a YXml Element or Yxml Fragment\\n */\\nexport class YXmlEvent extends YEvent {\\n  /**\\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\\n   *                   child list changed.\\n   * @param {Transaction} transaction The transaction instance with wich the\\n   *                                  change was created.\\n   */\\n  constructor (target, subs, transaction) {\\n    super(target, transaction)\\n    /**\\n     * Whether the children changed.\\n     * @type {Boolean}\\n     * @private\\n     */\\n    this.childListChanged = false\\n    /**\\n     * Set of all changed attributes.\\n     * @type {Set<string>}\\n     */\\n    this.attributesChanged = new Set()\\n    subs.forEach((sub) => {\\n      if (sub === null) {\\n        this.childListChanged = true\\n      } else {\\n        this.attributesChanged.add(sub)\\n      }\\n    })\\n  }\\n}\\n\",\"\\nimport {\\n  YMap,\\n  YXmlHookRefID,\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * You can manage binding to a custom type with YXmlHook.\\n *\\n * @extends {YMap<any>}\\n */\\nexport class YXmlHook extends YMap {\\n  /**\\n   * @param {string} hookName nodeName of the Dom Node.\\n   */\\n  constructor (hookName) {\\n    super()\\n    /**\\n     * @type {string}\\n     */\\n    this.hookName = hookName\\n  }\\n\\n  /**\\n   * Creates an Item with the same effect as this Item (without position effect)\\n   */\\n  _copy () {\\n    return new YXmlHook(this.hookName)\\n  }\\n\\n  /**\\n   * @return {YXmlHook}\\n   */\\n  clone () {\\n    const el = new YXmlHook(this.hookName)\\n    this.forEach((value, key) => {\\n      el.set(key, value)\\n    })\\n    return el\\n  }\\n\\n  /**\\n   * Creates a Dom Element that mirrors this YXmlElement.\\n   *\\n   * @param {Document} [_document=document] The document object (you must define\\n   *                                        this when calling this method in\\n   *                                        nodejs)\\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\\n   *                                             are presented in the DOM\\n   * @param {any} [binding] You should not set this property. This is\\n   *                               used if DomBinding wants to create a\\n   *                               association to the created DOM type\\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\\n   *\\n   * @public\\n   */\\n  toDOM (_document = document, hooks = {}, binding) {\\n    const hook = hooks[this.hookName]\\n    let dom\\n    if (hook !== undefined) {\\n      dom = hook.createDom(this)\\n    } else {\\n      dom = document.createElement(this.hookName)\\n    }\\n    dom.setAttribute('data-yjs-hook', this.hookName)\\n    if (binding !== undefined) {\\n      binding._createAssociation(dom, this)\\n    }\\n    return dom\\n  }\\n\\n  /**\\n   * Transform the properties of this type to binary and write it to an\\n   * BinaryEncoder.\\n   *\\n   * This is called when this Item is sent to a remote peer.\\n   *\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\\n   */\\n  _write (encoder) {\\n    encoder.writeTypeRef(YXmlHookRefID)\\n    encoder.writeKey(this.hookName)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {YXmlHook}\\n *\\n * @private\\n * @function\\n */\\nexport const readYXmlHook = decoder =>\\n  new YXmlHook(decoder.readKey())\\n\",\"\\nimport {\\n  YText,\\n  YXmlTextRefID,\\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * Represents text in a Dom Element. In the future this type will also handle\\n * simple formatting information like bold and italic.\\n */\\nexport class YXmlText extends YText {\\n  /**\\n   * @type {YXmlElement|YXmlText|null}\\n   */\\n  get nextSibling () {\\n    const n = this._item ? this._item.next : null\\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\\n  }\\n\\n  /**\\n   * @type {YXmlElement|YXmlText|null}\\n   */\\n  get prevSibling () {\\n    const n = this._item ? this._item.prev : null\\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\\n  }\\n\\n  _copy () {\\n    return new YXmlText()\\n  }\\n\\n  /**\\n   * @return {YXmlText}\\n   */\\n  clone () {\\n    const text = new YXmlText()\\n    text.applyDelta(this.toDelta())\\n    return text\\n  }\\n\\n  /**\\n   * Creates a Dom Element that mirrors this YXmlText.\\n   *\\n   * @param {Document} [_document=document] The document object (you must define\\n   *                                        this when calling this method in\\n   *                                        nodejs)\\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\\n   *                                             are presented in the DOM\\n   * @param {any} [binding] You should not set this property. This is\\n   *                               used if DomBinding wants to create a\\n   *                               association to the created DOM type.\\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\\n   *\\n   * @public\\n   */\\n  toDOM (_document = document, hooks, binding) {\\n    const dom = _document.createTextNode(this.toString())\\n    if (binding !== undefined) {\\n      binding._createAssociation(dom, this)\\n    }\\n    return dom\\n  }\\n\\n  toString () {\\n    // @ts-ignore\\n    return this.toDelta().map(delta => {\\n      const nestedNodes = []\\n      for (const nodeName in delta.attributes) {\\n        const attrs = []\\n        for (const key in delta.attributes[nodeName]) {\\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\\n        }\\n        // sort attributes to get a unique order\\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\\n        nestedNodes.push({ nodeName, attrs })\\n      }\\n      // sort node order to get a unique order\\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\\n      // now convert to dom string\\n      let str = ''\\n      for (let i = 0; i < nestedNodes.length; i++) {\\n        const node = nestedNodes[i]\\n        str += `<${node.nodeName}`\\n        for (let j = 0; j < node.attrs.length; j++) {\\n          const attr = node.attrs[j]\\n          str += ` ${attr.key}=\\\"${attr.value}\\\"`\\n        }\\n        str += '>'\\n      }\\n      str += delta.insert\\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\\n        str += `</${nestedNodes[i].nodeName}>`\\n      }\\n      return str\\n    }).join('')\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  toJSON () {\\n    return this.toString()\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   */\\n  _write (encoder) {\\n    encoder.writeTypeRef(YXmlTextRefID)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {YXmlText}\\n *\\n * @private\\n * @function\\n */\\nexport const readYXmlText = decoder => new YXmlText()\\n\",\"\\nimport {\\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\n\\nexport class AbstractStruct {\\n  /**\\n   * @param {ID} id\\n   * @param {number} length\\n   */\\n  constructor (id, length) {\\n    this.id = id\\n    this.length = length\\n  }\\n\\n  /**\\n   * @type {boolean}\\n   */\\n  get deleted () {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * Merge this struct with the item to the right.\\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\\n   * Also this method does *not* remove right from StructStore!\\n   * @param {AbstractStruct} right\\n   * @return {boolean} wether this merged with right\\n   */\\n  mergeWith (right) {\\n    return false\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\\n   * @param {number} offset\\n   * @param {number} encodingRef\\n   */\\n  write (encoder, offset, encodingRef) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {number} offset\\n   */\\n  integrate (transaction, offset) {\\n    throw error.methodUnimplemented()\\n  }\\n}\\n\",\"\\nimport {\\n  AbstractStruct,\\n  addStruct,\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\\n} from '../internals.js'\\n\\nexport const structGCRefNumber = 0\\n\\n/**\\n * @private\\n */\\nexport class GC extends AbstractStruct {\\n  get deleted () {\\n    return true\\n  }\\n\\n  delete () {}\\n\\n  /**\\n   * @param {GC} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    if (this.constructor !== right.constructor) {\\n      return false\\n    }\\n    this.length += right.length\\n    return true\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {number} offset\\n   */\\n  integrate (transaction, offset) {\\n    if (offset > 0) {\\n      this.id.clock += offset\\n      this.length -= offset\\n    }\\n    addStruct(transaction.doc.store, this)\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeInfo(structGCRefNumber)\\n    encoder.writeLen(this.length - offset)\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {StructStore} store\\n   * @return {null | number}\\n   */\\n  getMissing (transaction, store) {\\n    return null\\n  }\\n}\\n\",\"import {\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\n\\nexport class ContentBinary {\\n  /**\\n   * @param {Uint8Array} content\\n   */\\n  constructor (content) {\\n    this.content = content\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return 1\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return [this.content]\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return true\\n  }\\n\\n  /**\\n   * @return {ContentBinary}\\n   */\\n  copy () {\\n    return new ContentBinary(this.content)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentBinary}\\n   */\\n  splice (offset) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {ContentBinary} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    return false\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {}\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {}\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {}\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeBuf(this.content)\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 3\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\\n * @return {ContentBinary}\\n */\\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\\n\",\"\\nimport {\\n  addToDeleteSet,\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\nexport class ContentDeleted {\\n  /**\\n   * @param {number} len\\n   */\\n  constructor (len) {\\n    this.len = len\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return this.len\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return []\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return false\\n  }\\n\\n  /**\\n   * @return {ContentDeleted}\\n   */\\n  copy () {\\n    return new ContentDeleted(this.len)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentDeleted}\\n   */\\n  splice (offset) {\\n    const right = new ContentDeleted(this.len - offset)\\n    this.len = offset\\n    return right\\n  }\\n\\n  /**\\n   * @param {ContentDeleted} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    this.len += right.len\\n    return true\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {\\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\\n    item.markDeleted()\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {}\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {}\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeLen(this.len - offset)\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 1\\n  }\\n}\\n\\n/**\\n * @private\\n *\\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\\n * @return {ContentDeleted}\\n */\\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\\n\",\"\\nimport {\\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\n\\n/**\\n * @private\\n */\\nexport class ContentDoc {\\n  /**\\n   * @param {Doc} doc\\n   */\\n  constructor (doc) {\\n    if (doc._item) {\\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\\n    }\\n    /**\\n     * @type {Doc}\\n     */\\n    this.doc = doc\\n    /**\\n     * @type {any}\\n     */\\n    const opts = {}\\n    this.opts = opts\\n    if (!doc.gc) {\\n      opts.gc = false\\n    }\\n    if (doc.autoLoad) {\\n      opts.autoLoad = true\\n    }\\n    if (doc.meta !== null) {\\n      opts.meta = doc.meta\\n    }\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return 1\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return [this.doc]\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return true\\n  }\\n\\n  /**\\n   * @return {ContentDoc}\\n   */\\n  copy () {\\n    return new ContentDoc(this.doc)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentDoc}\\n   */\\n  splice (offset) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {ContentDoc} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    return false\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {\\n    // this needs to be reflected in doc.destroy as well\\n    this.doc._item = item\\n    transaction.subdocsAdded.add(this.doc)\\n    if (this.doc.shouldLoad) {\\n      transaction.subdocsLoaded.add(this.doc)\\n    }\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {\\n    if (transaction.subdocsAdded.has(this.doc)) {\\n      transaction.subdocsAdded.delete(this.doc)\\n    } else {\\n      transaction.subdocsRemoved.add(this.doc)\\n    }\\n  }\\n\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) { }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeString(this.doc.guid)\\n    encoder.writeAny(this.opts)\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 9\\n  }\\n}\\n\\n/**\\n * @private\\n *\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {ContentDoc}\\n */\\nexport const readContentDoc = decoder => new ContentDoc(new Doc({ guid: decoder.readString(), ...decoder.readAny() }))\\n\",\"\\nimport {\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\n\\n/**\\n * @private\\n */\\nexport class ContentEmbed {\\n  /**\\n   * @param {Object} embed\\n   */\\n  constructor (embed) {\\n    this.embed = embed\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return 1\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return [this.embed]\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return true\\n  }\\n\\n  /**\\n   * @return {ContentEmbed}\\n   */\\n  copy () {\\n    return new ContentEmbed(this.embed)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentEmbed}\\n   */\\n  splice (offset) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {ContentEmbed} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    return false\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {}\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {}\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {}\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeJSON(this.embed)\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 5\\n  }\\n}\\n\\n/**\\n * @private\\n *\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {ContentEmbed}\\n */\\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\\n\",\"\\nimport {\\n  AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\n\\n/**\\n * @private\\n */\\nexport class ContentFormat {\\n  /**\\n   * @param {string} key\\n   * @param {Object} value\\n   */\\n  constructor (key, value) {\\n    this.key = key\\n    this.value = value\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return 1\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return []\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return false\\n  }\\n\\n  /**\\n   * @return {ContentFormat}\\n   */\\n  copy () {\\n    return new ContentFormat(this.key, this.value)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentFormat}\\n   */\\n  splice (offset) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {ContentFormat} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    return false\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {\\n    // @todo searchmarker are currently unsupported for rich text documents\\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {}\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {}\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeKey(this.key)\\n    encoder.writeJSON(this.value)\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 6\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {ContentFormat}\\n */\\nexport const readContentFormat = decoder => new ContentFormat(decoder.readString(), decoder.readJSON())\\n\",\"import {\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * @private\\n */\\nexport class ContentJSON {\\n  /**\\n   * @param {Array<any>} arr\\n   */\\n  constructor (arr) {\\n    /**\\n     * @type {Array<any>}\\n     */\\n    this.arr = arr\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return this.arr.length\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return this.arr\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return true\\n  }\\n\\n  /**\\n   * @return {ContentJSON}\\n   */\\n  copy () {\\n    return new ContentJSON(this.arr)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentJSON}\\n   */\\n  splice (offset) {\\n    const right = new ContentJSON(this.arr.slice(offset))\\n    this.arr = this.arr.slice(0, offset)\\n    return right\\n  }\\n\\n  /**\\n   * @param {ContentJSON} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    this.arr = this.arr.concat(right.arr)\\n    return true\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {}\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {}\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {}\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    const len = this.arr.length\\n    encoder.writeLen(len - offset)\\n    for (let i = offset; i < len; i++) {\\n      const c = this.arr[i]\\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\\n    }\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 2\\n  }\\n}\\n\\n/**\\n * @private\\n *\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {ContentJSON}\\n */\\nexport const readContentJSON = decoder => {\\n  const len = decoder.readLen()\\n  const cs = []\\n  for (let i = 0; i < len; i++) {\\n    const c = decoder.readString()\\n    if (c === 'undefined') {\\n      cs.push(undefined)\\n    } else {\\n      cs.push(JSON.parse(c))\\n    }\\n  }\\n  return new ContentJSON(cs)\\n}\\n\",\"import {\\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\\n} from '../internals.js'\\n\\nexport class ContentAny {\\n  /**\\n   * @param {Array<any>} arr\\n   */\\n  constructor (arr) {\\n    /**\\n     * @type {Array<any>}\\n     */\\n    this.arr = arr\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return this.arr.length\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return this.arr\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return true\\n  }\\n\\n  /**\\n   * @return {ContentAny}\\n   */\\n  copy () {\\n    return new ContentAny(this.arr)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentAny}\\n   */\\n  splice (offset) {\\n    const right = new ContentAny(this.arr.slice(offset))\\n    this.arr = this.arr.slice(0, offset)\\n    return right\\n  }\\n\\n  /**\\n   * @param {ContentAny} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    this.arr = this.arr.concat(right.arr)\\n    return true\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {}\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {}\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {}\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    const len = this.arr.length\\n    encoder.writeLen(len - offset)\\n    for (let i = offset; i < len; i++) {\\n      const c = this.arr[i]\\n      encoder.writeAny(c)\\n    }\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 8\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {ContentAny}\\n */\\nexport const readContentAny = decoder => {\\n  const len = decoder.readLen()\\n  const cs = []\\n  for (let i = 0; i < len; i++) {\\n    cs.push(decoder.readAny())\\n  }\\n  return new ContentAny(cs)\\n}\\n\",\"import {\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\\n} from '../internals.js'\\n\\n/**\\n * @private\\n */\\nexport class ContentString {\\n  /**\\n   * @param {string} str\\n   */\\n  constructor (str) {\\n    /**\\n     * @type {string}\\n     */\\n    this.str = str\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return this.str.length\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return this.str.split('')\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return true\\n  }\\n\\n  /**\\n   * @return {ContentString}\\n   */\\n  copy () {\\n    return new ContentString(this.str)\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentString}\\n   */\\n  splice (offset) {\\n    const right = new ContentString(this.str.slice(offset))\\n    this.str = this.str.slice(0, offset)\\n\\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\\n    const firstCharCode = this.str.charCodeAt(offset - 1)\\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\\n      this.str = this.str.slice(0, offset - 1) + '�'\\n      // replace right as well\\n      right.str = '�' + right.str.slice(1)\\n    }\\n    return right\\n  }\\n\\n  /**\\n   * @param {ContentString} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    this.str += right.str\\n    return true\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {}\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {}\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {}\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 4\\n  }\\n}\\n\\n/**\\n * @private\\n *\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {ContentString}\\n */\\nexport const readContentString = decoder => new ContentString(decoder.readString())\\n\",\"\\nimport {\\n  readYArray,\\n  readYMap,\\n  readYText,\\n  readYXmlElement,\\n  readYXmlFragment,\\n  readYXmlHook,\\n  readYXmlText,\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\n\\n/**\\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\\n * @private\\n */\\nexport const typeRefs = [\\n  readYArray,\\n  readYMap,\\n  readYText,\\n  readYXmlElement,\\n  readYXmlFragment,\\n  readYXmlHook,\\n  readYXmlText\\n]\\n\\nexport const YArrayRefID = 0\\nexport const YMapRefID = 1\\nexport const YTextRefID = 2\\nexport const YXmlElementRefID = 3\\nexport const YXmlFragmentRefID = 4\\nexport const YXmlHookRefID = 5\\nexport const YXmlTextRefID = 6\\n\\n/**\\n * @private\\n */\\nexport class ContentType {\\n  /**\\n   * @param {AbstractType<YEvent>} type\\n   */\\n  constructor (type) {\\n    /**\\n     * @type {AbstractType<any>}\\n     */\\n    this.type = type\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    return 1\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    return [this.type]\\n  }\\n\\n  /**\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    return true\\n  }\\n\\n  /**\\n   * @return {ContentType}\\n   */\\n  copy () {\\n    return new ContentType(this.type._copy())\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {ContentType}\\n   */\\n  splice (offset) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {ContentType} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    return false\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {\\n    this.type._integrate(transaction.doc, item)\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {\\n    let item = this.type._start\\n    while (item !== null) {\\n      if (!item.deleted) {\\n        item.delete(transaction)\\n      } else {\\n        // Whis will be gc'd later and we want to merge it if possible\\n        // We try to merge all deleted items after each transaction,\\n        // but we have no knowledge about that this needs to be merged\\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\\n        transaction._mergeStructs.push(item)\\n      }\\n      item = item.right\\n    }\\n    this.type._map.forEach(item => {\\n      if (!item.deleted) {\\n        item.delete(transaction)\\n      } else {\\n        // same as above\\n        transaction._mergeStructs.push(item)\\n      }\\n    })\\n    transaction.changed.delete(this.type)\\n  }\\n\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {\\n    let item = this.type._start\\n    while (item !== null) {\\n      item.gc(store, true)\\n      item = item.right\\n    }\\n    this.type._start = null\\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\\n      while (item !== null) {\\n        item.gc(store, true)\\n        item = item.left\\n      }\\n    })\\n    this.type._map = new Map()\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    this.type._write(encoder)\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    return 7\\n  }\\n}\\n\\n/**\\n * @private\\n *\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @return {ContentType}\\n */\\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\\n\",\"\\nimport {\\n  GC,\\n  getState,\\n  AbstractStruct,\\n  replaceStruct,\\n  addStruct,\\n  addToDeleteSet,\\n  findRootTypeKey,\\n  compareIDs,\\n  getItem,\\n  getItemCleanEnd,\\n  getItemCleanStart,\\n  readContentDeleted,\\n  readContentBinary,\\n  readContentJSON,\\n  readContentAny,\\n  readContentString,\\n  readContentEmbed,\\n  readContentDoc,\\n  createID,\\n  readContentFormat,\\n  readContentType,\\n  addChangedTypeToTransaction,\\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\\n} from '../internals.js'\\n\\nimport * as error from 'lib0/error'\\nimport * as binary from 'lib0/binary'\\n\\n/**\\n * @todo This should return several items\\n *\\n * @param {StructStore} store\\n * @param {ID} id\\n * @return {{item:Item, diff:number}}\\n */\\nexport const followRedone = (store, id) => {\\n  /**\\n   * @type {ID|null}\\n   */\\n  let nextID = id\\n  let diff = 0\\n  let item\\n  do {\\n    if (diff > 0) {\\n      nextID = createID(nextID.client, nextID.clock + diff)\\n    }\\n    item = getItem(store, nextID)\\n    diff = nextID.clock - item.id.clock\\n    nextID = item.redone\\n  } while (nextID !== null && item instanceof Item)\\n  return {\\n    item, diff\\n  }\\n}\\n\\n/**\\n * Make sure that neither item nor any of its parents is ever deleted.\\n *\\n * This property does not persist when storing it into a database or when\\n * sending it to other peers\\n *\\n * @param {Item|null} item\\n * @param {boolean} keep\\n */\\nexport const keepItem = (item, keep) => {\\n  while (item !== null && item.keep !== keep) {\\n    item.keep = keep\\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\\n  }\\n}\\n\\n/**\\n * Split leftItem into two items\\n * @param {Transaction} transaction\\n * @param {Item} leftItem\\n * @param {number} diff\\n * @return {Item}\\n *\\n * @function\\n * @private\\n */\\nexport const splitItem = (transaction, leftItem, diff) => {\\n  // create rightItem\\n  const { client, clock } = leftItem.id\\n  const rightItem = new Item(\\n    createID(client, clock + diff),\\n    leftItem,\\n    createID(client, clock + diff - 1),\\n    leftItem.right,\\n    leftItem.rightOrigin,\\n    leftItem.parent,\\n    leftItem.parentSub,\\n    leftItem.content.splice(diff)\\n  )\\n  if (leftItem.deleted) {\\n    rightItem.markDeleted()\\n  }\\n  if (leftItem.keep) {\\n    rightItem.keep = true\\n  }\\n  if (leftItem.redone !== null) {\\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\\n  }\\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\\n  leftItem.right = rightItem\\n  // update right\\n  if (rightItem.right !== null) {\\n    rightItem.right.left = rightItem\\n  }\\n  // right is more specific.\\n  transaction._mergeStructs.push(rightItem)\\n  // update parent._map\\n  if (rightItem.parentSub !== null && rightItem.right === null) {\\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\\n  }\\n  leftItem.length = diff\\n  return rightItem\\n}\\n\\n/**\\n * Redoes the effect of this operation.\\n *\\n * @param {Transaction} transaction The Yjs instance.\\n * @param {Item} item\\n * @param {Set<Item>} redoitems\\n *\\n * @return {Item|null}\\n *\\n * @private\\n */\\nexport const redoItem = (transaction, item, redoitems) => {\\n  const doc = transaction.doc\\n  const store = doc.store\\n  const ownClientID = doc.clientID\\n  const redone = item.redone\\n  if (redone !== null) {\\n    return getItemCleanStart(transaction, redone)\\n  }\\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\\n  /**\\n   * @type {Item|null}\\n   */\\n  let left\\n  /**\\n   * @type {Item|null}\\n   */\\n  let right\\n  if (item.parentSub === null) {\\n    // Is an array item. Insert at the old position\\n    left = item.left\\n    right = item\\n  } else {\\n    // Is a map item. Insert as current value\\n    left = item\\n    while (left.right !== null) {\\n      left = left.right\\n      if (left.id.client !== ownClientID) {\\n        // It is not possible to redo this item because it conflicts with a\\n        // change from another client\\n        return null\\n      }\\n    }\\n    if (left.right !== null) {\\n      left = /** @type {Item} */ (/** @type {AbstractType<any>} */ (item.parent)._map.get(item.parentSub))\\n    }\\n    right = null\\n  }\\n  // make sure that parent is redone\\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\\n    // try to undo parent if it will be undone anyway\\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems) === null) {\\n      return null\\n    }\\n  }\\n  if (parentItem !== null && parentItem.redone !== null) {\\n    while (parentItem.redone !== null) {\\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\\n    }\\n    // find next cloned_redo items\\n    while (left !== null) {\\n      /**\\n       * @type {Item|null}\\n       */\\n      let leftTrace = left\\n      // trace redone until parent matches\\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\\n      }\\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\\n        left = leftTrace\\n        break\\n      }\\n      left = left.left\\n    }\\n    while (right !== null) {\\n      /**\\n       * @type {Item|null}\\n       */\\n      let rightTrace = right\\n      // trace redone until parent matches\\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\\n      }\\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\\n        right = rightTrace\\n        break\\n      }\\n      right = right.right\\n    }\\n  }\\n  const nextClock = getState(store, ownClientID)\\n  const nextId = createID(ownClientID, nextClock)\\n  const redoneItem = new Item(\\n    nextId,\\n    left, left && left.lastId,\\n    right, right && right.id,\\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\\n    item.parentSub,\\n    item.content.copy()\\n  )\\n  item.redone = nextId\\n  keepItem(redoneItem, true)\\n  redoneItem.integrate(transaction, 0)\\n  return redoneItem\\n}\\n\\n/**\\n * Abstract class that represents any content.\\n */\\nexport class Item extends AbstractStruct {\\n  /**\\n   * @param {ID} id\\n   * @param {Item | null} left\\n   * @param {ID | null} origin\\n   * @param {Item | null} right\\n   * @param {ID | null} rightOrigin\\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\\n   * @param {string | null} parentSub\\n   * @param {AbstractContent} content\\n   */\\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\\n    super(id, content.getLength())\\n    /**\\n     * The item that was originally to the left of this item.\\n     * @type {ID | null}\\n     */\\n    this.origin = origin\\n    /**\\n     * The item that is currently to the left of this item.\\n     * @type {Item | null}\\n     */\\n    this.left = left\\n    /**\\n     * The item that is currently to the right of this item.\\n     * @type {Item | null}\\n     */\\n    this.right = right\\n    /**\\n     * The item that was originally to the right of this item.\\n     * @type {ID | null}\\n     */\\n    this.rightOrigin = rightOrigin\\n    /**\\n     * @type {AbstractType<any>|ID|null}\\n     */\\n    this.parent = parent\\n    /**\\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\\n     * key is specified here. The key is then used to refer to the list in which\\n     * to insert this item. If `parentSub = null` type._start is the list in\\n     * which to insert to. Otherwise it is `parent._map`.\\n     * @type {String | null}\\n     */\\n    this.parentSub = parentSub\\n    /**\\n     * If this type's effect is reundone this type refers to the type that undid\\n     * this operation.\\n     * @type {ID | null}\\n     */\\n    this.redone = null\\n    /**\\n     * @type {AbstractContent}\\n     */\\n    this.content = content\\n    /**\\n     * bit1: keep\\n     * bit2: countable\\n     * bit3: deleted\\n     * bit4: mark - mark node as fast-search-marker\\n     * @type {number} byte\\n     */\\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\\n  }\\n\\n  /**\\n   * This is used to mark the item as an indexed fast-search marker\\n   *\\n   * @type {boolean}\\n   */\\n  set marker (isMarked) {\\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\\n      this.info ^= binary.BIT4\\n    }\\n  }\\n\\n  get marker () {\\n    return (this.info & binary.BIT4) > 0\\n  }\\n\\n  /**\\n   * If true, do not garbage collect this Item.\\n   */\\n  get keep () {\\n    return (this.info & binary.BIT1) > 0\\n  }\\n\\n  set keep (doKeep) {\\n    if (this.keep !== doKeep) {\\n      this.info ^= binary.BIT1\\n    }\\n  }\\n\\n  get countable () {\\n    return (this.info & binary.BIT2) > 0\\n  }\\n\\n  /**\\n   * Whether this item was deleted or not.\\n   * @type {Boolean}\\n   */\\n  get deleted () {\\n    return (this.info & binary.BIT3) > 0\\n  }\\n\\n  set deleted (doDelete) {\\n    if (this.deleted !== doDelete) {\\n      this.info ^= binary.BIT3\\n    }\\n  }\\n\\n  markDeleted () {\\n    this.info |= binary.BIT3\\n  }\\n\\n  /**\\n   * Return the creator clientID of the missing op or define missing items and return null.\\n   *\\n   * @param {Transaction} transaction\\n   * @param {StructStore} store\\n   * @return {null | number}\\n   */\\n  getMissing (transaction, store) {\\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\\n      return this.origin.client\\n    }\\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\\n      return this.rightOrigin.client\\n    }\\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\\n      return this.parent.client\\n    }\\n\\n    // We have all missing ids, now find the items\\n\\n    if (this.origin) {\\n      this.left = getItemCleanEnd(transaction, store, this.origin)\\n      this.origin = this.left.lastId\\n    }\\n    if (this.rightOrigin) {\\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\\n      this.rightOrigin = this.right.id\\n    }\\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\\n      this.parent = null\\n    }\\n    // only set parent if this shouldn't be garbage collected\\n    if (!this.parent) {\\n      if (this.left && this.left.constructor === Item) {\\n        this.parent = this.left.parent\\n        this.parentSub = this.left.parentSub\\n      }\\n      if (this.right && this.right.constructor === Item) {\\n        this.parent = this.right.parent\\n        this.parentSub = this.right.parentSub\\n      }\\n    } else if (this.parent.constructor === ID) {\\n      const parentItem = getItem(store, this.parent)\\n      if (parentItem.constructor === GC) {\\n        this.parent = null\\n      } else {\\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\\n      }\\n    }\\n    return null\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {number} offset\\n   */\\n  integrate (transaction, offset) {\\n    if (offset > 0) {\\n      this.id.clock += offset\\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\\n      this.origin = this.left.lastId\\n      this.content = this.content.splice(offset)\\n      this.length -= offset\\n    }\\n\\n    if (this.parent) {\\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\\n        /**\\n         * @type {Item|null}\\n         */\\n        let left = this.left\\n\\n        /**\\n         * @type {Item|null}\\n         */\\n        let o\\n        // set o to the first conflicting item\\n        if (left !== null) {\\n          o = left.right\\n        } else if (this.parentSub !== null) {\\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\\n          while (o !== null && o.left !== null) {\\n            o = o.left\\n          }\\n        } else {\\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\\n        }\\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\\n        // @todo use global set definitions\\n        /**\\n         * @type {Set<Item>}\\n         */\\n        const conflictingItems = new Set()\\n        /**\\n         * @type {Set<Item>}\\n         */\\n        const itemsBeforeOrigin = new Set()\\n        // Let c in conflictingItems, b in itemsBeforeOrigin\\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\\n        while (o !== null && o !== this.right) {\\n          itemsBeforeOrigin.add(o)\\n          conflictingItems.add(o)\\n          if (compareIDs(this.origin, o.origin)) {\\n            // case 1\\n            if (o.id.client < this.id.client) {\\n              left = o\\n              conflictingItems.clear()\\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\\n              // Since this is to the left of o, we can break here\\n              break\\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\\n            // case 2\\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\\n              left = o\\n              conflictingItems.clear()\\n            }\\n          } else {\\n            break\\n          }\\n          o = o.right\\n        }\\n        this.left = left\\n      }\\n      // reconnect left/right + update parent map/start if necessary\\n      if (this.left !== null) {\\n        const right = this.left.right\\n        this.right = right\\n        this.left.right = this\\n      } else {\\n        let r\\n        if (this.parentSub !== null) {\\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\\n          while (r !== null && r.left !== null) {\\n            r = r.left\\n          }\\n        } else {\\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\\n        }\\n        this.right = r\\n      }\\n      if (this.right !== null) {\\n        this.right.left = this\\n      } else if (this.parentSub !== null) {\\n        // set as current parent value if right === null and this is parentSub\\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\\n        if (this.left !== null) {\\n          // this is the current attribute value of parent. delete right\\n          this.left.delete(transaction)\\n        }\\n      }\\n      // adjust length of parent\\n      if (this.parentSub === null && this.countable && !this.deleted) {\\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\\n      }\\n      addStruct(transaction.doc.store, this)\\n      this.content.integrate(transaction, this)\\n      // add parent to transaction.changed\\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\\n        // delete if parent is deleted or if this is not the current attribute value of parent\\n        this.delete(transaction)\\n      }\\n    } else {\\n      // parent is not defined. Integrate GC struct instead\\n      new GC(this.id, this.length).integrate(transaction, 0)\\n    }\\n  }\\n\\n  /**\\n   * Returns the next non-deleted item\\n   */\\n  get next () {\\n    let n = this.right\\n    while (n !== null && n.deleted) {\\n      n = n.right\\n    }\\n    return n\\n  }\\n\\n  /**\\n   * Returns the previous non-deleted item\\n   */\\n  get prev () {\\n    let n = this.left\\n    while (n !== null && n.deleted) {\\n      n = n.left\\n    }\\n    return n\\n  }\\n\\n  /**\\n   * Computes the last content address of this Item.\\n   */\\n  get lastId () {\\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\\n  }\\n\\n  /**\\n   * Try to merge two items\\n   *\\n   * @param {Item} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    if (\\n      this.constructor === right.constructor &&\\n      compareIDs(right.origin, this.lastId) &&\\n      this.right === right &&\\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\\n      this.id.client === right.id.client &&\\n      this.id.clock + this.length === right.id.clock &&\\n      this.deleted === right.deleted &&\\n      this.redone === null &&\\n      right.redone === null &&\\n      this.content.constructor === right.content.constructor &&\\n      this.content.mergeWith(right.content)\\n    ) {\\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\\n      if (searchMarker) {\\n        searchMarker.forEach(marker => {\\n          if (marker.p === right) {\\n            // right is going to be \\\"forgotten\\\" so we need to update the marker\\n            marker.p = this\\n            // adjust marker index\\n            if (!this.deleted && this.countable) {\\n              marker.index -= this.length\\n            }\\n          }\\n        })\\n      }\\n      if (right.keep) {\\n        this.keep = true\\n      }\\n      this.right = right.right\\n      if (this.right !== null) {\\n        this.right.left = this\\n      }\\n      this.length += right.length\\n      return true\\n    }\\n    return false\\n  }\\n\\n  /**\\n   * Mark this Item as deleted.\\n   *\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {\\n    if (!this.deleted) {\\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\\n      // adjust the length of parent\\n      if (this.countable && this.parentSub === null) {\\n        parent._length -= this.length\\n      }\\n      this.markDeleted()\\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\\n      this.content.delete(transaction)\\n    }\\n  }\\n\\n  /**\\n   * @param {StructStore} store\\n   * @param {boolean} parentGCd\\n   */\\n  gc (store, parentGCd) {\\n    if (!this.deleted) {\\n      throw error.unexpectedCase()\\n    }\\n    this.content.gc(store)\\n    if (parentGCd) {\\n      replaceStruct(store, this, new GC(this.id, this.length))\\n    } else {\\n      this.content = new ContentDeleted(this.length)\\n    }\\n  }\\n\\n  /**\\n   * Transform the properties of this type to binary and write it to an\\n   * BinaryEncoder.\\n   *\\n   * This is called when this Item is sent to a remote peer.\\n   *\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\\n    const rightOrigin = this.rightOrigin\\n    const parentSub = this.parentSub\\n    const info = (this.content.getRef() & binary.BITS5) |\\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\\n    encoder.writeInfo(info)\\n    if (origin !== null) {\\n      encoder.writeLeftID(origin)\\n    }\\n    if (rightOrigin !== null) {\\n      encoder.writeRightID(rightOrigin)\\n    }\\n    if (origin === null && rightOrigin === null) {\\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\\n      if (parent._item !== undefined) {\\n        const parentItem = parent._item\\n        if (parentItem === null) {\\n          // parent type on y._map\\n          // find the correct key\\n          const ykey = findRootTypeKey(parent)\\n          encoder.writeParentInfo(true) // write parentYKey\\n          encoder.writeString(ykey)\\n        } else {\\n          encoder.writeParentInfo(false) // write parent id\\n          encoder.writeLeftID(parentItem.id)\\n        }\\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\\n        encoder.writeParentInfo(true) // write parentYKey\\n        encoder.writeString(parent)\\n      } else if (parent.constructor === ID) {\\n        encoder.writeParentInfo(false) // write parent id\\n        encoder.writeLeftID(parent)\\n      } else {\\n        error.unexpectedCase()\\n      }\\n      if (parentSub !== null) {\\n        encoder.writeString(parentSub)\\n      }\\n    }\\n    this.content.write(encoder, offset)\\n  }\\n}\\n\\n/**\\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\\n * @param {number} info\\n */\\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\\n\\n/**\\n * A lookup map for reading Item content.\\n *\\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\\n */\\nexport const contentRefs = [\\n  () => { error.unexpectedCase() }, // GC is not ItemContent\\n  readContentDeleted, // 1\\n  readContentJSON, // 2\\n  readContentBinary, // 3\\n  readContentString, // 4\\n  readContentEmbed, // 5\\n  readContentFormat, // 6\\n  readContentType, // 7\\n  readContentAny, // 8\\n  readContentDoc, // 9\\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\\n]\\n\\n/**\\n * Do not implement this class!\\n */\\nexport class AbstractContent {\\n  /**\\n   * @return {number}\\n   */\\n  getLength () {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @return {Array<any>}\\n   */\\n  getContent () {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * Should return false if this Item is some kind of meta information\\n   * (e.g. format information).\\n   *\\n   * * Whether this Item should be addressable via `yarray.get(i)`\\n   * * Whether this Item should be counted when computing yarray.length\\n   *\\n   * @return {boolean}\\n   */\\n  isCountable () {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @return {AbstractContent}\\n   */\\n  copy () {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {number} offset\\n   * @return {AbstractContent}\\n   */\\n  splice (offset) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {AbstractContent} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {Item} item\\n   */\\n  integrate (transaction, item) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   */\\n  delete (transaction) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {StructStore} store\\n   */\\n  gc (store) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    throw error.methodUnimplemented()\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  getRef () {\\n    throw error.methodUnimplemented()\\n  }\\n}\\n\",\"\\nimport {\\n  AbstractStruct,\\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\\n} from '../internals.js'\\nimport * as error from 'lib0/error'\\nimport * as encoding from 'lib0/encoding'\\n\\nexport const structSkipRefNumber = 10\\n\\n/**\\n * @private\\n */\\nexport class Skip extends AbstractStruct {\\n  get deleted () {\\n    return true\\n  }\\n\\n  delete () {}\\n\\n  /**\\n   * @param {Skip} right\\n   * @return {boolean}\\n   */\\n  mergeWith (right) {\\n    if (this.constructor !== right.constructor) {\\n      return false\\n    }\\n    this.length += right.length\\n    return true\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {number} offset\\n   */\\n  integrate (transaction, offset) {\\n    // skip structs cannot be integrated\\n    error.unexpectedCase()\\n  }\\n\\n  /**\\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\\n   * @param {number} offset\\n   */\\n  write (encoder, offset) {\\n    encoder.writeInfo(structSkipRefNumber)\\n    // write as VarUint because Skips can't make use of predictable length-encoding\\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\\n  }\\n\\n  /**\\n   * @param {Transaction} transaction\\n   * @param {StructStore} store\\n   * @return {null | number}\\n   */\\n  getMissing (transaction, store) {\\n    return null\\n  }\\n}\\n\"],\"names\":[\"Observable\",\"math.floor\",\"math.max\",\"array.appendTo\",\"map.setIfUndefined\",\"encoding.writeVarUint\",\"decoding.readVarUint\",\"random.uint32\",\"random.uuidv4\",\"array.from\",\"decoding.readUint8\",\"decoding.readVarString\",\"decoding.readAny\",\"buffer.copyUint8Array\",\"decoding.readVarUint8Array\",\"decoding.IntDiffOptRleDecoder\",\"decoding.UintOptRleDecoder\",\"decoding.RleDecoder\",\"decoding.StringDecoder\",\"encoding.createEncoder\",\"encoding.toUint8Array\",\"encoding.writeUint8\",\"encoding.writeVarString\",\"encoding.writeAny\",\"encoding.writeVarUint8Array\",\"error.unexpectedCase\",\"encoding.IntDiffOptRleEncoder\",\"encoding.UintOptRleEncoder\",\"encoding.RleEncoder\",\"encoding.StringEncoder\",\"encoding.writeUint8Array\",\"map.create\",\"binary.BITS5\",\"binary.BIT7\",\"binary.BIT8\",\"binary.BIT6\",\"decoding.createDecoder\",\"f.callAll\",\"encoding.writeVarInt\",\"decoding.hasContent\",\"decoding.readVarInt\",\"set.create\",\"map.any\",\"math.min\",\"callAll\",\"logging.print\",\"logging.ORANGE\",\"logging.BOLD\",\"logging.UNBOLD\",\"logging.RED\",\"time.getUnixTime\",\"encoding.writeBinaryEncoder\",\"array.last\",\"math.abs\",\"error.methodUnimplemented\",\"error.create\",\"iterator.iteratorFilter\",\"iterator.iteratorMap\",\"object.equalFlat\",\"map.copy\",\"binary.BIT2\",\"binary.BIT4\",\"binary.BIT1\",\"binary.BIT3\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/yjs.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/yjs","version":"13.5.12"},"$:/plugins/commons/yjs/auth.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar encoding = require('./lib0/dist/encoding.cjs');\nvar decoding = require('./lib0/dist/decoding.cjs');\nrequire('./yjs.cjs');\n\nconst messagePermissionDenied = 0;\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nconst writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied);\n  encoding.writeVarString(encoder, reason);\n};\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\nconst readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder));\n  }\n};\n\nexports.messagePermissionDenied = messagePermissionDenied;\nexports.readAuthMessage = readAuthMessage;\nexports.writePermissionDenied = writePermissionDenied;\n///# sourceMappingURL=auth.cjs.map\n","title":"$:/plugins/commons/yjs/auth.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/auth.cjs.map":{"text":"{\"version\":3,\"file\":\"auth.cjs\",\"sources\":[\"../auth.js\"],\"sourcesContent\":[\"\\nimport * as Y from 'yjs' // eslint-disable-line\\nimport * as encoding from 'lib0/encoding'\\nimport * as decoding from 'lib0/decoding'\\n\\nexport const messagePermissionDenied = 0\\n\\n/**\\n * @param {encoding.Encoder} encoder\\n * @param {string} reason\\n */\\nexport const writePermissionDenied = (encoder, reason) => {\\n  encoding.writeVarUint(encoder, messagePermissionDenied)\\n  encoding.writeVarString(encoder, reason)\\n}\\n\\n/**\\n * @callback PermissionDeniedHandler\\n * @param {any} y\\n * @param {string} reason\\n */\\n\\n/**\\n *\\n * @param {decoding.Decoder} decoder\\n * @param {Y.Doc} y\\n * @param {PermissionDeniedHandler} permissionDeniedHandler\\n */\\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\\n  switch (decoding.readVarUint(decoder)) {\\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\\n  }\\n}\\n\"],\"names\":[\"encoding.writeVarUint\",\"encoding.writeVarString\",\"decoding.readVarUint\",\"decoding.readVarString\"],\"mappings\":\";;;;;;;;AAKY,MAAC,uBAAuB,GAAG,EAAC;AACxC;AACA;AACA;AACA;AACA;AACY,MAAC,qBAAqB,GAAG,CAAC,OAAO,EAAE,MAAM,KAAK;AAC1D,EAAEA,qBAAqB,CAAC,OAAO,EAAE,uBAAuB,EAAC;AACzD,EAAEC,uBAAuB,CAAC,OAAO,EAAE,MAAM,EAAC;AAC1C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,uBAAuB,KAAK;AACxE,EAAE,QAAQC,oBAAoB,CAAC,OAAO,CAAC;AACvC,IAAI,KAAK,uBAAuB,EAAE,uBAAuB,CAAC,CAAC,EAAEC,sBAAsB,CAAC,OAAO,CAAC,EAAC;AAC7F,GAAG;AACH;;;;;;\"}","title":"$:/plugins/commons/yjs/auth.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/awareness.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar encoding = require('./lib0/dist/encoding.cjs');\nvar decoding = require('./lib0/dist/decoding.cjs');\nvar time = require('./lib0/dist/time.cjs');\nvar math = require('./lib0/dist/math.cjs');\nvar observable = require('./lib0/dist/observable.cjs');\nvar f = require('./lib0/dist/function.cjs');\nrequire('./yjs.cjs');\n\n/**\n * @module awareness-protocol\n */\n\nconst outdatedTimeout = 30000;\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nclass Awareness extends observable.Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super();\n    this.doc = doc;\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID;\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map();\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map();\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime();\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState());\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = [];\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid);\n        }\n      });\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout');\n      }\n    }, math.floor(outdatedTimeout / 10)));\n    doc.on('destroy', () => {\n      this.destroy();\n    });\n    this.setLocalState({});\n  }\n\n  destroy () {\n    this.emit('destroy', [this]);\n    this.setLocalState(null);\n    super.destroy();\n    clearInterval(this._checkInterval);\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID;\n    const currLocalMeta = this.meta.get(clientID);\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1;\n    const prevState = this.states.get(clientID);\n    if (state === null) {\n      this.states.delete(clientID);\n    } else {\n      this.states.set(clientID, state);\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    });\n    const added = [];\n    const updated = [];\n    const filteredUpdated = [];\n    const removed = [];\n    if (state === null) {\n      removed.push(clientID);\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID);\n      }\n    } else {\n      updated.push(clientID);\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID);\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local']);\n    }\n    this.emit('update', [{ added, updated, removed }, 'local']);\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState();\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      });\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nconst removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = [];\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i];\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID);\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID));\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        });\n      }\n      removed.push(clientID);\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin]);\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin]);\n  }\n};\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nconst encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length;\n  const encoder = encoding.createEncoder();\n  encoding.writeVarUint(encoder, len);\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i];\n    const state = states.get(clientID) || null;\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock;\n    encoding.writeVarUint(encoder, clientID);\n    encoding.writeVarUint(encoder, clock);\n    encoding.writeVarString(encoder, JSON.stringify(state));\n  }\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nconst modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update);\n  const encoder = encoding.createEncoder();\n  const len = decoding.readVarUint(decoder);\n  encoding.writeVarUint(encoder, len);\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder);\n    const clock = decoding.readVarUint(decoder);\n    const state = JSON.parse(decoding.readVarString(decoder));\n    const modifiedState = modify(state);\n    encoding.writeVarUint(encoder, clientID);\n    encoding.writeVarUint(encoder, clock);\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState));\n  }\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nconst applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update);\n  const timestamp = time.getUnixTime();\n  const added = [];\n  const updated = [];\n  const filteredUpdated = [];\n  const removed = [];\n  const len = decoding.readVarUint(decoder);\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder);\n    let clock = decoding.readVarUint(decoder);\n    const state = JSON.parse(decoding.readVarString(decoder));\n    const clientMeta = awareness.meta.get(clientID);\n    const prevState = awareness.states.get(clientID);\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock;\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++;\n        } else {\n          awareness.states.delete(clientID);\n        }\n      } else {\n        awareness.states.set(clientID, state);\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      });\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID);\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID);\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID);\n        }\n        updated.push(clientID);\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin]);\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin]);\n  }\n};\n\nexports.Awareness = Awareness;\nexports.applyAwarenessUpdate = applyAwarenessUpdate;\nexports.encodeAwarenessUpdate = encodeAwarenessUpdate;\nexports.modifyAwarenessUpdate = modifyAwarenessUpdate;\nexports.outdatedTimeout = outdatedTimeout;\nexports.removeAwarenessStates = removeAwarenessStates;\n///# sourceMappingURL=awareness.cjs.map\n","title":"$:/plugins/commons/yjs/awareness.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/awareness.cjs.map":{"text":"{\"version\":3,\"file\":\"awareness.cjs\",\"sources\":[\"../awareness.js\"],\"sourcesContent\":[\"/**\\n * @module awareness-protocol\\n */\\n\\nimport * as encoding from 'lib0/encoding'\\nimport * as decoding from 'lib0/decoding'\\nimport * as time from 'lib0/time'\\nimport * as math from 'lib0/math'\\nimport { Observable } from 'lib0/observable'\\nimport * as f from 'lib0/function'\\nimport * as Y from 'yjs' // eslint-disable-line\\n\\nexport const outdatedTimeout = 30000\\n\\n/**\\n * @typedef {Object} MetaClientState\\n * @property {number} MetaClientState.clock\\n * @property {number} MetaClientState.lastUpdated unix timestamp\\n */\\n\\n/**\\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\\n *\\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\\n * a remote client is offline, it may propagate a message with\\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\\n *\\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\\n *\\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\\n *\\n * @extends {Observable<string>}\\n */\\nexport class Awareness extends Observable {\\n  /**\\n   * @param {Y.Doc} doc\\n   */\\n  constructor (doc) {\\n    super()\\n    this.doc = doc\\n    /**\\n     * @type {number}\\n     */\\n    this.clientID = doc.clientID\\n    /**\\n     * Maps from client id to client state\\n     * @type {Map<number, Object<string, any>>}\\n     */\\n    this.states = new Map()\\n    /**\\n     * @type {Map<number, MetaClientState>}\\n     */\\n    this.meta = new Map()\\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\\n      const now = time.getUnixTime()\\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\\n        // renew local clock\\n        this.setLocalState(this.getLocalState())\\n      }\\n      /**\\n       * @type {Array<number>}\\n       */\\n      const remove = []\\n      this.meta.forEach((meta, clientid) => {\\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\\n          remove.push(clientid)\\n        }\\n      })\\n      if (remove.length > 0) {\\n        removeAwarenessStates(this, remove, 'timeout')\\n      }\\n    }, math.floor(outdatedTimeout / 10)))\\n    doc.on('destroy', () => {\\n      this.destroy()\\n    })\\n    this.setLocalState({})\\n  }\\n\\n  destroy () {\\n    this.emit('destroy', [this])\\n    this.setLocalState(null)\\n    super.destroy()\\n    clearInterval(this._checkInterval)\\n  }\\n\\n  /**\\n   * @return {Object<string,any>|null}\\n   */\\n  getLocalState () {\\n    return this.states.get(this.clientID) || null\\n  }\\n\\n  /**\\n   * @param {Object<string,any>|null} state\\n   */\\n  setLocalState (state) {\\n    const clientID = this.clientID\\n    const currLocalMeta = this.meta.get(clientID)\\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\\n    const prevState = this.states.get(clientID)\\n    if (state === null) {\\n      this.states.delete(clientID)\\n    } else {\\n      this.states.set(clientID, state)\\n    }\\n    this.meta.set(clientID, {\\n      clock,\\n      lastUpdated: time.getUnixTime()\\n    })\\n    const added = []\\n    const updated = []\\n    const filteredUpdated = []\\n    const removed = []\\n    if (state === null) {\\n      removed.push(clientID)\\n    } else if (prevState == null) {\\n      if (state != null) {\\n        added.push(clientID)\\n      }\\n    } else {\\n      updated.push(clientID)\\n      if (!f.equalityDeep(prevState, state)) {\\n        filteredUpdated.push(clientID)\\n      }\\n    }\\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\\n    }\\n    this.emit('update', [{ added, updated, removed }, 'local'])\\n  }\\n\\n  /**\\n   * @param {string} field\\n   * @param {any} value\\n   */\\n  setLocalStateField (field, value) {\\n    const state = this.getLocalState()\\n    if (state !== null) {\\n      this.setLocalState({\\n        ...state,\\n        [field]: value\\n      })\\n    }\\n  }\\n\\n  /**\\n   * @return {Map<number,Object<string,any>>}\\n   */\\n  getStates () {\\n    return this.states\\n  }\\n}\\n\\n/**\\n * Mark (remote) clients as inactive and remove them from the list of active peers.\\n * This change will be propagated to remote clients.\\n *\\n * @param {Awareness} awareness\\n * @param {Array<number>} clients\\n * @param {any} origin\\n */\\nexport const removeAwarenessStates = (awareness, clients, origin) => {\\n  const removed = []\\n  for (let i = 0; i < clients.length; i++) {\\n    const clientID = clients[i]\\n    if (awareness.states.has(clientID)) {\\n      awareness.states.delete(clientID)\\n      if (clientID === awareness.clientID) {\\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\\n        awareness.meta.set(clientID, {\\n          clock: curMeta.clock + 1,\\n          lastUpdated: time.getUnixTime()\\n        })\\n      }\\n      removed.push(clientID)\\n    }\\n  }\\n  if (removed.length > 0) {\\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\\n  }\\n}\\n\\n/**\\n * @param {Awareness} awareness\\n * @param {Array<number>} clients\\n * @return {Uint8Array}\\n */\\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\\n  const len = clients.length\\n  const encoder = encoding.createEncoder()\\n  encoding.writeVarUint(encoder, len)\\n  for (let i = 0; i < len; i++) {\\n    const clientID = clients[i]\\n    const state = states.get(clientID) || null\\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\\n    encoding.writeVarUint(encoder, clientID)\\n    encoding.writeVarUint(encoder, clock)\\n    encoding.writeVarString(encoder, JSON.stringify(state))\\n  }\\n  return encoding.toUint8Array(encoder)\\n}\\n\\n/**\\n * Modify the content of an awareness update before re-encoding it to an awareness update.\\n *\\n * This might be useful when you have a central server that wants to ensure that clients\\n * cant hijack somebody elses identity.\\n *\\n * @param {Uint8Array} update\\n * @param {function(any):any} modify\\n * @return {Uint8Array}\\n */\\nexport const modifyAwarenessUpdate = (update, modify) => {\\n  const decoder = decoding.createDecoder(update)\\n  const encoder = encoding.createEncoder()\\n  const len = decoding.readVarUint(decoder)\\n  encoding.writeVarUint(encoder, len)\\n  for (let i = 0; i < len; i++) {\\n    const clientID = decoding.readVarUint(decoder)\\n    const clock = decoding.readVarUint(decoder)\\n    const state = JSON.parse(decoding.readVarString(decoder))\\n    const modifiedState = modify(state)\\n    encoding.writeVarUint(encoder, clientID)\\n    encoding.writeVarUint(encoder, clock)\\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\\n  }\\n  return encoding.toUint8Array(encoder)\\n}\\n\\n/**\\n * @param {Awareness} awareness\\n * @param {Uint8Array} update\\n * @param {any} origin This will be added to the emitted change event\\n */\\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\\n  const decoder = decoding.createDecoder(update)\\n  const timestamp = time.getUnixTime()\\n  const added = []\\n  const updated = []\\n  const filteredUpdated = []\\n  const removed = []\\n  const len = decoding.readVarUint(decoder)\\n  for (let i = 0; i < len; i++) {\\n    const clientID = decoding.readVarUint(decoder)\\n    let clock = decoding.readVarUint(decoder)\\n    const state = JSON.parse(decoding.readVarString(decoder))\\n    const clientMeta = awareness.meta.get(clientID)\\n    const prevState = awareness.states.get(clientID)\\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\\n      if (state === null) {\\n        // never let a remote client remove this local state\\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\\n          // that this client still exists by increasing the clock\\n          clock++\\n        } else {\\n          awareness.states.delete(clientID)\\n        }\\n      } else {\\n        awareness.states.set(clientID, state)\\n      }\\n      awareness.meta.set(clientID, {\\n        clock,\\n        lastUpdated: timestamp\\n      })\\n      if (clientMeta === undefined && state !== null) {\\n        added.push(clientID)\\n      } else if (clientMeta !== undefined && state === null) {\\n        removed.push(clientID)\\n      } else if (state !== null) {\\n        if (!f.equalityDeep(state, prevState)) {\\n          filteredUpdated.push(clientID)\\n        }\\n        updated.push(clientID)\\n      }\\n    }\\n  }\\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\\n    awareness.emit('change', [{\\n      added, updated: filteredUpdated, removed\\n    }, origin])\\n  }\\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\\n    awareness.emit('update', [{\\n      added, updated, removed\\n    }, origin])\\n  }\\n}\\n\"],\"names\":[\"Observable\",\"time.getUnixTime\",\"math.floor\",\"f.equalityDeep\",\"encoding.createEncoder\",\"encoding.writeVarUint\",\"encoding.writeVarString\",\"encoding.toUint8Array\",\"decoding.createDecoder\",\"decoding.readVarUint\",\"decoding.readVarString\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/awareness.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/sync.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar encoding = require('./lib0/dist/encoding.cjs');\nvar decoding = require('./lib0/dist/decoding.cjs');\nvar Y = require('./yjs.cjs');\n\n/**\n * @module sync-protocol\n */\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nconst messageYjsSyncStep1 = 0;\nconst messageYjsSyncStep2 = 1;\nconst messageYjsUpdate = 2;\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nconst writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1);\n  const sv = Y.encodeStateVector(doc);\n  encoding.writeVarUint8Array(encoder, sv);\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nconst writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2);\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector));\n};\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nconst readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder));\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nconst readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin);\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error);\n  }\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nconst writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate);\n  encoding.writeVarUint8Array(encoder, update);\n};\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nconst readUpdate = readSyncStep2;\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nconst readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder);\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc);\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin);\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin);\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n};\n\nexports.messageYjsSyncStep1 = messageYjsSyncStep1;\nexports.messageYjsSyncStep2 = messageYjsSyncStep2;\nexports.messageYjsUpdate = messageYjsUpdate;\nexports.readSyncMessage = readSyncMessage;\nexports.readSyncStep1 = readSyncStep1;\nexports.readSyncStep2 = readSyncStep2;\nexports.readUpdate = readUpdate;\nexports.writeSyncStep1 = writeSyncStep1;\nexports.writeSyncStep2 = writeSyncStep2;\nexports.writeUpdate = writeUpdate;\n///# sourceMappingURL=sync.cjs.map\n","title":"$:/plugins/commons/yjs/sync.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/sync.cjs.map":{"text":"{\"version\":3,\"file\":\"sync.cjs\",\"sources\":[\"../sync.js\"],\"sourcesContent\":[\"/**\\n * @module sync-protocol\\n */\\n\\nimport * as encoding from 'lib0/encoding'\\nimport * as decoding from 'lib0/decoding'\\nimport * as Y from 'yjs'\\n\\n/**\\n * @typedef {Map<number, number>} StateMap\\n */\\n\\n/**\\n * Core Yjs defines two message types:\\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\\n *   received all information from the remote client.\\n *\\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\\n *\\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\\n * Therefore it is necesarry that the client initiates the sync.\\n *\\n * Construction of a message:\\n * [messageType : varUint, message definition..]\\n *\\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\\n *\\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\\n */\\n\\nexport const messageYjsSyncStep1 = 0\\nexport const messageYjsSyncStep2 = 1\\nexport const messageYjsUpdate = 2\\n\\n/**\\n * Create a sync step 1 message based on the state of the current shared document.\\n *\\n * @param {encoding.Encoder} encoder\\n * @param {Y.Doc} doc\\n */\\nexport const writeSyncStep1 = (encoder, doc) => {\\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\\n  const sv = Y.encodeStateVector(doc)\\n  encoding.writeVarUint8Array(encoder, sv)\\n}\\n\\n/**\\n * @param {encoding.Encoder} encoder\\n * @param {Y.Doc} doc\\n * @param {Uint8Array} [encodedStateVector]\\n */\\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\\n}\\n\\n/**\\n * Read SyncStep1 message and reply with SyncStep2.\\n *\\n * @param {decoding.Decoder} decoder The reply to the received message\\n * @param {encoding.Encoder} encoder The received message\\n * @param {Y.Doc} doc\\n */\\nexport const readSyncStep1 = (decoder, encoder, doc) =>\\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\\n\\n/**\\n * Read and apply Structs and then DeleteStore to a y instance.\\n *\\n * @param {decoding.Decoder} decoder\\n * @param {Y.Doc} doc\\n * @param {any} transactionOrigin\\n */\\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\\n  try {\\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\\n  } catch (error) {\\n    // This catches errors that are thrown by event handlers\\n    console.error('Caught error while handling a Yjs update', error)\\n  }\\n}\\n\\n/**\\n * @param {encoding.Encoder} encoder\\n * @param {Uint8Array} update\\n */\\nexport const writeUpdate = (encoder, update) => {\\n  encoding.writeVarUint(encoder, messageYjsUpdate)\\n  encoding.writeVarUint8Array(encoder, update)\\n}\\n\\n/**\\n * Read and apply Structs and then DeleteStore to a y instance.\\n *\\n * @param {decoding.Decoder} decoder\\n * @param {Y.Doc} doc\\n * @param {any} transactionOrigin\\n */\\nexport const readUpdate = readSyncStep2\\n\\n/**\\n * @param {decoding.Decoder} decoder A message received from another client\\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\\n * @param {Y.Doc} doc\\n * @param {any} transactionOrigin\\n */\\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\\n  const messageType = decoding.readVarUint(decoder)\\n  switch (messageType) {\\n    case messageYjsSyncStep1:\\n      readSyncStep1(decoder, encoder, doc)\\n      break\\n    case messageYjsSyncStep2:\\n      readSyncStep2(decoder, doc, transactionOrigin)\\n      break\\n    case messageYjsUpdate:\\n      readUpdate(decoder, doc, transactionOrigin)\\n      break\\n    default:\\n      throw new Error('Unknown message type')\\n  }\\n  return messageType\\n}\\n\"],\"names\":[\"encoding.writeVarUint\",\"Y.encodeStateVector\",\"encoding.writeVarUint8Array\",\"Y.encodeStateAsUpdate\",\"decoding.readVarUint8Array\",\"Y.applyUpdate\",\"decoding.readVarUint\"],\"mappings\":\";;;;;;;;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,mBAAmB,GAAG,EAAC;AACxB,MAAC,mBAAmB,GAAG,EAAC;AACxB,MAAC,gBAAgB,GAAG,EAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;AAChD,EAAEA,qBAAqB,CAAC,OAAO,EAAE,mBAAmB,EAAC;AACrD,EAAE,MAAM,EAAE,GAAGC,mBAAmB,CAAC,GAAG,EAAC;AACrC,EAAEC,2BAA2B,CAAC,OAAO,EAAE,EAAE,EAAC;AAC1C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,kBAAkB,KAAK;AACpE,EAAEF,qBAAqB,CAAC,OAAO,EAAE,mBAAmB,EAAC;AACrD,EAAEE,2BAA2B,CAAC,OAAO,EAAEC,qBAAqB,CAAC,GAAG,EAAE,kBAAkB,CAAC,EAAC;AACtF,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG;AACnD,EAAE,cAAc,CAAC,OAAO,EAAE,GAAG,EAAEC,0BAA0B,CAAC,OAAO,CAAC,EAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,aAAa,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,KAAK;AAClE,EAAE,IAAI;AACN,IAAIC,aAAa,CAAC,GAAG,EAAED,0BAA0B,CAAC,OAAO,CAAC,EAAE,iBAAiB,EAAC;AAC9E,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,KAAK,EAAC;AACpE,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,OAAO,EAAE,MAAM,KAAK;AAChD,EAAEJ,qBAAqB,CAAC,OAAO,EAAE,gBAAgB,EAAC;AAClD,EAAEE,2BAA2B,CAAC,OAAO,EAAE,MAAM,EAAC;AAC9C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,cAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,iBAAiB,KAAK;AAC7E,EAAE,MAAM,WAAW,GAAGI,oBAAoB,CAAC,OAAO,EAAC;AACnD,EAAE,QAAQ,WAAW;AACrB,IAAI,KAAK,mBAAmB;AAC5B,MAAM,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAC;AAC1C,MAAM,KAAK;AACX,IAAI,KAAK,mBAAmB;AAC5B,MAAM,aAAa,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAC;AACpD,MAAM,KAAK;AACX,IAAI,KAAK,gBAAgB;AACzB,MAAM,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAC;AACjD,MAAM,KAAK;AACX,IAAI;AACJ,MAAM,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC;AAC7C,GAAG;AACH,EAAE,OAAO,WAAW;AACpB;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/sync.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/test.cjs":{"text":"'use strict';\n\nrequire('./lib0/dist/encoding.cjs');\nrequire('./lib0/dist/decoding.cjs');\nrequire('./lib0/dist/time.cjs');\nrequire('./lib0/dist/math.cjs');\nrequire('./lib0/dist/observable.cjs');\nrequire('./lib0/dist/function.cjs');\nvar Y = require('./yjs.cjs');\nvar awareness$1 = require('./awareness.cjs');\nvar t = require('./lib0/dist/testing.cjs');\nvar log = require('./lib0/dist/logging.cjs');\nvar environment = require('./lib0/dist/environment.cjs');\n\n/**\n * @param {t.TestCase} tc\n */\nconst testAwareness = tc => {\n  const doc1 = new Y.Doc();\n  doc1.clientID = 0;\n  const doc2 = new Y.Doc();\n  doc2.clientID = 1;\n  const aw1 = new awareness$1.Awareness(doc1);\n  const aw2 = new awareness$1.Awareness(doc2);\n  aw1.on('update', /** @param {any} p */ ({ added, updated, removed }) => {\n    const enc = awareness$1.encodeAwarenessUpdate(aw1, added.concat(updated).concat(removed));\n    awareness$1.applyAwarenessUpdate(aw2, enc, 'custom');\n  });\n  let lastChangeLocal = /** @type {any} */ (null);\n  aw1.on('change', /** @param {any} change */ change => {\n    lastChangeLocal = change;\n  });\n  let lastChange = /** @type {any} */ (null);\n  aw2.on('change', /** @param {any} change */ change => {\n    lastChange = change;\n  });\n  aw1.setLocalState({ x: 3 });\n  t.compare(aw2.getStates().get(0), { x: 3 });\n  t.assert(/** @type {any} */ (aw2.meta.get(0)).clock === 1);\n  t.compare(lastChange.added, [0]);\n  // When creating an Awareness instance, the the local client is already marked as available, so it is not updated.\n  t.compare(lastChangeLocal, { added: [], updated: [0], removed: [] });\n\n  // update state\n  lastChange = null;\n  lastChangeLocal = null;\n  aw1.setLocalState({ x: 4 });\n  t.compare(aw2.getStates().get(0), { x: 4 });\n  t.compare(lastChangeLocal, { added: [], updated: [0], removed: [] });\n  t.compare(lastChangeLocal, lastChange);\n\n  lastChange = null;\n  lastChangeLocal = null;\n  aw1.setLocalState({ x: 4 });\n  t.assert(lastChange === null);\n  t.assert(/** @type {any} */ (aw2.meta.get(0)).clock === 3);\n  t.compare(lastChangeLocal, lastChange);\n  aw1.setLocalState(null);\n  t.assert(lastChange.removed.length === 1);\n  t.compare(aw1.getStates().get(0), undefined);\n  t.compare(lastChangeLocal, lastChange);\n};\n\nvar awareness = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testAwareness: testAwareness\n});\n\n/* istanbul ignore if */\nif (environment.isBrowser) {\n  log.createVConsole(document.body);\n}\n\nt.runTests({\n  awareness\n}).then(success => {\n  /* istanbul ignore next */\n  if (environment.isNode) {\n    process.exit(success ? 0 : 1);\n  }\n});\n///# sourceMappingURL=test.cjs.map\n","title":"$:/plugins/commons/yjs/test.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/test.cjs.map":{"text":"{\"version\":3,\"file\":\"test.cjs\",\"sources\":[\"../awareness.test.js\",\"../test.js\"],\"sourcesContent\":[\"\\nimport * as Y from 'yjs'\\nimport * as t from 'lib0/testing'\\nimport * as awareness from './awareness'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAwareness = tc => {\\n  const doc1 = new Y.Doc()\\n  doc1.clientID = 0\\n  const doc2 = new Y.Doc()\\n  doc2.clientID = 1\\n  const aw1 = new awareness.Awareness(doc1)\\n  const aw2 = new awareness.Awareness(doc2)\\n  aw1.on('update', /** @param {any} p */ ({ added, updated, removed }) => {\\n    const enc = awareness.encodeAwarenessUpdate(aw1, added.concat(updated).concat(removed))\\n    awareness.applyAwarenessUpdate(aw2, enc, 'custom')\\n  })\\n  let lastChangeLocal = /** @type {any} */ (null)\\n  aw1.on('change', /** @param {any} change */ change => {\\n    lastChangeLocal = change\\n  })\\n  let lastChange = /** @type {any} */ (null)\\n  aw2.on('change', /** @param {any} change */ change => {\\n    lastChange = change\\n  })\\n  aw1.setLocalState({ x: 3 })\\n  t.compare(aw2.getStates().get(0), { x: 3 })\\n  t.assert(/** @type {any} */ (aw2.meta.get(0)).clock === 1)\\n  t.compare(lastChange.added, [0])\\n  // When creating an Awareness instance, the the local client is already marked as available, so it is not updated.\\n  t.compare(lastChangeLocal, { added: [], updated: [0], removed: [] })\\n\\n  // update state\\n  lastChange = null\\n  lastChangeLocal = null\\n  aw1.setLocalState({ x: 4 })\\n  t.compare(aw2.getStates().get(0), { x: 4 })\\n  t.compare(lastChangeLocal, { added: [], updated: [0], removed: [] })\\n  t.compare(lastChangeLocal, lastChange)\\n\\n  lastChange = null\\n  lastChangeLocal = null\\n  aw1.setLocalState({ x: 4 })\\n  t.assert(lastChange === null)\\n  t.assert(/** @type {any} */ (aw2.meta.get(0)).clock === 3)\\n  t.compare(lastChangeLocal, lastChange)\\n  aw1.setLocalState(null)\\n  t.assert(lastChange.removed.length === 1)\\n  t.compare(aw1.getStates().get(0), undefined)\\n  t.compare(lastChangeLocal, lastChange)\\n}\\n\",\"import { runTests } from 'lib0/testing'\\nimport * as log from 'lib0/logging'\\nimport * as awareness from './awareness.test.js'\\n\\nimport { isBrowser, isNode } from 'lib0/environment'\\n\\n/* istanbul ignore if */\\nif (isBrowser) {\\n  log.createVConsole(document.body)\\n}\\n\\nrunTests({\\n  awareness\\n}).then(success => {\\n  /* istanbul ignore next */\\n  if (isNode) {\\n    process.exit(success ? 0 : 1)\\n  }\\n})\\n\"],\"names\":[\"Y.Doc\",\"awareness.Awareness\",\"awareness.encodeAwarenessUpdate\",\"awareness.applyAwarenessUpdate\",\"t.compare\",\"t.assert\",\"isBrowser\",\"log.createVConsole\",\"runTests\",\"isNode\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/test.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-protocols","version":"1.0.5"},"$:/plugins/commons/yjs/y-indexeddb.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Y = require('./yjs.cjs');\nvar idb = require('./lib0/dist/indexeddb.cjs');\nvar mutex = require('./lib0/dist/mutex.cjs');\nvar observable_js = require('./lib0/dist/observable.cjs');\n\nconst customStoreName = 'custom';\nconst updatesStoreName = 'updates';\n\nconst PREFERRED_TRIM_SIZE = 500;\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n */\nconst fetchUpdates = idbPersistence => {\n  const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (idbPersistence.db), [updatesStoreName]); // , 'readonly')\n  return idb.getAll(updatesStore, idb.createIDBKeyRangeLowerBound(idbPersistence._dbref, false)).then(updates =>\n    idbPersistence._mux(() =>\n      idbPersistence.doc.transact(() =>\n        updates.forEach(val => Y.applyUpdate(idbPersistence.doc, val))\n      )\n    )\n  )\n    .then(() => idb.getLastKey(updatesStore).then(lastKey => { idbPersistence._dbref = lastKey + 1; }))\n    .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt; }))\n    .then(() => updatesStore)\n};\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n * @param {boolean} forceStore\n */\nconst storeState = (idbPersistence, forceStore = true) =>\n  fetchUpdates(idbPersistence)\n    .then(updatesStore => {\n      if (forceStore || idbPersistence._dbsize >= PREFERRED_TRIM_SIZE) {\n        idb.addAutoKey(updatesStore, Y.encodeStateAsUpdate(idbPersistence.doc))\n          .then(() => idb.del(updatesStore, idb.createIDBKeyRangeUpperBound(idbPersistence._dbref, true)))\n          .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt; }));\n      }\n    });\n\n/**\n * @param {string} name\n */\nconst clearDocument = name => idb.deleteDB(name);\n\n/**\n * @extends Observable<string>\n */\nclass IndexeddbPersistence extends observable_js.Observable {\n  /**\n   * @param {string} name\n   * @param {Y.Doc} doc\n   */\n  constructor (name, doc) {\n    super();\n    this.doc = doc;\n    this.name = name;\n    this._mux = mutex.createMutex();\n    this._dbref = 0;\n    this._dbsize = 0;\n    /**\n     * @type {IDBDatabase|null}\n     */\n    this.db = null;\n    this.synced = false;\n    this._db = idb.openDB(name, db =>\n      idb.createStores(db, [\n        ['updates', { autoIncrement: true }],\n        ['custom']\n      ])\n    );\n    /**\n     * @type {Promise<IndexeddbPersistence>}\n     */\n    this.whenSynced = this._db.then(db => {\n      this.db = db;\n      const currState = Y.encodeStateAsUpdate(doc);\n      return fetchUpdates(this).then(updatesStore => idb.addAutoKey(updatesStore, currState)).then(() => {\n        this.emit('synced', [this]);\n        this.synced = true;\n        return this\n      })\n    });\n    /**\n     * Timeout in ms untill data is merged and persisted in idb.\n     */\n    this._storeTimeout = 1000;\n    /**\n     * @type {any}\n     */\n    this._storeTimeoutId = null;\n    /**\n     * @param {Uint8Array} update\n     */\n    this._storeUpdate = update =>\n      this._mux(() => {\n        if (this.db) {\n          const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (this.db), [updatesStoreName]);\n          idb.addAutoKey(updatesStore, update);\n          if (++this._dbsize >= PREFERRED_TRIM_SIZE) {\n            // debounce store call\n            if (this._storeTimeoutId !== null) {\n              clearTimeout(this._storeTimeoutId);\n            }\n            this._storeTimeoutId = setTimeout(() => {\n              storeState(this, false);\n              this._storeTimeoutId = null;\n            }, this._storeTimeout);\n          }\n        }\n      });\n    doc.on('update', this._storeUpdate);\n    this.destroy = this.destroy.bind(this);\n    doc.on('destroy', this.destroy);\n  }\n\n  destroy () {\n    if (this._storeTimeoutId) {\n      clearTimeout(this._storeTimeoutId);\n    }\n    this.doc.off('update', this._storeUpdate);\n    this.doc.off('destroy', this.destroy);\n    return this._db.then(db => {\n      db.close();\n    })\n  }\n\n  /**\n   * Destroys this instance and removes all data from indexeddb.\n   *\n   * @return {Promise<void>}\n   */\n  clearData () {\n    return this.destroy().then(() => {\n      idb.deleteDB(this.name);\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<String | number | ArrayBuffer | Date | any>}\n   */\n  get (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName], 'readonly');\n      return idb.get(custom, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @param {String | number | ArrayBuffer | Date} value\n   * @return {Promise<String | number | ArrayBuffer | Date>}\n   */\n  set (key, value) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName]);\n      return idb.put(custom, value, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<undefined>}\n   */\n  del (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName]);\n      return idb.del(custom, key)\n    })\n  }\n}\n\nexports.IndexeddbPersistence = IndexeddbPersistence;\nexports.PREFERRED_TRIM_SIZE = PREFERRED_TRIM_SIZE;\nexports.clearDocument = clearDocument;\nexports.fetchUpdates = fetchUpdates;\nexports.storeState = storeState;\n///# sourceMappingURL=y-indexeddb.cjs.map\n","title":"$:/plugins/commons/yjs/y-indexeddb.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-indexeddb","version":"9.0.6"},"$:/plugins/commons/yjs/y-indexeddb.cjs.map":{"text":"{\"version\":3,\"file\":\"y-indexeddb.cjs\",\"sources\":[\"../src/y-indexeddb.js\"],\"sourcesContent\":[\"import * as Y from 'yjs'\\nimport * as idb from 'lib0/indexeddb.js'\\nimport * as mutex from 'lib0/mutex.js'\\nimport { Observable } from 'lib0/observable.js'\\n\\nconst customStoreName = 'custom'\\nconst updatesStoreName = 'updates'\\n\\nexport const PREFERRED_TRIM_SIZE = 500\\n\\n/**\\n * @param {IndexeddbPersistence} idbPersistence\\n */\\nexport const fetchUpdates = idbPersistence => {\\n  const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (idbPersistence.db), [updatesStoreName]) // , 'readonly')\\n  return idb.getAll(updatesStore, idb.createIDBKeyRangeLowerBound(idbPersistence._dbref, false)).then(updates =>\\n    idbPersistence._mux(() =>\\n      idbPersistence.doc.transact(() =>\\n        updates.forEach(val => Y.applyUpdate(idbPersistence.doc, val))\\n      )\\n    )\\n  )\\n    .then(() => idb.getLastKey(updatesStore).then(lastKey => { idbPersistence._dbref = lastKey + 1 }))\\n    .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\\n    .then(() => updatesStore)\\n}\\n\\n/**\\n * @param {IndexeddbPersistence} idbPersistence\\n * @param {boolean} forceStore\\n */\\nexport const storeState = (idbPersistence, forceStore = true) =>\\n  fetchUpdates(idbPersistence)\\n    .then(updatesStore => {\\n      if (forceStore || idbPersistence._dbsize >= PREFERRED_TRIM_SIZE) {\\n        idb.addAutoKey(updatesStore, Y.encodeStateAsUpdate(idbPersistence.doc))\\n          .then(() => idb.del(updatesStore, idb.createIDBKeyRangeUpperBound(idbPersistence._dbref, true)))\\n          .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\\n      }\\n    })\\n\\n/**\\n * @param {string} name\\n */\\nexport const clearDocument = name => idb.deleteDB(name)\\n\\n/**\\n * @extends Observable<string>\\n */\\nexport class IndexeddbPersistence extends Observable {\\n  /**\\n   * @param {string} name\\n   * @param {Y.Doc} doc\\n   */\\n  constructor (name, doc) {\\n    super()\\n    this.doc = doc\\n    this.name = name\\n    this._mux = mutex.createMutex()\\n    this._dbref = 0\\n    this._dbsize = 0\\n    /**\\n     * @type {IDBDatabase|null}\\n     */\\n    this.db = null\\n    this.synced = false\\n    this._db = idb.openDB(name, db =>\\n      idb.createStores(db, [\\n        ['updates', { autoIncrement: true }],\\n        ['custom']\\n      ])\\n    )\\n    /**\\n     * @type {Promise<IndexeddbPersistence>}\\n     */\\n    this.whenSynced = this._db.then(db => {\\n      this.db = db\\n      const currState = Y.encodeStateAsUpdate(doc)\\n      return fetchUpdates(this).then(updatesStore => idb.addAutoKey(updatesStore, currState)).then(() => {\\n        this.emit('synced', [this])\\n        this.synced = true\\n        return this\\n      })\\n    })\\n    /**\\n     * Timeout in ms untill data is merged and persisted in idb.\\n     */\\n    this._storeTimeout = 1000\\n    /**\\n     * @type {any}\\n     */\\n    this._storeTimeoutId = null\\n    /**\\n     * @param {Uint8Array} update\\n     */\\n    this._storeUpdate = update =>\\n      this._mux(() => {\\n        if (this.db) {\\n          const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (this.db), [updatesStoreName])\\n          idb.addAutoKey(updatesStore, update)\\n          if (++this._dbsize >= PREFERRED_TRIM_SIZE) {\\n            // debounce store call\\n            if (this._storeTimeoutId !== null) {\\n              clearTimeout(this._storeTimeoutId)\\n            }\\n            this._storeTimeoutId = setTimeout(() => {\\n              storeState(this, false)\\n              this._storeTimeoutId = null\\n            }, this._storeTimeout)\\n          }\\n        }\\n      })\\n    doc.on('update', this._storeUpdate)\\n    this.destroy = this.destroy.bind(this)\\n    doc.on('destroy', this.destroy)\\n  }\\n\\n  destroy () {\\n    if (this._storeTimeoutId) {\\n      clearTimeout(this._storeTimeoutId)\\n    }\\n    this.doc.off('update', this._storeUpdate)\\n    this.doc.off('destroy', this.destroy)\\n    return this._db.then(db => {\\n      db.close()\\n    })\\n  }\\n\\n  /**\\n   * Destroys this instance and removes all data from indexeddb.\\n   *\\n   * @return {Promise<void>}\\n   */\\n  clearData () {\\n    return this.destroy().then(() => {\\n      idb.deleteDB(this.name)\\n    })\\n  }\\n\\n  /**\\n   * @param {String | number | ArrayBuffer | Date} key\\n   * @return {Promise<String | number | ArrayBuffer | Date | any>}\\n   */\\n  get (key) {\\n    return this._db.then(db => {\\n      const [custom] = idb.transact(db, [customStoreName], 'readonly')\\n      return idb.get(custom, key)\\n    })\\n  }\\n\\n  /**\\n   * @param {String | number | ArrayBuffer | Date} key\\n   * @param {String | number | ArrayBuffer | Date} value\\n   * @return {Promise<String | number | ArrayBuffer | Date>}\\n   */\\n  set (key, value) {\\n    return this._db.then(db => {\\n      const [custom] = idb.transact(db, [customStoreName])\\n      return idb.put(custom, value, key)\\n    })\\n  }\\n\\n  /**\\n   * @param {String | number | ArrayBuffer | Date} key\\n   * @return {Promise<undefined>}\\n   */\\n  del (key) {\\n    return this._db.then(db => {\\n      const [custom] = idb.transact(db, [customStoreName])\\n      return idb.del(custom, key)\\n    })\\n  }\\n}\\n\"],\"names\":[\"idb.transact\",\"idb.getAll\",\"idb.createIDBKeyRangeLowerBound\",\"Y.applyUpdate\",\"idb.getLastKey\",\"idb.count\",\"idb.addAutoKey\",\"Y.encodeStateAsUpdate\",\"idb.del\",\"idb.createIDBKeyRangeUpperBound\",\"idb.deleteDB\",\"Observable\",\"mutex.createMutex\",\"idb.openDB\",\"idb.createStores\",\"idb.get\",\"idb.put\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/y-indexeddb.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-indexeddb","version":"9.0.6"},"$:/plugins/commons/yjs/y-leveldb.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Y = require('./yjs.cjs');\nvar encoding = require('./lib0/dist/encoding.cjs');\nvar decoding = require('./lib0/dist/decoding.cjs');\nvar binary = require('./lib0/dist/binary.cjs');\nvar promise = require('./lib0/dist/promise.cjs');\nvar buffer = require('./lib0/dist/buffer.cjs');\nvar defaultLevel = _interopDefault(require('./level'));\nvar buffer$1 = require('buffer');\n\nconst PREFERRED_TRIM_SIZE = 500;\n\nconst YEncodingString = 0;\nconst YEncodingUint32 = 1;\n\nconst valueEncoding = {\n  buffer: true,\n  type: 'y-value',\n  encode: /** @param {any} data */ data => data,\n  decode: /** @param {any} data */ data => data\n};\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {encoding.Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    encoding.write(encoder, (num >>> (8 * i)) & binary.BITS8);\n  }\n};\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @todo use lib0/decoding instead\n *\n * @function\n * @param {decoding.Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0;\n  decoder.pos += 4;\n  return uint\n};\n\nconst keyEncoding = {\n  buffer: true,\n  type: 'y-keys',\n  /* istanbul ignore next */\n  encode: /** @param {Array<string|number>} arr */  arr => {\n    const encoder = encoding.createEncoder();\n    for (let i = 0; i < arr.length; i++) {\n      const v = arr[i];\n      if (typeof v === 'string') {\n        encoding.writeUint8(encoder, YEncodingString);\n        encoding.writeVarString(encoder, v);\n      } else /* istanbul ignore else */ if (typeof v === 'number') {\n        encoding.writeUint8(encoder, YEncodingUint32);\n        writeUint32BigEndian(encoder, v);\n      } else {\n        throw new Error('Unexpected key value')\n      }\n    }\n    return buffer$1.Buffer.from(encoding.toUint8Array(encoder))\n  },\n  decode: /** @param {Uint8Array} buf */ buf => {\n    const decoder = decoding.createDecoder(buf);\n    const key = [];\n    while (decoding.hasContent(decoder)) {\n      switch (decoding.readUint8(decoder)) {\n        case YEncodingString:\n          key.push(decoding.readVarString(decoder));\n          break\n        case YEncodingUint32:\n          key.push(readUint32BigEndian(decoder));\n          break\n      }\n    }\n    return key\n  }\n};\n\n/**\n * level returns an error if a value is not found.\n *\n * This helper method for level returns `null` instead if the key is not found.\n *\n * @param {any} db\n * @param {any} key\n */\nconst levelGet = async (db, key) => {\n  let res;\n  try {\n    res = await db.get(key);\n  } catch (err) {\n    /* istanbul ignore else */\n    if (err.notFound) {\n      return null\n    } else {\n      throw err\n    }\n  }\n  return res\n};\n\n/**\n * Level expects a Buffer, but in Yjs we typically work with Uint8Arrays.\n *\n * Since Level thinks that these are two entirely different things,\n * we transform the Uint8array to a Buffer before storing it.\n *\n * @param {any} db\n * @param {any} key\n * @param {Uint8Array} val\n */\nconst levelPut = async (db, key, val) => db.put(key, buffer$1.Buffer.from(val));\n\n/**\n * A \"bulkier\" implementation of level streams. Returns the result in one flush.\n *\n * @param {any} db\n * @param {object} opts\n * @return {Promise<Array<any>>}\n */\nconst getLevelBulkData = (db, opts) => promise.create((resolve, reject) => {\n  /**\n   * @type {Array<any>} result\n   */\n  const result = [];\n  db.createReadStream(\n    opts\n  ).on('data', /** @param {any} data */ data =>\n    result.push(data)\n  ).on('end', () =>\n    resolve(result)\n  ).on('error', reject);\n});\n\n/**\n * Get all document updates for a specific document.\n *\n * @param {any} db\n * @param {string} docName\n * @param {any} [opts]\n * @return {Promise<Array<Buffer>>}\n */\nconst getLevelUpdates = (db, docName, opts = { values: true, keys: false }) => getLevelBulkData(db, {\n  gte: createDocumentUpdateKey(docName, 0),\n  lt: createDocumentUpdateKey(docName, binary.BITS32),\n  ...opts\n});\n\n/**\n * Get all document updates for a specific document.\n *\n * @param {any} db\n * @param {boolean} values\n * @param {boolean} keys\n * @return {Promise<Array<any>>}\n */\nconst getAllDocs = (db, values, keys) => getLevelBulkData(db, {\n  gte: ['v1_sv'],\n  lt: ['v1_sw'],\n  keys,\n  values\n});\n\n/**\n * @param {any} db\n * @param {string} docName\n * @return {Promise<number>} Returns -1 if this document doesn't exist yet\n */\nconst getCurrentUpdateClock = (db, docName) => getLevelUpdates(db, docName, { keys: true, values: false, reverse: true, limit: 1 }).then(keys => {\n  if (keys.length === 0) {\n    return -1\n  } else {\n    return keys[0][3]\n  }\n});\n\n/**\n * @param {any} db\n * @param {Array<string|number>} gte Greater than or equal\n * @param {Array<string|number>} lt lower than (not equal)\n * @return {Promise<void>}\n */\nconst clearRange = async (db, gte, lt) => {\n  /* istanbul ignore else */\n  if (db.supports.clear) {\n    await db.clear({ gte, lt });\n  } else {\n    const keys = await getLevelBulkData(db, { values: false, keys: true, gte, lt });\n    const ops = keys.map(key => ({ type: 'del', key }));\n    await db.batch(ops);\n  }\n};\n\n/**\n * @param {any} db\n * @param {string} docName\n * @param {number} from Greater than or equal\n * @param {number} to lower than (not equal)\n * @return {Promise<void>}\n */\nconst clearUpdatesRange = async (db, docName, from, to) => clearRange(db, createDocumentUpdateKey(docName, from), createDocumentUpdateKey(docName, to));\n\n/**\n * Create a unique key for a update message.\n * We encode the result using `keyEncoding` which expects an array.\n *\n * @param {string} docName\n * @param {number} clock must be unique\n * @return {Array<string|number>}\n */\nconst createDocumentUpdateKey = (docName, clock) => ['v1', docName, 'update', clock];\n\n/**\n * @param {string} docName\n * @param {string} metaKey\n */\nconst createDocumentMetaKey = (docName, metaKey) => ['v1', docName, 'meta', metaKey];\n\n/**\n * @param {string} docName\n */\nconst createDocumentMetaEndKey = (docName) => ['v1', docName, 'metb']; // simple trick\n\n/**\n * We have a separate state vector key so we can iterate efficiently over all documents\n * @param {string} docName\n */\nconst createDocumentStateVectorKey = (docName) => ['v1_sv', docName];\n\n/**\n * @param {string} docName\n */\nconst createDocumentFirstKey = (docName) => ['v1', docName];\n\n/**\n * We use this key as the upper limit of all keys that can be written.\n * Make sure that all document keys are smaller! Strings are encoded using varLength string encoding,\n * so we need to make sure that this key has the biggest size!\n *\n * @param {string} docName\n */\nconst createDocumentLastKey = (docName) => ['v1', docName, 'zzzzzzz'];\n\n// const emptyStateVector = (() => Y.encodeStateVector(new Y.Doc()))()\n\n/**\n * For now this is a helper method that creates a Y.Doc and then re-encodes a document update.\n * In the future this will be handled by Yjs without creating a Y.Doc (constant memory consumption).\n *\n * @param {Array<Uint8Array>} updates\n * @return {{update:Uint8Array, sv: Uint8Array}}\n */\nconst mergeUpdates = (updates) => {\n  const ydoc = new Y.Doc();\n  ydoc.transact(() => {\n    for (let i = 0; i < updates.length; i++) {\n      Y.applyUpdate(ydoc, updates[i]);\n    }\n  });\n  return { update: Y.encodeStateAsUpdate(ydoc), sv: Y.encodeStateVector(ydoc) }\n};\n\n/**\n * @param {any} db\n * @param {string} docName\n * @param {Uint8Array} sv state vector\n * @param {number} clock current clock of the document so we can determine when this statevector was created\n */\nconst writeStateVector = async (db, docName, sv, clock) => {\n  const encoder = encoding.createEncoder();\n  encoding.writeVarUint(encoder, clock);\n  encoding.writeVarUint8Array(encoder, sv);\n  await levelPut(db, createDocumentStateVectorKey(docName), encoding.toUint8Array(encoder));\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {{ sv: Uint8Array, clock: number }}\n */\nconst decodeLeveldbStateVector = buf => {\n  const decoder = decoding.createDecoder(buf);\n  const clock = decoding.readVarUint(decoder);\n  const sv = decoding.readVarUint8Array(decoder);\n  return { sv, clock }\n};\n\n/**\n * @param {any} db\n * @param {string} docName\n */\nconst readStateVector = async (db, docName) => {\n  const buf = await levelGet(db, createDocumentStateVectorKey(docName));\n  if (buf === null) {\n    // no state vector created yet or no document exists\n    return { sv: null, clock: -1 }\n  }\n  return decodeLeveldbStateVector(buf)\n};\n\n/**\n * @param {any} db\n * @param {string} docName\n * @param {Uint8Array} stateAsUpdate\n * @param {Uint8Array} stateVector\n * @return {Promise<number>} returns the clock of the flushed doc\n */\nconst flushDocument = async (db, docName, stateAsUpdate, stateVector) => {\n  const clock = await storeUpdate(db, docName, stateAsUpdate);\n  await writeStateVector(db, docName, stateVector, clock);\n  await clearUpdatesRange(db, docName, 0, clock); // intentionally not waiting for the promise to resolve!\n  return clock\n};\n\n/**\n * @param {any} db\n * @param {string} docName\n * @param {Uint8Array} update\n * @return {Promise<number>} Returns the clock of the stored update\n */\nconst storeUpdate = async (db, docName, update) => {\n  const clock = await getCurrentUpdateClock(db, docName);\n  if (clock === -1) {\n    // make sure that a state vector is aways written, so we can search for available documents\n    const ydoc = new Y.Doc();\n    Y.applyUpdate(ydoc, update);\n    const sv = Y.encodeStateVector(ydoc);\n    await writeStateVector(db, docName, sv, 0);\n  }\n  await levelPut(db, createDocumentUpdateKey(docName, clock + 1), update);\n  return clock + 1\n};\n\nclass LeveldbPersistence {\n  /**\n   * @param {string} location\n   * @param {object} [opts]\n   * @param {any} [opts.level] Level-compatible adapter. E.g. leveldown, level-rem, level-indexeddb. Defaults to `level`\n   * @param {object} [opts.levelOptions] Options that are passed down to the level instance\n   */\n  constructor (location, /* istanbul ignore next */ { level = defaultLevel, levelOptions = {} } = {}) {\n    const db = level(location, { ...levelOptions, valueEncoding, keyEncoding });\n    this.tr = promise.resolve();\n    /**\n     * Execute an transaction on a database. This will ensure that other processes are currently not writing.\n     *\n     * This is a private method and might change in the future.\n     *\n     * @todo only transact on the same room-name. Allow for concurrency of different rooms.\n     *\n     * @template T\n     *\n     * @param {function(any):Promise<T>} f A transaction that receives the db object\n     * @return {Promise<T>}\n     */\n    this._transact = f => {\n      const currTr = this.tr;\n      this.tr = (async () => {\n        await currTr;\n        let res = /** @type {any} */ (null);\n        try {\n          res = await f(db);\n        } catch (err) {\n          /* istanbul ignore next */\n          console.warn('Error during y-leveldb transaction', err);\n        }\n        return res\n      })();\n      return this.tr\n    };\n  }\n\n  /**\n   * @param {string} docName\n   */\n  flushDocument (docName) {\n    return this._transact(async db => {\n      const updates = await getLevelUpdates(db, docName);\n      const { update, sv } = mergeUpdates(updates);\n      await flushDocument(db, docName, update, sv);\n    })\n  }\n\n  /**\n   * @param {string} docName\n   * @return {Promise<Y.Doc>}\n   */\n  getYDoc (docName) {\n    return this._transact(async db => {\n      const updates = await getLevelUpdates(db, docName);\n      const ydoc = new Y.Doc();\n      ydoc.transact(() => {\n        for (let i = 0; i < updates.length; i++) {\n          Y.applyUpdate(ydoc, updates[i]);\n        }\n      });\n      if (updates.length > PREFERRED_TRIM_SIZE) {\n        await flushDocument(db, docName, Y.encodeStateAsUpdate(ydoc), Y.encodeStateVector(ydoc));\n      }\n      return ydoc\n    })\n  }\n\n  /**\n   * @param {string} docName\n   * @return {Promise<Uint8Array>}\n   */\n  getStateVector (docName) {\n    return this._transact(async db => {\n      const { clock, sv } = await readStateVector(db, docName);\n      let curClock = -1;\n      if (sv !== null) {\n        curClock = await getCurrentUpdateClock(db, docName);\n      }\n      if (sv !== null && clock === curClock) {\n        return sv\n      } else {\n        // current state vector is outdated\n        const updates = await getLevelUpdates(db, docName);\n        const { update, sv } = mergeUpdates(updates);\n        await flushDocument(db, docName, update, sv);\n        return sv\n      }\n    })\n  }\n\n  /**\n   * @param {string} docName\n   * @param {Uint8Array} update\n   * @return {Promise<number>} Returns the clock of the stored update\n   */\n  storeUpdate (docName, update) {\n    return this._transact(db => storeUpdate(db, docName, update))\n  }\n\n  /**\n   * @param {string} docName\n   * @param {Uint8Array} stateVector\n   */\n  async getDiff (docName, stateVector) {\n    const ydoc = await this.getYDoc(docName);\n    return Y.encodeStateAsUpdate(ydoc, stateVector)\n  }\n\n  /**\n   * @param {string} docName\n   * @return {Promise<void>}\n   */\n  clearDocument (docName) {\n    return this._transact(async db => {\n      await db.del(createDocumentStateVectorKey(docName));\n      await clearRange(db, createDocumentFirstKey(docName), createDocumentLastKey(docName));\n    })\n  }\n\n  /**\n   * @param {string} docName\n   * @param {string} metaKey\n   * @param {any} value\n   * @return {Promise<void>}\n   */\n  setMeta (docName, metaKey, value) {\n    return this._transact(db => levelPut(db, createDocumentMetaKey(docName, metaKey), buffer.encodeAny(value)))\n  }\n\n  /**\n   * @param {string} docName\n   * @param {string} metaKey\n   * @return {Promise<any>}\n   */\n  delMeta (docName, metaKey) {\n    return this._transact(db => db.del(createDocumentMetaKey(docName, metaKey)))\n  }\n\n  /**\n   * @param {string} docName\n   * @param {string} metaKey\n   * @return {Promise<any>}\n   */\n  getMeta (docName, metaKey) {\n    return this._transact(async db => {\n      const res = await levelGet(db, createDocumentMetaKey(docName, metaKey));\n      if (res === null) {\n        return// return void\n      }\n      return buffer.decodeAny(res)\n    })\n  }\n\n  /**\n   * @return {Promise<Array<string>>}\n   */\n  getAllDocNames () {\n    return this._transact(async db => {\n      const docKeys = await getAllDocs(db, false, true);\n      return docKeys.map(key => key[1])\n    })\n  }\n\n  /**\n   * @return {Promise<Array<{ name: string, sv: Uint8Array, clock: number }>>}\n   */\n  getAllDocStateVecors () {\n    return this._transact(async db => {\n      const docs = /** @type {any} */ (await getAllDocs(db, true, true));\n      return docs.map(doc => {\n        const { sv, clock } = decodeLeveldbStateVector(doc.value);\n        return { name: doc.key[1], sv, clock }\n      })\n    })\n  }\n\n  /**\n   * @param {string} docName\n   * @return {Promise<Map<string, any>>}\n   */\n  getMetas (docName) {\n    return this._transact(async db => {\n      const data = await getLevelBulkData(db, {\n        gte: createDocumentMetaKey(docName, ''),\n        lt: createDocumentMetaEndKey(docName),\n        keys: true,\n        values: true\n      });\n      const metas = new Map();\n      data.forEach(v => { metas.set(v.key[3], buffer.decodeAny(v.value)); });\n      return metas\n    })\n  }\n\n  /**\n   * Close connection to a leveldb database and discard all state and bindings\n   *\n   * @return {Promise<void>}\n   */\n  destroy () {\n    return this._transact(db => db.close())\n  }\n\n  /**\n   * Delete all data in database.\n   */\n  clearAll () {\n    return this._transact(async db => db.clear())\n  }\n}\n\nexports.LeveldbPersistence = LeveldbPersistence;\nexports.PREFERRED_TRIM_SIZE = PREFERRED_TRIM_SIZE;\nexports.getAllDocs = getAllDocs;\nexports.getCurrentUpdateClock = getCurrentUpdateClock;\nexports.getLevelBulkData = getLevelBulkData;\nexports.getLevelUpdates = getLevelUpdates;\nexports.keyEncoding = keyEncoding;\nexports.readUint32BigEndian = readUint32BigEndian;\nexports.writeUint32BigEndian = writeUint32BigEndian;\n///# sourceMappingURL=y-leveldb.cjs.map\n","title":"$:/plugins/commons/yjs/y-leveldb.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-leveldb","version":"0.1.0"},"$:/plugins/commons/yjs/y-leveldb.cjs.map":{"text":"{\"version\":3,\"file\":\"y-leveldb.cjs\",\"sources\":[\"../src/y-leveldb.js\"],\"sourcesContent\":[\"import * as Y from 'yjs'\\nimport * as encoding from 'lib0/encoding.js'\\nimport * as decoding from 'lib0/decoding.js'\\nimport * as binary from 'lib0/binary.js'\\nimport * as promise from 'lib0/promise.js'\\nimport * as buffer from 'lib0/buffer.js'\\n// @ts-ignore\\nimport defaultLevel from 'level'\\nimport { Buffer } from 'buffer'\\n\\nexport const PREFERRED_TRIM_SIZE = 500\\n\\nconst YEncodingString = 0\\nconst YEncodingUint32 = 1\\n\\nconst valueEncoding = {\\n  buffer: true,\\n  type: 'y-value',\\n  encode: /** @param {any} data */ data => data,\\n  decode: /** @param {any} data */ data => data\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @function\\n * @param {encoding.Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint32BigEndian = (encoder, num) => {\\n  for (let i = 3; i >= 0; i--) {\\n    encoding.write(encoder, (num >>> (8 * i)) & binary.BITS8)\\n  }\\n}\\n\\n/**\\n * Read 4 bytes as unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @todo use lib0/decoding instead\\n *\\n * @function\\n * @param {decoding.Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint32BigEndian = decoder => {\\n  const uint =\\n    (decoder.arr[decoder.pos + 3] +\\n    (decoder.arr[decoder.pos + 2] << 8) +\\n    (decoder.arr[decoder.pos + 1] << 16) +\\n    (decoder.arr[decoder.pos] << 24)) >>> 0\\n  decoder.pos += 4\\n  return uint\\n}\\n\\nexport const keyEncoding = {\\n  buffer: true,\\n  type: 'y-keys',\\n  /* istanbul ignore next */\\n  encode: /** @param {Array<string|number>} arr */  arr => {\\n    const encoder = encoding.createEncoder()\\n    for (let i = 0; i < arr.length; i++) {\\n      const v = arr[i]\\n      if (typeof v === 'string') {\\n        encoding.writeUint8(encoder, YEncodingString)\\n        encoding.writeVarString(encoder, v)\\n      } else /* istanbul ignore else */ if (typeof v === 'number') {\\n        encoding.writeUint8(encoder, YEncodingUint32)\\n        writeUint32BigEndian(encoder, v)\\n      } else {\\n        throw new Error('Unexpected key value')\\n      }\\n    }\\n    return Buffer.from(encoding.toUint8Array(encoder))\\n  },\\n  decode: /** @param {Uint8Array} buf */ buf => {\\n    const decoder = decoding.createDecoder(buf)\\n    const key = []\\n    while (decoding.hasContent(decoder)) {\\n      switch (decoding.readUint8(decoder)) {\\n        case YEncodingString:\\n          key.push(decoding.readVarString(decoder))\\n          break\\n        case YEncodingUint32:\\n          key.push(readUint32BigEndian(decoder))\\n          break\\n      }\\n    }\\n    return key\\n  }\\n}\\n\\n/**\\n * level returns an error if a value is not found.\\n *\\n * This helper method for level returns `null` instead if the key is not found.\\n *\\n * @param {any} db\\n * @param {any} key\\n */\\nconst levelGet = async (db, key) => {\\n  let res\\n  try {\\n    res = await db.get(key)\\n  } catch (err) {\\n    /* istanbul ignore else */\\n    if (err.notFound) {\\n      return null\\n    } else {\\n      throw err\\n    }\\n  }\\n  return res\\n}\\n\\n/**\\n * Level expects a Buffer, but in Yjs we typically work with Uint8Arrays.\\n *\\n * Since Level thinks that these are two entirely different things,\\n * we transform the Uint8array to a Buffer before storing it.\\n *\\n * @param {any} db\\n * @param {any} key\\n * @param {Uint8Array} val\\n */\\nconst levelPut = async (db, key, val) => db.put(key, Buffer.from(val))\\n\\n/**\\n * A \\\"bulkier\\\" implementation of level streams. Returns the result in one flush.\\n *\\n * @param {any} db\\n * @param {object} opts\\n * @return {Promise<Array<any>>}\\n */\\nexport const getLevelBulkData = (db, opts) => promise.create((resolve, reject) => {\\n  /**\\n   * @type {Array<any>} result\\n   */\\n  const result = []\\n  db.createReadStream(\\n    opts\\n  ).on('data', /** @param {any} data */ data =>\\n    result.push(data)\\n  ).on('end', () =>\\n    resolve(result)\\n  ).on('error', reject)\\n})\\n\\n/**\\n * Get all document updates for a specific document.\\n *\\n * @param {any} db\\n * @param {string} docName\\n * @param {any} [opts]\\n * @return {Promise<Array<Buffer>>}\\n */\\nexport const getLevelUpdates = (db, docName, opts = { values: true, keys: false }) => getLevelBulkData(db, {\\n  gte: createDocumentUpdateKey(docName, 0),\\n  lt: createDocumentUpdateKey(docName, binary.BITS32),\\n  ...opts\\n})\\n\\n/**\\n * Get all document updates for a specific document.\\n *\\n * @param {any} db\\n * @param {boolean} values\\n * @param {boolean} keys\\n * @return {Promise<Array<any>>}\\n */\\nexport const getAllDocs = (db, values, keys) => getLevelBulkData(db, {\\n  gte: ['v1_sv'],\\n  lt: ['v1_sw'],\\n  keys,\\n  values\\n})\\n\\n/**\\n * @param {any} db\\n * @param {string} docName\\n * @return {Promise<number>} Returns -1 if this document doesn't exist yet\\n */\\nexport const getCurrentUpdateClock = (db, docName) => getLevelUpdates(db, docName, { keys: true, values: false, reverse: true, limit: 1 }).then(keys => {\\n  if (keys.length === 0) {\\n    return -1\\n  } else {\\n    return keys[0][3]\\n  }\\n})\\n\\n/**\\n * @param {any} db\\n * @param {Array<string|number>} gte Greater than or equal\\n * @param {Array<string|number>} lt lower than (not equal)\\n * @return {Promise<void>}\\n */\\nconst clearRange = async (db, gte, lt) => {\\n  /* istanbul ignore else */\\n  if (db.supports.clear) {\\n    await db.clear({ gte, lt })\\n  } else {\\n    const keys = await getLevelBulkData(db, { values: false, keys: true, gte, lt })\\n    const ops = keys.map(key => ({ type: 'del', key }))\\n    await db.batch(ops)\\n  }\\n}\\n\\n/**\\n * @param {any} db\\n * @param {string} docName\\n * @param {number} from Greater than or equal\\n * @param {number} to lower than (not equal)\\n * @return {Promise<void>}\\n */\\nconst clearUpdatesRange = async (db, docName, from, to) => clearRange(db, createDocumentUpdateKey(docName, from), createDocumentUpdateKey(docName, to))\\n\\n/**\\n * Create a unique key for a update message.\\n * We encode the result using `keyEncoding` which expects an array.\\n *\\n * @param {string} docName\\n * @param {number} clock must be unique\\n * @return {Array<string|number>}\\n */\\nconst createDocumentUpdateKey = (docName, clock) => ['v1', docName, 'update', clock]\\n\\n/**\\n * @param {string} docName\\n * @param {string} metaKey\\n */\\nconst createDocumentMetaKey = (docName, metaKey) => ['v1', docName, 'meta', metaKey]\\n\\n/**\\n * @param {string} docName\\n */\\nconst createDocumentMetaEndKey = (docName) => ['v1', docName, 'metb'] // simple trick\\n\\n/**\\n * We have a separate state vector key so we can iterate efficiently over all documents\\n * @param {string} docName\\n */\\nconst createDocumentStateVectorKey = (docName) => ['v1_sv', docName]\\n\\n/**\\n * @param {string} docName\\n */\\nconst createDocumentFirstKey = (docName) => ['v1', docName]\\n\\n/**\\n * We use this key as the upper limit of all keys that can be written.\\n * Make sure that all document keys are smaller! Strings are encoded using varLength string encoding,\\n * so we need to make sure that this key has the biggest size!\\n *\\n * @param {string} docName\\n */\\nconst createDocumentLastKey = (docName) => ['v1', docName, 'zzzzzzz']\\n\\n// const emptyStateVector = (() => Y.encodeStateVector(new Y.Doc()))()\\n\\n/**\\n * For now this is a helper method that creates a Y.Doc and then re-encodes a document update.\\n * In the future this will be handled by Yjs without creating a Y.Doc (constant memory consumption).\\n *\\n * @param {Array<Uint8Array>} updates\\n * @return {{update:Uint8Array, sv: Uint8Array}}\\n */\\nconst mergeUpdates = (updates) => {\\n  const ydoc = new Y.Doc()\\n  ydoc.transact(() => {\\n    for (let i = 0; i < updates.length; i++) {\\n      Y.applyUpdate(ydoc, updates[i])\\n    }\\n  })\\n  return { update: Y.encodeStateAsUpdate(ydoc), sv: Y.encodeStateVector(ydoc) }\\n}\\n\\n/**\\n * @param {any} db\\n * @param {string} docName\\n * @param {Uint8Array} sv state vector\\n * @param {number} clock current clock of the document so we can determine when this statevector was created\\n */\\nconst writeStateVector = async (db, docName, sv, clock) => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeVarUint(encoder, clock)\\n  encoding.writeVarUint8Array(encoder, sv)\\n  await levelPut(db, createDocumentStateVectorKey(docName), encoding.toUint8Array(encoder))\\n}\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {{ sv: Uint8Array, clock: number }}\\n */\\nconst decodeLeveldbStateVector = buf => {\\n  const decoder = decoding.createDecoder(buf)\\n  const clock = decoding.readVarUint(decoder)\\n  const sv = decoding.readVarUint8Array(decoder)\\n  return { sv, clock }\\n}\\n\\n/**\\n * @param {any} db\\n * @param {string} docName\\n */\\nconst readStateVector = async (db, docName) => {\\n  const buf = await levelGet(db, createDocumentStateVectorKey(docName))\\n  if (buf === null) {\\n    // no state vector created yet or no document exists\\n    return { sv: null, clock: -1 }\\n  }\\n  return decodeLeveldbStateVector(buf)\\n}\\n\\n/**\\n * @param {any} db\\n * @param {string} docName\\n * @param {Uint8Array} stateAsUpdate\\n * @param {Uint8Array} stateVector\\n * @return {Promise<number>} returns the clock of the flushed doc\\n */\\nconst flushDocument = async (db, docName, stateAsUpdate, stateVector) => {\\n  const clock = await storeUpdate(db, docName, stateAsUpdate)\\n  await writeStateVector(db, docName, stateVector, clock)\\n  await clearUpdatesRange(db, docName, 0, clock) // intentionally not waiting for the promise to resolve!\\n  return clock\\n}\\n\\n/**\\n * @param {any} db\\n * @param {string} docName\\n * @param {Uint8Array} update\\n * @return {Promise<number>} Returns the clock of the stored update\\n */\\nconst storeUpdate = async (db, docName, update) => {\\n  const clock = await getCurrentUpdateClock(db, docName)\\n  if (clock === -1) {\\n    // make sure that a state vector is aways written, so we can search for available documents\\n    const ydoc = new Y.Doc()\\n    Y.applyUpdate(ydoc, update)\\n    const sv = Y.encodeStateVector(ydoc)\\n    await writeStateVector(db, docName, sv, 0)\\n  }\\n  await levelPut(db, createDocumentUpdateKey(docName, clock + 1), update)\\n  return clock + 1\\n}\\n\\nexport class LeveldbPersistence {\\n  /**\\n   * @param {string} location\\n   * @param {object} [opts]\\n   * @param {any} [opts.level] Level-compatible adapter. E.g. leveldown, level-rem, level-indexeddb. Defaults to `level`\\n   * @param {object} [opts.levelOptions] Options that are passed down to the level instance\\n   */\\n  constructor (location, /* istanbul ignore next */ { level = defaultLevel, levelOptions = {} } = {}) {\\n    const db = level(location, { ...levelOptions, valueEncoding, keyEncoding })\\n    this.tr = promise.resolve()\\n    /**\\n     * Execute an transaction on a database. This will ensure that other processes are currently not writing.\\n     *\\n     * This is a private method and might change in the future.\\n     *\\n     * @todo only transact on the same room-name. Allow for concurrency of different rooms.\\n     *\\n     * @template T\\n     *\\n     * @param {function(any):Promise<T>} f A transaction that receives the db object\\n     * @return {Promise<T>}\\n     */\\n    this._transact = f => {\\n      const currTr = this.tr\\n      this.tr = (async () => {\\n        await currTr\\n        let res = /** @type {any} */ (null)\\n        try {\\n          res = await f(db)\\n        } catch (err) {\\n          /* istanbul ignore next */\\n          console.warn('Error during y-leveldb transaction', err)\\n        }\\n        return res\\n      })()\\n      return this.tr\\n    }\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   */\\n  flushDocument (docName) {\\n    return this._transact(async db => {\\n      const updates = await getLevelUpdates(db, docName)\\n      const { update, sv } = mergeUpdates(updates)\\n      await flushDocument(db, docName, update, sv)\\n    })\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @return {Promise<Y.Doc>}\\n   */\\n  getYDoc (docName) {\\n    return this._transact(async db => {\\n      const updates = await getLevelUpdates(db, docName)\\n      const ydoc = new Y.Doc()\\n      ydoc.transact(() => {\\n        for (let i = 0; i < updates.length; i++) {\\n          Y.applyUpdate(ydoc, updates[i])\\n        }\\n      })\\n      if (updates.length > PREFERRED_TRIM_SIZE) {\\n        await flushDocument(db, docName, Y.encodeStateAsUpdate(ydoc), Y.encodeStateVector(ydoc))\\n      }\\n      return ydoc\\n    })\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @return {Promise<Uint8Array>}\\n   */\\n  getStateVector (docName) {\\n    return this._transact(async db => {\\n      const { clock, sv } = await readStateVector(db, docName)\\n      let curClock = -1\\n      if (sv !== null) {\\n        curClock = await getCurrentUpdateClock(db, docName)\\n      }\\n      if (sv !== null && clock === curClock) {\\n        return sv\\n      } else {\\n        // current state vector is outdated\\n        const updates = await getLevelUpdates(db, docName)\\n        const { update, sv } = mergeUpdates(updates)\\n        await flushDocument(db, docName, update, sv)\\n        return sv\\n      }\\n    })\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @param {Uint8Array} update\\n   * @return {Promise<number>} Returns the clock of the stored update\\n   */\\n  storeUpdate (docName, update) {\\n    return this._transact(db => storeUpdate(db, docName, update))\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @param {Uint8Array} stateVector\\n   */\\n  async getDiff (docName, stateVector) {\\n    const ydoc = await this.getYDoc(docName)\\n    return Y.encodeStateAsUpdate(ydoc, stateVector)\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @return {Promise<void>}\\n   */\\n  clearDocument (docName) {\\n    return this._transact(async db => {\\n      await db.del(createDocumentStateVectorKey(docName))\\n      await clearRange(db, createDocumentFirstKey(docName), createDocumentLastKey(docName))\\n    })\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @param {string} metaKey\\n   * @param {any} value\\n   * @return {Promise<void>}\\n   */\\n  setMeta (docName, metaKey, value) {\\n    return this._transact(db => levelPut(db, createDocumentMetaKey(docName, metaKey), buffer.encodeAny(value)))\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @param {string} metaKey\\n   * @return {Promise<any>}\\n   */\\n  delMeta (docName, metaKey) {\\n    return this._transact(db => db.del(createDocumentMetaKey(docName, metaKey)))\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @param {string} metaKey\\n   * @return {Promise<any>}\\n   */\\n  getMeta (docName, metaKey) {\\n    return this._transact(async db => {\\n      const res = await levelGet(db, createDocumentMetaKey(docName, metaKey))\\n      if (res === null) {\\n        return// return void\\n      }\\n      return buffer.decodeAny(res)\\n    })\\n  }\\n\\n  /**\\n   * @return {Promise<Array<string>>}\\n   */\\n  getAllDocNames () {\\n    return this._transact(async db => {\\n      const docKeys = await getAllDocs(db, false, true)\\n      return docKeys.map(key => key[1])\\n    })\\n  }\\n\\n  /**\\n   * @return {Promise<Array<{ name: string, sv: Uint8Array, clock: number }>>}\\n   */\\n  getAllDocStateVecors () {\\n    return this._transact(async db => {\\n      const docs = /** @type {any} */ (await getAllDocs(db, true, true))\\n      return docs.map(doc => {\\n        const { sv, clock } = decodeLeveldbStateVector(doc.value)\\n        return { name: doc.key[1], sv, clock }\\n      })\\n    })\\n  }\\n\\n  /**\\n   * @param {string} docName\\n   * @return {Promise<Map<string, any>>}\\n   */\\n  getMetas (docName) {\\n    return this._transact(async db => {\\n      const data = await getLevelBulkData(db, {\\n        gte: createDocumentMetaKey(docName, ''),\\n        lt: createDocumentMetaEndKey(docName),\\n        keys: true,\\n        values: true\\n      })\\n      const metas = new Map()\\n      data.forEach(v => { metas.set(v.key[3], buffer.decodeAny(v.value)) })\\n      return metas\\n    })\\n  }\\n\\n  /**\\n   * Close connection to a leveldb database and discard all state and bindings\\n   *\\n   * @return {Promise<void>}\\n   */\\n  destroy () {\\n    return this._transact(db => db.close())\\n  }\\n\\n  /**\\n   * Delete all data in database.\\n   */\\n  clearAll () {\\n    return this._transact(async db => db.clear())\\n  }\\n}\\n\"],\"names\":[\"encoding.write\",\"binary.BITS8\",\"encoding.createEncoder\",\"encoding.writeUint8\",\"encoding.writeVarString\",\"Buffer\",\"encoding.toUint8Array\",\"decoding.createDecoder\",\"decoding.hasContent\",\"decoding.readUint8\",\"decoding.readVarString\",\"promise.create\",\"binary.BITS32\",\"Y.Doc\",\"Y.applyUpdate\",\"Y.encodeStateAsUpdate\",\"Y.encodeStateVector\",\"encoding.writeVarUint\",\"encoding.writeVarUint8Array\",\"decoding.readVarUint\",\"decoding.readVarUint8Array\",\"promise.resolve\",\"buffer.encodeAny\",\"buffer.decodeAny\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/y-leveldb.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/yjs/y-leveldb","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/array-b2d24238.cjs":{"text":"'use strict';\n\n/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nconst last = arr => arr[arr.length - 1];\n\n/**\n * @template C\n * @return {Array<C>}\n */\nconst create = () => /** @type {Array<C>} */ ([]);\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nconst copy = a => /** @type {Array<D>} */ (a.slice());\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nconst appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n};\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nconst from = Array.from;\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nconst every = (arr, f) => arr.every(f);\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nconst some = (arr, f) => arr.some(f);\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nconst equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index]);\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nconst flatten = arr => arr.reduce((acc, val) => acc.concat(val), []);\n\nvar array = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  last: last,\n  create: create,\n  copy: copy,\n  appendTo: appendTo,\n  from: from,\n  every: every,\n  some: some,\n  equalFlat: equalFlat,\n  flatten: flatten\n});\n\nexports.appendTo = appendTo;\nexports.array = array;\nexports.copy = copy;\nexports.create = create;\nexports.equalFlat = equalFlat;\nexports.every = every;\nexports.flatten = flatten;\nexports.from = from;\nexports.last = last;\nexports.some = some;\n///# sourceMappingURL=array-b2d24238.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/array-b2d24238.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/array-b2d24238.cjs.map":{"text":"{\"version\":3,\"file\":\"array-b2d24238.cjs\",\"sources\":[\"../array.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with Arrays.\\n *\\n * @module array\\n */\\n\\n/**\\n * Return the last element of an array. The element must exist\\n *\\n * @template L\\n * @param {Array<L>} arr\\n * @return {L}\\n */\\nexport const last = arr => arr[arr.length - 1]\\n\\n/**\\n * @template C\\n * @return {Array<C>}\\n */\\nexport const create = () => /** @type {Array<C>} */ ([])\\n\\n/**\\n * @template D\\n * @param {Array<D>} a\\n * @return {Array<D>}\\n */\\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\\n\\n/**\\n * Append elements from src to dest\\n *\\n * @template M\\n * @param {Array<M>} dest\\n * @param {Array<M>} src\\n */\\nexport const appendTo = (dest, src) => {\\n  for (let i = 0; i < src.length; i++) {\\n    dest.push(src[i])\\n  }\\n}\\n\\n/**\\n * Transforms something array-like to an actual Array.\\n *\\n * @function\\n * @template T\\n * @param {ArrayLike<T>|Iterable<T>} arraylike\\n * @return {T}\\n */\\nexport const from = Array.from\\n\\n/**\\n * True iff condition holds on every element in the Array.\\n *\\n * @function\\n * @template ITEM\\n *\\n * @param {Array<ITEM>} arr\\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\\n * @return {boolean}\\n */\\nexport const every = (arr, f) => arr.every(f)\\n\\n/**\\n * True iff condition holds on some element in the Array.\\n *\\n * @function\\n * @template S\\n * @param {Array<S>} arr\\n * @param {function(S, number, Array<S>):boolean} f\\n * @return {boolean}\\n */\\nexport const some = (arr, f) => arr.some(f)\\n\\n/**\\n * @template ELEM\\n *\\n * @param {Array<ELEM>} a\\n * @param {Array<ELEM>} b\\n * @return {boolean}\\n */\\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\\n\\n/**\\n * @template ELEM\\n * @param {Array<Array<ELEM>>} arr\\n * @return {Array<ELEM>}\\n */\\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAC;AAC9C;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,+BAA+B,EAAE,EAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,CAAC,6BAA6B,CAAC,CAAC,KAAK,EAAE,EAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK;AACvC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AACrB,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,KAAK,CAAC,KAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,EAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,EAAC;AACxG;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/array-b2d24238.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/array.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar array = require('./array-b2d24238.cjs');\n\n\n\nexports.appendTo = array.appendTo;\nexports.copy = array.copy;\nexports.create = array.create;\nexports.equalFlat = array.equalFlat;\nexports.every = array.every;\nexports.flatten = array.flatten;\nexports.from = array.from;\nexports.last = array.last;\nexports.some = array.some;\n///# sourceMappingURL=array.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/array.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/array.cjs.map":{"text":"{\"version\":3,\"file\":\"array.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/array.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/binary-ac8e39e2.cjs":{"text":"'use strict';\n\n/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nconst BIT1 = 1;\nconst BIT2 = 2;\nconst BIT3 = 4;\nconst BIT4 = 8;\nconst BIT5 = 16;\nconst BIT6 = 32;\nconst BIT7 = 64;\nconst BIT8 = 128;\nconst BIT9 = 256;\nconst BIT10 = 512;\nconst BIT11 = 1024;\nconst BIT12 = 2048;\nconst BIT13 = 4096;\nconst BIT14 = 8192;\nconst BIT15 = 16384;\nconst BIT16 = 32768;\nconst BIT17 = 65536;\nconst BIT18 = 1 << 17;\nconst BIT19 = 1 << 18;\nconst BIT20 = 1 << 19;\nconst BIT21 = 1 << 20;\nconst BIT22 = 1 << 21;\nconst BIT23 = 1 << 22;\nconst BIT24 = 1 << 23;\nconst BIT25 = 1 << 24;\nconst BIT26 = 1 << 25;\nconst BIT27 = 1 << 26;\nconst BIT28 = 1 << 27;\nconst BIT29 = 1 << 28;\nconst BIT30 = 1 << 29;\nconst BIT31 = 1 << 30;\nconst BIT32 = 1 << 31;\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nconst BITS0 = 0;\nconst BITS1 = 1;\nconst BITS2 = 3;\nconst BITS3 = 7;\nconst BITS4 = 15;\nconst BITS5 = 31;\nconst BITS6 = 63;\nconst BITS7 = 127;\nconst BITS8 = 255;\nconst BITS9 = 511;\nconst BITS10 = 1023;\nconst BITS11 = 2047;\nconst BITS12 = 4095;\nconst BITS13 = 8191;\nconst BITS14 = 16383;\nconst BITS15 = 32767;\nconst BITS16 = 65535;\nconst BITS17 = BIT18 - 1;\nconst BITS18 = BIT19 - 1;\nconst BITS19 = BIT20 - 1;\nconst BITS20 = BIT21 - 1;\nconst BITS21 = BIT22 - 1;\nconst BITS22 = BIT23 - 1;\nconst BITS23 = BIT24 - 1;\nconst BITS24 = BIT25 - 1;\nconst BITS25 = BIT26 - 1;\nconst BITS26 = BIT27 - 1;\nconst BITS27 = BIT28 - 1;\nconst BITS28 = BIT29 - 1;\nconst BITS29 = BIT30 - 1;\nconst BITS30 = BIT31 - 1;\n/**\n * @type {number}\n */\nconst BITS31 = 0x7FFFFFFF;\n/**\n * @type {number}\n */\nconst BITS32 = 0xFFFFFFFF;\n\nvar binary = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBIT1: BIT1,\n\tBIT2: BIT2,\n\tBIT3: BIT3,\n\tBIT4: BIT4,\n\tBIT5: BIT5,\n\tBIT6: BIT6,\n\tBIT7: BIT7,\n\tBIT8: BIT8,\n\tBIT9: BIT9,\n\tBIT10: BIT10,\n\tBIT11: BIT11,\n\tBIT12: BIT12,\n\tBIT13: BIT13,\n\tBIT14: BIT14,\n\tBIT15: BIT15,\n\tBIT16: BIT16,\n\tBIT17: BIT17,\n\tBIT18: BIT18,\n\tBIT19: BIT19,\n\tBIT20: BIT20,\n\tBIT21: BIT21,\n\tBIT22: BIT22,\n\tBIT23: BIT23,\n\tBIT24: BIT24,\n\tBIT25: BIT25,\n\tBIT26: BIT26,\n\tBIT27: BIT27,\n\tBIT28: BIT28,\n\tBIT29: BIT29,\n\tBIT30: BIT30,\n\tBIT31: BIT31,\n\tBIT32: BIT32,\n\tBITS0: BITS0,\n\tBITS1: BITS1,\n\tBITS2: BITS2,\n\tBITS3: BITS3,\n\tBITS4: BITS4,\n\tBITS5: BITS5,\n\tBITS6: BITS6,\n\tBITS7: BITS7,\n\tBITS8: BITS8,\n\tBITS9: BITS9,\n\tBITS10: BITS10,\n\tBITS11: BITS11,\n\tBITS12: BITS12,\n\tBITS13: BITS13,\n\tBITS14: BITS14,\n\tBITS15: BITS15,\n\tBITS16: BITS16,\n\tBITS17: BITS17,\n\tBITS18: BITS18,\n\tBITS19: BITS19,\n\tBITS20: BITS20,\n\tBITS21: BITS21,\n\tBITS22: BITS22,\n\tBITS23: BITS23,\n\tBITS24: BITS24,\n\tBITS25: BITS25,\n\tBITS26: BITS26,\n\tBITS27: BITS27,\n\tBITS28: BITS28,\n\tBITS29: BITS29,\n\tBITS30: BITS30,\n\tBITS31: BITS31,\n\tBITS32: BITS32\n});\n\nexports.BIT1 = BIT1;\nexports.BIT10 = BIT10;\nexports.BIT11 = BIT11;\nexports.BIT12 = BIT12;\nexports.BIT13 = BIT13;\nexports.BIT14 = BIT14;\nexports.BIT15 = BIT15;\nexports.BIT16 = BIT16;\nexports.BIT17 = BIT17;\nexports.BIT18 = BIT18;\nexports.BIT19 = BIT19;\nexports.BIT2 = BIT2;\nexports.BIT20 = BIT20;\nexports.BIT21 = BIT21;\nexports.BIT22 = BIT22;\nexports.BIT23 = BIT23;\nexports.BIT24 = BIT24;\nexports.BIT25 = BIT25;\nexports.BIT26 = BIT26;\nexports.BIT27 = BIT27;\nexports.BIT28 = BIT28;\nexports.BIT29 = BIT29;\nexports.BIT3 = BIT3;\nexports.BIT30 = BIT30;\nexports.BIT31 = BIT31;\nexports.BIT32 = BIT32;\nexports.BIT4 = BIT4;\nexports.BIT5 = BIT5;\nexports.BIT6 = BIT6;\nexports.BIT7 = BIT7;\nexports.BIT8 = BIT8;\nexports.BIT9 = BIT9;\nexports.BITS0 = BITS0;\nexports.BITS1 = BITS1;\nexports.BITS10 = BITS10;\nexports.BITS11 = BITS11;\nexports.BITS12 = BITS12;\nexports.BITS13 = BITS13;\nexports.BITS14 = BITS14;\nexports.BITS15 = BITS15;\nexports.BITS16 = BITS16;\nexports.BITS17 = BITS17;\nexports.BITS18 = BITS18;\nexports.BITS19 = BITS19;\nexports.BITS2 = BITS2;\nexports.BITS20 = BITS20;\nexports.BITS21 = BITS21;\nexports.BITS22 = BITS22;\nexports.BITS23 = BITS23;\nexports.BITS24 = BITS24;\nexports.BITS25 = BITS25;\nexports.BITS26 = BITS26;\nexports.BITS27 = BITS27;\nexports.BITS28 = BITS28;\nexports.BITS29 = BITS29;\nexports.BITS3 = BITS3;\nexports.BITS30 = BITS30;\nexports.BITS31 = BITS31;\nexports.BITS32 = BITS32;\nexports.BITS4 = BITS4;\nexports.BITS5 = BITS5;\nexports.BITS6 = BITS6;\nexports.BITS7 = BITS7;\nexports.BITS8 = BITS8;\nexports.BITS9 = BITS9;\nexports.binary = binary;\n///# sourceMappingURL=binary-ac8e39e2.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/binary-ac8e39e2.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/binary-ac8e39e2.cjs.map":{"text":"{\"version\":3,\"file\":\"binary-ac8e39e2.cjs\",\"sources\":[\"../binary.js\"],\"sourcesContent\":[\"/* eslint-env browser */\\n\\n/**\\n * Binary data constants.\\n *\\n * @module binary\\n */\\n\\n/**\\n * n-th bit activated.\\n *\\n * @type {number}\\n */\\nexport const BIT1 = 1\\nexport const BIT2 = 2\\nexport const BIT3 = 4\\nexport const BIT4 = 8\\nexport const BIT5 = 16\\nexport const BIT6 = 32\\nexport const BIT7 = 64\\nexport const BIT8 = 128\\nexport const BIT9 = 256\\nexport const BIT10 = 512\\nexport const BIT11 = 1024\\nexport const BIT12 = 2048\\nexport const BIT13 = 4096\\nexport const BIT14 = 8192\\nexport const BIT15 = 16384\\nexport const BIT16 = 32768\\nexport const BIT17 = 65536\\nexport const BIT18 = 1 << 17\\nexport const BIT19 = 1 << 18\\nexport const BIT20 = 1 << 19\\nexport const BIT21 = 1 << 20\\nexport const BIT22 = 1 << 21\\nexport const BIT23 = 1 << 22\\nexport const BIT24 = 1 << 23\\nexport const BIT25 = 1 << 24\\nexport const BIT26 = 1 << 25\\nexport const BIT27 = 1 << 26\\nexport const BIT28 = 1 << 27\\nexport const BIT29 = 1 << 28\\nexport const BIT30 = 1 << 29\\nexport const BIT31 = 1 << 30\\nexport const BIT32 = 1 << 31\\n\\n/**\\n * First n bits activated.\\n *\\n * @type {number}\\n */\\nexport const BITS0 = 0\\nexport const BITS1 = 1\\nexport const BITS2 = 3\\nexport const BITS3 = 7\\nexport const BITS4 = 15\\nexport const BITS5 = 31\\nexport const BITS6 = 63\\nexport const BITS7 = 127\\nexport const BITS8 = 255\\nexport const BITS9 = 511\\nexport const BITS10 = 1023\\nexport const BITS11 = 2047\\nexport const BITS12 = 4095\\nexport const BITS13 = 8191\\nexport const BITS14 = 16383\\nexport const BITS15 = 32767\\nexport const BITS16 = 65535\\nexport const BITS17 = BIT18 - 1\\nexport const BITS18 = BIT19 - 1\\nexport const BITS19 = BIT20 - 1\\nexport const BITS20 = BIT21 - 1\\nexport const BITS21 = BIT22 - 1\\nexport const BITS22 = BIT23 - 1\\nexport const BITS23 = BIT24 - 1\\nexport const BITS24 = BIT25 - 1\\nexport const BITS25 = BIT26 - 1\\nexport const BITS26 = BIT27 - 1\\nexport const BITS27 = BIT28 - 1\\nexport const BITS28 = BIT29 - 1\\nexport const BITS29 = BIT30 - 1\\nexport const BITS30 = BIT31 - 1\\n/**\\n * @type {number}\\n */\\nexport const BITS31 = 0x7FFFFFFF\\n/**\\n * @type {number}\\n */\\nexport const BITS32 = 0xFFFFFFFF\\n\"],\"names\":[],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/binary-ac8e39e2.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/binary.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar binary = require('./binary-ac8e39e2.cjs');\n\n\n\nexports.BIT1 = binary.BIT1;\nexports.BIT10 = binary.BIT10;\nexports.BIT11 = binary.BIT11;\nexports.BIT12 = binary.BIT12;\nexports.BIT13 = binary.BIT13;\nexports.BIT14 = binary.BIT14;\nexports.BIT15 = binary.BIT15;\nexports.BIT16 = binary.BIT16;\nexports.BIT17 = binary.BIT17;\nexports.BIT18 = binary.BIT18;\nexports.BIT19 = binary.BIT19;\nexports.BIT2 = binary.BIT2;\nexports.BIT20 = binary.BIT20;\nexports.BIT21 = binary.BIT21;\nexports.BIT22 = binary.BIT22;\nexports.BIT23 = binary.BIT23;\nexports.BIT24 = binary.BIT24;\nexports.BIT25 = binary.BIT25;\nexports.BIT26 = binary.BIT26;\nexports.BIT27 = binary.BIT27;\nexports.BIT28 = binary.BIT28;\nexports.BIT29 = binary.BIT29;\nexports.BIT3 = binary.BIT3;\nexports.BIT30 = binary.BIT30;\nexports.BIT31 = binary.BIT31;\nexports.BIT32 = binary.BIT32;\nexports.BIT4 = binary.BIT4;\nexports.BIT5 = binary.BIT5;\nexports.BIT6 = binary.BIT6;\nexports.BIT7 = binary.BIT7;\nexports.BIT8 = binary.BIT8;\nexports.BIT9 = binary.BIT9;\nexports.BITS0 = binary.BITS0;\nexports.BITS1 = binary.BITS1;\nexports.BITS10 = binary.BITS10;\nexports.BITS11 = binary.BITS11;\nexports.BITS12 = binary.BITS12;\nexports.BITS13 = binary.BITS13;\nexports.BITS14 = binary.BITS14;\nexports.BITS15 = binary.BITS15;\nexports.BITS16 = binary.BITS16;\nexports.BITS17 = binary.BITS17;\nexports.BITS18 = binary.BITS18;\nexports.BITS19 = binary.BITS19;\nexports.BITS2 = binary.BITS2;\nexports.BITS20 = binary.BITS20;\nexports.BITS21 = binary.BITS21;\nexports.BITS22 = binary.BITS22;\nexports.BITS23 = binary.BITS23;\nexports.BITS24 = binary.BITS24;\nexports.BITS25 = binary.BITS25;\nexports.BITS26 = binary.BITS26;\nexports.BITS27 = binary.BITS27;\nexports.BITS28 = binary.BITS28;\nexports.BITS29 = binary.BITS29;\nexports.BITS3 = binary.BITS3;\nexports.BITS30 = binary.BITS30;\nexports.BITS31 = binary.BITS31;\nexports.BITS32 = binary.BITS32;\nexports.BITS4 = binary.BITS4;\nexports.BITS5 = binary.BITS5;\nexports.BITS6 = binary.BITS6;\nexports.BITS7 = binary.BITS7;\nexports.BITS8 = binary.BITS8;\nexports.BITS9 = binary.BITS9;\n///# sourceMappingURL=binary.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/binary.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/binary.cjs.map":{"text":"{\"version\":3,\"file\":\"binary.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/binary.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/broadcastchannel-8a61b21a.cjs":{"text":"'use strict';\n\nvar map = require('./map-28a001c9.cjs');\nvar encoding = require('./buffer-ac2cdedf.cjs');\nvar storage = require('./storage.cjs');\n\n/* eslint-env browser */\n\n/**\n * @typedef {Object} Channel\n * @property {Set<Function>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map();\n\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room;\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null;\n    storage.onChange(e => e.key === room && this.onmessage !== null && this.onmessage({ data: encoding.fromBase64(e.newValue || '') }));\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, encoding.toBase64(encoding.createUint8ArrayFromArrayBuffer(buf)));\n  }\n}\n\n// Use BroadcastChannel or Polyfill\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel;\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = new Set();\n    const bc = new BC(room);\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data));\n    return {\n      bc, subs\n    }\n  });\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any):any} f\n */\nconst subscribe = (room, f) => getChannel(room).subs.add(f);\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any):any} f\n */\nconst unsubscribe = (room, f) => getChannel(room).subs.delete(f);\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n */\nconst publish = (room, data) => {\n  const c = getChannel(room);\n  c.bc.postMessage(data);\n  c.subs.forEach(sub => sub(data));\n};\n\nvar broadcastchannel = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  subscribe: subscribe,\n  unsubscribe: unsubscribe,\n  publish: publish\n});\n\nexports.broadcastchannel = broadcastchannel;\nexports.publish = publish;\nexports.subscribe = subscribe;\nexports.unsubscribe = unsubscribe;\n///# sourceMappingURL=broadcastchannel-8a61b21a.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/broadcastchannel-8a61b21a.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/broadcastchannel-8a61b21a.cjs.map":{"text":"{\"version\":3,\"file\":\"broadcastchannel-8a61b21a.cjs\",\"sources\":[\"../broadcastchannel.js\"],\"sourcesContent\":[\"/* eslint-env browser */\\n\\n/**\\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\\n *\\n * ```js\\n * // In browser window A:\\n * broadcastchannel.subscribe('my events', data => console.log(data))\\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\\n *\\n * // In browser window B:\\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\\n * ```\\n *\\n * @module broadcastchannel\\n */\\n\\n// @todo before next major: use Uint8Array instead as buffer object\\n\\nimport * as map from './map.js'\\nimport * as buffer from './buffer.js'\\nimport * as storage from './storage.js'\\n\\n/**\\n * @typedef {Object} Channel\\n * @property {Set<Function>} Channel.subs\\n * @property {any} Channel.bc\\n */\\n\\n/**\\n * @type {Map<string, Channel>}\\n */\\nconst channels = new Map()\\n\\nclass LocalStoragePolyfill {\\n  /**\\n   * @param {string} room\\n   */\\n  constructor (room) {\\n    this.room = room\\n    /**\\n     * @type {null|function({data:ArrayBuffer}):void}\\n     */\\n    this.onmessage = null\\n    storage.onChange(e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') }))\\n  }\\n\\n  /**\\n   * @param {ArrayBuffer} buf\\n   */\\n  postMessage (buf) {\\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\\n  }\\n}\\n\\n// Use BroadcastChannel or Polyfill\\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\\n\\n/**\\n * @param {string} room\\n * @return {Channel}\\n */\\nconst getChannel = room =>\\n  map.setIfUndefined(channels, room, () => {\\n    const subs = new Set()\\n    const bc = new BC(room)\\n    /**\\n     * @param {{data:ArrayBuffer}} e\\n     */\\n    bc.onmessage = e => subs.forEach(sub => sub(e.data))\\n    return {\\n      bc, subs\\n    }\\n  })\\n\\n/**\\n * Subscribe to global `publish` events.\\n *\\n * @function\\n * @param {string} room\\n * @param {function(any):any} f\\n */\\nexport const subscribe = (room, f) => getChannel(room).subs.add(f)\\n\\n/**\\n * Unsubscribe from `publish` global events.\\n *\\n * @function\\n * @param {string} room\\n * @param {function(any):any} f\\n */\\nexport const unsubscribe = (room, f) => getChannel(room).subs.delete(f)\\n\\n/**\\n * Publish data to all subscribers (including subscribers on this tab)\\n *\\n * @function\\n * @param {string} room\\n * @param {any} data\\n */\\nexport const publish = (room, data) => {\\n  const c = getChannel(room)\\n  c.bc.postMessage(data)\\n  c.subs.forEach(sub => sub(data))\\n}\\n\"],\"names\":[\"storage.onChange\",\"buffer.fromBase64\",\"storage.varStorage\",\"buffer.toBase64\",\"buffer.createUint8ArrayFromArrayBuffer\",\"map.setIfUndefined\"],\"mappings\":\";;;;;;AAAA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,GAAG,IAAI,GAAG,GAAE;AAC1B;AACA,MAAM,oBAAoB,CAAC;AAC3B;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE;AACrB,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;AACpB;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,KAAI;AACzB,IAAIA,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAEC,mBAAiB,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,CAAC,EAAC;AACrI,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;AACpB,IAAIC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAEC,iBAAe,CAACC,wCAAsC,CAAC,GAAG,CAAC,CAAC,EAAC;AACvG,GAAG;AACH,CAAC;AACD;AACA;AACA,MAAM,EAAE,GAAG,OAAO,gBAAgB,KAAK,WAAW,GAAG,oBAAoB,GAAG,iBAAgB;AAC5F;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,GAAG,IAAI;AACvB,EAAEC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM;AAC3C,IAAI,MAAM,IAAI,GAAG,IAAI,GAAG,GAAE;AAC1B,IAAI,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,EAAC;AAC3B;AACA;AACA;AACA,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;AACxD,IAAI,OAAO;AACX,MAAM,EAAE,EAAE,IAAI;AACd,KAAK;AACL,GAAG,EAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK;AACvC,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,EAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,EAAC;AACxB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,EAAC;AAClC;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/broadcastchannel-8a61b21a.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/broadcastchannel.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./map-28a001c9.cjs');\nrequire('./buffer-ac2cdedf.cjs');\nrequire('./storage.cjs');\nvar broadcastchannel = require('./broadcastchannel-8a61b21a.cjs');\nrequire('./string-f3c3d805.cjs');\nrequire('./environment-7e2ffaea.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./binary-ac8e39e2.cjs');\nrequire('./math-08e068f9.cjs');\nrequire('./number-24f1eabe.cjs');\n\n\n\nexports.publish = broadcastchannel.publish;\nexports.subscribe = broadcastchannel.subscribe;\nexports.unsubscribe = broadcastchannel.unsubscribe;\n///# sourceMappingURL=broadcastchannel.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/broadcastchannel.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/broadcastchannel.cjs.map":{"text":"{\"version\":3,\"file\":\"broadcastchannel.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/broadcastchannel.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/buffer-ac2cdedf.cjs":{"text":"'use strict';\n\nvar string = require('./string-f3c3d805.cjs');\nvar environment = require('./environment-7e2ffaea.cjs');\nvar binary = require('./binary-ac8e39e2.cjs');\nvar math = require('./math-08e068f9.cjs');\nvar number = require('./number-24f1eabe.cjs');\n\n/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nclass Encoder {\n  constructor () {\n    this.cpos = 0;\n    this.cbuf = new Uint8Array(100);\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = [];\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nconst createEncoder = () => new Encoder();\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nconst length = encoder => {\n  let len = encoder.cpos;\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length;\n  }\n  return len\n};\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nconst toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder));\n  let curPos = 0;\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i];\n    uint8arr.set(d, curPos);\n    curPos += d.length;\n  }\n  uint8arr.set(createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos);\n  return uint8arr\n};\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length;\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos));\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2);\n    encoder.cpos = 0;\n  }\n};\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nconst write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length;\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf);\n    encoder.cbuf = new Uint8Array(bufferLen * 2);\n    encoder.cpos = 0;\n  }\n  encoder.cbuf[encoder.cpos++] = num;\n};\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nconst set = (encoder, pos, num) => {\n  let buffer = null;\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i];\n    if (pos < b.length) {\n      buffer = b; // found buffer\n    } else {\n      pos -= b.length;\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf;\n  }\n  buffer[pos] = num;\n};\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint8 = write;\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nconst setUint8 = set;\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8);\n  write(encoder, (num >>> 8) & binary.BITS8);\n};\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nconst setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8);\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8);\n};\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8);\n    num >>>= 8;\n  }\n};\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8);\n  }\n};\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nconst setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8);\n    num >>>= 8;\n  }\n};\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num));\n    num >>>= 7;\n  }\n  write(encoder, binary.BITS7 & num);\n};\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * We don't use zig-zag encoding because we want to keep the option open\n * to use the same function for BigInt and 53bit integers (doubles).\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num);\n  if (isNegative) {\n    num = -num;\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num));\n  num >>>= 6;\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num));\n    num >>>= 7;\n  }\n};\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nconst writeVarString = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str));\n  const len = encodedString.length;\n  writeVarUint(encoder, len);\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)));\n  }\n};\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nconst writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append));\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nconst writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length;\n  const cpos = encoder.cpos;\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length);\n  const rightCopyLen = uint8Array.length - leftCopyLen;\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos);\n  encoder.cpos += leftCopyLen;\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf);\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen));\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen));\n    encoder.cpos = rightCopyLen;\n  }\n};\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nconst writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength);\n  writeUint8Array(encoder, uint8Array);\n};\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nconst writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len);\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len);\n  encoder.cpos += len;\n  return dview\n};\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nconst writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false);\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nconst writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false);\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nconst writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false);\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nconst writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false);\n\nconst floatTestBed = new DataView(new ArrayBuffer(4));\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num);\n  return floatTestBed.getFloat32(0) === num\n};\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nconst writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119);\n      writeVarString(encoder, data);\n      break\n    case 'number':\n      if (number.isInteger(data) && data <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125);\n        writeVarInt(encoder, data);\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124);\n        writeFloat32(encoder, data);\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123);\n        writeFloat64(encoder, data);\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122);\n      writeBigInt64(encoder, data);\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126);\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117);\n        writeVarUint(encoder, data.length);\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i]);\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116);\n        writeVarUint8Array(encoder, data);\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118);\n        const keys = Object.keys(data);\n        writeVarUint(encoder, keys.length);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          writeVarString(encoder, key);\n          writeAny(encoder, data[key]);\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121);\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127);\n  }\n};\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nclass RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super();\n    /**\n     * The writer\n     */\n    this.w = writer;\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null;\n    this.count = 0;\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++;\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1); // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1;\n      // write first value\n      this.w(this, v);\n      this.s = v;\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nclass IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super();\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s);\n    this.s = v;\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nclass RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super();\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n    this.count = 0;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++;\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1); // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1;\n      // write first value\n      writeVarInt(this, v - this.s);\n      this.s = v;\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s);\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2); // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n};\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nclass UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder();\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++;\n    } else {\n      flushUintOptRleEncoder(this);\n      this.count = 1;\n      this.s = v;\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this);\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nclass IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder();\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++;\n    } else {\n      flushUintOptRleEncoder(this);\n      this.count = 1;\n      this.s = v;\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this);\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1);\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff);\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2); // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n};\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nclass IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder();\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n    this.diff = 0;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v;\n      this.count++;\n    } else {\n      flushIntDiffOptRleEncoder(this);\n      this.count = 1;\n      this.diff = v - this.s;\n      this.s = v;\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this);\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nclass StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = [];\n    this.s = '';\n    this.lensE = new UintOptRleEncoder();\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string;\n    if (this.s.length > 19) {\n      this.sarr.push(this.s);\n      this.s = '';\n    }\n    this.lensE.write(string.length);\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder();\n    this.sarr.push(this.s);\n    this.s = '';\n    writeVarString(encoder, this.sarr.join(''));\n    writeUint8Array(encoder, this.lensE.toUint8Array());\n    return toUint8Array(encoder)\n  }\n}\n\nvar encoding = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Encoder: Encoder,\n  createEncoder: createEncoder,\n  length: length,\n  toUint8Array: toUint8Array,\n  write: write,\n  set: set,\n  writeUint8: writeUint8,\n  setUint8: setUint8,\n  writeUint16: writeUint16,\n  setUint16: setUint16,\n  writeUint32: writeUint32,\n  writeUint32BigEndian: writeUint32BigEndian,\n  setUint32: setUint32,\n  writeVarUint: writeVarUint,\n  writeVarInt: writeVarInt,\n  writeVarString: writeVarString,\n  writeBinaryEncoder: writeBinaryEncoder,\n  writeUint8Array: writeUint8Array,\n  writeVarUint8Array: writeVarUint8Array,\n  writeOnDataView: writeOnDataView,\n  writeFloat32: writeFloat32,\n  writeFloat64: writeFloat64,\n  writeBigInt64: writeBigInt64,\n  writeBigUint64: writeBigUint64,\n  writeAny: writeAny,\n  RleEncoder: RleEncoder,\n  IntDiffEncoder: IntDiffEncoder,\n  RleIntDiffEncoder: RleIntDiffEncoder,\n  UintOptRleEncoder: UintOptRleEncoder,\n  IncUintOptRleEncoder: IncUintOptRleEncoder,\n  IntDiffOptRleEncoder: IntDiffOptRleEncoder,\n  StringEncoder: StringEncoder\n});\n\n/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nclass Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array;\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0;\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nconst createDecoder = uint8Array => new Decoder(uint8Array);\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nconst hasContent = decoder => decoder.pos !== decoder.arr.length;\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nconst clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr);\n  _decoder.pos = newPos;\n  return _decoder\n};\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nconst readUint8Array = (decoder, len) => {\n  const view = createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len);\n  decoder.pos += len;\n  return view\n};\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nconst readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder));\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nconst readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos);\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nconst skip8 = decoder => decoder.pos++;\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nconst readUint8 = decoder => decoder.arr[decoder.pos++];\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8);\n  decoder.pos += 2;\n  return uint\n};\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0;\n  decoder.pos += 4;\n  return uint\n};\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0;\n  decoder.pos += 4;\n  return uint\n};\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst peekUint8 = decoder => decoder.arr[decoder.pos];\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8);\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0;\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nconst readVarUint = decoder => {\n  let num = 0;\n  let len = 0;\n  while (true) {\n    const r = decoder.arr[decoder.pos++];\n    num = num | ((r & binary.BITS7) << len);\n    len += 7;\n    if (r < binary.BIT8) {\n      return num >>> 0 // return unsigned number!\n    }\n    /* istanbul ignore if */\n    if (len > 35) {\n      throw new Error('Integer out of range!')\n    }\n  }\n};\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nconst readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++];\n  let num = r & binary.BITS6;\n  let len = 6;\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1;\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++];\n    num = num | ((r & binary.BITS7) << len);\n    len += 7;\n    if (r < binary.BIT8) {\n      return sign * (num >>> 0)\n    }\n    /* istanbul ignore if */\n    if (len > 41) {\n      throw new Error('Integer out of range!')\n    }\n  }\n};\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nconst peekVarUint = decoder => {\n  const pos = decoder.pos;\n  const s = readVarUint(decoder);\n  decoder.pos = pos;\n  return s\n};\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nconst peekVarInt = decoder => {\n  const pos = decoder.pos;\n  const s = readVarInt(decoder);\n  decoder.pos = pos;\n  return s\n};\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\nconst readVarString = decoder => {\n  let remainingLen = readVarUint(decoder);\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)); // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder));\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen);\n        decoder.pos += nextLen;\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes));\n        remainingLen -= nextLen;\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n};\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nconst peekVarString = decoder => {\n  const pos = decoder.pos;\n  const s = readVarString(decoder);\n  decoder.pos = pos;\n  return s\n};\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nconst readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len);\n  decoder.pos += len;\n  return dv\n};\n\n/**\n * @param {Decoder} decoder\n */\nconst readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false);\n\n/**\n * @param {Decoder} decoder\n */\nconst readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false);\n\n/**\n * @param {Decoder} decoder\n */\nconst readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false);\n\n/**\n * @param {Decoder} decoder\n */\nconst readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false);\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder);\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {};\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder);\n      obj[key] = readAny(decoder);\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder);\n    const arr = [];\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder));\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n];\n\n/**\n * @param {Decoder} decoder\n */\nconst readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder);\n\n/**\n * T must not be null.\n *\n * @template T\n */\nclass RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array);\n    /**\n     * The reader\n     */\n    this.reader = reader;\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null;\n    this.count = 0;\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this);\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1; // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1; // read the current value forever\n      }\n    }\n    this.count--;\n    return /** @type {T} */ (this.s)\n  }\n}\n\nclass IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array);\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this);\n    return this.s\n  }\n}\n\nclass RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array);\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n    this.count = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this);\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1; // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1; // read the current value forever\n      }\n    }\n    this.count--;\n    return /** @type {number} */ (this.s)\n  }\n}\n\nclass UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array);\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this);\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s);\n      this.count = 1;\n      if (isNegative) {\n        this.s = -this.s;\n        this.count = readVarUint(this) + 2;\n      }\n    }\n    this.count--;\n    return /** @type {number} */ (this.s)\n  }\n}\n\nclass IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array);\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this);\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s);\n      this.count = 1;\n      if (isNegative) {\n        this.s = -this.s;\n        this.count = readVarUint(this) + 2;\n      }\n    }\n    this.count--;\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nclass IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array);\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n    this.diff = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this);\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1;\n      this.diff = diff >> 1;\n      this.count = 1;\n      if (hasCount) {\n        this.count = readVarUint(this) + 2;\n      }\n    }\n    this.s += this.diff;\n    this.count--;\n    return this.s\n  }\n}\n\nclass StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array);\n    this.str = readVarString(this.decoder);\n    /**\n     * @type {number}\n     */\n    this.spos = 0;\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read();\n    const res = this.str.slice(this.spos, end);\n    this.spos = end;\n    return res\n  }\n}\n\nvar decoding = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decoder: Decoder,\n  createDecoder: createDecoder,\n  hasContent: hasContent,\n  clone: clone,\n  readUint8Array: readUint8Array,\n  readVarUint8Array: readVarUint8Array,\n  readTailAsUint8Array: readTailAsUint8Array,\n  skip8: skip8,\n  readUint8: readUint8,\n  readUint16: readUint16,\n  readUint32: readUint32,\n  readUint32BigEndian: readUint32BigEndian,\n  peekUint8: peekUint8,\n  peekUint16: peekUint16,\n  peekUint32: peekUint32,\n  readVarUint: readVarUint,\n  readVarInt: readVarInt,\n  peekVarUint: peekVarUint,\n  peekVarInt: peekVarInt,\n  readVarString: readVarString,\n  peekVarString: peekVarString,\n  readFromDataView: readFromDataView,\n  readFloat32: readFloat32,\n  readFloat64: readFloat64,\n  readBigInt64: readBigInt64,\n  readBigUint64: readBigUint64,\n  readAny: readAny,\n  RleDecoder: RleDecoder,\n  IntDiffDecoder: IntDiffDecoder,\n  RleIntDiffDecoder: RleIntDiffDecoder,\n  UintOptRleDecoder: UintOptRleDecoder,\n  IncUintOptRleDecoder: IncUintOptRleDecoder,\n  IntDiffOptRleDecoder: IntDiffOptRleDecoder,\n  StringDecoder: StringDecoder\n});\n\n/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\n/**\n * @param {number} len\n */\nconst createUint8ArrayFromLen = len => new Uint8Array(len);\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nconst createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length);\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nconst createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer);\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = '';\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i]);\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n};\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64');\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s);\n  const bytes = createUint8ArrayFromLen(a.length);\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i);\n  }\n  return bytes\n};\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64');\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n};\n\n/* istanbul ignore next */\nconst toBase64 = environment.isBrowser ? toBase64Browser : toBase64Node;\n\n/* istanbul ignore next */\nconst fromBase64 = environment.isBrowser ? fromBase64Browser : fromBase64Node;\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nconst copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength);\n  newBuf.set(uint8Array);\n  return newBuf\n};\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nconst encodeAny = data => {\n  const encoder = createEncoder();\n  writeAny(encoder, data);\n  return toUint8Array(encoder)\n};\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nconst decodeAny = buf => readAny(createDecoder(buf));\n\nvar buffer = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createUint8ArrayFromLen: createUint8ArrayFromLen,\n  createUint8ArrayViewFromArrayBuffer: createUint8ArrayViewFromArrayBuffer,\n  createUint8ArrayFromArrayBuffer: createUint8ArrayFromArrayBuffer,\n  toBase64: toBase64,\n  fromBase64: fromBase64,\n  copyUint8Array: copyUint8Array,\n  encodeAny: encodeAny,\n  decodeAny: decodeAny\n});\n\nexports.Decoder = Decoder;\nexports.Encoder = Encoder;\nexports.IncUintOptRleDecoder = IncUintOptRleDecoder;\nexports.IncUintOptRleEncoder = IncUintOptRleEncoder;\nexports.IntDiffDecoder = IntDiffDecoder;\nexports.IntDiffEncoder = IntDiffEncoder;\nexports.IntDiffOptRleDecoder = IntDiffOptRleDecoder;\nexports.IntDiffOptRleEncoder = IntDiffOptRleEncoder;\nexports.RleDecoder = RleDecoder;\nexports.RleEncoder = RleEncoder;\nexports.RleIntDiffDecoder = RleIntDiffDecoder;\nexports.RleIntDiffEncoder = RleIntDiffEncoder;\nexports.StringDecoder = StringDecoder;\nexports.StringEncoder = StringEncoder;\nexports.UintOptRleDecoder = UintOptRleDecoder;\nexports.UintOptRleEncoder = UintOptRleEncoder;\nexports.buffer = buffer;\nexports.clone = clone;\nexports.copyUint8Array = copyUint8Array;\nexports.createDecoder = createDecoder;\nexports.createEncoder = createEncoder;\nexports.createUint8ArrayFromArrayBuffer = createUint8ArrayFromArrayBuffer;\nexports.createUint8ArrayFromLen = createUint8ArrayFromLen;\nexports.createUint8ArrayViewFromArrayBuffer = createUint8ArrayViewFromArrayBuffer;\nexports.decodeAny = decodeAny;\nexports.decoding = decoding;\nexports.encodeAny = encodeAny;\nexports.encoding = encoding;\nexports.fromBase64 = fromBase64;\nexports.hasContent = hasContent;\nexports.length = length;\nexports.peekUint16 = peekUint16;\nexports.peekUint32 = peekUint32;\nexports.peekUint8 = peekUint8;\nexports.peekVarInt = peekVarInt;\nexports.peekVarString = peekVarString;\nexports.peekVarUint = peekVarUint;\nexports.readAny = readAny;\nexports.readBigInt64 = readBigInt64;\nexports.readBigUint64 = readBigUint64;\nexports.readFloat32 = readFloat32;\nexports.readFloat64 = readFloat64;\nexports.readFromDataView = readFromDataView;\nexports.readTailAsUint8Array = readTailAsUint8Array;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.readUint32BigEndian = readUint32BigEndian;\nexports.readUint8 = readUint8;\nexports.readUint8Array = readUint8Array;\nexports.readVarInt = readVarInt;\nexports.readVarString = readVarString;\nexports.readVarUint = readVarUint;\nexports.readVarUint8Array = readVarUint8Array;\nexports.set = set;\nexports.setUint16 = setUint16;\nexports.setUint32 = setUint32;\nexports.setUint8 = setUint8;\nexports.skip8 = skip8;\nexports.toBase64 = toBase64;\nexports.toUint8Array = toUint8Array;\nexports.write = write;\nexports.writeAny = writeAny;\nexports.writeBigInt64 = writeBigInt64;\nexports.writeBigUint64 = writeBigUint64;\nexports.writeBinaryEncoder = writeBinaryEncoder;\nexports.writeFloat32 = writeFloat32;\nexports.writeFloat64 = writeFloat64;\nexports.writeOnDataView = writeOnDataView;\nexports.writeUint16 = writeUint16;\nexports.writeUint32 = writeUint32;\nexports.writeUint32BigEndian = writeUint32BigEndian;\nexports.writeUint8 = writeUint8;\nexports.writeUint8Array = writeUint8Array;\nexports.writeVarInt = writeVarInt;\nexports.writeVarString = writeVarString;\nexports.writeVarUint = writeVarUint;\nexports.writeVarUint8Array = writeVarUint8Array;\n///# sourceMappingURL=buffer-ac2cdedf.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/buffer-ac2cdedf.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/buffer-ac2cdedf.cjs.map":{"text":"{\"version\":3,\"file\":\"buffer-ac2cdedf.cjs\",\"sources\":[\"../encoding.js\",\"../decoding.js\",\"../buffer.js\"],\"sourcesContent\":[\"/**\\n * Efficient schema-less binary encoding with support for variable length encoding.\\n *\\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\\n *\\n * Encodes numbers in little-endian order (least to most significant byte order)\\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\\n * which is also used in Protocol Buffers.\\n *\\n * ```js\\n * // encoding step\\n * const encoder = new encoding.createEncoder()\\n * encoding.writeVarUint(encoder, 256)\\n * encoding.writeVarString(encoder, 'Hello world!')\\n * const buf = encoding.toUint8Array(encoder)\\n * ```\\n *\\n * ```js\\n * // decoding step\\n * const decoder = new decoding.createDecoder(buf)\\n * decoding.readVarUint(decoder) // => 256\\n * decoding.readVarString(decoder) // => 'Hello world!'\\n * decoding.hasContent(decoder) // => false - all data is read\\n * ```\\n *\\n * @module encoding\\n */\\n\\nimport * as buffer from './buffer.js'\\nimport * as math from './math.js'\\nimport * as number from './number.js'\\nimport * as binary from './binary.js'\\n\\n/**\\n * A BinaryEncoder handles the encoding to an Uint8Array.\\n */\\nexport class Encoder {\\n  constructor () {\\n    this.cpos = 0\\n    this.cbuf = new Uint8Array(100)\\n    /**\\n     * @type {Array<Uint8Array>}\\n     */\\n    this.bufs = []\\n  }\\n}\\n\\n/**\\n * @function\\n * @return {Encoder}\\n */\\nexport const createEncoder = () => new Encoder()\\n\\n/**\\n * The current length of the encoded data.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @return {number}\\n */\\nexport const length = encoder => {\\n  let len = encoder.cpos\\n  for (let i = 0; i < encoder.bufs.length; i++) {\\n    len += encoder.bufs[i].length\\n  }\\n  return len\\n}\\n\\n/**\\n * Transform to Uint8Array.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @return {Uint8Array} The created ArrayBuffer.\\n */\\nexport const toUint8Array = encoder => {\\n  const uint8arr = new Uint8Array(length(encoder))\\n  let curPos = 0\\n  for (let i = 0; i < encoder.bufs.length; i++) {\\n    const d = encoder.bufs[i]\\n    uint8arr.set(d, curPos)\\n    curPos += d.length\\n  }\\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\\n  return uint8arr\\n}\\n\\n/**\\n * Verify that it is possible to write `len` bytes wtihout checking. If\\n * necessary, a new Buffer with the required length is attached.\\n *\\n * @param {Encoder} encoder\\n * @param {number} len\\n */\\nconst verifyLen = (encoder, len) => {\\n  const bufferLen = encoder.cbuf.length\\n  if (bufferLen - encoder.cpos < len) {\\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\\n    encoder.cpos = 0\\n  }\\n}\\n\\n/**\\n * Write one byte to the encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The byte that is to be encoded.\\n */\\nexport const write = (encoder, num) => {\\n  const bufferLen = encoder.cbuf.length\\n  if (encoder.cpos === bufferLen) {\\n    encoder.bufs.push(encoder.cbuf)\\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\\n    encoder.cpos = 0\\n  }\\n  encoder.cbuf[encoder.cpos++] = num\\n}\\n\\n/**\\n * Write one byte at a specific position.\\n * Position must already be written (i.e. encoder.length > pos)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos Position to which to write data\\n * @param {number} num Unsigned 8-bit integer\\n */\\nexport const set = (encoder, pos, num) => {\\n  let buffer = null\\n  // iterate all buffers and adjust position\\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\\n    const b = encoder.bufs[i]\\n    if (pos < b.length) {\\n      buffer = b // found buffer\\n    } else {\\n      pos -= b.length\\n    }\\n  }\\n  if (buffer === null) {\\n    // use current buffer\\n    buffer = encoder.cbuf\\n  }\\n  buffer[pos] = num\\n}\\n\\n/**\\n * Write one byte as an unsigned integer.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint8 = write\\n\\n/**\\n * Write one byte as an unsigned Integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint8 = set\\n\\n/**\\n * Write two bytes as an unsigned integer.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint16 = (encoder, num) => {\\n  write(encoder, num & binary.BITS8)\\n  write(encoder, (num >>> 8) & binary.BITS8)\\n}\\n/**\\n * Write two bytes as an unsigned integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint16 = (encoder, pos, num) => {\\n  set(encoder, pos, num & binary.BITS8)\\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint32 = (encoder, num) => {\\n  for (let i = 0; i < 4; i++) {\\n    write(encoder, num & binary.BITS8)\\n    num >>>= 8\\n  }\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint32BigEndian = (encoder, num) => {\\n  for (let i = 3; i >= 0; i--) {\\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\\n  }\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint32 = (encoder, pos, num) => {\\n  for (let i = 0; i < 4; i++) {\\n    set(encoder, pos + i, num & binary.BITS8)\\n    num >>>= 8\\n  }\\n}\\n\\n/**\\n * Write a variable length unsigned integer.\\n *\\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeVarUint = (encoder, num) => {\\n  while (num > binary.BITS7) {\\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\\n    num >>>= 7\\n  }\\n  write(encoder, binary.BITS7 & num)\\n}\\n\\n/**\\n * Write a variable length integer.\\n *\\n * Encodes integers in the range from [-2147483648, -2147483647].\\n *\\n * We don't use zig-zag encoding because we want to keep the option open\\n * to use the same function for BigInt and 53bit integers (doubles).\\n *\\n * We use the 7th bit instead for signaling that this is a negative number.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeVarInt = (encoder, num) => {\\n  const isNegative = math.isNegativeZero(num)\\n  if (isNegative) {\\n    num = -num\\n  }\\n  //             |- whether to continue reading         |- whether is negative     |- number\\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\\n  num >>>= 6\\n  // We don't need to consider the case of num === 0 so we can use a different\\n  // pattern here than above.\\n  while (num > 0) {\\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\\n    num >>>= 7\\n  }\\n}\\n\\n/**\\n * Write a variable length string.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {String} str The string that is to be encoded.\\n */\\nexport const writeVarString = (encoder, str) => {\\n  const encodedString = unescape(encodeURIComponent(str))\\n  const len = encodedString.length\\n  writeVarUint(encoder, len)\\n  for (let i = 0; i < len; i++) {\\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\\n  }\\n}\\n\\n/**\\n * Write the content of another Encoder.\\n *\\n * @TODO: can be improved!\\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\\n *                Encoders start with a rather big initial buffer.\\n *\\n * @function\\n * @param {Encoder} encoder The enUint8Arr\\n * @param {Encoder} append The BinaryEncoder to be written.\\n */\\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\\n\\n/**\\n * Append fixed-length Uint8Array to the encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {Uint8Array} uint8Array\\n */\\nexport const writeUint8Array = (encoder, uint8Array) => {\\n  const bufferLen = encoder.cbuf.length\\n  const cpos = encoder.cpos\\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\\n  const rightCopyLen = uint8Array.length - leftCopyLen\\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\\n  encoder.cpos += leftCopyLen\\n  if (rightCopyLen > 0) {\\n    // Still something to write, write right half..\\n    // Append new buffer\\n    encoder.bufs.push(encoder.cbuf)\\n    // must have at least size of remaining buffer\\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\\n    // copy array\\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\\n    encoder.cpos = rightCopyLen\\n  }\\n}\\n\\n/**\\n * Append an Uint8Array to Encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {Uint8Array} uint8Array\\n */\\nexport const writeVarUint8Array = (encoder, uint8Array) => {\\n  writeVarUint(encoder, uint8Array.byteLength)\\n  writeUint8Array(encoder, uint8Array)\\n}\\n\\n/**\\n * Create an DataView of the next `len` bytes. Use it to write data after\\n * calling this function.\\n *\\n * ```js\\n * // write float32 using DataView\\n * const dv = writeOnDataView(encoder, 4)\\n * dv.setFloat32(0, 1.1)\\n * // read float32 using DataView\\n * const dv = readFromDataView(encoder, 4)\\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\\n * ```\\n *\\n * @param {Encoder} encoder\\n * @param {number} len\\n * @return {DataView}\\n */\\nexport const writeOnDataView = (encoder, len) => {\\n  verifyLen(encoder, len)\\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\\n  encoder.cpos += len\\n  return dview\\n}\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {number} num\\n */\\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {number} num\\n */\\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {bigint} num\\n */\\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {bigint} num\\n */\\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\\n\\nconst floatTestBed = new DataView(new ArrayBuffer(4))\\n/**\\n * Check if a number can be encoded as a 32 bit float.\\n *\\n * @param {number} num\\n * @return {boolean}\\n */\\nconst isFloat32 = num => {\\n  floatTestBed.setFloat32(0, num)\\n  return floatTestBed.getFloat32(0) === num\\n}\\n\\n/**\\n * Encode data with efficient binary format.\\n *\\n * Differences to JSON:\\n * • Transforms data to a binary format (not to a string)\\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\\n * • Numbers are efficiently encoded either as a variable length integer, as a\\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\\n *\\n * Encoding table:\\n *\\n * | Data Type           | Prefix   | Encoding Method    | Comment |\\n * | ------------------- | -------- | ------------------ | ------- |\\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\\n * | null                | 126      |                    | |\\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\\n * | float32             | 124      | writeFloat32       | |\\n * | float64             | 123      | writeFloat64       | |\\n * | bigint              | 122      | writeBigInt64      | |\\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\\n * | string              | 119      | writeVarString     | |\\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\\n *\\n * Reasons for the decreasing prefix:\\n * We need the first bit for extendability (later we may want to encode the\\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\\n * [0-30]   the beginning of the data range is used for custom purposes\\n *          (defined by the function that uses this library)\\n * [31-127] the end of the data range is used for data encoding by\\n *          lib0/encoding.js\\n *\\n * @param {Encoder} encoder\\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\\n */\\nexport const writeAny = (encoder, data) => {\\n  switch (typeof data) {\\n    case 'string':\\n      // TYPE 119: STRING\\n      write(encoder, 119)\\n      writeVarString(encoder, data)\\n      break\\n    case 'number':\\n      if (number.isInteger(data) && data <= binary.BITS31) {\\n        // TYPE 125: INTEGER\\n        write(encoder, 125)\\n        writeVarInt(encoder, data)\\n      } else if (isFloat32(data)) {\\n        // TYPE 124: FLOAT32\\n        write(encoder, 124)\\n        writeFloat32(encoder, data)\\n      } else {\\n        // TYPE 123: FLOAT64\\n        write(encoder, 123)\\n        writeFloat64(encoder, data)\\n      }\\n      break\\n    case 'bigint':\\n      // TYPE 122: BigInt\\n      write(encoder, 122)\\n      writeBigInt64(encoder, data)\\n      break\\n    case 'object':\\n      if (data === null) {\\n        // TYPE 126: null\\n        write(encoder, 126)\\n      } else if (data instanceof Array) {\\n        // TYPE 117: Array\\n        write(encoder, 117)\\n        writeVarUint(encoder, data.length)\\n        for (let i = 0; i < data.length; i++) {\\n          writeAny(encoder, data[i])\\n        }\\n      } else if (data instanceof Uint8Array) {\\n        // TYPE 116: ArrayBuffer\\n        write(encoder, 116)\\n        writeVarUint8Array(encoder, data)\\n      } else {\\n        // TYPE 118: Object\\n        write(encoder, 118)\\n        const keys = Object.keys(data)\\n        writeVarUint(encoder, keys.length)\\n        for (let i = 0; i < keys.length; i++) {\\n          const key = keys[i]\\n          writeVarString(encoder, key)\\n          writeAny(encoder, data[key])\\n        }\\n      }\\n      break\\n    case 'boolean':\\n      // TYPE 120/121: boolean (true/false)\\n      write(encoder, data ? 120 : 121)\\n      break\\n    default:\\n      // TYPE 127: undefined\\n      write(encoder, 127)\\n  }\\n}\\n\\n/**\\n * Now come a few stateful encoder that have their own classes.\\n */\\n\\n/**\\n * Basic Run Length Encoder - a basic compression implementation.\\n *\\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\\n *\\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\\n *\\n * @note T must not be null!\\n *\\n * @template T\\n */\\nexport class RleEncoder extends Encoder {\\n  /**\\n   * @param {function(Encoder, T):void} writer\\n   */\\n  constructor (writer) {\\n    super()\\n    /**\\n     * The writer\\n     */\\n    this.w = writer\\n    /**\\n     * Current state\\n     * @type {T|null}\\n     */\\n    this.s = null\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {T} v\\n   */\\n  write (v) {\\n    if (this.s === v) {\\n      this.count++\\n    } else {\\n      if (this.count > 0) {\\n        // flush counter, unless this is the first value (count = 0)\\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\\n      }\\n      this.count = 1\\n      // write first value\\n      this.w(this, v)\\n      this.s = v\\n    }\\n  }\\n}\\n\\n/**\\n * Basic diff decoder using variable length encoding.\\n *\\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\\n */\\nexport class IntDiffEncoder extends Encoder {\\n  /**\\n   * @param {number} start\\n   */\\n  constructor (start) {\\n    super()\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    writeVarInt(this, v - this.s)\\n    this.s = v\\n  }\\n}\\n\\n/**\\n * A combination of IntDiffEncoder and RleEncoder.\\n *\\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\\n *\\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\\n */\\nexport class RleIntDiffEncoder extends Encoder {\\n  /**\\n   * @param {number} start\\n   */\\n  constructor (start) {\\n    super()\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s === v && this.count > 0) {\\n      this.count++\\n    } else {\\n      if (this.count > 0) {\\n        // flush counter, unless this is the first value (count = 0)\\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\\n      }\\n      this.count = 1\\n      // write first value\\n      writeVarInt(this, v - this.s)\\n      this.s = v\\n    }\\n  }\\n}\\n\\n/**\\n * @param {UintOptRleEncoder} encoder\\n */\\nconst flushUintOptRleEncoder = encoder => {\\n  /* istanbul ignore else */\\n  if (encoder.count > 0) {\\n    // flush counter, unless this is the first value (count = 0)\\n    // case 1: just a single value. set sign to positive\\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\\n    if (encoder.count > 1) {\\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\\n    }\\n  }\\n}\\n\\n/**\\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\\n *\\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\\n *\\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\\n */\\nexport class UintOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s === v) {\\n      this.count++\\n    } else {\\n      flushUintOptRleEncoder(this)\\n      this.count = 1\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushUintOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * Increasing Uint Optimized RLE Encoder\\n *\\n * The RLE encoder counts the number of same occurences of the same value.\\n * The IncUintOptRle encoder counts if the value increases.\\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\\n * as [1, 3, 5].\\n */\\nexport class IncUintOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s + this.count === v) {\\n      this.count++\\n    } else {\\n      flushUintOptRleEncoder(this)\\n      this.count = 1\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushUintOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * @param {IntDiffOptRleEncoder} encoder\\n */\\nconst flushIntDiffOptRleEncoder = encoder => {\\n  if (encoder.count > 0) {\\n    //          31 bit making up the diff | wether to write the counter\\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\\n    // flush counter, unless this is the first value (count = 0)\\n    // case 1: just a single value. set first bit to positive\\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\\n    writeVarInt(encoder.encoder, encodedDiff)\\n    if (encoder.count > 1) {\\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\\n    }\\n  }\\n}\\n\\n/**\\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\\n *\\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\\n *\\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\\n *\\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\\n * * 1 bit that denotes whether the next value is a count (LSB)\\n * * 1 bit that denotes whether this value is negative (MSB - 1)\\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\\n *\\n * Therefore, only five bits remain to encode diff ranges.\\n *\\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\\n */\\nexport class IntDiffOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n    this.diff = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.diff === v - this.s) {\\n      this.s = v\\n      this.count++\\n    } else {\\n      flushIntDiffOptRleEncoder(this)\\n      this.count = 1\\n      this.diff = v - this.s\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushIntDiffOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * Optimized String Encoder.\\n *\\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\\n *\\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\\n *\\n * The lengths are encoded using a UintOptRleEncoder.\\n */\\nexport class StringEncoder {\\n  constructor () {\\n    /**\\n     * @type {Array<string>}\\n     */\\n    this.sarr = []\\n    this.s = ''\\n    this.lensE = new UintOptRleEncoder()\\n  }\\n\\n  /**\\n   * @param {string} string\\n   */\\n  write (string) {\\n    this.s += string\\n    if (this.s.length > 19) {\\n      this.sarr.push(this.s)\\n      this.s = ''\\n    }\\n    this.lensE.write(string.length)\\n  }\\n\\n  toUint8Array () {\\n    const encoder = new Encoder()\\n    this.sarr.push(this.s)\\n    this.s = ''\\n    writeVarString(encoder, this.sarr.join(''))\\n    writeUint8Array(encoder, this.lensE.toUint8Array())\\n    return toUint8Array(encoder)\\n  }\\n}\\n\",\"/**\\n * Efficient schema-less binary decoding with support for variable length encoding.\\n *\\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\\n *\\n * Encodes numbers in little-endian order (least to most significant byte order)\\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\\n * which is also used in Protocol Buffers.\\n *\\n * ```js\\n * // encoding step\\n * const encoder = new encoding.createEncoder()\\n * encoding.writeVarUint(encoder, 256)\\n * encoding.writeVarString(encoder, 'Hello world!')\\n * const buf = encoding.toUint8Array(encoder)\\n * ```\\n *\\n * ```js\\n * // decoding step\\n * const decoder = new decoding.createDecoder(buf)\\n * decoding.readVarUint(decoder) // => 256\\n * decoding.readVarString(decoder) // => 'Hello world!'\\n * decoding.hasContent(decoder) // => false - all data is read\\n * ```\\n *\\n * @module decoding\\n */\\n\\nimport * as buffer from './buffer.js'\\nimport * as binary from './binary.js'\\nimport * as math from './math.js'\\n\\n/**\\n * A Decoder handles the decoding of an Uint8Array.\\n */\\nexport class Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array Binary data to decode\\n   */\\n  constructor (uint8Array) {\\n    /**\\n     * Decoding target.\\n     *\\n     * @type {Uint8Array}\\n     */\\n    this.arr = uint8Array\\n    /**\\n     * Current decoding position.\\n     *\\n     * @type {number}\\n     */\\n    this.pos = 0\\n  }\\n}\\n\\n/**\\n * @function\\n * @param {Uint8Array} uint8Array\\n * @return {Decoder}\\n */\\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\\n\\n/**\\n * @function\\n * @param {Decoder} decoder\\n * @return {boolean}\\n */\\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\\n\\n/**\\n * Clone a decoder instance.\\n * Optionally set a new position parameter.\\n *\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @param {number} [newPos] Defaults to current position\\n * @return {Decoder} A clone of `decoder`\\n */\\nexport const clone = (decoder, newPos = decoder.pos) => {\\n  const _decoder = createDecoder(decoder.arr)\\n  _decoder.pos = newPos\\n  return _decoder\\n}\\n\\n/**\\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\\n *\\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\\n *\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @param {number} len The length of bytes to read\\n * @return {Uint8Array}\\n */\\nexport const readUint8Array = (decoder, len) => {\\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\\n  decoder.pos += len\\n  return view\\n}\\n\\n/**\\n * Read variable length Uint8Array.\\n *\\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {Uint8Array}\\n */\\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\\n\\n/**\\n * Read the rest of the content as an ArrayBuffer\\n * @function\\n * @param {Decoder} decoder\\n * @return {Uint8Array}\\n */\\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\\n\\n/**\\n * Skip one byte, jump to the next position.\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @return {number} The next position\\n */\\nexport const skip8 = decoder => decoder.pos++\\n\\n/**\\n * Read one byte as unsigned integer.\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @return {number} Unsigned 8-bit integer\\n */\\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\\n\\n/**\\n * Read 2 bytes as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint16 = decoder => {\\n  const uint =\\n    decoder.arr[decoder.pos] +\\n    (decoder.arr[decoder.pos + 1] << 8)\\n  decoder.pos += 2\\n  return uint\\n}\\n\\n/**\\n * Read 4 bytes as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint32 = decoder => {\\n  const uint =\\n    (decoder.arr[decoder.pos] +\\n    (decoder.arr[decoder.pos + 1] << 8) +\\n    (decoder.arr[decoder.pos + 2] << 16) +\\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\\n  decoder.pos += 4\\n  return uint\\n}\\n\\n/**\\n * Read 4 bytes as unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint32BigEndian = decoder => {\\n  const uint =\\n    (decoder.arr[decoder.pos + 3] +\\n    (decoder.arr[decoder.pos + 2] << 8) +\\n    (decoder.arr[decoder.pos + 1] << 16) +\\n    (decoder.arr[decoder.pos] << 24)) >>> 0\\n  decoder.pos += 4\\n  return uint\\n}\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint16 = decoder =>\\n  decoder.arr[decoder.pos] +\\n  (decoder.arr[decoder.pos + 1] << 8)\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint32 = decoder => (\\n  decoder.arr[decoder.pos] +\\n  (decoder.arr[decoder.pos + 1] << 8) +\\n  (decoder.arr[decoder.pos + 2] << 16) +\\n  (decoder.arr[decoder.pos + 3] << 24)\\n) >>> 0\\n\\n/**\\n * Read unsigned integer (32bit) with variable length.\\n * 1/8th of the storage is used as encoding overhead.\\n *  * numbers < 2^7 is stored in one bytlength\\n *  * numbers < 2^14 is stored in two bylength\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.length\\n */\\nexport const readVarUint = decoder => {\\n  let num = 0\\n  let len = 0\\n  while (true) {\\n    const r = decoder.arr[decoder.pos++]\\n    num = num | ((r & binary.BITS7) << len)\\n    len += 7\\n    if (r < binary.BIT8) {\\n      return num >>> 0 // return unsigned number!\\n    }\\n    /* istanbul ignore if */\\n    if (len > 35) {\\n      throw new Error('Integer out of range!')\\n    }\\n  }\\n}\\n\\n/**\\n * Read signed integer (32bit) with variable length.\\n * 1/8th of the storage is used as encoding overhead.\\n *  * numbers < 2^7 is stored in one bytlength\\n *  * numbers < 2^14 is stored in two bylength\\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.length\\n */\\nexport const readVarInt = decoder => {\\n  let r = decoder.arr[decoder.pos++]\\n  let num = r & binary.BITS6\\n  let len = 6\\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\\n  if ((r & binary.BIT8) === 0) {\\n    // don't continue reading\\n    return sign * num\\n  }\\n  while (true) {\\n    r = decoder.arr[decoder.pos++]\\n    num = num | ((r & binary.BITS7) << len)\\n    len += 7\\n    if (r < binary.BIT8) {\\n      return sign * (num >>> 0)\\n    }\\n    /* istanbul ignore if */\\n    if (len > 41) {\\n      throw new Error('Integer out of range!')\\n    }\\n  }\\n}\\n\\n/**\\n * Look ahead and read varUint without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number}\\n */\\nexport const peekVarUint = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarUint(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * Look ahead and read varUint without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number}\\n */\\nexport const peekVarInt = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarInt(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * Read string of variable length\\n * * varUint is used to store the length of the string\\n *\\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\\n * when String.fromCodePoint is fed with all characters as arguments.\\n * But most environments have a maximum number of arguments per functions.\\n * For effiency reasons we apply a maximum of 10000 characters at once.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {String} The read String.\\n */\\nexport const readVarString = decoder => {\\n  let remainingLen = readVarUint(decoder)\\n  if (remainingLen === 0) {\\n    return ''\\n  } else {\\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\\n      while (remainingLen--) {\\n        encodedString += String.fromCodePoint(readUint8(decoder))\\n      }\\n    } else {\\n      while (remainingLen > 0) {\\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\\n        // this is dangerous, we create a fresh array view from the existing buffer\\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\\n        decoder.pos += nextLen\\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\\n        remainingLen -= nextLen\\n      }\\n    }\\n    return decodeURIComponent(escape(encodedString))\\n  }\\n}\\n\\n/**\\n * Look ahead and read varString without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {string}\\n */\\nexport const peekVarString = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarString(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * @param {Decoder} decoder\\n * @param {number} len\\n * @return {DataView}\\n */\\nexport const readFromDataView = (decoder, len) => {\\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\\n  decoder.pos += len\\n  return dv\\n}\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\\n\\n/**\\n * @type {Array<function(Decoder):any>}\\n */\\nconst readAnyLookupTable = [\\n  decoder => undefined, // CASE 127: undefined\\n  decoder => null, // CASE 126: null\\n  readVarInt, // CASE 125: integer\\n  readFloat32, // CASE 124: float32\\n  readFloat64, // CASE 123: float64\\n  readBigInt64, // CASE 122: bigint\\n  decoder => false, // CASE 121: boolean (false)\\n  decoder => true, // CASE 120: boolean (true)\\n  readVarString, // CASE 119: string\\n  decoder => { // CASE 118: object<string,any>\\n    const len = readVarUint(decoder)\\n    /**\\n     * @type {Object<string,any>}\\n     */\\n    const obj = {}\\n    for (let i = 0; i < len; i++) {\\n      const key = readVarString(decoder)\\n      obj[key] = readAny(decoder)\\n    }\\n    return obj\\n  },\\n  decoder => { // CASE 117: array<any>\\n    const len = readVarUint(decoder)\\n    const arr = []\\n    for (let i = 0; i < len; i++) {\\n      arr.push(readAny(decoder))\\n    }\\n    return arr\\n  },\\n  readVarUint8Array // CASE 116: Uint8Array\\n]\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\\n\\n/**\\n * T must not be null.\\n *\\n * @template T\\n */\\nexport class RleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {function(Decoder):T} reader\\n   */\\n  constructor (uint8Array, reader) {\\n    super(uint8Array)\\n    /**\\n     * The reader\\n     */\\n    this.reader = reader\\n    /**\\n     * Current state\\n     * @type {T|null}\\n     */\\n    this.s = null\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = this.reader(this)\\n      if (hasContent(this)) {\\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\\n      } else {\\n        this.count = -1 // read the current value forever\\n      }\\n    }\\n    this.count--\\n    return /** @type {T} */ (this.s)\\n  }\\n}\\n\\nexport class IntDiffDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {number} start\\n   */\\n  constructor (uint8Array, start) {\\n    super(uint8Array)\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    this.s += readVarInt(this)\\n    return this.s\\n  }\\n}\\n\\nexport class RleIntDiffDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {number} start\\n   */\\n  constructor (uint8Array, start) {\\n    super(uint8Array)\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    if (this.count === 0) {\\n      this.s += readVarInt(this)\\n      if (hasContent(this)) {\\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\\n      } else {\\n        this.count = -1 // read the current value forever\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s)\\n  }\\n}\\n\\nexport class UintOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = readVarInt(this)\\n      // if the sign is negative, we read the count too, otherwise count is 1\\n      const isNegative = math.isNegativeZero(this.s)\\n      this.count = 1\\n      if (isNegative) {\\n        this.s = -this.s\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s)\\n  }\\n}\\n\\nexport class IncUintOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = readVarInt(this)\\n      // if the sign is negative, we read the count too, otherwise count is 1\\n      const isNegative = math.isNegativeZero(this.s)\\n      this.count = 1\\n      if (isNegative) {\\n        this.s = -this.s\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s++)\\n  }\\n}\\n\\nexport class IntDiffOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n    this.diff = 0\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    if (this.count === 0) {\\n      const diff = readVarInt(this)\\n      // if the first bit is set, we read more data\\n      const hasCount = diff & 1\\n      this.diff = diff >> 1\\n      this.count = 1\\n      if (hasCount) {\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.s += this.diff\\n    this.count--\\n    return this.s\\n  }\\n}\\n\\nexport class StringDecoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    this.decoder = new UintOptRleDecoder(uint8Array)\\n    this.str = readVarString(this.decoder)\\n    /**\\n     * @type {number}\\n     */\\n    this.spos = 0\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  read () {\\n    const end = this.spos + this.decoder.read()\\n    const res = this.str.slice(this.spos, end)\\n    this.spos = end\\n    return res\\n  }\\n}\\n\",\"/**\\n * Utility functions to work with buffers (Uint8Array).\\n *\\n * @module buffer\\n */\\n\\nimport * as string from './string.js'\\nimport * as env from './environment.js'\\nimport * as encoding from './encoding.js'\\nimport * as decoding from './decoding.js'\\n\\n/**\\n * @param {number} len\\n */\\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\\n\\n/**\\n * Create Uint8Array with initial content from buffer\\n *\\n * @param {ArrayBuffer} buffer\\n * @param {number} byteOffset\\n * @param {number} length\\n */\\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\\n\\n/**\\n * Create Uint8Array with initial content from buffer\\n *\\n * @param {ArrayBuffer} buffer\\n */\\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Uint8Array} bytes\\n * @return {string}\\n */\\nconst toBase64Browser = bytes => {\\n  let s = ''\\n  for (let i = 0; i < bytes.byteLength; i++) {\\n    s += string.fromCharCode(bytes[i])\\n  }\\n  // eslint-disable-next-line no-undef\\n  return btoa(s)\\n}\\n\\n/**\\n * @param {Uint8Array} bytes\\n * @return {string}\\n */\\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} s\\n * @return {Uint8Array}\\n */\\nconst fromBase64Browser = s => {\\n  // eslint-disable-next-line no-undef\\n  const a = atob(s)\\n  const bytes = createUint8ArrayFromLen(a.length)\\n  for (let i = 0; i < a.length; i++) {\\n    bytes[i] = a.charCodeAt(i)\\n  }\\n  return bytes\\n}\\n\\n/**\\n * @param {string} s\\n */\\nconst fromBase64Node = s => {\\n  const buf = Buffer.from(s, 'base64')\\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\\n}\\n\\n/* istanbul ignore next */\\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\\n\\n/* istanbul ignore next */\\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\\n\\n/**\\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\\n *\\n * @param {Uint8Array} uint8Array\\n * @return {Uint8Array}\\n */\\nexport const copyUint8Array = uint8Array => {\\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\\n  newBuf.set(uint8Array)\\n  return newBuf\\n}\\n\\n/**\\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\\n * See encoding.writeAny for more information.\\n *\\n * @param {any} data\\n * @return {Uint8Array}\\n */\\nexport const encodeAny = data => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeAny(encoder, data)\\n  return encoding.toUint8Array(encoder)\\n}\\n\\n/**\\n * Decode an any-encoded value.\\n *\\n * @param {Uint8Array} buf\\n * @return {any}\\n */\\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\\n\"],\"names\":[\"buffer.createUint8ArrayViewFromArrayBuffer\",\"math.max\",\"binary.BITS8\",\"binary.BITS7\",\"binary.BIT8\",\"math.isNegativeZero\",\"binary.BITS6\",\"binary.BIT7\",\"math.min\",\"number.isInteger\",\"binary.BITS31\",\"string.fromCharCode\",\"env.isBrowser\",\"encoding.createEncoder\",\"encoding.writeAny\",\"encoding.toUint8Array\",\"decoding.readAny\",\"decoding.createDecoder\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/buffer-ac2cdedf.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/buffer.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./string-f3c3d805.cjs');\nrequire('./environment-7e2ffaea.cjs');\nvar encoding = require('./buffer-ac2cdedf.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./storage.cjs');\nrequire('./binary-ac8e39e2.cjs');\nrequire('./math-08e068f9.cjs');\nrequire('./number-24f1eabe.cjs');\n\n\n\nexports.copyUint8Array = encoding.copyUint8Array;\nexports.createUint8ArrayFromArrayBuffer = encoding.createUint8ArrayFromArrayBuffer;\nexports.createUint8ArrayFromLen = encoding.createUint8ArrayFromLen;\nexports.createUint8ArrayViewFromArrayBuffer = encoding.createUint8ArrayViewFromArrayBuffer;\nexports.decodeAny = encoding.decodeAny;\nexports.encodeAny = encoding.encodeAny;\nexports.fromBase64 = encoding.fromBase64;\nexports.toBase64 = encoding.toBase64;\n///# sourceMappingURL=buffer.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/buffer.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/buffer.cjs.map":{"text":"{\"version\":3,\"file\":\"buffer.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/buffer.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/component.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar dom = require('./dom-58958c04.cjs');\nvar diff = require('./diff-75787d87.cjs');\nvar object = require('./object-dcdd6eed.cjs');\nvar json = require('./json-092190a1.cjs');\nvar string = require('./string-f3c3d805.cjs');\nvar array = require('./array-b2d24238.cjs');\nvar number = require('./number-24f1eabe.cjs');\nvar _function = require('./function-f8acb5f5.cjs');\nrequire('./pair-ab022bc3.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./math-08e068f9.cjs');\nrequire('./binary-ac8e39e2.cjs');\n\n/* eslint-env browser */\n\nconst registry = customElements;\n\n/**\n * @param {string} name\n * @param {any} constr\n * @param {ElementDefinitionOptions} [opts]\n */\nconst define = (name, constr, opts) => registry.define(name, constr, opts);\n\n/**\n * @param {string} name\n * @return {Promise<void>}\n */\nconst whenDefined = name => registry.whenDefined(name);\n\nconst upgradedEventName = 'upgraded';\nconst connectedEventName = 'connected';\nconst disconnectedEventName = 'disconnected';\n\n/**\n * @template S\n */\nclass Lib0Component extends HTMLElement {\n  /**\n   * @param {S} [state]\n   */\n  constructor (state) {\n    super();\n    /**\n     * @type {S|null}\n     */\n    this.state = /** @type {any} */ (state);\n    /**\n     * @type {any}\n     */\n    this._internal = {};\n  }\n\n  /**\n   * @param {S} state\n   * @param {boolean} [forceStateUpdate] Force that the state is rerendered even if state didn't change\n   */\n  setState (state, forceStateUpdate = true) {}\n  /**\n    * @param {any} stateUpdate\n    */\n  updateState (stateUpdate) { }\n}\n\n/**\n * @param {any} val\n * @param {\"json\"|\"string\"|\"number\"} type\n * @return {string}\n */\nconst encodeAttrVal = (val, type) => {\n  if (type === 'json') {\n    val = json.stringify(val);\n  }\n  return val + ''\n};\n\n/**\n * @param {any} val\n * @param {\"json\"|\"string\"|\"number\"|\"bool\"} type\n * @return {any}\n */\nconst parseAttrVal = (val, type) => {\n  switch (type) {\n    case 'json':\n      return json.parse(val)\n    case 'number':\n      return Number.parseFloat(val)\n    case 'string':\n      return val\n    case 'bool':\n      return val != null\n    default:\n      return null\n  }\n};\n\n/**\n * @typedef {Object} CONF\n * @property {string?} [CONF.template] Template for the shadow dom.\n * @property {string} [CONF.style] shadow dom style. Is only used when\n * `CONF.template` is defined\n * @property {S} [CONF.state] Initial component state.\n * @property {function(S,S|null,Lib0Component<S>):void} [CONF.onStateChange] Called when\n * the state changes.\n * @property {Object<string,function(any, any):Object>} [CONF.childStates] maps from\n * CSS-selector to transformer function. The first element that matches the\n * CSS-selector receives state updates via the transformer function.\n * @property {Object<string,\"json\"|\"number\"|\"string\"|\"bool\">} [CONF.attrs]\n * attrs-keys and state-keys should be camelCase, but the DOM uses kebap-case. I.e.\n * `attrs = { myAttr: 4 }` is represeted as `<my-elem my-attr=\"4\" />` in the DOM\n * @property {Object<string, function(CustomEvent, Lib0Component<any>):boolean|void>} [CONF.listeners] Maps from dom-event-name\n * to event listener.\n * @property {function(S, S, Lib0Component<S>):Object<string,string>} [CONF.slots] Fill slots\n * automatically when state changes. Maps from slot-name to slot-html.\n * @template S\n */\n\n/**\n * @template T\n * @param {string} name\n * @param {CONF<T>} cnf\n * @return {typeof Lib0Component}\n */\nconst createComponent = (name, { template, style = '', state: defaultState, onStateChange = () => {}, childStates = { }, attrs = {}, listeners = {}, slots = () => ({}) }) => {\n  /**\n   * Maps from camelCase attribute name to kebap-case attribute name.\n   * @type {Object<string,string>}\n   */\n  const normalizedAttrs = {};\n  for (const key in attrs) {\n    normalizedAttrs[string.fromCamelCase(key, '-')] = key;\n  }\n  const templateElement = template ? /** @type {HTMLTemplateElement} */ (dom.parseElement(`\n    <template>\n      <style>${style}</style>\n      ${template}\n    </template>\n  `)) : null;\n\n  class _Lib0Component extends HTMLElement {\n    /**\n     * @param {T} [state]\n     */\n    constructor (state) {\n      super();\n      /**\n       * @type {Array<{d:Lib0Component<T>, s:function(any, any):Object}>}\n       */\n      this._childStates = [];\n      /**\n       * @type {Object<string,string>}\n       */\n      this._slots = {};\n      this._init = false;\n      /**\n       * @type {any}\n       */\n      this._internal = {};\n      /**\n       * @type {any}\n       */\n      this.state = state || null;\n      this.connected = false;\n      // init shadow dom\n      if (templateElement) {\n        const shadow = /** @type {ShadowRoot} */ (this.attachShadow({ mode: 'open' }));\n        shadow.appendChild(templateElement.content.cloneNode(true));\n        // fill child states\n        for (const key in childStates) {\n          this._childStates.push({\n            d: /** @type {Lib0Component<T>} */ (dom.querySelector(/** @type {any} */ (shadow), key)),\n            s: childStates[key]\n          });\n        }\n      }\n      dom.emitCustomEvent(this, upgradedEventName, { bubbles: true });\n    }\n\n    connectedCallback () {\n      this.connected = true;\n      if (!this._init) {\n        this._init = true;\n        const shadow = this.shadowRoot;\n        if (shadow) {\n          dom.addEventListener(shadow, upgradedEventName, event => {\n            this.setState(this.state, true);\n            event.stopPropagation();\n          });\n        }\n        /**\n         * @type {Object<string, any>}\n         */\n        const startState = this.state || object.assign({}, defaultState);\n        if (attrs) {\n          for (const key in attrs) {\n            const normalizedKey = string.fromCamelCase(key, '-');\n            const val = parseAttrVal(this.getAttribute(normalizedKey), attrs[key]);\n            if (val) {\n              startState[key] = val;\n            }\n          }\n        }\n        // add event listeners\n        for (const key in listeners) {\n          dom.addEventListener(shadow || this, key, event => {\n            if (listeners[key](/** @type {CustomEvent} */ (event), this) !== false) {\n              event.stopPropagation();\n              event.preventDefault();\n              return false\n            }\n          });\n        }\n        // first setState call\n        this.state = null;\n        this.setState(startState);\n      }\n      dom.emitCustomEvent(/** @type {any} */ (this.shadowRoot || this), connectedEventName, { bubbles: true });\n    }\n\n    disconnectedCallback () {\n      this.connected = false;\n      dom.emitCustomEvent(/** @type {any} */ (this.shadowRoot || this), disconnectedEventName, { bubbles: true });\n      this.setState(null);\n    }\n\n    static get observedAttributes () {\n      return object.keys(normalizedAttrs)\n    }\n\n    /**\n     * @param {string} name\n     * @param {string} oldVal\n     * @param {string} newVal\n     *\n     * @private\n     */\n    attributeChangedCallback (name, oldVal, newVal) {\n      const curState = /** @type {any} */ (this.state);\n      const camelAttrName = normalizedAttrs[name];\n      const type = attrs[camelAttrName];\n      const parsedVal = parseAttrVal(newVal, type);\n      if (curState && (type !== 'json' || json.stringify(curState[camelAttrName]) !== newVal) && curState[camelAttrName] !== parsedVal && !number.isNaN(parsedVal)) {\n        this.updateState({ [camelAttrName]: parsedVal });\n      }\n    }\n\n    /**\n     * @param {any} stateUpdate\n     */\n    updateState (stateUpdate) {\n      this.setState(object.assign({}, this.state, stateUpdate));\n    }\n\n    /**\n     * @param {any} state\n     */\n    setState (state, forceStateUpdates = false) {\n      const prevState = this.state;\n      this.state = state;\n      if (this._init && (!_function.equalityFlat(state, prevState) || forceStateUpdates)) {\n        // fill slots\n        if (state) {\n          const slotElems = slots(state, prevState, this);\n          for (const key in slotElems) {\n            const slotContent = slotElems[key];\n            if (this._slots[key] !== slotContent) {\n              this._slots[key] = slotContent;\n              const currentSlots = /** @type {Array<any>} */ (key !== 'default' ? array.from(dom.querySelectorAll(this, `[slot=\"${key}\"]`)) : array.from(this.childNodes).filter(/** @param {any} child */ child => !dom.checkNodeType(child, dom.ELEMENT_NODE) || !child.hasAttribute('slot')));\n              currentSlots.slice(1).map(dom.remove);\n              const nextSlot = dom.parseFragment(slotContent);\n              if (key !== 'default') {\n                array.from(nextSlot.children).forEach(c => c.setAttribute('slot', key));\n              }\n              if (currentSlots.length > 0) {\n                dom.replaceWith(currentSlots[0], nextSlot);\n              } else {\n                dom.appendChild(this, nextSlot);\n              }\n            }\n          }\n        }\n        onStateChange(state, prevState, this);\n        if (state != null) {\n          this._childStates.forEach(cnf => {\n            const d = cnf.d;\n            if (d.updateState) {\n              d.updateState(cnf.s(state, this));\n            }\n          });\n        }\n        for (const key in attrs) {\n          const normalizedKey = string.fromCamelCase(key, '-');\n          if (state == null) {\n            this.removeAttribute(normalizedKey);\n          } else {\n            const stateVal = state[key];\n            const attrsType = attrs[key];\n            if (!prevState || prevState[key] !== stateVal) {\n              if (attrsType === 'bool') {\n                if (stateVal) {\n                  this.setAttribute(normalizedKey, '');\n                } else {\n                  this.removeAttribute(normalizedKey);\n                }\n              } else if (stateVal == null && (attrsType === 'string' || attrsType === 'number')) {\n                this.removeAttribute(normalizedKey);\n              } else {\n                this.setAttribute(normalizedKey, encodeAttrVal(stateVal, attrsType));\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  define(name, _Lib0Component);\n  // @ts-ignore\n  return _Lib0Component\n};\n\n/**\n * @param {function} definer function that defines a component when executed\n */\nconst createComponentDefiner = definer => {\n  /**\n   * @type {any}\n   */\n  let defined = null;\n  return () => {\n    if (!defined) {\n      defined = definer();\n    }\n    return defined\n  }\n};\n\nconst defineListComponent = createComponentDefiner(() => {\n  const ListItem = createComponent('lib0-list-item', {\n    template: '<slot name=\"content\"></slot>',\n    slots: state => ({\n      content: `<div>${state}</div>`\n    })\n  });\n  return createComponent('lib0-list', {\n    state: { list: /** @type {Array<string>} */ ([]), Item: ListItem },\n    onStateChange: (state, prevState, component) => {\n      if (state == null) {\n        return\n      }\n      const { list = /** @type {Array<any>} */ ([]), Item = ListItem } = state;\n      // @todo deep compare here by providing another parameter to simpleDiffArray\n      let { index, remove, insert } = diff.simpleDiffArray(prevState ? prevState.list : [], list, _function.equalityFlat);\n      if (remove === 0 && insert.length === 0) {\n        return\n      }\n      let child = /** @type {Lib0Component<any>} */ (component.firstChild);\n      while (index-- > 0) {\n        child = /** @type {Lib0Component<any>} */ (child.nextElementSibling);\n      }\n      let insertStart = 0;\n      while (insertStart < insert.length && remove-- > 0) {\n        // update existing state\n        child.setState(insert[insertStart++]);\n        child = /** @type {Lib0Component<any>} */ (child.nextElementSibling);\n      }\n      while (remove-- > 0) {\n        // remove remaining\n        const prevChild = child;\n        child = /** @type {Lib0Component<any>} */ (child.nextElementSibling);\n        component.removeChild(prevChild);\n      }\n      // insert remaining\n      component.insertBefore(dom.fragment(insert.slice(insertStart).map(insState => {\n        const el = new Item();\n        el.setState(insState);\n        return el\n      })), child);\n    }\n  })\n});\n\nconst defineLazyLoadingComponent = createComponentDefiner(() => createComponent('lib0-lazy', {\n  state: /** @type {{component:null|String,import:null|function():Promise<any>,state:null|object}} */ ({\n    component: null, import: null, state: null\n  }),\n  attrs: {\n    component: 'string'\n  },\n  onStateChange: ({ component, state, import: getImport }, prevState, componentEl) => {\n    if (component !== null) {\n      if (getImport) {\n        getImport();\n      }\n      if (!prevState || component !== prevState.component) {\n        const el = /** @type {any} */ (dom.createElement(component));\n        componentEl.innerHTML = '';\n        componentEl.insertBefore(el, null);\n      }\n      const el = /** @type {any} */ (componentEl.firstElementChild);\n      // @todo generalize setting state and check if setState is defined\n      if (el.setState) {\n        el.setState(state);\n      }\n    }\n  }\n}));\n\nexports.Lib0Component = Lib0Component;\nexports.createComponent = createComponent;\nexports.createComponentDefiner = createComponentDefiner;\nexports.define = define;\nexports.defineLazyLoadingComponent = defineLazyLoadingComponent;\nexports.defineListComponent = defineListComponent;\nexports.registry = registry;\nexports.whenDefined = whenDefined;\n///# sourceMappingURL=component.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/component.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/component.cjs.map":{"text":"{\"version\":3,\"file\":\"component.cjs\",\"sources\":[\"../component.js\"],\"sourcesContent\":[\"/* eslint-env browser */\\n\\n/**\\n * Web components.\\n *\\n * @module component\\n */\\n\\nimport * as dom from './dom.js'\\nimport * as diff from './diff.js'\\nimport * as object from './object.js'\\nimport * as json from './json.js'\\nimport * as string from './string.js'\\nimport * as array from './array.js'\\nimport * as number from './number.js'\\nimport * as func from './function.js'\\n\\nexport const registry = customElements\\n\\n/**\\n * @param {string} name\\n * @param {any} constr\\n * @param {ElementDefinitionOptions} [opts]\\n */\\nexport const define = (name, constr, opts) => registry.define(name, constr, opts)\\n\\n/**\\n * @param {string} name\\n * @return {Promise<void>}\\n */\\nexport const whenDefined = name => registry.whenDefined(name)\\n\\nconst upgradedEventName = 'upgraded'\\nconst connectedEventName = 'connected'\\nconst disconnectedEventName = 'disconnected'\\n\\n/**\\n * @template S\\n */\\nexport class Lib0Component extends HTMLElement {\\n  /**\\n   * @param {S} [state]\\n   */\\n  constructor (state) {\\n    super()\\n    /**\\n     * @type {S|null}\\n     */\\n    this.state = /** @type {any} */ (state)\\n    /**\\n     * @type {any}\\n     */\\n    this._internal = {}\\n  }\\n\\n  /**\\n   * @param {S} state\\n   * @param {boolean} [forceStateUpdate] Force that the state is rerendered even if state didn't change\\n   */\\n  setState (state, forceStateUpdate = true) {}\\n  /**\\n    * @param {any} stateUpdate\\n    */\\n  updateState (stateUpdate) { }\\n}\\n\\n/**\\n * @param {any} val\\n * @param {\\\"json\\\"|\\\"string\\\"|\\\"number\\\"} type\\n * @return {string}\\n */\\nconst encodeAttrVal = (val, type) => {\\n  if (type === 'json') {\\n    val = json.stringify(val)\\n  }\\n  return val + ''\\n}\\n\\n/**\\n * @param {any} val\\n * @param {\\\"json\\\"|\\\"string\\\"|\\\"number\\\"|\\\"bool\\\"} type\\n * @return {any}\\n */\\nconst parseAttrVal = (val, type) => {\\n  switch (type) {\\n    case 'json':\\n      return json.parse(val)\\n    case 'number':\\n      return Number.parseFloat(val)\\n    case 'string':\\n      return val\\n    case 'bool':\\n      return val != null\\n    default:\\n      return null\\n  }\\n}\\n\\n/**\\n * @typedef {Object} CONF\\n * @property {string?} [CONF.template] Template for the shadow dom.\\n * @property {string} [CONF.style] shadow dom style. Is only used when\\n * `CONF.template` is defined\\n * @property {S} [CONF.state] Initial component state.\\n * @property {function(S,S|null,Lib0Component<S>):void} [CONF.onStateChange] Called when\\n * the state changes.\\n * @property {Object<string,function(any, any):Object>} [CONF.childStates] maps from\\n * CSS-selector to transformer function. The first element that matches the\\n * CSS-selector receives state updates via the transformer function.\\n * @property {Object<string,\\\"json\\\"|\\\"number\\\"|\\\"string\\\"|\\\"bool\\\">} [CONF.attrs]\\n * attrs-keys and state-keys should be camelCase, but the DOM uses kebap-case. I.e.\\n * `attrs = { myAttr: 4 }` is represeted as `<my-elem my-attr=\\\"4\\\" />` in the DOM\\n * @property {Object<string, function(CustomEvent, Lib0Component<any>):boolean|void>} [CONF.listeners] Maps from dom-event-name\\n * to event listener.\\n * @property {function(S, S, Lib0Component<S>):Object<string,string>} [CONF.slots] Fill slots\\n * automatically when state changes. Maps from slot-name to slot-html.\\n * @template S\\n */\\n\\n/**\\n * @template T\\n * @param {string} name\\n * @param {CONF<T>} cnf\\n * @return {typeof Lib0Component}\\n */\\nexport const createComponent = (name, { template, style = '', state: defaultState, onStateChange = () => {}, childStates = { }, attrs = {}, listeners = {}, slots = () => ({}) }) => {\\n  /**\\n   * Maps from camelCase attribute name to kebap-case attribute name.\\n   * @type {Object<string,string>}\\n   */\\n  const normalizedAttrs = {}\\n  for (const key in attrs) {\\n    normalizedAttrs[string.fromCamelCase(key, '-')] = key\\n  }\\n  const templateElement = template ? /** @type {HTMLTemplateElement} */ (dom.parseElement(`\\n    <template>\\n      <style>${style}</style>\\n      ${template}\\n    </template>\\n  `)) : null\\n\\n  class _Lib0Component extends HTMLElement {\\n    /**\\n     * @param {T} [state]\\n     */\\n    constructor (state) {\\n      super()\\n      /**\\n       * @type {Array<{d:Lib0Component<T>, s:function(any, any):Object}>}\\n       */\\n      this._childStates = []\\n      /**\\n       * @type {Object<string,string>}\\n       */\\n      this._slots = {}\\n      this._init = false\\n      /**\\n       * @type {any}\\n       */\\n      this._internal = {}\\n      /**\\n       * @type {any}\\n       */\\n      this.state = state || null\\n      this.connected = false\\n      // init shadow dom\\n      if (templateElement) {\\n        const shadow = /** @type {ShadowRoot} */ (this.attachShadow({ mode: 'open' }))\\n        shadow.appendChild(templateElement.content.cloneNode(true))\\n        // fill child states\\n        for (const key in childStates) {\\n          this._childStates.push({\\n            d: /** @type {Lib0Component<T>} */ (dom.querySelector(/** @type {any} */ (shadow), key)),\\n            s: childStates[key]\\n          })\\n        }\\n      }\\n      dom.emitCustomEvent(this, upgradedEventName, { bubbles: true })\\n    }\\n\\n    connectedCallback () {\\n      this.connected = true\\n      if (!this._init) {\\n        this._init = true\\n        const shadow = this.shadowRoot\\n        if (shadow) {\\n          dom.addEventListener(shadow, upgradedEventName, event => {\\n            this.setState(this.state, true)\\n            event.stopPropagation()\\n          })\\n        }\\n        /**\\n         * @type {Object<string, any>}\\n         */\\n        const startState = this.state || object.assign({}, defaultState)\\n        if (attrs) {\\n          for (const key in attrs) {\\n            const normalizedKey = string.fromCamelCase(key, '-')\\n            const val = parseAttrVal(this.getAttribute(normalizedKey), attrs[key])\\n            if (val) {\\n              startState[key] = val\\n            }\\n          }\\n        }\\n        // add event listeners\\n        for (const key in listeners) {\\n          dom.addEventListener(shadow || this, key, event => {\\n            if (listeners[key](/** @type {CustomEvent} */ (event), this) !== false) {\\n              event.stopPropagation()\\n              event.preventDefault()\\n              return false\\n            }\\n          })\\n        }\\n        // first setState call\\n        this.state = null\\n        this.setState(startState)\\n      }\\n      dom.emitCustomEvent(/** @type {any} */ (this.shadowRoot || this), connectedEventName, { bubbles: true })\\n    }\\n\\n    disconnectedCallback () {\\n      this.connected = false\\n      dom.emitCustomEvent(/** @type {any} */ (this.shadowRoot || this), disconnectedEventName, { bubbles: true })\\n      this.setState(null)\\n    }\\n\\n    static get observedAttributes () {\\n      return object.keys(normalizedAttrs)\\n    }\\n\\n    /**\\n     * @param {string} name\\n     * @param {string} oldVal\\n     * @param {string} newVal\\n     *\\n     * @private\\n     */\\n    attributeChangedCallback (name, oldVal, newVal) {\\n      const curState = /** @type {any} */ (this.state)\\n      const camelAttrName = normalizedAttrs[name]\\n      const type = attrs[camelAttrName]\\n      const parsedVal = parseAttrVal(newVal, type)\\n      if (curState && (type !== 'json' || json.stringify(curState[camelAttrName]) !== newVal) && curState[camelAttrName] !== parsedVal && !number.isNaN(parsedVal)) {\\n        this.updateState({ [camelAttrName]: parsedVal })\\n      }\\n    }\\n\\n    /**\\n     * @param {any} stateUpdate\\n     */\\n    updateState (stateUpdate) {\\n      this.setState(object.assign({}, this.state, stateUpdate))\\n    }\\n\\n    /**\\n     * @param {any} state\\n     */\\n    setState (state, forceStateUpdates = false) {\\n      const prevState = this.state\\n      this.state = state\\n      if (this._init && (!func.equalityFlat(state, prevState) || forceStateUpdates)) {\\n        // fill slots\\n        if (state) {\\n          const slotElems = slots(state, prevState, this)\\n          for (const key in slotElems) {\\n            const slotContent = slotElems[key]\\n            if (this._slots[key] !== slotContent) {\\n              this._slots[key] = slotContent\\n              const currentSlots = /** @type {Array<any>} */ (key !== 'default' ? array.from(dom.querySelectorAll(this, `[slot=\\\"${key}\\\"]`)) : array.from(this.childNodes).filter(/** @param {any} child */ child => !dom.checkNodeType(child, dom.ELEMENT_NODE) || !child.hasAttribute('slot')))\\n              currentSlots.slice(1).map(dom.remove)\\n              const nextSlot = dom.parseFragment(slotContent)\\n              if (key !== 'default') {\\n                array.from(nextSlot.children).forEach(c => c.setAttribute('slot', key))\\n              }\\n              if (currentSlots.length > 0) {\\n                dom.replaceWith(currentSlots[0], nextSlot)\\n              } else {\\n                dom.appendChild(this, nextSlot)\\n              }\\n            }\\n          }\\n        }\\n        onStateChange(state, prevState, this)\\n        if (state != null) {\\n          this._childStates.forEach(cnf => {\\n            const d = cnf.d\\n            if (d.updateState) {\\n              d.updateState(cnf.s(state, this))\\n            }\\n          })\\n        }\\n        for (const key in attrs) {\\n          const normalizedKey = string.fromCamelCase(key, '-')\\n          if (state == null) {\\n            this.removeAttribute(normalizedKey)\\n          } else {\\n            const stateVal = state[key]\\n            const attrsType = attrs[key]\\n            if (!prevState || prevState[key] !== stateVal) {\\n              if (attrsType === 'bool') {\\n                if (stateVal) {\\n                  this.setAttribute(normalizedKey, '')\\n                } else {\\n                  this.removeAttribute(normalizedKey)\\n                }\\n              } else if (stateVal == null && (attrsType === 'string' || attrsType === 'number')) {\\n                this.removeAttribute(normalizedKey)\\n              } else {\\n                this.setAttribute(normalizedKey, encodeAttrVal(stateVal, attrsType))\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n  define(name, _Lib0Component)\\n  // @ts-ignore\\n  return _Lib0Component\\n}\\n\\n/**\\n * @param {function} definer function that defines a component when executed\\n */\\nexport const createComponentDefiner = definer => {\\n  /**\\n   * @type {any}\\n   */\\n  let defined = null\\n  return () => {\\n    if (!defined) {\\n      defined = definer()\\n    }\\n    return defined\\n  }\\n}\\n\\nexport const defineListComponent = createComponentDefiner(() => {\\n  const ListItem = createComponent('lib0-list-item', {\\n    template: '<slot name=\\\"content\\\"></slot>',\\n    slots: state => ({\\n      content: `<div>${state}</div>`\\n    })\\n  })\\n  return createComponent('lib0-list', {\\n    state: { list: /** @type {Array<string>} */ ([]), Item: ListItem },\\n    onStateChange: (state, prevState, component) => {\\n      if (state == null) {\\n        return\\n      }\\n      const { list = /** @type {Array<any>} */ ([]), Item = ListItem } = state\\n      // @todo deep compare here by providing another parameter to simpleDiffArray\\n      let { index, remove, insert } = diff.simpleDiffArray(prevState ? prevState.list : [], list, func.equalityFlat)\\n      if (remove === 0 && insert.length === 0) {\\n        return\\n      }\\n      let child = /** @type {Lib0Component<any>} */ (component.firstChild)\\n      while (index-- > 0) {\\n        child = /** @type {Lib0Component<any>} */ (child.nextElementSibling)\\n      }\\n      let insertStart = 0\\n      while (insertStart < insert.length && remove-- > 0) {\\n        // update existing state\\n        child.setState(insert[insertStart++])\\n        child = /** @type {Lib0Component<any>} */ (child.nextElementSibling)\\n      }\\n      while (remove-- > 0) {\\n        // remove remaining\\n        const prevChild = child\\n        child = /** @type {Lib0Component<any>} */ (child.nextElementSibling)\\n        component.removeChild(prevChild)\\n      }\\n      // insert remaining\\n      component.insertBefore(dom.fragment(insert.slice(insertStart).map(insState => {\\n        const el = new Item()\\n        el.setState(insState)\\n        return el\\n      })), child)\\n    }\\n  })\\n})\\n\\nexport const defineLazyLoadingComponent = createComponentDefiner(() => createComponent('lib0-lazy', {\\n  state: /** @type {{component:null|String,import:null|function():Promise<any>,state:null|object}} */ ({\\n    component: null, import: null, state: null\\n  }),\\n  attrs: {\\n    component: 'string'\\n  },\\n  onStateChange: ({ component, state, import: getImport }, prevState, componentEl) => {\\n    if (component !== null) {\\n      if (getImport) {\\n        getImport()\\n      }\\n      if (!prevState || component !== prevState.component) {\\n        const el = /** @type {any} */ (dom.createElement(component))\\n        componentEl.innerHTML = ''\\n        componentEl.insertBefore(el, null)\\n      }\\n      const el = /** @type {any} */ (componentEl.firstElementChild)\\n      // @todo generalize setting state and check if setState is defined\\n      if (el.setState) {\\n        el.setState(state)\\n      }\\n    }\\n  }\\n}))\\n\"],\"names\":[\"json.stringify\",\"json.parse\",\"string.fromCamelCase\",\"dom.parseElement\",\"dom.querySelector\",\"dom.emitCustomEvent\",\"dom.addEventListener\",\"object.assign\",\"object.keys\",\"number.isNaN\",\"func.equalityFlat\",\"array.from\",\"dom.querySelectorAll\",\"dom.checkNodeType\",\"dom.ELEMENT_NODE\",\"dom.remove\",\"dom.parseFragment\",\"dom.replaceWith\",\"dom.appendChild\",\"diff.simpleDiffArray\",\"dom.fragment\",\"dom.createElement\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/component.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/conditions-fb475c70.cjs":{"text":"'use strict';\n\n/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nconst undefinedToNull = v => v === undefined ? null : v;\n\nvar conditions = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tundefinedToNull: undefinedToNull\n});\n\nexports.conditions = conditions;\nexports.undefinedToNull = undefinedToNull;\n///# sourceMappingURL=conditions-fb475c70.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/conditions-fb475c70.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/conditions-fb475c70.cjs.map":{"text":"{\"version\":3,\"file\":\"conditions-fb475c70.cjs\",\"sources\":[\"../conditions.js\"],\"sourcesContent\":[\"/**\\n * Often used conditions.\\n *\\n * @module conditions\\n */\\n\\n/**\\n * @template T\\n * @param {T|null|undefined} v\\n * @return {T|null}\\n */\\n/* istanbul ignore next */\\nexport const undefinedToNull = v => v === undefined ? null : v\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,GAAG,IAAI,GAAG;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/conditions-fb475c70.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/conditions.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar conditions = require('./conditions-fb475c70.cjs');\n\n\n\nexports.undefinedToNull = conditions.undefinedToNull;\n///# sourceMappingURL=conditions.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/conditions.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/conditions.cjs.map":{"text":"{\"version\":3,\"file\":\"conditions.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/conditions.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/decoding.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar encoding = require('./buffer-ac2cdedf.cjs');\nrequire('./binary-ac8e39e2.cjs');\nrequire('./math-08e068f9.cjs');\nrequire('./string-f3c3d805.cjs');\nrequire('./environment-7e2ffaea.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./storage.cjs');\nrequire('./number-24f1eabe.cjs');\n\n\n\nexports.Decoder = encoding.Decoder;\nexports.IncUintOptRleDecoder = encoding.IncUintOptRleDecoder;\nexports.IntDiffDecoder = encoding.IntDiffDecoder;\nexports.IntDiffOptRleDecoder = encoding.IntDiffOptRleDecoder;\nexports.RleDecoder = encoding.RleDecoder;\nexports.RleIntDiffDecoder = encoding.RleIntDiffDecoder;\nexports.StringDecoder = encoding.StringDecoder;\nexports.UintOptRleDecoder = encoding.UintOptRleDecoder;\nexports.clone = encoding.clone;\nexports.createDecoder = encoding.createDecoder;\nexports.hasContent = encoding.hasContent;\nexports.peekUint16 = encoding.peekUint16;\nexports.peekUint32 = encoding.peekUint32;\nexports.peekUint8 = encoding.peekUint8;\nexports.peekVarInt = encoding.peekVarInt;\nexports.peekVarString = encoding.peekVarString;\nexports.peekVarUint = encoding.peekVarUint;\nexports.readAny = encoding.readAny;\nexports.readBigInt64 = encoding.readBigInt64;\nexports.readBigUint64 = encoding.readBigUint64;\nexports.readFloat32 = encoding.readFloat32;\nexports.readFloat64 = encoding.readFloat64;\nexports.readFromDataView = encoding.readFromDataView;\nexports.readTailAsUint8Array = encoding.readTailAsUint8Array;\nexports.readUint16 = encoding.readUint16;\nexports.readUint32 = encoding.readUint32;\nexports.readUint32BigEndian = encoding.readUint32BigEndian;\nexports.readUint8 = encoding.readUint8;\nexports.readUint8Array = encoding.readUint8Array;\nexports.readVarInt = encoding.readVarInt;\nexports.readVarString = encoding.readVarString;\nexports.readVarUint = encoding.readVarUint;\nexports.readVarUint8Array = encoding.readVarUint8Array;\nexports.skip8 = encoding.skip8;\n///# sourceMappingURL=decoding.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/decoding.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/decoding.cjs.map":{"text":"{\"version\":3,\"file\":\"decoding.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/decoding.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/diff-75787d87.cjs":{"text":"'use strict';\n\nvar _function = require('./function-f8acb5f5.cjs');\n\n/**\n * Efficient diffs.\n *\n * @module diff\n */\n\n/**\n * A SimpleDiff describes a change on a String.\n *\n * ```js\n * console.log(a) // the old value\n * console.log(b) // the updated value\n * // Apply changes of diff (pseudocode)\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n * a === b // values match\n * ```\n *\n * @typedef {Object} SimpleDiff\n * @property {Number} index The index where changes were applied\n * @property {Number} remove The number of characters to delete starting\n *                                  at `index`.\n * @property {T} insert The new text to insert at `index` after applying\n *                           `delete`\n *\n * @template T\n */\n\n/**\n * Create a diff between two strings. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * @function\n *\n * @param {string} a The old version of the string\n * @param {string} b The updated version of the string\n * @return {SimpleDiff<string>} The diff description.\n */\nconst simpleDiffString = (a, b) => {\n  let left = 0; // number of same characters counting from left\n  let right = 0; // number of same characters counting from right\n  while (left < a.length && left < b.length && a[left] === b[left]) {\n    left++;\n  }\n  if (left !== a.length || left !== b.length) {\n    // Only check right if a !== b\n    while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\n      right++;\n    }\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n};\n\n/**\n * @todo Remove in favor of simpleDiffString\n * @deprecated\n */\nconst simpleDiff = simpleDiffString;\n\n/**\n * Create a diff between two arrays. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * Note: This is basically the same function as above. Another function was created so that the runtime\n * can better optimize these function calls.\n *\n * @function\n * @template T\n *\n * @param {Array<T>} a The old version of the array\n * @param {Array<T>} b The updated version of the array\n * @param {function(T, T):boolean} [compare]\n * @return {SimpleDiff<Array<T>>} The diff description.\n */\nconst simpleDiffArray = (a, b, compare = _function.equalityStrict) => {\n  let left = 0; // number of same characters counting from left\n  let right = 0; // number of same characters counting from right\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\n    left++;\n  }\n  if (left !== a.length || left !== b.length) {\n    // Only check right if a !== b\n    while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\n      right++;\n    }\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n};\n\nvar diff = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  simpleDiffString: simpleDiffString,\n  simpleDiff: simpleDiff,\n  simpleDiffArray: simpleDiffArray\n});\n\nexports.diff = diff;\nexports.simpleDiff = simpleDiff;\nexports.simpleDiffArray = simpleDiffArray;\nexports.simpleDiffString = simpleDiffString;\n///# sourceMappingURL=diff-75787d87.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/diff-75787d87.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/diff-75787d87.cjs.map":{"text":"{\"version\":3,\"file\":\"diff-75787d87.cjs\",\"sources\":[\"../diff.js\"],\"sourcesContent\":[\"/**\\n * Efficient diffs.\\n *\\n * @module diff\\n */\\n\\nimport { equalityStrict } from './function.js'\\n\\n/**\\n * A SimpleDiff describes a change on a String.\\n *\\n * ```js\\n * console.log(a) // the old value\\n * console.log(b) // the updated value\\n * // Apply changes of diff (pseudocode)\\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\\n * a === b // values match\\n * ```\\n *\\n * @typedef {Object} SimpleDiff\\n * @property {Number} index The index where changes were applied\\n * @property {Number} remove The number of characters to delete starting\\n *                                  at `index`.\\n * @property {T} insert The new text to insert at `index` after applying\\n *                           `delete`\\n *\\n * @template T\\n */\\n\\n/**\\n * Create a diff between two strings. This diff implementation is highly\\n * efficient, but not very sophisticated.\\n *\\n * @function\\n *\\n * @param {string} a The old version of the string\\n * @param {string} b The updated version of the string\\n * @return {SimpleDiff<string>} The diff description.\\n */\\nexport const simpleDiffString = (a, b) => {\\n  let left = 0 // number of same characters counting from left\\n  let right = 0 // number of same characters counting from right\\n  while (left < a.length && left < b.length && a[left] === b[left]) {\\n    left++\\n  }\\n  if (left !== a.length || left !== b.length) {\\n    // Only check right if a !== b\\n    while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\\n      right++\\n    }\\n  }\\n  return {\\n    index: left,\\n    remove: a.length - left - right,\\n    insert: b.slice(left, b.length - right)\\n  }\\n}\\n\\n/**\\n * @todo Remove in favor of simpleDiffString\\n * @deprecated\\n */\\nexport const simpleDiff = simpleDiffString\\n\\n/**\\n * Create a diff between two arrays. This diff implementation is highly\\n * efficient, but not very sophisticated.\\n *\\n * Note: This is basically the same function as above. Another function was created so that the runtime\\n * can better optimize these function calls.\\n *\\n * @function\\n * @template T\\n *\\n * @param {Array<T>} a The old version of the array\\n * @param {Array<T>} b The updated version of the array\\n * @param {function(T, T):boolean} [compare]\\n * @return {SimpleDiff<Array<T>>} The diff description.\\n */\\nexport const simpleDiffArray = (a, b, compare = equalityStrict) => {\\n  let left = 0 // number of same characters counting from left\\n  let right = 0 // number of same characters counting from right\\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\\n    left++\\n  }\\n  if (left !== a.length || left !== b.length) {\\n    // Only check right if a !== b\\n    while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\\n      right++\\n    }\\n  }\\n  return {\\n    index: left,\\n    remove: a.length - left - right,\\n    insert: b.slice(left, b.length - right)\\n  }\\n}\\n\"],\"names\":[\"equalityStrict\"],\"mappings\":\";;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC1C,EAAE,IAAI,IAAI,GAAG,EAAC;AACd,EAAE,IAAI,KAAK,GAAG,EAAC;AACf,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE;AACpE,IAAI,IAAI,GAAE;AACV,GAAG;AACH,EAAE,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,EAAE;AAC9C;AACA,IAAI,OAAO,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE;AACtH,MAAM,KAAK,GAAE;AACb,KAAK;AACL,GAAG;AACH,EAAE,OAAO;AACT,IAAI,KAAK,EAAE,IAAI;AACf,IAAI,MAAM,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK;AACnC,IAAI,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3C,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,iBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,GAAGA,wBAAc,KAAK;AACnE,EAAE,IAAI,IAAI,GAAG,EAAC;AACd,EAAE,IAAI,KAAK,GAAG,EAAC;AACf,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AAC1E,IAAI,IAAI,GAAE;AACV,GAAG;AACH,EAAE,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,EAAE;AAC9C;AACA,IAAI,OAAO,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE;AAC5H,MAAM,KAAK,GAAE;AACb,KAAK;AACL,GAAG;AACH,EAAE,OAAO;AACT,IAAI,KAAK,EAAE,IAAI;AACf,IAAI,MAAM,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK;AACnC,IAAI,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3C,GAAG;AACH;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/diff-75787d87.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/diff.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./function-f8acb5f5.cjs');\nvar diff = require('./diff-75787d87.cjs');\nrequire('./array-b2d24238.cjs');\nrequire('./object-dcdd6eed.cjs');\n\n\n\nexports.simpleDiff = diff.simpleDiff;\nexports.simpleDiffArray = diff.simpleDiffArray;\nexports.simpleDiffString = diff.simpleDiffString;\n///# sourceMappingURL=diff.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/diff.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/diff.cjs.map":{"text":"{\"version\":3,\"file\":\"diff.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/diff.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/dom-58958c04.cjs":{"text":"'use strict';\n\nvar pair = require('./pair-ab022bc3.cjs');\nvar map = require('./map-28a001c9.cjs');\n\n/* eslint-env browser */\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nconst doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {});\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst createElement = name => doc.createElement(name);\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nconst createDocumentFragment = () => doc.createDocumentFragment();\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nconst createTextNode = text => doc.createTextNode(text);\n\n/* istanbul ignore next */\nconst domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null);\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nconst emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts));\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nconst setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key);\n    } else if (value === true) {\n      el.setAttribute(key, '');\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value);\n    }\n  });\n  return el\n};\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nconst setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value); });\n  return el\n};\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nconst fragment = children => {\n  const fragment = createDocumentFragment();\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i]);\n  }\n  return fragment\n};\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nconst append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes));\n  return parent\n};\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nconst remove = el => el.remove();\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nconst addEventListener = (el, name, f) => el.addEventListener(name, f);\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nconst removeEventListener = (el, name, f) => el.removeEventListener(name, f);\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nconst addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f));\n  return node\n};\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nconst removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f));\n  return node\n};\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nconst element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children);\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nconst canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'));\n  c.height = height;\n  c.width = width;\n  return c\n};\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nconst text = createTextNode;\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nconst pairToStyleString = pair => `${pair.left}:${pair.right};`;\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nconst pairsToStyleString = pairs => pairs.map(pairToStyleString).join('');\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nconst mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('');\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nconst querySelector = (el, query) => el.querySelector(query);\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nconst querySelectorAll = (el, query) => el.querySelectorAll(query);\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id));\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body;\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nconst parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes));\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild);\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nconst replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl);\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst insertBefore = (parent, el, ref) => parent.insertBefore(el, ref);\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nconst appendChild = (parent, child) => parent.appendChild(child);\n\nconst ELEMENT_NODE = doc.ELEMENT_NODE;\nconst TEXT_NODE = doc.TEXT_NODE;\nconst CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE;\nconst COMMENT_NODE = doc.COMMENT_NODE;\nconst DOCUMENT_NODE = doc.DOCUMENT_NODE;\nconst DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE;\nconst DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE;\n\n/**\n * @param {any} node\n * @param {number} type\n */\nconst checkNodeType = (node, type) => node.nodeType === type;\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nconst isParentOf = (parent, child) => {\n  let p = child.parentNode;\n  while (p && p !== parent) {\n    p = p.parentNode;\n  }\n  return p === parent\n};\n\nvar dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  doc: doc,\n  createElement: createElement,\n  createDocumentFragment: createDocumentFragment,\n  createTextNode: createTextNode,\n  domParser: domParser,\n  emitCustomEvent: emitCustomEvent,\n  setAttributes: setAttributes,\n  setAttributesMap: setAttributesMap,\n  fragment: fragment,\n  append: append,\n  remove: remove,\n  addEventListener: addEventListener,\n  removeEventListener: removeEventListener,\n  addEventListeners: addEventListeners,\n  removeEventListeners: removeEventListeners,\n  element: element,\n  canvas: canvas,\n  text: text,\n  pairToStyleString: pairToStyleString,\n  pairsToStyleString: pairsToStyleString,\n  mapToStyleString: mapToStyleString,\n  querySelector: querySelector,\n  querySelectorAll: querySelectorAll,\n  getElementById: getElementById,\n  parseFragment: parseFragment,\n  parseElement: parseElement,\n  replaceWith: replaceWith,\n  insertBefore: insertBefore,\n  appendChild: appendChild,\n  ELEMENT_NODE: ELEMENT_NODE,\n  TEXT_NODE: TEXT_NODE,\n  CDATA_SECTION_NODE: CDATA_SECTION_NODE,\n  COMMENT_NODE: COMMENT_NODE,\n  DOCUMENT_NODE: DOCUMENT_NODE,\n  DOCUMENT_TYPE_NODE: DOCUMENT_TYPE_NODE,\n  DOCUMENT_FRAGMENT_NODE: DOCUMENT_FRAGMENT_NODE,\n  checkNodeType: checkNodeType,\n  isParentOf: isParentOf\n});\n\nexports.CDATA_SECTION_NODE = CDATA_SECTION_NODE;\nexports.COMMENT_NODE = COMMENT_NODE;\nexports.DOCUMENT_FRAGMENT_NODE = DOCUMENT_FRAGMENT_NODE;\nexports.DOCUMENT_NODE = DOCUMENT_NODE;\nexports.DOCUMENT_TYPE_NODE = DOCUMENT_TYPE_NODE;\nexports.ELEMENT_NODE = ELEMENT_NODE;\nexports.TEXT_NODE = TEXT_NODE;\nexports.addEventListener = addEventListener;\nexports.addEventListeners = addEventListeners;\nexports.append = append;\nexports.appendChild = appendChild;\nexports.canvas = canvas;\nexports.checkNodeType = checkNodeType;\nexports.createDocumentFragment = createDocumentFragment;\nexports.createElement = createElement;\nexports.createTextNode = createTextNode;\nexports.doc = doc;\nexports.dom = dom;\nexports.domParser = domParser;\nexports.element = element;\nexports.emitCustomEvent = emitCustomEvent;\nexports.fragment = fragment;\nexports.getElementById = getElementById;\nexports.insertBefore = insertBefore;\nexports.isParentOf = isParentOf;\nexports.mapToStyleString = mapToStyleString;\nexports.pairToStyleString = pairToStyleString;\nexports.pairsToStyleString = pairsToStyleString;\nexports.parseElement = parseElement;\nexports.parseFragment = parseFragment;\nexports.querySelector = querySelector;\nexports.querySelectorAll = querySelectorAll;\nexports.remove = remove;\nexports.removeEventListener = removeEventListener;\nexports.removeEventListeners = removeEventListeners;\nexports.replaceWith = replaceWith;\nexports.setAttributes = setAttributes;\nexports.setAttributesMap = setAttributesMap;\nexports.text = text;\n///# sourceMappingURL=dom-58958c04.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/dom-58958c04.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/dom-58958c04.cjs.map":{"text":"{\"version\":3,\"file\":\"dom-58958c04.cjs\",\"sources\":[\"../dom.js\"],\"sourcesContent\":[\"/* eslint-env browser */\\n\\n/**\\n * Utility module to work with the DOM.\\n *\\n * @module dom\\n */\\n\\nimport * as pair from './pair.js'\\nimport * as map from './map.js'\\n\\n/* istanbul ignore next */\\n/**\\n * @type {Document}\\n */\\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\\n\\n/**\\n * @param {string} name\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const createElement = name => doc.createElement(name)\\n\\n/**\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const createDocumentFragment = () => doc.createDocumentFragment()\\n\\n/**\\n * @param {string} text\\n * @return {Text}\\n */\\n/* istanbul ignore next */\\nexport const createTextNode = text => doc.createTextNode(text)\\n\\n/* istanbul ignore next */\\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\\n\\n/**\\n * @param {HTMLElement} el\\n * @param {string} name\\n * @param {Object} opts\\n */\\n/* istanbul ignore next */\\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\\n\\n/**\\n * @param {Element} el\\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const setAttributes = (el, attrs) => {\\n  pair.forEach(attrs, (key, value) => {\\n    if (value === false) {\\n      el.removeAttribute(key)\\n    } else if (value === true) {\\n      el.setAttribute(key, '')\\n    } else {\\n      // @ts-ignore\\n      el.setAttribute(key, value)\\n    }\\n  })\\n  return el\\n}\\n\\n/**\\n * @param {Element} el\\n * @param {Map<string, string>} attrs Array of key-value pairs\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const setAttributesMap = (el, attrs) => {\\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\\n  return el\\n}\\n\\n/**\\n * @param {Array<Node>|HTMLCollection} children\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const fragment = children => {\\n  const fragment = createDocumentFragment()\\n  for (let i = 0; i < children.length; i++) {\\n    appendChild(fragment, children[i])\\n  }\\n  return fragment\\n}\\n\\n/**\\n * @param {Element} parent\\n * @param {Array<Node>} nodes\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const append = (parent, nodes) => {\\n  appendChild(parent, fragment(nodes))\\n  return parent\\n}\\n\\n/**\\n * @param {HTMLElement} el\\n */\\n/* istanbul ignore next */\\nexport const remove = el => el.remove()\\n\\n/**\\n * @param {EventTarget} el\\n * @param {string} name\\n * @param {EventListener} f\\n */\\n/* istanbul ignore next */\\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\\n\\n/**\\n * @param {EventTarget} el\\n * @param {string} name\\n * @param {EventListener} f\\n */\\n/* istanbul ignore next */\\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\\n\\n/**\\n * @param {Node} node\\n * @param {Array<pair.Pair<string,EventListener>>} listeners\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const addEventListeners = (node, listeners) => {\\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\\n  return node\\n}\\n\\n/**\\n * @param {Node} node\\n * @param {Array<pair.Pair<string,EventListener>>} listeners\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const removeEventListeners = (node, listeners) => {\\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\\n  return node\\n}\\n\\n/**\\n * @param {string} name\\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\\n * @param {Array<Node>} children\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const element = (name, attrs = [], children = []) =>\\n  append(setAttributes(createElement(name), attrs), children)\\n\\n/**\\n * @param {number} width\\n * @param {number} height\\n */\\n/* istanbul ignore next */\\nexport const canvas = (width, height) => {\\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\\n  c.height = height\\n  c.width = width\\n  return c\\n}\\n\\n/**\\n * @param {string} t\\n * @return {Text}\\n */\\n/* istanbul ignore next */\\nexport const text = createTextNode\\n\\n/**\\n * @param {pair.Pair<string,string>} pair\\n */\\n/* istanbul ignore next */\\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\\n\\n/**\\n * @param {Array<pair.Pair<string,string>>} pairs\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\\n\\n/**\\n * @param {Map<string,string>} m\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\\n\\n/**\\n * @todo should always query on a dom element\\n *\\n * @param {HTMLElement|ShadowRoot} el\\n * @param {string} query\\n * @return {HTMLElement | null}\\n */\\n/* istanbul ignore next */\\nexport const querySelector = (el, query) => el.querySelector(query)\\n\\n/**\\n * @param {HTMLElement|ShadowRoot} el\\n * @param {string} query\\n * @return {NodeListOf<HTMLElement>}\\n */\\n/* istanbul ignore next */\\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\\n\\n/**\\n * @param {string} id\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\\n\\n/**\\n * @param {string} html\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\\n\\n/**\\n * @param {string} html\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\\n\\n/**\\n * @param {string} html\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\\n\\n/**\\n * @param {HTMLElement} oldEl\\n * @param {HTMLElement|DocumentFragment} newEl\\n */\\n/* istanbul ignore next */\\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\\n\\n/**\\n * @param {HTMLElement} parent\\n * @param {HTMLElement} el\\n * @param {Node|null} ref\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\\n\\n/**\\n * @param {Node} parent\\n * @param {Node} child\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const appendChild = (parent, child) => parent.appendChild(child)\\n\\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\\nexport const TEXT_NODE = doc.TEXT_NODE\\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\\nexport const COMMENT_NODE = doc.COMMENT_NODE\\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\\n\\n/**\\n * @param {any} node\\n * @param {number} type\\n */\\nexport const checkNodeType = (node, type) => node.nodeType === type\\n\\n/**\\n * @param {Node} parent\\n * @param {HTMLElement} child\\n */\\nexport const isParentOf = (parent, child) => {\\n  let p = child.parentNode\\n  while (p && p !== parent) {\\n    p = p.parentNode\\n  }\\n  return p === parent\\n}\\n\"],\"names\":[\"pair.forEach\",\"map.map\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/dom-58958c04.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/dom.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./pair-ab022bc3.cjs');\nrequire('./map-28a001c9.cjs');\nvar dom = require('./dom-58958c04.cjs');\n\n\n\nexports.CDATA_SECTION_NODE = dom.CDATA_SECTION_NODE;\nexports.COMMENT_NODE = dom.COMMENT_NODE;\nexports.DOCUMENT_FRAGMENT_NODE = dom.DOCUMENT_FRAGMENT_NODE;\nexports.DOCUMENT_NODE = dom.DOCUMENT_NODE;\nexports.DOCUMENT_TYPE_NODE = dom.DOCUMENT_TYPE_NODE;\nexports.ELEMENT_NODE = dom.ELEMENT_NODE;\nexports.TEXT_NODE = dom.TEXT_NODE;\nexports.addEventListener = dom.addEventListener;\nexports.addEventListeners = dom.addEventListeners;\nexports.append = dom.append;\nexports.appendChild = dom.appendChild;\nexports.canvas = dom.canvas;\nexports.checkNodeType = dom.checkNodeType;\nexports.createDocumentFragment = dom.createDocumentFragment;\nexports.createElement = dom.createElement;\nexports.createTextNode = dom.createTextNode;\nexports.doc = dom.doc;\nexports.domParser = dom.domParser;\nexports.element = dom.element;\nexports.emitCustomEvent = dom.emitCustomEvent;\nexports.fragment = dom.fragment;\nexports.getElementById = dom.getElementById;\nexports.insertBefore = dom.insertBefore;\nexports.isParentOf = dom.isParentOf;\nexports.mapToStyleString = dom.mapToStyleString;\nexports.pairToStyleString = dom.pairToStyleString;\nexports.pairsToStyleString = dom.pairsToStyleString;\nexports.parseElement = dom.parseElement;\nexports.parseFragment = dom.parseFragment;\nexports.querySelector = dom.querySelector;\nexports.querySelectorAll = dom.querySelectorAll;\nexports.remove = dom.remove;\nexports.removeEventListener = dom.removeEventListener;\nexports.removeEventListeners = dom.removeEventListeners;\nexports.replaceWith = dom.replaceWith;\nexports.setAttributes = dom.setAttributes;\nexports.setAttributesMap = dom.setAttributesMap;\nexports.text = dom.text;\n///# sourceMappingURL=dom.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/dom.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/dom.cjs.map":{"text":"{\"version\":3,\"file\":\"dom.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/dom.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/encoding.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar encoding = require('./buffer-ac2cdedf.cjs');\nrequire('./math-08e068f9.cjs');\nrequire('./number-24f1eabe.cjs');\nrequire('./binary-ac8e39e2.cjs');\nrequire('./string-f3c3d805.cjs');\nrequire('./environment-7e2ffaea.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./storage.cjs');\n\n\n\nexports.Encoder = encoding.Encoder;\nexports.IncUintOptRleEncoder = encoding.IncUintOptRleEncoder;\nexports.IntDiffEncoder = encoding.IntDiffEncoder;\nexports.IntDiffOptRleEncoder = encoding.IntDiffOptRleEncoder;\nexports.RleEncoder = encoding.RleEncoder;\nexports.RleIntDiffEncoder = encoding.RleIntDiffEncoder;\nexports.StringEncoder = encoding.StringEncoder;\nexports.UintOptRleEncoder = encoding.UintOptRleEncoder;\nexports.createEncoder = encoding.createEncoder;\nexports.length = encoding.length;\nexports.set = encoding.set;\nexports.setUint16 = encoding.setUint16;\nexports.setUint32 = encoding.setUint32;\nexports.setUint8 = encoding.setUint8;\nexports.toUint8Array = encoding.toUint8Array;\nexports.write = encoding.write;\nexports.writeAny = encoding.writeAny;\nexports.writeBigInt64 = encoding.writeBigInt64;\nexports.writeBigUint64 = encoding.writeBigUint64;\nexports.writeBinaryEncoder = encoding.writeBinaryEncoder;\nexports.writeFloat32 = encoding.writeFloat32;\nexports.writeFloat64 = encoding.writeFloat64;\nexports.writeOnDataView = encoding.writeOnDataView;\nexports.writeUint16 = encoding.writeUint16;\nexports.writeUint32 = encoding.writeUint32;\nexports.writeUint32BigEndian = encoding.writeUint32BigEndian;\nexports.writeUint8 = encoding.writeUint8;\nexports.writeUint8Array = encoding.writeUint8Array;\nexports.writeVarInt = encoding.writeVarInt;\nexports.writeVarString = encoding.writeVarString;\nexports.writeVarUint = encoding.writeVarUint;\nexports.writeVarUint8Array = encoding.writeVarUint8Array;\n///# sourceMappingURL=encoding.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/encoding.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/encoding.cjs.map":{"text":"{\"version\":3,\"file\":\"encoding.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/encoding.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/environment-7e2ffaea.cjs":{"text":"'use strict';\n\nvar map = require('./map-28a001c9.cjs');\nvar string = require('./string-f3c3d805.cjs');\nvar conditions = require('./conditions-fb475c70.cjs');\nvar storage = require('./storage.cjs');\n\n/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\n/* istanbul ignore next */\n// @ts-ignore\nconst isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name);\n/* istanbul ignore next */\nconst isBrowser = typeof window !== 'undefined' && !isNode;\n/* istanbul ignore next */\nconst isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n\n/**\n * @type {Map<string,string>}\n */\nlet params;\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create();\n      const pargs = process.argv;\n      let currParamName = null;\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i];\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '');\n          }\n          currParamName = parg;\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg);\n            currParamName = null;\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '');\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=');\n          params.set(`--${string.fromCamelCase(key, '-')}`, value);\n          params.set(`-${string.fromCamelCase(key, '-')}`, value);\n        }\n      });\n    } else {\n      params = map.create();\n    }\n  }\n  return params\n};\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nconst hasParam = name => computeParams().has(name);\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nconst getParam = (name, defaultVal) => computeParams().get(name) || defaultVal;\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nconst getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name));\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nconst getConf = name => computeParams().get('--' + name) || getVariable(name);\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nconst hasConf = name => hasParam('--' + name) || getVariable(name) !== null;\n\n/* istanbul ignore next */\nconst production = hasConf('production');\n\nvar environment = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isNode: isNode,\n  isBrowser: isBrowser,\n  isMac: isMac,\n  hasParam: hasParam,\n  getParam: getParam,\n  getVariable: getVariable,\n  getConf: getConf,\n  hasConf: hasConf,\n  production: production\n});\n\nexports.environment = environment;\nexports.getConf = getConf;\nexports.getParam = getParam;\nexports.getVariable = getVariable;\nexports.hasConf = hasConf;\nexports.hasParam = hasParam;\nexports.isBrowser = isBrowser;\nexports.isMac = isMac;\nexports.isNode = isNode;\nexports.production = production;\n///# sourceMappingURL=environment-7e2ffaea.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/environment-7e2ffaea.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/environment-7e2ffaea.cjs.map":{"text":"{\"version\":3,\"file\":\"environment-7e2ffaea.cjs\",\"sources\":[\"../environment.js\"],\"sourcesContent\":[\"/**\\n * Isomorphic module to work access the environment (query params, env variables).\\n *\\n * @module map\\n */\\n\\nimport * as map from './map.js'\\nimport * as string from './string.js'\\nimport * as conditions from './conditions.js'\\nimport * as storage from './storage.js'\\n\\n/* istanbul ignore next */\\n// @ts-ignore\\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\\\.js/.test(process.release.name)\\n/* istanbul ignore next */\\nexport const isBrowser = typeof window !== 'undefined' && !isNode\\n/* istanbul ignore next */\\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\\n\\n/**\\n * @type {Map<string,string>}\\n */\\nlet params\\nconst args = []\\n\\n/* istanbul ignore next */\\nconst computeParams = () => {\\n  if (params === undefined) {\\n    if (isNode) {\\n      params = map.create()\\n      const pargs = process.argv\\n      let currParamName = null\\n      /* istanbul ignore next */\\n      for (let i = 0; i < pargs.length; i++) {\\n        const parg = pargs[i]\\n        if (parg[0] === '-') {\\n          if (currParamName !== null) {\\n            params.set(currParamName, '')\\n          }\\n          currParamName = parg\\n        } else {\\n          if (currParamName !== null) {\\n            params.set(currParamName, parg)\\n            currParamName = null\\n          } else {\\n            args.push(parg)\\n          }\\n        }\\n      }\\n      if (currParamName !== null) {\\n        params.set(currParamName, '')\\n      }\\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\\n    } else if (typeof location === 'object') {\\n      params = map.create()\\n      // eslint-disable-next-line no-undef\\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\\n        if (kv.length !== 0) {\\n          const [key, value] = kv.split('=')\\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\\n        }\\n      })\\n    } else {\\n      params = map.create()\\n    }\\n  }\\n  return params\\n}\\n\\n/**\\n * @param {string} name\\n * @return {boolean}\\n */\\n/* istanbul ignore next */\\nexport const hasParam = name => computeParams().has(name)\\n\\n/**\\n * @param {string} name\\n * @param {string} defaultVal\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\\n// export const getArgs = name => computeParams() && args\\n\\n/**\\n * @param {string} name\\n * @return {string|null}\\n */\\n/* istanbul ignore next */\\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\\n\\n/**\\n * @param {string} name\\n * @return {string|null}\\n */\\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\\n\\n/**\\n * @param {string} name\\n * @return {boolean}\\n */\\n/* istanbul ignore next */\\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\\n\\n/* istanbul ignore next */\\nexport const production = hasConf('production')\\n\"],\"names\":[\"map.create\",\"string.fromCamelCase\",\"conditions.undefinedToNull\",\"storage.varStorage\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/environment-7e2ffaea.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/environment.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./map-28a001c9.cjs');\nrequire('./string-f3c3d805.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./storage.cjs');\nvar environment = require('./environment-7e2ffaea.cjs');\n\n\n\nexports.getConf = environment.getConf;\nexports.getParam = environment.getParam;\nexports.getVariable = environment.getVariable;\nexports.hasConf = environment.hasConf;\nexports.hasParam = environment.hasParam;\nexports.isBrowser = environment.isBrowser;\nexports.isMac = environment.isMac;\nexports.isNode = environment.isNode;\nexports.production = environment.production;\n///# sourceMappingURL=environment.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/environment.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/environment.cjs.map":{"text":"{\"version\":3,\"file\":\"environment.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/environment.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/error-55a9a8c8.cjs":{"text":"'use strict';\n\n/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* istanbul ignore next */\nconst create = s => new Error(s);\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nconst methodUnimplemented = () => {\n  throw create('Method unimplemented')\n};\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nconst unexpectedCase = () => {\n  throw create('Unexpected case')\n};\n\nvar error = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create,\n  methodUnimplemented: methodUnimplemented,\n  unexpectedCase: unexpectedCase\n});\n\nexports.create = create;\nexports.error = error;\nexports.methodUnimplemented = methodUnimplemented;\nexports.unexpectedCase = unexpectedCase;\n///# sourceMappingURL=error-55a9a8c8.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/error-55a9a8c8.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/error-55a9a8c8.cjs.map":{"text":"{\"version\":3,\"file\":\"error-55a9a8c8.cjs\",\"sources\":[\"../error.js\"],\"sourcesContent\":[\"/**\\n * Error helpers.\\n *\\n * @module error\\n */\\n\\n/**\\n * @param {string} s\\n * @return {Error}\\n */\\n/* istanbul ignore next */\\nexport const create = s => new Error(s)\\n\\n/**\\n * @throws {Error}\\n * @return {never}\\n */\\n/* istanbul ignore next */\\nexport const methodUnimplemented = () => {\\n  throw create('Method unimplemented')\\n}\\n\\n/**\\n * @throws {Error}\\n * @return {never}\\n */\\n/* istanbul ignore next */\\nexport const unexpectedCase = () => {\\n  throw create('Unexpected case')\\n}\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,EAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,mBAAmB,GAAG,MAAM;AACzC,EAAE,MAAM,MAAM,CAAC,sBAAsB,CAAC;AACtC,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,MAAM;AACpC,EAAE,MAAM,MAAM,CAAC,iBAAiB,CAAC;AACjC;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/error-55a9a8c8.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/error.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar error = require('./error-55a9a8c8.cjs');\n\n\n\nexports.create = error.create;\nexports.methodUnimplemented = error.methodUnimplemented;\nexports.unexpectedCase = error.unexpectedCase;\n///# sourceMappingURL=error.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/error.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/error.cjs.map":{"text":"{\"version\":3,\"file\":\"error.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/error.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/eventloop-c60b5658.cjs":{"text":"'use strict';\n\n/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = [];\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n  queue = [];\n};\n\n/**\n * @param {function():void} f\n */\nconst enqueue = f => {\n  queue.push(f);\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0);\n  }\n};\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId;\n  }\n\n  destroy () {\n    clearFunction(this._);\n  }\n};\n\nconst Timeout = createTimeoutClass(clearTimeout);\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nconst timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout));\n\nconst Interval = createTimeoutClass(clearInterval);\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nconst interval = (timeout, callback) => new Interval(setInterval(callback, timeout));\n\n/* istanbul ignore next */\nconst Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg));\n\n/* istanbul ignore next */\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\nconst animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb));\n\n/* istanbul ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg));\n\n/* istanbul ignore next */\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n// @ts-ignore\nconst idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb);\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nconst createDebouncer = timeout => {\n  let timer = -1;\n  return f => {\n    clearTimeout(timer);\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout));\n    }\n  }\n};\n\nvar eventloop = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  enqueue: enqueue,\n  timeout: timeout,\n  interval: interval,\n  Animation: Animation,\n  animationFrame: animationFrame,\n  idleCallback: idleCallback,\n  createDebouncer: createDebouncer\n});\n\nexports.Animation = Animation;\nexports.animationFrame = animationFrame;\nexports.createDebouncer = createDebouncer;\nexports.enqueue = enqueue;\nexports.eventloop = eventloop;\nexports.idleCallback = idleCallback;\nexports.interval = interval;\nexports.timeout = timeout;\n///# sourceMappingURL=eventloop-c60b5658.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/eventloop-c60b5658.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/eventloop-c60b5658.cjs.map":{"text":"{\"version\":3,\"file\":\"eventloop-c60b5658.cjs\",\"sources\":[\"../eventloop.js\"],\"sourcesContent\":[\"/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\\n\\n/**\\n * Utility module to work with EcmaScript's event loop.\\n *\\n * @module eventloop\\n */\\n\\n/**\\n * @type {Array<function>}\\n */\\nlet queue = []\\n\\nconst _runQueue = () => {\\n  for (let i = 0; i < queue.length; i++) {\\n    queue[i]()\\n  }\\n  queue = []\\n}\\n\\n/**\\n * @param {function():void} f\\n */\\nexport const enqueue = f => {\\n  queue.push(f)\\n  if (queue.length === 1) {\\n    setTimeout(_runQueue, 0)\\n  }\\n}\\n\\n/**\\n * @typedef {Object} TimeoutObject\\n * @property {function} TimeoutObject.destroy\\n */\\n\\n/**\\n * @param {function(number):void} clearFunction\\n */\\nconst createTimeoutClass = clearFunction => class TT {\\n  /**\\n   * @param {number} timeoutId\\n   */\\n  constructor (timeoutId) {\\n    this._ = timeoutId\\n  }\\n\\n  destroy () {\\n    clearFunction(this._)\\n  }\\n}\\n\\nconst Timeout = createTimeoutClass(clearTimeout)\\n\\n/**\\n * @param {number} timeout\\n * @param {function} callback\\n * @return {TimeoutObject}\\n */\\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\\n\\nconst Interval = createTimeoutClass(clearInterval)\\n\\n/**\\n * @param {number} timeout\\n * @param {function} callback\\n * @return {TimeoutObject}\\n */\\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\\n\\n/* istanbul ignore next */\\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\\n\\n/* istanbul ignore next */\\n/**\\n * @param {function(number):void} cb\\n * @return {TimeoutObject}\\n */\\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\\n\\n/* istanbul ignore next */\\n// @ts-ignore\\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\\n\\n/* istanbul ignore next */\\n/**\\n * Note: this is experimental and is probably only useful in browsers.\\n *\\n * @param {function} cb\\n * @return {TimeoutObject}\\n */\\n// @ts-ignore\\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\\n\\n/**\\n * @param {number} timeout Timeout of the debounce action\\n * @return {function(function():void):void}\\n */\\nexport const createDebouncer = timeout => {\\n  let timer = -1\\n  return f => {\\n    clearTimeout(timer)\\n    if (f) {\\n      timer = /** @type {any} */ (setTimeout(f, timeout))\\n    }\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG,GAAE;AACd;AACA,MAAM,SAAS,GAAG,MAAM;AACxB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,IAAI,KAAK,CAAC,CAAC,CAAC,GAAE;AACd,GAAG;AACH,EAAE,KAAK,GAAG,GAAE;AACZ,EAAC;AACD;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,IAAI;AAC5B,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC;AACf,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC,EAAC;AAC5B,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,GAAG,aAAa,IAAI,MAAM,EAAE,CAAC;AACrD;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE;AAC1B,IAAI,IAAI,CAAC,CAAC,GAAG,UAAS;AACtB,GAAG;AACH;AACA,EAAE,OAAO,CAAC,GAAG;AACb,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,EAAC;AACzB,GAAG;AACH,EAAC;AACD;AACA,MAAM,OAAO,GAAG,kBAAkB,CAAC,YAAY,EAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,OAAO,EAAE,QAAQ,KAAK,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAC;AACxF;AACA,MAAM,QAAQ,GAAG,kBAAkB,CAAC,aAAa,EAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,CAAC,OAAO,EAAE,QAAQ,KAAK,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAC;AAC3F;AACA;AACY,MAAC,SAAS,GAAG,kBAAkB,CAAC,GAAG,IAAI,OAAO,qBAAqB,KAAK,WAAW,IAAI,oBAAoB,CAAC,GAAG,CAAC,EAAC;AAC7H;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,EAAE,IAAI,OAAO,qBAAqB,KAAK,WAAW,GAAG,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAC;AAC5I;AACA;AACA;AACA,MAAM,IAAI,GAAG,kBAAkB,CAAC,GAAG,IAAI,OAAO,kBAAkB,KAAK,WAAW,IAAI,kBAAkB,CAAC,GAAG,CAAC,EAAC;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,YAAY,GAAG,EAAE,IAAI,OAAO,mBAAmB,KAAK,WAAW,GAAG,IAAI,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,EAAC;AACpI;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG,OAAO,IAAI;AAC1C,EAAE,IAAI,KAAK,GAAG,CAAC,EAAC;AAChB,EAAE,OAAO,CAAC,IAAI;AACd,IAAI,YAAY,CAAC,KAAK,EAAC;AACvB,IAAI,IAAI,CAAC,EAAE;AACX,MAAM,KAAK,uBAAuB,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC,EAAC;AACzD,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/eventloop-c60b5658.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/eventloop.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar eventloop = require('./eventloop-c60b5658.cjs');\n\n\n\nexports.Animation = eventloop.Animation;\nexports.animationFrame = eventloop.animationFrame;\nexports.createDebouncer = eventloop.createDebouncer;\nexports.enqueue = eventloop.enqueue;\nexports.idleCallback = eventloop.idleCallback;\nexports.interval = eventloop.interval;\nexports.timeout = eventloop.timeout;\n///# sourceMappingURL=eventloop.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/eventloop.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/eventloop.cjs.map":{"text":"{\"version\":3,\"file\":\"eventloop.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/eventloop.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/function-f8acb5f5.cjs":{"text":"'use strict';\n\nvar array = require('./array-b2d24238.cjs');\nvar object = require('./object-dcdd6eed.cjs');\n\n/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nconst callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args);\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1);\n    }\n  }\n};\n\nconst nop = () => {};\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nconst apply = f => f();\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nconst id = a => a;\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nconst equalityStrict = (a, b) => a === b;\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nconst equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))));\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n};\n\nvar _function = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  callAll: callAll,\n  nop: nop,\n  apply: apply,\n  id: id,\n  equalityStrict: equalityStrict,\n  equalityFlat: equalityFlat,\n  equalityDeep: equalityDeep\n});\n\nexports._function = _function;\nexports.apply = apply;\nexports.callAll = callAll;\nexports.equalityDeep = equalityDeep;\nexports.equalityFlat = equalityFlat;\nexports.equalityStrict = equalityStrict;\nexports.id = id;\nexports.nop = nop;\n///# sourceMappingURL=function-f8acb5f5.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/function-f8acb5f5.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/function-f8acb5f5.cjs.map":{"text":"{\"version\":3,\"file\":\"function-f8acb5f5.cjs\",\"sources\":[\"../function.js\"],\"sourcesContent\":[\"/**\\n * Common functions and function call helpers.\\n *\\n * @module function\\n */\\n\\nimport * as array from './array.js'\\nimport * as object from './object.js'\\n\\n/**\\n * Calls all functions in `fs` with args. Only throws after all functions were called.\\n *\\n * @param {Array<function>} fs\\n * @param {Array<any>} args\\n */\\nexport const callAll = (fs, args, i = 0) => {\\n  try {\\n    for (; i < fs.length; i++) {\\n      fs[i](...args)\\n    }\\n  } finally {\\n    if (i < fs.length) {\\n      callAll(fs, args, i + 1)\\n    }\\n  }\\n}\\n\\nexport const nop = () => {}\\n\\n/**\\n * @template T\\n * @param {function():T} f\\n * @return {T}\\n */\\nexport const apply = f => f()\\n\\n/**\\n * @template A\\n *\\n * @param {A} a\\n * @return {A}\\n */\\nexport const id = a => a\\n\\n/**\\n * @template T\\n *\\n * @param {T} a\\n * @param {T} b\\n * @return {boolean}\\n */\\nexport const equalityStrict = (a, b) => a === b\\n\\n/**\\n * @template T\\n *\\n * @param {Array<T>|object} a\\n * @param {Array<T>|object} b\\n * @return {boolean}\\n */\\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @return {boolean}\\n */\\nexport const equalityDeep = (a, b) => {\\n  if (a == null || b == null) {\\n    return equalityStrict(a, b)\\n  }\\n  if (a.constructor !== b.constructor) {\\n    return false\\n  }\\n  if (a === b) {\\n    return true\\n  }\\n  switch (a.constructor) {\\n    case ArrayBuffer:\\n      a = new Uint8Array(a)\\n      b = new Uint8Array(b)\\n    // eslint-disable-next-line no-fallthrough\\n    case Uint8Array: {\\n      if (a.byteLength !== b.byteLength) {\\n        return false\\n      }\\n      for (let i = 0; i < a.length; i++) {\\n        if (a[i] !== b[i]) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Set: {\\n      if (a.size !== b.size) {\\n        return false\\n      }\\n      for (const value of a) {\\n        if (!b.has(value)) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Map: {\\n      if (a.size !== b.size) {\\n        return false\\n      }\\n      for (const key of a.keys()) {\\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Object:\\n      if (object.length(a) !== object.length(b)) {\\n        return false\\n      }\\n      for (const key in a) {\\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\\n          return false\\n        }\\n      }\\n      break\\n    case Array:\\n      if (a.length !== b.length) {\\n        return false\\n      }\\n      for (let i = 0; i < a.length; i++) {\\n        if (!equalityDeep(a[i], b[i])) {\\n          return false\\n        }\\n      }\\n      break\\n    default:\\n      return false\\n  }\\n  return true\\n}\\n\"],\"names\":[\"array.equalFlat\",\"object.equalFlat\",\"object.length\",\"object.hasProperty\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/function-f8acb5f5.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/function.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./array-b2d24238.cjs');\nrequire('./object-dcdd6eed.cjs');\nvar _function = require('./function-f8acb5f5.cjs');\n\n\n\nexports.apply = _function.apply;\nexports.callAll = _function.callAll;\nexports.equalityDeep = _function.equalityDeep;\nexports.equalityFlat = _function.equalityFlat;\nexports.equalityStrict = _function.equalityStrict;\nexports.id = _function.id;\nexports.nop = _function.nop;\n///# sourceMappingURL=function.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/function.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/function.cjs.map":{"text":"{\"version\":3,\"file\":\"function.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/function.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/index.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar array = require('./array-b2d24238.cjs');\nvar binary = require('./binary-ac8e39e2.cjs');\nvar broadcastchannel = require('./broadcastchannel-8a61b21a.cjs');\nvar encoding = require('./buffer-ac2cdedf.cjs');\nvar conditions = require('./conditions-fb475c70.cjs');\nvar diff = require('./diff-75787d87.cjs');\nvar dom = require('./dom-58958c04.cjs');\nvar environment = require('./environment-7e2ffaea.cjs');\nvar error = require('./error-55a9a8c8.cjs');\nvar eventloop = require('./eventloop-c60b5658.cjs');\nvar _function = require('./function-f8acb5f5.cjs');\nvar indexeddb = require('./indexeddb-44227700.cjs');\nvar iterator = require('./iterator-fe01d209.cjs');\nvar json = require('./json-092190a1.cjs');\nvar logging = require('./logging-7cc36806.cjs');\nvar map = require('./map-28a001c9.cjs');\nvar math = require('./math-08e068f9.cjs');\nvar mutex = require('./mutex-63f09c81.cjs');\nvar number = require('./number-24f1eabe.cjs');\nvar object = require('./object-dcdd6eed.cjs');\nvar pair = require('./pair-ab022bc3.cjs');\nvar prng = require('./prng-695120cc.cjs');\nvar promise = require('./promise-f0a086b2.cjs');\nvar set = require('./set-7ae96d21.cjs');\nvar sort = require('./sort-b8702761.cjs');\nvar statistics = require('./statistics-c2316dca.cjs');\nvar string = require('./string-f3c3d805.cjs');\nvar symbol = require('./symbol-c5caa724.cjs');\nvar time = require('./time-e00067da.cjs');\nvar tree = require('./tree-92f764b3.cjs');\nvar websocket = require('./websocket-bfe7f545.cjs');\nrequire('./storage.cjs');\nrequire('./metric.cjs');\nrequire('./observable.cjs');\n\n\n\nexports.array = array.array;\nexports.binary = binary.binary;\nexports.broadcastchannel = broadcastchannel.broadcastchannel;\nexports.buffer = encoding.buffer;\nexports.decoding = encoding.decoding;\nexports.encoding = encoding.encoding;\nexports.conditions = conditions.conditions;\nexports.diff = diff.diff;\nexports.dom = dom.dom;\nexports.environment = environment.environment;\nexports.error = error.error;\nexports.eventloop = eventloop.eventloop;\nexports.func = _function._function;\nexports.indexeddb = indexeddb.indexeddb;\nexports.iterator = iterator.iterator;\nexports.json = json.json;\nexports.logging = logging.logging;\nexports.map = map.map$1;\nexports.math = math.math;\nexports.mutex = mutex.mutex;\nexports.number = number.number;\nexports.object = object.object;\nexports.pair = pair.pair;\nexports.prng = prng.prng;\nexports.promise = promise.promise;\nexports.set = set.set;\nexports.sort = sort.sort;\nexports.statistics = statistics.statistics;\nexports.string = string.string;\nexports.symbol = symbol.symbol;\nexports.time = time.time;\nexports.tree = tree.tree;\nexports.websocket = websocket.websocket;\n///# sourceMappingURL=index.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/index.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/index.cjs.map":{"text":"{\"version\":3,\"file\":\"index.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/index.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/indexeddb-44227700.cjs":{"text":"'use strict';\n\nvar promise = require('./promise-f0a086b2.cjs');\nvar error = require('./error-55a9a8c8.cjs');\n\n/* eslint-env browser */\n\n/**\n * IDB Request to Promise transformer\n *\n * @param {IDBRequest} request\n * @return {Promise<any>}\n */\n/* istanbul ignore next */\nconst rtop = request => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onerror = event => reject(new Error(event.target.error));\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onblocked = () => location.reload();\n  // @ts-ignore\n  request.onsuccess = event => resolve(event.target.result);\n});\n\n/**\n * @param {string} name\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\n * @return {Promise<IDBDatabase>}\n */\n/* istanbul ignore next */\nconst openDB = (name, initDB) => promise.create((resolve, reject) => {\n  const request = indexedDB.open(name);\n  /**\n   * @param {any} event\n   */\n  request.onupgradeneeded = event => initDB(event.target.result);\n  /* istanbul ignore next */\n  /**\n   * @param {any} event\n   */\n  request.onerror = event => reject(error.create(event.target.error));\n  /* istanbul ignore next */\n  request.onblocked = () => location.reload();\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    /**\n     * @type {IDBDatabase}\n     */\n    const db = event.target.result;\n    /* istanbul ignore next */\n    db.onversionchange = () => { db.close(); };\n    /* istanbul ignore if */\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener('unload', () => db.close());\n    }\n    resolve(db);\n  };\n});\n\n/**\n * @param {string} name\n */\n/* istanbul ignore next */\nconst deleteDB = name => rtop(indexedDB.deleteDatabase(name));\n\n/**\n * @param {IDBDatabase} db\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\n */\n/* istanbul ignore next */\nconst createStores = (db, definitions) => definitions.forEach(d =>\n  // @ts-ignore\n  db.createObjectStore.apply(db, d)\n);\n\n/**\n * @param {IDBDatabase} db\n * @param {Array<string>} stores\n * @param {\"readwrite\"|\"readonly\"} [access]\n * @return {Array<IDBObjectStore>}\n */\nconst transact = (db, stores, access = 'readwrite') => {\n  const transaction = db.transaction(stores, access);\n  return stores.map(store => getStore(transaction, store))\n};\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<number>}\n */\n/* istanbul ignore next */\nconst count = (store, range) =>\n  rtop(store.count(range));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\n */\n/* istanbul ignore next */\nconst get = (store, key) =>\n  rtop(store.get(key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\n */\n/* istanbul ignore next */\nconst del = (store, key) =>\n  rtop(store.delete(key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean} item\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\n */\n/* istanbul ignore next */\nconst put = (store, item, key) =>\n  rtop(store.put(item, key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean}  item\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\n * @return {Promise<any>}\n */\n/* istanbul ignore next */\nconst add = (store, item, key) =>\n  rtop(store.add(item, key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date}  item\n * @return {Promise<number>} Returns the generated key\n */\n/* istanbul ignore next */\nconst addAutoKey = (store, item) =>\n  rtop(store.add(item));\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\n/* istanbul ignore next */\nconst getAll = (store, range) =>\n  rtop(store.getAll(range));\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\n/* istanbul ignore next */\nconst getAllKeys = (store, range) =>\n  rtop(store.getAllKeys(range));\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} query\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n * @return {Promise<any>}\n */\nconst queryFirst = (store, query, direction) => {\n  /**\n   * @type {any}\n   */\n  let first = null;\n  return iterateKeys(store, query, key => {\n    first = key;\n    return false\n  }, direction).then(() => first)\n};\n\n/**\n * @param {IDBObjectStore} store\n * @return {Promise<any>}\n */\nconst getLastKey = store => queryFirst(store, null, 'prev');\n\n/**\n * @param {IDBObjectStore} store\n * @return {Promise<any>}\n */\nconst getFirstKey = store => queryFirst(store, null, 'prev');\n\n/**\n * @typedef KeyValuePair\n * @type {Object}\n * @property {any} k key\n * @property {any} v Value\n */\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<KeyValuePair>>}\n */\n/* istanbul ignore next */\nconst getAllKeysValues = (store, range) =>\n  // @ts-ignore\n  promise.all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })));\n\n/**\n * @param {any} request\n * @param {function(IDBCursorWithValue):void|boolean} f\n * @return {Promise<void>}\n */\n/* istanbul ignore next */\nconst iterateOnRequest = (request, f) => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  request.onerror = reject;\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    const cursor = event.target.result;\n    if (cursor === null || f(cursor) === false) {\n      return resolve()\n    }\n    cursor.continue();\n  };\n});\n\n/**\n * Iterate on keys and values\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any,any):void|boolean} f Callback that receives (value, key)\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\n/* istanbul ignore next */\nconst iterate = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key));\n\n/**\n * Iterate on the keys (no values)\n *\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any):void|boolean} f callback that receives the key\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\n/* istanbul ignore next */\nconst iterateKeys = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key));\n\n/**\n * Open store from transaction\n * @param {IDBTransaction} t\n * @param {String} store\n * @returns {IDBObjectStore}\n */\n/* istanbul ignore next */\nconst getStore = (t, store) => t.objectStore(store);\n\n/**\n * @param {any} lower\n * @param {any} upper\n * @param {boolean} lowerOpen\n * @param {boolean} upperOpen\n */\n/* istanbul ignore next */\nconst createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);\n\n/**\n * @param {any} upper\n * @param {boolean} upperOpen\n */\n/* istanbul ignore next */\nconst createIDBKeyRangeUpperBound = (upper, upperOpen) => IDBKeyRange.upperBound(upper, upperOpen);\n\n/**\n * @param {any} lower\n * @param {boolean} lowerOpen\n */\n/* istanbul ignore next */\nconst createIDBKeyRangeLowerBound = (lower, lowerOpen) => IDBKeyRange.lowerBound(lower, lowerOpen);\n\nvar indexeddb = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  rtop: rtop,\n  openDB: openDB,\n  deleteDB: deleteDB,\n  createStores: createStores,\n  transact: transact,\n  count: count,\n  get: get,\n  del: del,\n  put: put,\n  add: add,\n  addAutoKey: addAutoKey,\n  getAll: getAll,\n  getAllKeys: getAllKeys,\n  queryFirst: queryFirst,\n  getLastKey: getLastKey,\n  getFirstKey: getFirstKey,\n  getAllKeysValues: getAllKeysValues,\n  iterate: iterate,\n  iterateKeys: iterateKeys,\n  getStore: getStore,\n  createIDBKeyRangeBound: createIDBKeyRangeBound,\n  createIDBKeyRangeUpperBound: createIDBKeyRangeUpperBound,\n  createIDBKeyRangeLowerBound: createIDBKeyRangeLowerBound\n});\n\nexports.add = add;\nexports.addAutoKey = addAutoKey;\nexports.count = count;\nexports.createIDBKeyRangeBound = createIDBKeyRangeBound;\nexports.createIDBKeyRangeLowerBound = createIDBKeyRangeLowerBound;\nexports.createIDBKeyRangeUpperBound = createIDBKeyRangeUpperBound;\nexports.createStores = createStores;\nexports.del = del;\nexports.deleteDB = deleteDB;\nexports.get = get;\nexports.getAll = getAll;\nexports.getAllKeys = getAllKeys;\nexports.getAllKeysValues = getAllKeysValues;\nexports.getFirstKey = getFirstKey;\nexports.getLastKey = getLastKey;\nexports.getStore = getStore;\nexports.indexeddb = indexeddb;\nexports.iterate = iterate;\nexports.iterateKeys = iterateKeys;\nexports.openDB = openDB;\nexports.put = put;\nexports.queryFirst = queryFirst;\nexports.rtop = rtop;\nexports.transact = transact;\n///# sourceMappingURL=indexeddb-44227700.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/indexeddb-44227700.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/indexeddb-44227700.cjs.map":{"text":"{\"version\":3,\"file\":\"indexeddb-44227700.cjs\",\"sources\":[\"../indexeddb.js\"],\"sourcesContent\":[\"/* eslint-env browser */\\n\\n/**\\n * Helpers to work with IndexedDB.\\n *\\n * @module idb\\n */\\n\\nimport * as promise from './promise.js'\\nimport * as error from './error.js'\\n\\n/**\\n * IDB Request to Promise transformer\\n *\\n * @param {IDBRequest} request\\n * @return {Promise<any>}\\n */\\n/* istanbul ignore next */\\nexport const rtop = request => promise.create((resolve, reject) => {\\n  /* istanbul ignore next */\\n  // @ts-ignore\\n  request.onerror = event => reject(new Error(event.target.error))\\n  /* istanbul ignore next */\\n  // @ts-ignore\\n  request.onblocked = () => location.reload()\\n  // @ts-ignore\\n  request.onsuccess = event => resolve(event.target.result)\\n})\\n\\n/**\\n * @param {string} name\\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\\n * @return {Promise<IDBDatabase>}\\n */\\n/* istanbul ignore next */\\nexport const openDB = (name, initDB) => promise.create((resolve, reject) => {\\n  const request = indexedDB.open(name)\\n  /**\\n   * @param {any} event\\n   */\\n  request.onupgradeneeded = event => initDB(event.target.result)\\n  /* istanbul ignore next */\\n  /**\\n   * @param {any} event\\n   */\\n  request.onerror = event => reject(error.create(event.target.error))\\n  /* istanbul ignore next */\\n  request.onblocked = () => location.reload()\\n  /**\\n   * @param {any} event\\n   */\\n  request.onsuccess = event => {\\n    /**\\n     * @type {IDBDatabase}\\n     */\\n    const db = event.target.result\\n    /* istanbul ignore next */\\n    db.onversionchange = () => { db.close() }\\n    /* istanbul ignore if */\\n    if (typeof addEventListener !== 'undefined') {\\n      addEventListener('unload', () => db.close())\\n    }\\n    resolve(db)\\n  }\\n})\\n\\n/**\\n * @param {string} name\\n */\\n/* istanbul ignore next */\\nexport const deleteDB = name => rtop(indexedDB.deleteDatabase(name))\\n\\n/**\\n * @param {IDBDatabase} db\\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\\n */\\n/* istanbul ignore next */\\nexport const createStores = (db, definitions) => definitions.forEach(d =>\\n  // @ts-ignore\\n  db.createObjectStore.apply(db, d)\\n)\\n\\n/**\\n * @param {IDBDatabase} db\\n * @param {Array<string>} stores\\n * @param {\\\"readwrite\\\"|\\\"readonly\\\"} [access]\\n * @return {Array<IDBObjectStore>}\\n */\\nexport const transact = (db, stores, access = 'readwrite') => {\\n  const transaction = db.transaction(stores, access)\\n  return stores.map(store => getStore(transaction, store))\\n}\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<number>}\\n */\\n/* istanbul ignore next */\\nexport const count = (store, range) =>\\n  rtop(store.count(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const get = (store, key) =>\\n  rtop(store.get(key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\\n */\\n/* istanbul ignore next */\\nexport const del = (store, key) =>\\n  rtop(store.delete(key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | boolean} item\\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\\n */\\n/* istanbul ignore next */\\nexport const put = (store, item, key) =>\\n  rtop(store.put(item, key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | boolean}  item\\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\\n * @return {Promise<any>}\\n */\\n/* istanbul ignore next */\\nexport const add = (store, item, key) =>\\n  rtop(store.add(item, key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date}  item\\n * @return {Promise<number>} Returns the generated key\\n */\\n/* istanbul ignore next */\\nexport const addAutoKey = (store, item) =>\\n  rtop(store.add(item))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const getAll = (store, range) =>\\n  rtop(store.getAll(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const getAllKeys = (store, range) =>\\n  rtop(store.getAllKeys(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} query\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n * @return {Promise<any>}\\n */\\nexport const queryFirst = (store, query, direction) => {\\n  /**\\n   * @type {any}\\n   */\\n  let first = null\\n  return iterateKeys(store, query, key => {\\n    first = key\\n    return false\\n  }, direction).then(() => first)\\n}\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @return {Promise<any>}\\n */\\nexport const getLastKey = store => queryFirst(store, null, 'prev')\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @return {Promise<any>}\\n */\\nexport const getFirstKey = store => queryFirst(store, null, 'prev')\\n\\n/**\\n * @typedef KeyValuePair\\n * @type {Object}\\n * @property {any} k key\\n * @property {any} v Value\\n */\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<KeyValuePair>>}\\n */\\n/* istanbul ignore next */\\nexport const getAllKeysValues = (store, range) =>\\n  // @ts-ignore\\n  promise.all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })))\\n\\n/**\\n * @param {any} request\\n * @param {function(IDBCursorWithValue):void|boolean} f\\n * @return {Promise<void>}\\n */\\n/* istanbul ignore next */\\nconst iterateOnRequest = (request, f) => promise.create((resolve, reject) => {\\n  /* istanbul ignore next */\\n  request.onerror = reject\\n  /**\\n   * @param {any} event\\n   */\\n  request.onsuccess = event => {\\n    const cursor = event.target.result\\n    if (cursor === null || f(cursor) === false) {\\n      return resolve()\\n    }\\n    cursor.continue()\\n  }\\n})\\n\\n/**\\n * Iterate on keys and values\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} keyrange\\n * @param {function(any,any):void|boolean} f Callback that receives (value, key)\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n */\\n/* istanbul ignore next */\\nexport const iterate = (store, keyrange, f, direction = 'next') =>\\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key))\\n\\n/**\\n * Iterate on the keys (no values)\\n *\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} keyrange\\n * @param {function(any):void|boolean} f callback that receives the key\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n */\\n/* istanbul ignore next */\\nexport const iterateKeys = (store, keyrange, f, direction = 'next') =>\\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key))\\n\\n/**\\n * Open store from transaction\\n * @param {IDBTransaction} t\\n * @param {String} store\\n * @returns {IDBObjectStore}\\n */\\n/* istanbul ignore next */\\nexport const getStore = (t, store) => t.objectStore(store)\\n\\n/**\\n * @param {any} lower\\n * @param {any} upper\\n * @param {boolean} lowerOpen\\n * @param {boolean} upperOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\\n\\n/**\\n * @param {any} upper\\n * @param {boolean} upperOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeUpperBound = (upper, upperOpen) => IDBKeyRange.upperBound(upper, upperOpen)\\n\\n/**\\n * @param {any} lower\\n * @param {boolean} lowerOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeLowerBound = (lower, lowerOpen) => IDBKeyRange.lowerBound(lower, lowerOpen)\\n\"],\"names\":[\"promise.create\",\"error.create\",\"promise.all\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/indexeddb-44227700.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/indexeddb.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./promise-f0a086b2.cjs');\nrequire('./error-55a9a8c8.cjs');\nvar indexeddb = require('./indexeddb-44227700.cjs');\nrequire('./time-e00067da.cjs');\nrequire('./metric.cjs');\nrequire('./math-08e068f9.cjs');\n\n\n\nexports.add = indexeddb.add;\nexports.addAutoKey = indexeddb.addAutoKey;\nexports.count = indexeddb.count;\nexports.createIDBKeyRangeBound = indexeddb.createIDBKeyRangeBound;\nexports.createIDBKeyRangeLowerBound = indexeddb.createIDBKeyRangeLowerBound;\nexports.createIDBKeyRangeUpperBound = indexeddb.createIDBKeyRangeUpperBound;\nexports.createStores = indexeddb.createStores;\nexports.del = indexeddb.del;\nexports.deleteDB = indexeddb.deleteDB;\nexports.get = indexeddb.get;\nexports.getAll = indexeddb.getAll;\nexports.getAllKeys = indexeddb.getAllKeys;\nexports.getAllKeysValues = indexeddb.getAllKeysValues;\nexports.getFirstKey = indexeddb.getFirstKey;\nexports.getLastKey = indexeddb.getLastKey;\nexports.getStore = indexeddb.getStore;\nexports.iterate = indexeddb.iterate;\nexports.iterateKeys = indexeddb.iterateKeys;\nexports.openDB = indexeddb.openDB;\nexports.put = indexeddb.put;\nexports.queryFirst = indexeddb.queryFirst;\nexports.rtop = indexeddb.rtop;\nexports.transact = indexeddb.transact;\n///# sourceMappingURL=indexeddb.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/indexeddb.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/indexeddb.cjs.map":{"text":"{\"version\":3,\"file\":\"indexeddb.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/indexeddb.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/isomorphic.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isomorphic_js = require('./isomorphic.js');\n\n\n\nObject.defineProperty(exports, 'cryptoRandomBuffer', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn isomorphic_js.cryptoRandomBuffer;\n\t}\n});\nObject.defineProperty(exports, 'performance', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn isomorphic_js.performance;\n\t}\n});\n///# sourceMappingURL=isomorphic.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/isomorphic.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/isomorphic.cjs.map":{"text":"{\"version\":3,\"file\":\"isomorphic.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/isomorphic.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/iterator-fe01d209.cjs":{"text":"'use strict';\n\n/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nconst mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next();\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n});\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nconst createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n});\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nconst iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res;\n  do {\n    res = iterator.next();\n  } while (!res.done && !filter(res.value))\n  return res\n});\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nconst iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next();\n  return { done, value: done ? undefined : fmap(value) }\n});\n\nvar iterator = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  mapIterator: mapIterator,\n  createIterator: createIterator,\n  iteratorFilter: iteratorFilter,\n  iteratorMap: iteratorMap\n});\n\nexports.createIterator = createIterator;\nexports.iterator = iterator;\nexports.iteratorFilter = iteratorFilter;\nexports.iteratorMap = iteratorMap;\nexports.mapIterator = mapIterator;\n///# sourceMappingURL=iterator-fe01d209.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/iterator-fe01d209.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/iterator-fe01d209.cjs.map":{"text":"{\"version\":3,\"file\":\"iterator-fe01d209.cjs\",\"sources\":[\"../iterator.js\"],\"sourcesContent\":[\"/**\\n * Utility module to create and manipulate Iterators.\\n *\\n * @module iterator\\n */\\n\\n/**\\n * @template T,R\\n * @param {Iterator<T>} iterator\\n * @param {function(T):R} f\\n * @return {IterableIterator<R>}\\n */\\nexport const mapIterator = (iterator, f) => ({\\n  /**\\n   * @param {function(T):R} f\\n   */\\n  [Symbol.iterator] () {\\n    return this\\n  },\\n  // @ts-ignore\\n  next () {\\n    const r = iterator.next()\\n    return { value: r.done ? undefined : f(r.value), done: r.done }\\n  }\\n})\\n\\n/**\\n * @template T\\n * @param {function():IteratorResult<T>} next\\n * @return {IterableIterator<T>}\\n */\\nexport const createIterator = next => ({\\n  /**\\n   * @return {IterableIterator<T>}\\n   */\\n  [Symbol.iterator] () {\\n    return this\\n  },\\n  // @ts-ignore\\n  next\\n})\\n\\n/**\\n * @template T\\n * @param {Iterator<T>} iterator\\n * @param {function(T):boolean} filter\\n */\\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\\n  let res\\n  do {\\n    res = iterator.next()\\n  } while (!res.done && !filter(res.value))\\n  return res\\n})\\n\\n/**\\n * @template T,M\\n * @param {Iterator<T>} iterator\\n * @param {function(T):M} fmap\\n */\\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\\n  const { done, value } = iterator.next()\\n  return { done, value: done ? undefined : fmap(value) }\\n})\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM;AAC7C;AACA;AACA;AACA,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;AACvB,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA,EAAE,IAAI,CAAC,GAAG;AACV,IAAI,MAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,GAAE;AAC7B,IAAI,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;AACnE,GAAG;AACH,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,IAAI,KAAK;AACvC;AACA;AACA;AACA,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;AACvB,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA,EAAE,IAAI;AACN,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,QAAQ,EAAE,MAAM,KAAK,cAAc,CAAC,MAAM;AACzE,EAAE,IAAI,IAAG;AACT,EAAE,GAAG;AACL,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,GAAE;AACzB,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3C,EAAE,OAAO,GAAG;AACZ,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,cAAc,CAAC,MAAM;AACpE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC,IAAI,GAAE;AACzC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;AACxD,CAAC;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/iterator-fe01d209.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/iterator.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar iterator = require('./iterator-fe01d209.cjs');\n\n\n\nexports.createIterator = iterator.createIterator;\nexports.iteratorFilter = iterator.iteratorFilter;\nexports.iteratorMap = iterator.iteratorMap;\nexports.mapIterator = iterator.mapIterator;\n///# sourceMappingURL=iterator.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/iterator.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/iterator.cjs.map":{"text":"{\"version\":3,\"file\":\"iterator.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/iterator.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/json-092190a1.cjs":{"text":"'use strict';\n\n/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nconst stringify = JSON.stringify;\n\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */\nconst parse = JSON.parse;\n\nvar json = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tstringify: stringify,\n\tparse: parse\n});\n\nexports.json = json;\nexports.parse = parse;\nexports.stringify = stringify;\n///# sourceMappingURL=json-092190a1.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/json-092190a1.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/json-092190a1.cjs.map":{"text":"{\"version\":3,\"file\":\"json-092190a1.cjs\",\"sources\":[\"../json.js\"],\"sourcesContent\":[\"/**\\n * JSON utility functions.\\n *\\n * @module json\\n */\\n\\n/**\\n * Transform JavaScript object to JSON.\\n *\\n * @param {any} object\\n * @return {string}\\n */\\nexport const stringify = JSON.stringify\\n\\n/**\\n * Parse JSON object.\\n *\\n * @param {string} json\\n * @return {any}\\n */\\nexport const parse = JSON.parse\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,IAAI,CAAC,UAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,IAAI,CAAC;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/json-092190a1.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/json.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar json = require('./json-092190a1.cjs');\n\n\n\nexports.parse = json.parse;\nexports.stringify = json.stringify;\n///# sourceMappingURL=json.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/json.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/json.cjs.map":{"text":"{\"version\":3,\"file\":\"json.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/json.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/logging-7cc36806.cjs":{"text":"'use strict';\n\nvar environment = require('./environment-7e2ffaea.cjs');\nvar symbol = require('./symbol-c5caa724.cjs');\nvar pair = require('./pair-ab022bc3.cjs');\nvar dom = require('./dom-58958c04.cjs');\nvar json = require('./json-092190a1.cjs');\nvar map = require('./map-28a001c9.cjs');\nvar eventloop = require('./eventloop-c60b5658.cjs');\nvar math = require('./math-08e068f9.cjs');\nvar time = require('./time-e00067da.cjs');\nvar _function = require('./function-f8acb5f5.cjs');\n\n/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nconst BOLD = symbol.create();\nconst UNBOLD = symbol.create();\nconst BLUE = symbol.create();\nconst GREY = symbol.create();\nconst GREEN = symbol.create();\nconst RED = symbol.create();\nconst PURPLE = symbol.create();\nconst ORANGE = symbol.create();\nconst UNCOLOR = symbol.create();\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n};\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n};\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = [];\n  const styles = [];\n  const currentStyle = map.create();\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = [];\n  // try with formatting until we find something unsupported\n  let i = 0;\n\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    // @ts-ignore\n    const style = _browserStyleMap[arg];\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle);\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg);\n          styles.push(style);\n        } else {\n          strBuilder.push(arg);\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles;\n    logArgs.unshift(strBuilder.join(''));\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg);\n    }\n  }\n  return logArgs\n};\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = [];\n  const logArgs = [];\n\n  // try with formatting until we find something unsupported\n  let i = 0;\n\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    // @ts-ignore\n    const style = _nodeStyleMap[arg];\n    if (style !== undefined) {\n      strBuilder.push(style);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg);\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m');\n    logArgs.push(strBuilder.join(''));\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg);\n    }\n  }\n  return logArgs\n};\n\n/* istanbul ignore next */\nconst computeLoggingArgs = environment.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs;\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nconst print = (...args) => {\n  console.log(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args));\n};\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nconst warn = (...args) => {\n  console.warn(...computeLoggingArgs(args));\n  args.unshift(ORANGE);\n  vconsoles.forEach(vc => vc.print(args));\n};\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nconst printError = err => {\n  console.error(err);\n  vconsoles.forEach(vc => vc.printError(err));\n};\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nconst printImg = (url, height) => {\n  if (environment.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`);\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height));\n};\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nconst printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height);\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nconst group = (...args) => {\n  console.group(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args));\n};\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nconst groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args));\n};\n\nconst groupEnd = () => {\n  console.groupEnd();\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd());\n};\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nconst printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()));\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nconst printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height);\n\nconst vconsoles = new Set();\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = [];\n  const currentStyle = new Map();\n  // try with formatting until we find something unsupported\n  let i = 0;\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    // @ts-ignore\n    const style = _browserStyleMap[arg];\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)]);\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;';\n        }\n        spans.push(span);\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i];\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' ';\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]));\n    }\n  }\n  return spans\n};\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;';\n\n/* istanbul ignore next */\nclass VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom;\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom;\n    this.depth = 0;\n    vconsoles.add(this);\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')]);\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')]);\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)));\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)]);\n      const nextLine = dom.element('div', [], [content, nextContainer]);\n      dom.append(this.ccontainer, [nextLine]);\n      this.ccontainer = nextContainer;\n      this.depth++;\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden');\n        triangleDown.toggleAttribute('hidden');\n        triangleRight.toggleAttribute('hidden');\n      });\n    });\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true);\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--;\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement;\n      }\n    });\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))]);\n    });\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()]);\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])]);\n    });\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node]);\n    });\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this);\n    });\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nconst createVConsole = dom => new VConsole(dom);\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE];\nlet nextColor = 0;\nlet lastLoggingTime = time.getUnixTime();\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nconst createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor];\n  const debugRegexVar = environment.getVariable('log');\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName));\n  nextColor = (nextColor + 1) % loggingColors.length;\n  moduleName += ': ';\n\n  return !doLogging ? _function.nop : (...args) => {\n    const timeNow = time.getUnixTime();\n    const timeDiff = timeNow - lastLoggingTime;\n    lastLoggingTime = timeNow;\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms');\n  }\n};\n\nvar logging = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BOLD: BOLD,\n  UNBOLD: UNBOLD,\n  BLUE: BLUE,\n  GREY: GREY,\n  GREEN: GREEN,\n  RED: RED,\n  PURPLE: PURPLE,\n  ORANGE: ORANGE,\n  UNCOLOR: UNCOLOR,\n  print: print,\n  warn: warn,\n  printError: printError,\n  printImg: printImg,\n  printImgBase64: printImgBase64,\n  group: group,\n  groupCollapsed: groupCollapsed,\n  groupEnd: groupEnd,\n  printDom: printDom,\n  printCanvas: printCanvas,\n  vconsoles: vconsoles,\n  VConsole: VConsole,\n  createVConsole: createVConsole,\n  createModuleLogger: createModuleLogger\n});\n\nexports.BLUE = BLUE;\nexports.BOLD = BOLD;\nexports.GREEN = GREEN;\nexports.GREY = GREY;\nexports.ORANGE = ORANGE;\nexports.PURPLE = PURPLE;\nexports.RED = RED;\nexports.UNBOLD = UNBOLD;\nexports.UNCOLOR = UNCOLOR;\nexports.VConsole = VConsole;\nexports.createModuleLogger = createModuleLogger;\nexports.createVConsole = createVConsole;\nexports.group = group;\nexports.groupCollapsed = groupCollapsed;\nexports.groupEnd = groupEnd;\nexports.logging = logging;\nexports.print = print;\nexports.printCanvas = printCanvas;\nexports.printDom = printDom;\nexports.printError = printError;\nexports.printImg = printImg;\nexports.printImgBase64 = printImgBase64;\nexports.vconsoles = vconsoles;\nexports.warn = warn;\n///# sourceMappingURL=logging-7cc36806.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/logging-7cc36806.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/logging-7cc36806.cjs.map":{"text":"{\"version\":3,\"file\":\"logging-7cc36806.cjs\",\"sources\":[\"../logging.js\"],\"sourcesContent\":[\"/**\\n * Isomorphic logging module with support for colors!\\n *\\n * @module logging\\n */\\n\\nimport * as env from './environment.js'\\nimport * as symbol from './symbol.js'\\nimport * as pair from './pair.js'\\nimport * as dom from './dom.js'\\nimport * as json from './json.js'\\nimport * as map from './map.js'\\nimport * as eventloop from './eventloop.js'\\nimport * as math from './math.js'\\nimport * as time from './time.js'\\nimport * as func from './function.js'\\n\\nexport const BOLD = symbol.create()\\nexport const UNBOLD = symbol.create()\\nexport const BLUE = symbol.create()\\nexport const GREY = symbol.create()\\nexport const GREEN = symbol.create()\\nexport const RED = symbol.create()\\nexport const PURPLE = symbol.create()\\nexport const ORANGE = symbol.create()\\nexport const UNCOLOR = symbol.create()\\n\\n/**\\n * @type {Object<Symbol,pair.Pair<string,string>>}\\n */\\nconst _browserStyleMap = {\\n  [BOLD]: pair.create('font-weight', 'bold'),\\n  [UNBOLD]: pair.create('font-weight', 'normal'),\\n  [BLUE]: pair.create('color', 'blue'),\\n  [GREEN]: pair.create('color', 'green'),\\n  [GREY]: pair.create('color', 'grey'),\\n  [RED]: pair.create('color', 'red'),\\n  [PURPLE]: pair.create('color', 'purple'),\\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\\n  [UNCOLOR]: pair.create('color', 'black')\\n}\\n\\nconst _nodeStyleMap = {\\n  [BOLD]: '\\\\u001b[1m',\\n  [UNBOLD]: '\\\\u001b[2m',\\n  [BLUE]: '\\\\x1b[34m',\\n  [GREEN]: '\\\\x1b[32m',\\n  [GREY]: '\\\\u001b[37m',\\n  [RED]: '\\\\x1b[31m',\\n  [PURPLE]: '\\\\x1b[35m',\\n  [ORANGE]: '\\\\x1b[38;5;208m',\\n  [UNCOLOR]: '\\\\x1b[0m'\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<string|object|number>}\\n */\\nconst computeBrowserLoggingArgs = args => {\\n  const strBuilder = []\\n  const styles = []\\n  const currentStyle = map.create()\\n  /**\\n   * @type {Array<string|Object|number>}\\n   */\\n  let logArgs = []\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _browserStyleMap[arg]\\n    if (style !== undefined) {\\n      currentStyle.set(style.left, style.right)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        const style = dom.mapToStyleString(currentStyle)\\n        if (i > 0 || style.length > 0) {\\n          strBuilder.push('%c' + arg)\\n          styles.push(style)\\n        } else {\\n          strBuilder.push(arg)\\n        }\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n\\n  if (i > 0) {\\n    // create logArgs with what we have so far\\n    logArgs = styles\\n    logArgs.unshift(strBuilder.join(''))\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    if (!(arg instanceof Symbol)) {\\n      logArgs.push(arg)\\n    }\\n  }\\n  return logArgs\\n}\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<string|object|number>}\\n */\\nconst computeNodeLoggingArgs = args => {\\n  const strBuilder = []\\n  const logArgs = []\\n\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _nodeStyleMap[arg]\\n    if (style !== undefined) {\\n      strBuilder.push(style)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        strBuilder.push(arg)\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n  if (i > 0) {\\n    // create logArgs with what we have so far\\n    strBuilder.push('\\\\x1b[0m')\\n    logArgs.push(strBuilder.join(''))\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    /* istanbul ignore else */\\n    if (!(arg instanceof Symbol)) {\\n      logArgs.push(arg)\\n    }\\n  }\\n  return logArgs\\n}\\n\\n/* istanbul ignore next */\\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const print = (...args) => {\\n  console.log(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.print(args))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const warn = (...args) => {\\n  console.warn(...computeLoggingArgs(args))\\n  args.unshift(ORANGE)\\n  vconsoles.forEach(vc => vc.print(args))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Error} err\\n */\\nexport const printError = err => {\\n  console.error(err)\\n  vconsoles.forEach(vc => vc.printError(err))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} url image location\\n * @param {number} height height of the image in pixel\\n */\\nexport const printImg = (url, height) => {\\n  if (env.isBrowser) {\\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\\n  }\\n  vconsoles.forEach(vc => vc.printImg(url, height))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} base64\\n * @param {number} height\\n */\\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const group = (...args) => {\\n  console.group(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.group(args))\\n}\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const groupCollapsed = (...args) => {\\n  console.groupCollapsed(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\\n}\\n\\nexport const groupEnd = () => {\\n  console.groupEnd()\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.groupEnd())\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {function():Node} createNode\\n */\\nexport const printDom = createNode =>\\n  vconsoles.forEach(vc => vc.printDom(createNode()))\\n\\n/* istanbul ignore next */\\n/**\\n * @param {HTMLCanvasElement} canvas\\n * @param {number} height\\n */\\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\\n\\nexport const vconsoles = new Set()\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<Element>}\\n */\\nconst _computeLineSpans = args => {\\n  const spans = []\\n  const currentStyle = new Map()\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _browserStyleMap[arg]\\n    if (style !== undefined) {\\n      currentStyle.set(style.left, style.right)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        // @ts-ignore\\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\\n        if (span.innerHTML === '') {\\n          span.innerHTML = '&nbsp;'\\n        }\\n        spans.push(span)\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    let content = args[i]\\n    if (!(content instanceof Symbol)) {\\n      if (content.constructor !== String && content.constructor !== Number) {\\n        content = ' ' + json.stringify(content) + ' '\\n      }\\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\\n    }\\n  }\\n  return spans\\n}\\n\\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\\n\\n/* istanbul ignore next */\\nexport class VConsole {\\n  /**\\n   * @param {Element} dom\\n   */\\n  constructor (dom) {\\n    this.dom = dom\\n    /**\\n     * @type {Element}\\n     */\\n    this.ccontainer = this.dom\\n    this.depth = 0\\n    vconsoles.add(this)\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   * @param {boolean} collapsed\\n   */\\n  group (args, collapsed = false) {\\n    eventloop.enqueue(() => {\\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\\n      const nextLine = dom.element('div', [], [content, nextContainer])\\n      dom.append(this.ccontainer, [nextLine])\\n      this.ccontainer = nextContainer\\n      this.depth++\\n      // when header is clicked, collapse/uncollapse container\\n      dom.addEventListener(content, 'click', event => {\\n        nextContainer.toggleAttribute('hidden')\\n        triangleDown.toggleAttribute('hidden')\\n        triangleRight.toggleAttribute('hidden')\\n      })\\n    })\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   */\\n  groupCollapsed (args) {\\n    this.group(args, true)\\n  }\\n\\n  groupEnd () {\\n    eventloop.enqueue(() => {\\n      if (this.depth > 0) {\\n        this.depth--\\n        // @ts-ignore\\n        this.ccontainer = this.ccontainer.parentElement.parentElement\\n      }\\n    })\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   */\\n  print (args) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\\n    })\\n  }\\n\\n  /**\\n   * @param {Error} err\\n   */\\n  printError (err) {\\n    this.print([RED, BOLD, err.toString()])\\n  }\\n\\n  /**\\n   * @param {string} url\\n   * @param {number} height\\n   */\\n  printImg (url, height) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\\n    })\\n  }\\n\\n  /**\\n   * @param {Node} node\\n   */\\n  printDom (node) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [node])\\n    })\\n  }\\n\\n  destroy () {\\n    eventloop.enqueue(() => {\\n      vconsoles.delete(this)\\n    })\\n  }\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Element} dom\\n */\\nexport const createVConsole = dom => new VConsole(dom)\\n\\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\\nlet nextColor = 0\\nlet lastLoggingTime = time.getUnixTime()\\n\\n/**\\n * @param {string} moduleName\\n * @return {function(...any):void}\\n */\\nexport const createModuleLogger = moduleName => {\\n  const color = loggingColors[nextColor]\\n  const debugRegexVar = env.getVariable('log')\\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\\n  nextColor = (nextColor + 1) % loggingColors.length\\n  moduleName += ': '\\n\\n  return !doLogging ? func.nop : (...args) => {\\n    const timeNow = time.getUnixTime()\\n    const timeDiff = timeNow - lastLoggingTime\\n    lastLoggingTime = timeNow\\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\\n  }\\n}\\n\"],\"names\":[\"symbol.create\",\"pair.create\",\"map.create\",\"dom.mapToStyleString\",\"env.isNode\",\"env.isBrowser\",\"dom.element\",\"dom.text\",\"json.stringify\",\"eventloop.enqueue\",\"dom.append\",\"dom.addEventListener\",\"math.round\",\"time.getUnixTime\",\"env.getVariable\",\"func.nop\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/logging-7cc36806.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/logging.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./environment-7e2ffaea.cjs');\nrequire('./symbol-c5caa724.cjs');\nrequire('./pair-ab022bc3.cjs');\nrequire('./dom-58958c04.cjs');\nrequire('./json-092190a1.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./eventloop-c60b5658.cjs');\nrequire('./math-08e068f9.cjs');\nrequire('./time-e00067da.cjs');\nrequire('./function-f8acb5f5.cjs');\nvar logging = require('./logging-7cc36806.cjs');\nrequire('./string-f3c3d805.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./storage.cjs');\nrequire('./metric.cjs');\nrequire('./array-b2d24238.cjs');\nrequire('./object-dcdd6eed.cjs');\n\n\n\nexports.BLUE = logging.BLUE;\nexports.BOLD = logging.BOLD;\nexports.GREEN = logging.GREEN;\nexports.GREY = logging.GREY;\nexports.ORANGE = logging.ORANGE;\nexports.PURPLE = logging.PURPLE;\nexports.RED = logging.RED;\nexports.UNBOLD = logging.UNBOLD;\nexports.UNCOLOR = logging.UNCOLOR;\nexports.VConsole = logging.VConsole;\nexports.createModuleLogger = logging.createModuleLogger;\nexports.createVConsole = logging.createVConsole;\nexports.group = logging.group;\nexports.groupCollapsed = logging.groupCollapsed;\nexports.groupEnd = logging.groupEnd;\nexports.print = logging.print;\nexports.printCanvas = logging.printCanvas;\nexports.printDom = logging.printDom;\nexports.printError = logging.printError;\nexports.printImg = logging.printImg;\nexports.printImgBase64 = logging.printImgBase64;\nexports.vconsoles = logging.vconsoles;\nexports.warn = logging.warn;\n///# sourceMappingURL=logging.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/logging.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/logging.cjs.map":{"text":"{\"version\":3,\"file\":\"logging.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/logging.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/map-28a001c9.cjs":{"text":"'use strict';\n\n/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nconst create = () => new Map();\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nconst copy = m => {\n  const r = create();\n  m.forEach((v, k) => { r.set(k, v); });\n  return r\n};\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nconst setIfUndefined = (map, key, createT) => {\n  let set = map.get(key);\n  if (set === undefined) {\n    map.set(key, set = createT());\n  }\n  return set\n};\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nconst map = (m, f) => {\n  const res = [];\n  for (const [key, value] of m) {\n    res.push(f(value, key));\n  }\n  return res\n};\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nconst any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nconst all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n};\n\nvar map$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create,\n  copy: copy,\n  setIfUndefined: setIfUndefined,\n  map: map,\n  any: any,\n  all: all\n});\n\nexports.all = all;\nexports.any = any;\nexports.copy = copy;\nexports.create = create;\nexports.map = map;\nexports.map$1 = map$1;\nexports.setIfUndefined = setIfUndefined;\n///# sourceMappingURL=map-28a001c9.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/map-28a001c9.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/map-28a001c9.cjs.map":{"text":"{\"version\":3,\"file\":\"map-28a001c9.cjs\",\"sources\":[\"../map.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with key-value stores.\\n *\\n * @module map\\n */\\n\\n/**\\n * Creates a new Map instance.\\n *\\n * @function\\n * @return {Map<any, any>}\\n *\\n * @function\\n */\\nexport const create = () => new Map()\\n\\n/**\\n * Copy a Map object into a fresh Map object.\\n *\\n * @function\\n * @template X,Y\\n * @param {Map<X,Y>} m\\n * @return {Map<X,Y>}\\n */\\nexport const copy = m => {\\n  const r = create()\\n  m.forEach((v, k) => { r.set(k, v) })\\n  return r\\n}\\n\\n/**\\n * Get map property. Create T if property is undefined and set T on map.\\n *\\n * ```js\\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\\n * listeners.add(listener)\\n * ```\\n *\\n * @function\\n * @template T,K\\n * @param {Map<K, T>} map\\n * @param {K} key\\n * @param {function():T} createT\\n * @return {T}\\n */\\nexport const setIfUndefined = (map, key, createT) => {\\n  let set = map.get(key)\\n  if (set === undefined) {\\n    map.set(key, set = createT())\\n  }\\n  return set\\n}\\n\\n/**\\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\\n *\\n * @function\\n * @template K\\n * @template V\\n * @template R\\n * @param {Map<K,V>} m\\n * @param {function(V,K):R} f\\n * @return {Array<R>}\\n */\\nexport const map = (m, f) => {\\n  const res = []\\n  for (const [key, value] of m) {\\n    res.push(f(value, key))\\n  }\\n  return res\\n}\\n\\n/**\\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\\n *\\n * @todo should rename to some - similarly to Array.some\\n *\\n * @function\\n * @template K\\n * @template V\\n * @param {Map<K,V>} m\\n * @param {function(V,K):boolean} f\\n * @return {boolean}\\n */\\nexport const any = (m, f) => {\\n  for (const [key, value] of m) {\\n    if (f(value, key)) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\n/**\\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\\n *\\n * @function\\n * @template K\\n * @template V\\n * @param {Map<K,V>} m\\n * @param {function(V,K):boolean} f\\n * @return {boolean}\\n */\\nexport const all = (m, f) => {\\n  for (const [key, value] of m) {\\n    if (!f(value, key)) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,MAAM,IAAI,GAAG,GAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,CAAC,IAAI;AACzB,EAAE,MAAM,CAAC,GAAG,MAAM,GAAE;AACpB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC;AACtC,EAAE,OAAO,CAAC;AACV,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,KAAK;AACrD,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AACxB,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;AACzB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,EAAE,EAAC;AACjC,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC7B,EAAE,MAAM,GAAG,GAAG,GAAE;AAChB,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;AAChC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAC;AAC3B,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC7B,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;AAChC,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;AACvB,MAAM,OAAO,IAAI;AACjB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,KAAK;AACd,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC7B,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;AAChC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;AACxB,MAAM,OAAO,KAAK;AAClB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,IAAI;AACb;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/map-28a001c9.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/map.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar map = require('./map-28a001c9.cjs');\n\n\n\nexports.all = map.all;\nexports.any = map.any;\nexports.copy = map.copy;\nexports.create = map.create;\nexports.map = map.map;\nexports.setIfUndefined = map.setIfUndefined;\n///# sourceMappingURL=map.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/map.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/map.cjs.map":{"text":"{\"version\":3,\"file\":\"map.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/map.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/math-08e068f9.cjs":{"text":"'use strict';\n\n/**\n * Common Math expressions.\n *\n * @module math\n */\n\nconst floor = Math.floor;\nconst ceil = Math.ceil;\nconst abs = Math.abs;\nconst imul = Math.imul;\nconst round = Math.round;\nconst log10 = Math.log10;\nconst log2 = Math.log2;\nconst log = Math.log;\nconst sqrt = Math.sqrt;\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nconst add = (a, b) => a + b;\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nconst min = (a, b) => a < b ? a : b;\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nconst max = (a, b) => a > b ? a : b;\n\nconst isNaN = Number.isNaN;\n\nconst pow = Math.pow;\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nconst exp10 = exp => Math.pow(10, exp);\n\nconst sign = Math.sign;\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nconst isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0;\n\nvar math = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tfloor: floor,\n\tceil: ceil,\n\tabs: abs,\n\timul: imul,\n\tround: round,\n\tlog10: log10,\n\tlog2: log2,\n\tlog: log,\n\tsqrt: sqrt,\n\tadd: add,\n\tmin: min,\n\tmax: max,\n\tisNaN: isNaN,\n\tpow: pow,\n\texp10: exp10,\n\tsign: sign,\n\tisNegativeZero: isNegativeZero\n});\n\nexports.abs = abs;\nexports.add = add;\nexports.ceil = ceil;\nexports.exp10 = exp10;\nexports.floor = floor;\nexports.imul = imul;\nexports.isNaN = isNaN;\nexports.isNegativeZero = isNegativeZero;\nexports.log = log;\nexports.log10 = log10;\nexports.log2 = log2;\nexports.math = math;\nexports.max = max;\nexports.min = min;\nexports.pow = pow;\nexports.round = round;\nexports.sign = sign;\nexports.sqrt = sqrt;\n///# sourceMappingURL=math-08e068f9.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/math-08e068f9.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/math-08e068f9.cjs.map":{"text":"{\"version\":3,\"file\":\"math-08e068f9.cjs\",\"sources\":[\"../math.js\"],\"sourcesContent\":[\"/**\\n * Common Math expressions.\\n *\\n * @module math\\n */\\n\\nexport const floor = Math.floor\\nexport const ceil = Math.ceil\\nexport const abs = Math.abs\\nexport const imul = Math.imul\\nexport const round = Math.round\\nexport const log10 = Math.log10\\nexport const log2 = Math.log2\\nexport const log = Math.log\\nexport const sqrt = Math.sqrt\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The sum of a and b\\n */\\nexport const add = (a, b) => a + b\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The smaller element of a and b\\n */\\nexport const min = (a, b) => a < b ? a : b\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The bigger element of a and b\\n */\\nexport const max = (a, b) => a > b ? a : b\\n\\nexport const isNaN = Number.isNaN\\n\\nexport const pow = Math.pow\\n/**\\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\\n *\\n * @param {number} exp\\n * @return {number}\\n */\\nexport const exp10 = exp => Math.pow(10, exp)\\n\\nexport const sign = Math.sign\\n\\n/**\\n * @param {number} n\\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\\n */\\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,IAAI,CAAC,MAAK;AACnB,MAAC,IAAI,GAAG,IAAI,CAAC,KAAI;AACjB,MAAC,GAAG,GAAG,IAAI,CAAC,IAAG;AACf,MAAC,IAAI,GAAG,IAAI,CAAC,KAAI;AACjB,MAAC,KAAK,GAAG,IAAI,CAAC,MAAK;AACnB,MAAC,KAAK,GAAG,IAAI,CAAC,MAAK;AACnB,MAAC,IAAI,GAAG,IAAI,CAAC,KAAI;AACjB,MAAC,GAAG,GAAG,IAAI,CAAC,IAAG;AACf,MAAC,IAAI,GAAG,IAAI,CAAC,KAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AAC1C;AACY,MAAC,KAAK,GAAG,MAAM,CAAC,MAAK;AACjC;AACY,MAAC,GAAG,GAAG,IAAI,CAAC,IAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAC;AAC7C;AACY,MAAC,IAAI,GAAG,IAAI,CAAC,KAAI;AAC7B;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/math-08e068f9.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/math.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar math = require('./math-08e068f9.cjs');\n\n\n\nexports.abs = math.abs;\nexports.add = math.add;\nexports.ceil = math.ceil;\nexports.exp10 = math.exp10;\nexports.floor = math.floor;\nexports.imul = math.imul;\nexports.isNaN = math.isNaN;\nexports.isNegativeZero = math.isNegativeZero;\nexports.log = math.log;\nexports.log10 = math.log10;\nexports.log2 = math.log2;\nexports.max = math.max;\nexports.min = math.min;\nexports.pow = math.pow;\nexports.round = math.round;\nexports.sign = math.sign;\nexports.sqrt = math.sqrt;\n///# sourceMappingURL=math.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/math.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/math.cjs.map":{"text":"{\"version\":3,\"file\":\"math.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/math.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/metric.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar math = require('./math-08e068f9.cjs');\n\n/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nconst yotta = 1e24;\nconst zetta = 1e21;\nconst exa = 1e18;\nconst peta = 1e15;\nconst tera = 1e12;\nconst giga = 1e9;\nconst mega = 1e6;\nconst kilo = 1e3;\nconst hecto = 1e2;\nconst deca = 10;\nconst deci = 0.1;\nconst centi = 0.01;\nconst milli = 1e-3;\nconst micro = 1e-6;\nconst nano = 1e-9;\nconst pico = 1e-12;\nconst femto = 1e-15;\nconst atto = 1e-18;\nconst zepto = 1e-21;\nconst yocto = 1e-24;\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y'];\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nconst prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n);\n  let mult = 0;\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--;\n    mult--;\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++;\n    mult++;\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier];\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n};\n\nexports.atto = atto;\nexports.centi = centi;\nexports.deca = deca;\nexports.deci = deci;\nexports.exa = exa;\nexports.femto = femto;\nexports.giga = giga;\nexports.hecto = hecto;\nexports.kilo = kilo;\nexports.mega = mega;\nexports.micro = micro;\nexports.milli = milli;\nexports.nano = nano;\nexports.peta = peta;\nexports.pico = pico;\nexports.prefix = prefix;\nexports.tera = tera;\nexports.yocto = yocto;\nexports.yotta = yotta;\nexports.zepto = zepto;\nexports.zetta = zetta;\n///# sourceMappingURL=metric.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/metric.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/metric.cjs.map":{"text":"{\"version\":3,\"file\":\"metric.cjs\",\"sources\":[\"../metric.js\"],\"sourcesContent\":[\"/**\\n * Utility module to convert metric values.\\n *\\n * @module metric\\n */\\n\\nimport * as math from './math.js'\\n\\nexport const yotta = 1e24\\nexport const zetta = 1e21\\nexport const exa = 1e18\\nexport const peta = 1e15\\nexport const tera = 1e12\\nexport const giga = 1e9\\nexport const mega = 1e6\\nexport const kilo = 1e3\\nexport const hecto = 1e2\\nexport const deca = 10\\nexport const deci = 0.1\\nexport const centi = 0.01\\nexport const milli = 1e-3\\nexport const micro = 1e-6\\nexport const nano = 1e-9\\nexport const pico = 1e-12\\nexport const femto = 1e-15\\nexport const atto = 1e-18\\nexport const zepto = 1e-21\\nexport const yocto = 1e-24\\n\\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\\n\\n/**\\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\\n *\\n * @param {number} n\\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\\n * @return {{n:number,prefix:string}}\\n */\\nexport const prefix = (n, baseMultiplier = 0) => {\\n  const nPow = n === 0 ? 0 : math.log10(n)\\n  let mult = 0\\n  while (nPow < mult * 3 && baseMultiplier > -8) {\\n    baseMultiplier--\\n    mult--\\n  }\\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\\n    baseMultiplier++\\n    mult++\\n  }\\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\\n  return {\\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\\n    prefix\\n  }\\n}\\n\"],\"names\":[\"math.log10\",\"math.round\",\"math.exp10\"],\"mappings\":\";;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACY,MAAC,KAAK,GAAG,KAAI;AACb,MAAC,KAAK,GAAG,KAAI;AACb,MAAC,GAAG,GAAG,KAAI;AACX,MAAC,IAAI,GAAG,KAAI;AACZ,MAAC,IAAI,GAAG,KAAI;AACZ,MAAC,IAAI,GAAG,IAAG;AACX,MAAC,IAAI,GAAG,IAAG;AACX,MAAC,IAAI,GAAG,IAAG;AACX,MAAC,KAAK,GAAG,IAAG;AACZ,MAAC,IAAI,GAAG,GAAE;AACV,MAAC,IAAI,GAAG,IAAG;AACX,MAAC,KAAK,GAAG,KAAI;AACb,MAAC,KAAK,GAAG,KAAI;AACb,MAAC,KAAK,GAAG,KAAI;AACb,MAAC,IAAI,GAAG,KAAI;AACZ,MAAC,IAAI,GAAG,MAAK;AACb,MAAC,KAAK,GAAG,MAAK;AACd,MAAC,IAAI,GAAG,MAAK;AACb,MAAC,KAAK,GAAG,MAAK;AACd,MAAC,KAAK,GAAG,MAAK;AAC1B;AACA,MAAM,QAAQ,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;AAC7D,MAAM,UAAU,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,CAAC,CAAC,EAAE,cAAc,GAAG,CAAC,KAAK;AACjD,EAAE,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,UAAU,CAAC,CAAC,EAAC;AAC1C,EAAE,IAAI,IAAI,GAAG,EAAC;AACd,EAAE,OAAO,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,cAAc,GAAG,CAAC,CAAC,EAAE;AACjD,IAAI,cAAc,GAAE;AACpB,IAAI,IAAI,GAAE;AACV,GAAG;AACH,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,cAAc,GAAG,CAAC,EAAE;AACrD,IAAI,cAAc,GAAE;AACpB,IAAI,IAAI,GAAE;AACV,GAAG;AACH,EAAE,MAAM,MAAM,GAAG,cAAc,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC,cAAc,EAAC;AAC5F,EAAE,OAAO;AACT,IAAI,CAAC,EAAEC,UAAU,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAGC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGA,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI;AAClG,IAAI,MAAM;AACV,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/metric.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/mutex-63f09c81.cjs":{"text":"'use strict';\n\n/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nconst createMutex = () => {\n  let token = true;\n  return (f, g) => {\n    if (token) {\n      token = false;\n      try {\n        f();\n      } finally {\n        token = true;\n      }\n    } else if (g !== undefined) {\n      g();\n    }\n  }\n};\n\nvar mutex = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createMutex: createMutex\n});\n\nexports.createMutex = createMutex;\nexports.mutex = mutex;\n///# sourceMappingURL=mutex-63f09c81.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/mutex-63f09c81.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/mutex-63f09c81.cjs.map":{"text":"{\"version\":3,\"file\":\"mutex-63f09c81.cjs\",\"sources\":[\"../mutex.js\"],\"sourcesContent\":[\"/**\\n * Mutual exclude for JavaScript.\\n *\\n * @module mutex\\n */\\n\\n/**\\n * @callback mutex\\n * @param {function():void} cb Only executed when this mutex is not in the current stack\\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\\n */\\n\\n/**\\n * Creates a mutual exclude function with the following property:\\n *\\n * ```js\\n * const mutex = createMutex()\\n * mutex(() => {\\n *   // This function is immediately executed\\n *   mutex(() => {\\n *     // This function is not executed, as the mutex is already active.\\n *   })\\n * })\\n * ```\\n *\\n * @return {mutex} A mutual exclude function\\n * @public\\n */\\nexport const createMutex = () => {\\n  let token = true\\n  return (f, g) => {\\n    if (token) {\\n      token = false\\n      try {\\n        f()\\n      } finally {\\n        token = true\\n      }\\n    } else if (g !== undefined) {\\n      g()\\n    }\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,MAAM;AACjC,EAAE,IAAI,KAAK,GAAG,KAAI;AAClB,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK;AACnB,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,KAAK,GAAG,MAAK;AACnB,MAAM,IAAI;AACV,QAAQ,CAAC,GAAE;AACX,OAAO,SAAS;AAChB,QAAQ,KAAK,GAAG,KAAI;AACpB,OAAO;AACP,KAAK,MAAM,IAAI,CAAC,KAAK,SAAS,EAAE;AAChC,MAAM,CAAC,GAAE;AACT,KAAK;AACL,GAAG;AACH;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/mutex-63f09c81.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/mutex.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar mutex = require('./mutex-63f09c81.cjs');\n\n\n\nexports.createMutex = mutex.createMutex;\n///# sourceMappingURL=mutex.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/mutex.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/mutex.cjs.map":{"text":"{\"version\":3,\"file\":\"mutex.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/mutex.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/number-24f1eabe.cjs":{"text":"'use strict';\n\nvar math = require('./math-08e068f9.cjs');\nvar binary = require('./binary-ac8e39e2.cjs');\n\n/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;\nconst MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;\n\nconst LOWEST_INT32 = 1 << 31;\n/**\n * @type {number}\n */\nconst HIGHEST_INT32 = binary.BITS31;\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nconst isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num);\nconst isNaN = Number.isNaN;\n\nvar number = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\n\tMIN_SAFE_INTEGER: MIN_SAFE_INTEGER,\n\tLOWEST_INT32: LOWEST_INT32,\n\tHIGHEST_INT32: HIGHEST_INT32,\n\tisInteger: isInteger,\n\tisNaN: isNaN\n});\n\nexports.HIGHEST_INT32 = HIGHEST_INT32;\nexports.LOWEST_INT32 = LOWEST_INT32;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.MIN_SAFE_INTEGER = MIN_SAFE_INTEGER;\nexports.isInteger = isInteger;\nexports.isNaN = isNaN;\nexports.number = number;\n///# sourceMappingURL=number-24f1eabe.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/number-24f1eabe.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/number-24f1eabe.cjs.map":{"text":"{\"version\":3,\"file\":\"number-24f1eabe.cjs\",\"sources\":[\"../number.js\"],\"sourcesContent\":[\"/**\\n * Utility helpers for working with numbers.\\n *\\n * @module number\\n */\\n\\nimport * as math from './math.js'\\nimport * as binary from './binary.js'\\n\\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\\n\\nexport const LOWEST_INT32 = 1 << 31\\n/**\\n * @type {number}\\n */\\nexport const HIGHEST_INT32 = binary.BITS31\\n\\n/**\\n * @module number\\n */\\n\\n/* istanbul ignore next */\\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\\nexport const isNaN = Number.isNaN\\n\"],\"names\":[\"binary.BITS31\",\"math.floor\"],\"mappings\":\";;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AACY,MAAC,gBAAgB,GAAG,MAAM,CAAC,iBAAgB;AAC3C,MAAC,gBAAgB,GAAG,MAAM,CAAC,iBAAgB;AACvD;AACY,MAAC,YAAY,GAAG,CAAC,IAAI,GAAE;AACnC;AACA;AACA;AACY,MAAC,aAAa,GAAGA,cAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,MAAM,CAAC,SAAS,KAAK,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAIC,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,EAAC;AAC7G,MAAC,KAAK,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/number-24f1eabe.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/number.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./math-08e068f9.cjs');\nrequire('./binary-ac8e39e2.cjs');\nvar number = require('./number-24f1eabe.cjs');\n\n\n\nexports.HIGHEST_INT32 = number.HIGHEST_INT32;\nexports.LOWEST_INT32 = number.LOWEST_INT32;\nexports.MAX_SAFE_INTEGER = number.MAX_SAFE_INTEGER;\nexports.MIN_SAFE_INTEGER = number.MIN_SAFE_INTEGER;\nexports.isInteger = number.isInteger;\nexports.isNaN = number.isNaN;\n///# sourceMappingURL=number.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/number.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/number.cjs.map":{"text":"{\"version\":3,\"file\":\"number.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/number.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/object-dcdd6eed.cjs":{"text":"'use strict';\n\n/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nconst create = () => Object.create(null);\n\n/**\n * Object.assign\n */\nconst assign = Object.assign;\n\n/**\n * @param {Object<string,any>} obj\n */\nconst keys = Object.keys;\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nconst forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key);\n  }\n};\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nconst map = (obj, f) => {\n  const results = [];\n  for (const key in obj) {\n    results.push(f(obj[key], key));\n  }\n  return results\n};\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nconst length = obj => keys(obj).length;\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nconst some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nconst every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n};\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nconst hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nconst equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val));\n\nvar object = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create,\n  assign: assign,\n  keys: keys,\n  forEach: forEach,\n  map: map,\n  length: length,\n  some: some,\n  every: every,\n  hasProperty: hasProperty,\n  equalFlat: equalFlat\n});\n\nexports.assign = assign;\nexports.create = create;\nexports.equalFlat = equalFlat;\nexports.every = every;\nexports.forEach = forEach;\nexports.hasProperty = hasProperty;\nexports.keys = keys;\nexports.length = length;\nexports.map = map;\nexports.object = object;\nexports.some = some;\n///# sourceMappingURL=object-dcdd6eed.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/object-dcdd6eed.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/object-dcdd6eed.cjs.map":{"text":"{\"version\":3,\"file\":\"object-dcdd6eed.cjs\",\"sources\":[\"../object.js\"],\"sourcesContent\":[\"/**\\n * Utility functions for working with EcmaScript objects.\\n *\\n * @module object\\n */\\n\\n/**\\n * @return {Object<string,any>} obj\\n */\\nexport const create = () => Object.create(null)\\n\\n/**\\n * Object.assign\\n */\\nexport const assign = Object.assign\\n\\n/**\\n * @param {Object<string,any>} obj\\n */\\nexport const keys = Object.keys\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):any} f\\n */\\nexport const forEach = (obj, f) => {\\n  for (const key in obj) {\\n    f(obj[key], key)\\n  }\\n}\\n\\n/**\\n * @template R\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):R} f\\n * @return {Array<R>}\\n */\\nexport const map = (obj, f) => {\\n  const results = []\\n  for (const key in obj) {\\n    results.push(f(obj[key], key))\\n  }\\n  return results\\n}\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @return {number}\\n */\\nexport const length = obj => keys(obj).length\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):boolean} f\\n * @return {boolean}\\n */\\nexport const some = (obj, f) => {\\n  for (const key in obj) {\\n    if (f(obj[key], key)) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):boolean} f\\n * @return {boolean}\\n */\\nexport const every = (obj, f) => {\\n  for (const key in obj) {\\n    if (!f(obj[key], key)) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\\n/**\\n * Calls `Object.prototype.hasOwnProperty`.\\n *\\n * @param {any} obj\\n * @param {string|symbol} key\\n * @return {boolean}\\n */\\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\\n\\n/**\\n * @param {Object<string,any>} a\\n * @param {Object<string,any>} b\\n * @return {boolean}\\n */\\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,EAAC;AAC/C;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,MAAM,CAAC,OAAM;AACnC;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,MAAM,CAAC,KAAI;AAC/B;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;AACnC,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACzB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAC;AACpB,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;AAC/B,EAAE,MAAM,OAAO,GAAG,GAAE;AACpB,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACzB,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAC;AAClC,GAAG;AACH,EAAE,OAAO,OAAO;AAChB,EAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,OAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;AAChC,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACzB,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE;AAC1B,MAAM,OAAO,IAAI;AACjB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,KAAK;AACd,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;AACjC,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACzB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE;AAC3B,MAAM,OAAO,KAAK;AAClB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,IAAI;AACb,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,SAAS,IAAI,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/object-dcdd6eed.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/object.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar object = require('./object-dcdd6eed.cjs');\n\n\n\nexports.assign = object.assign;\nexports.create = object.create;\nexports.equalFlat = object.equalFlat;\nexports.every = object.every;\nexports.forEach = object.forEach;\nexports.hasProperty = object.hasProperty;\nexports.keys = object.keys;\nexports.length = object.length;\nexports.map = object.map;\nexports.some = object.some;\n///# sourceMappingURL=object.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/object.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/object.cjs.map":{"text":"{\"version\":3,\"file\":\"object.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/object.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/observable.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar map = require('./map-28a001c9.cjs');\nvar set = require('./set-7ae96d21.cjs');\nvar array = require('./array-b2d24238.cjs');\n\n/**\n * Observable class prototype.\n *\n * @module observable\n */\n\n/**\n * Handles named events.\n *\n * @template N\n */\nclass Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create();\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f);\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f);\n      f(...args);\n    };\n    this.on(name, _f);\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name);\n    if (observers !== undefined) {\n      observers.delete(f);\n      if (observers.size === 0) {\n        this._observers.delete(name);\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create();\n  }\n}\n\nexports.Observable = Observable;\n///# sourceMappingURL=observable.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/observable.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/observable.cjs.map":{"text":"{\"version\":3,\"file\":\"observable.cjs\",\"sources\":[\"../observable.js\"],\"sourcesContent\":[\"/**\\n * Observable class prototype.\\n *\\n * @module observable\\n */\\n\\nimport * as map from './map.js'\\nimport * as set from './set.js'\\nimport * as array from './array.js'\\n\\n/**\\n * Handles named events.\\n *\\n * @template N\\n */\\nexport class Observable {\\n  constructor () {\\n    /**\\n     * Some desc.\\n     * @type {Map<N, any>}\\n     */\\n    this._observers = map.create()\\n  }\\n\\n  /**\\n   * @param {N} name\\n   * @param {function} f\\n   */\\n  on (name, f) {\\n    map.setIfUndefined(this._observers, name, set.create).add(f)\\n  }\\n\\n  /**\\n   * @param {N} name\\n   * @param {function} f\\n   */\\n  once (name, f) {\\n    /**\\n     * @param  {...any} args\\n     */\\n    const _f = (...args) => {\\n      this.off(name, _f)\\n      f(...args)\\n    }\\n    this.on(name, _f)\\n  }\\n\\n  /**\\n   * @param {N} name\\n   * @param {function} f\\n   */\\n  off (name, f) {\\n    const observers = this._observers.get(name)\\n    if (observers !== undefined) {\\n      observers.delete(f)\\n      if (observers.size === 0) {\\n        this._observers.delete(name)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Emit a named event. All registered event listeners that listen to the\\n   * specified name will receive the event.\\n   *\\n   * @todo This should catch exceptions\\n   *\\n   * @param {N} name The event name.\\n   * @param {Array<any>} args The arguments that are applied to the event listener.\\n   */\\n  emit (name, args) {\\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\\n  }\\n\\n  destroy () {\\n    this._observers = map.create()\\n  }\\n}\\n\"],\"names\":[\"map.create\",\"map.setIfUndefined\",\"set.create\",\"array.from\"],\"mappings\":\";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,CAAC;AACxB,EAAE,WAAW,CAAC,GAAG;AACjB;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAGA,UAAU,GAAE;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;AACf,IAAIC,kBAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAEC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;AAChE,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;AACjB;AACA;AACA;AACA,IAAI,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,KAAK;AAC5B,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,EAAC;AACxB,MAAM,CAAC,CAAC,GAAG,IAAI,EAAC;AAChB,MAAK;AACL,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAC;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;AAChB,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAC;AAC/C,IAAI,IAAI,SAAS,KAAK,SAAS,EAAE;AACjC,MAAM,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC;AACzB,MAAM,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC,EAAE;AAChC,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAC;AACpC,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE;AACpB;AACA,IAAI,OAAOC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAIH,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AACpG,GAAG;AACH;AACA,EAAE,OAAO,CAAC,GAAG;AACb,IAAI,IAAI,CAAC,UAAU,GAAGA,UAAU,GAAE;AAClC,GAAG;AACH;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/observable.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/pair-ab022bc3.cjs":{"text":"'use strict';\n\n/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nclass Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left;\n    this.right = right;\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nconst create = (left, right) => new Pair(left, right);\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nconst createReversed = (right, left) => new Pair(left, right);\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nconst forEach = (arr, f) => arr.forEach(p => f(p.left, p.right));\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nconst map = (arr, f) => arr.map(p => f(p.left, p.right));\n\nvar pair = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Pair: Pair,\n  create: create,\n  createReversed: createReversed,\n  forEach: forEach,\n  map: map\n});\n\nexports.Pair = Pair;\nexports.create = create;\nexports.createReversed = createReversed;\nexports.forEach = forEach;\nexports.map = map;\nexports.pair = pair;\n///# sourceMappingURL=pair-ab022bc3.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/pair-ab022bc3.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/pair-ab022bc3.cjs.map":{"text":"{\"version\":3,\"file\":\"pair-ab022bc3.cjs\",\"sources\":[\"../pair.js\"],\"sourcesContent\":[\"/**\\n * Working with value pairs.\\n *\\n * @module pair\\n */\\n\\n/**\\n * @template L,R\\n */\\nexport class Pair {\\n  /**\\n   * @param {L} left\\n   * @param {R} right\\n   */\\n  constructor (left, right) {\\n    this.left = left\\n    this.right = right\\n  }\\n}\\n\\n/**\\n * @template L,R\\n * @param {L} left\\n * @param {R} right\\n * @return {Pair<L,R>}\\n */\\nexport const create = (left, right) => new Pair(left, right)\\n\\n/**\\n * @template L,R\\n * @param {R} right\\n * @param {L} left\\n * @return {Pair<L,R>}\\n */\\nexport const createReversed = (right, left) => new Pair(left, right)\\n\\n/**\\n * @template L,R\\n * @param {Array<Pair<L,R>>} arr\\n * @param {function(L, R):any} f\\n */\\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\\n\\n/**\\n * @template L,R,X\\n * @param {Array<Pair<L,R>>} arr\\n * @param {function(L, R):X} f\\n * @return {Array<X>}\\n */\\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,IAAI,CAAC;AAClB;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE;AAC5B,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;AACpB,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;AACtB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/pair-ab022bc3.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/pair.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar pair = require('./pair-ab022bc3.cjs');\n\n\n\nexports.Pair = pair.Pair;\nexports.create = pair.create;\nexports.createReversed = pair.createReversed;\nexports.forEach = pair.forEach;\nexports.map = pair.map;\n///# sourceMappingURL=pair.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/pair.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/pair.cjs.map":{"text":"{\"version\":3,\"file\":\"pair.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/pair.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/prng-695120cc.cjs":{"text":"'use strict';\n\nvar binary = require('./binary-ac8e39e2.cjs');\nvar string = require('./string-f3c3d805.cjs');\nvar math = require('./math-08e068f9.cjs');\nvar encoding = require('./buffer-ac2cdedf.cjs');\n\n/**\n * @module prng\n */\n\n/**\n * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\n */\nclass Xorshift32 {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed;\n    /**\n     * @type {number}\n     */\n    this._state = seed;\n  }\n\n  /**\n   * Generate a random signed integer.\n   *\n   * @return {Number} A 32 bit signed integer.\n   */\n  next () {\n    let x = this._state;\n    x ^= x << 13;\n    x ^= x >> 17;\n    x ^= x << 5;\n    this._state = x;\n    return (x >>> 0) / (binary.BITS32 + 1)\n  }\n}\n\n/**\n * @module prng\n */\n\n/**\n * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\n *\n * This implementation follows the idea of the original xoroshiro128plus implementation,\n * but is optimized for the JavaScript runtime. I.e.\n * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\n * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\n * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\n *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\n *   first 32bit addition is not carried over to the last 32bit.\n *\n * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\n */\nclass Xoroshiro128plus {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed;\n    // This is a variant of Xoroshiro128plus to fill the initial state\n    const xorshift32 = new Xorshift32(seed);\n    this.state = new Uint32Array(4);\n    for (let i = 0; i < 4; i++) {\n      this.state[i] = xorshift32.next() * binary.BITS32;\n    }\n    this._fresh = true;\n  }\n\n  /**\n   * @return {number} Float/Double in [0,1)\n   */\n  next () {\n    const state = this.state;\n    if (this._fresh) {\n      this._fresh = false;\n      return ((state[0] + state[2]) >>> 0) / (binary.BITS32 + 1)\n    } else {\n      this._fresh = true;\n      const s0 = state[0];\n      const s1 = state[1];\n      const s2 = state[2] ^ s0;\n      const s3 = state[3] ^ s1;\n      // function js_rotl (x, k) {\n      //   k = k - 32\n      //   const x1 = x[0]\n      //   const x2 = x[1]\n      //   x[0] = x2 << k | x1 >>> (32 - k)\n      //   x[1] = x1 << k | x2 >>> (32 - k)\n      // }\n      // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\n      state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18);\n      state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14);\n      // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\n      state[2] = s3 << 4 | s2 >>> 28;\n      state[3] = s2 << 4 | s3 >>> 28;\n      return (((state[1] + state[3]) >>> 0) / (binary.BITS32 + 1))\n    }\n  }\n}\n\n/*\n// Reference implementation\n// Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\n// By David Blackman and Sebastiano Vigna\n// Who published the reference implementation under Public Domain (CC0)\n\n#include <stdint.h>\n#include <stdio.h>\n\nuint64_t s[2];\n\nstatic inline uint64_t rotl(const uint64_t x, int k) {\n    return (x << k) | (x >> (64 - k));\n}\n\nuint64_t next(void) {\n    const uint64_t s0 = s[0];\n    uint64_t s1 = s[1];\n    s1 ^= s0;\n    s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\n    s[1] = rotl(s1, 36); // c\n    return (s[0] + s[1]) & 0xFFFFFFFF;\n}\n\nint main(void)\n{\n    int i;\n    s[0] = 1111 | (1337ul << 32);\n    s[1] = 1234 | (9999ul << 32);\n\n    printf(\"1000 outputs of genrand_int31()\\n\");\n    for (i=0; i<100; i++) {\n        printf(\"%10lu \", i);\n        printf(\"%10lu \", next());\n        printf(\"- %10lu \", s[0] >> 32);\n        printf(\"%10lu \", (s[0] << 32) >> 32);\n        printf(\"%10lu \", s[1] >> 32);\n        printf(\"%10lu \", (s[1] << 32) >> 32);\n        printf(\"\\n\");\n        // if (i%5==4) printf(\"\\n\");\n    }\n    return 0;\n}\n*/\n\n/**\n * Fast Pseudo Random Number Generators.\n *\n * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\n * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\n *\n * @module prng\n */\n\n/**\n * Description of the function\n *  @callback generatorNext\n *  @return {number} A 32bit integer\n */\n\n/**\n * A random type generator.\n *\n * @typedef {Object} PRNG\n * @property {generatorNext} next Generate new number\n */\n\nconst DefaultPRNG = Xoroshiro128plus;\n\n/**\n * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\n * This is the fastest full-period generator passing BigCrush without systematic failures.\n * But there are more PRNGs available in ./PRNG/.\n *\n * @param {number} seed A positive 32bit integer. Do not use negative numbers.\n * @return {PRNG}\n */\nconst create = seed => new DefaultPRNG(seed);\n\n/**\n * Generates a single random bool.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Boolean} A random boolean\n */\nconst bool = gen => (gen.next() >= 0.5);\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst int53 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min);\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst uint53 = (gen, min, max) => math.abs(int53(gen, min, max));\n\n/**\n * Generates a random integer with 32 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst int32 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min);\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst uint32 = (gen, min, max) => int32(gen, min, max) >>> 0;\n\n/**\n * @deprecated\n * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\n * openaring on smaller ranges.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\n * @return {Number} A random integer on [min, max]\n */\nconst int31 = (gen, min, max) => int32(gen, min, max);\n\n/**\n * Generates a random real on [0, 1) with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Number} A random real number on [0, 1).\n */\nconst real53 = gen => gen.next(); // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\n\n/**\n * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\n *\n * @param {PRNG} gen A random number generator.\n * @return {string}\n *\n * (Space)!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\n */\nconst char = gen => string.fromCharCode(int31(gen, 32, 126));\n\n/**\n * @param {PRNG} gen\n * @return {string} A single letter (a-z)\n */\nconst letter = gen => string.fromCharCode(int31(gen, 97, 122));\n\n/**\n * @param {PRNG} gen\n * @param {number} [minLen=0]\n * @param {number} [maxLen=20]\n * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\n */\nconst word = (gen, minLen = 0, maxLen = 20) => {\n  const len = int31(gen, minLen, maxLen);\n  let str = '';\n  for (let i = 0; i < len; i++) {\n    str += letter(gen);\n  }\n  return str\n};\n\n/**\n * TODO: this function produces invalid runes. Does not cover all of utf16!!\n *\n * @param {PRNG} gen\n * @return {string}\n */\nconst utf16Rune = gen => {\n  const codepoint = int31(gen, 0, 256);\n  return string.fromCodePoint(codepoint)\n};\n\n/**\n * @param {PRNG} gen\n * @param {number} [maxlen = 20]\n */\nconst utf16String = (gen, maxlen = 20) => {\n  const len = int31(gen, 0, maxlen);\n  let str = '';\n  for (let i = 0; i < len; i++) {\n    str += utf16Rune(gen);\n  }\n  return str\n};\n\n/**\n * Returns one element of a given array.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Array<T>} array Non empty Array of possible values.\n * @return {T} One of the values of the supplied Array.\n * @template T\n */\nconst oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)];\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint8Array}\n */\nconst uint8Array = (gen, len) => {\n  const buf = encoding.createUint8ArrayFromLen(len);\n  for (let i = 0; i < buf.length; i++) {\n    buf[i] = int32(gen, 0, binary.BITS8);\n  }\n  return buf\n};\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint16Array}\n */\nconst uint16Array = (gen, len) => new Uint16Array(uint8Array(gen, len * 2).buffer);\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint32Array}\n */\nconst uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer);\n\nvar prng = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DefaultPRNG: DefaultPRNG,\n  create: create,\n  bool: bool,\n  int53: int53,\n  uint53: uint53,\n  int32: int32,\n  uint32: uint32,\n  int31: int31,\n  real53: real53,\n  char: char,\n  letter: letter,\n  word: word,\n  utf16Rune: utf16Rune,\n  utf16String: utf16String,\n  oneOf: oneOf,\n  uint8Array: uint8Array,\n  uint16Array: uint16Array,\n  uint32Array: uint32Array\n});\n\nexports.DefaultPRNG = DefaultPRNG;\nexports.bool = bool;\nexports.char = char;\nexports.create = create;\nexports.int31 = int31;\nexports.int32 = int32;\nexports.int53 = int53;\nexports.letter = letter;\nexports.oneOf = oneOf;\nexports.prng = prng;\nexports.real53 = real53;\nexports.uint16Array = uint16Array;\nexports.uint32 = uint32;\nexports.uint32Array = uint32Array;\nexports.uint53 = uint53;\nexports.uint8Array = uint8Array;\nexports.utf16Rune = utf16Rune;\nexports.utf16String = utf16String;\nexports.word = word;\n///# sourceMappingURL=prng-695120cc.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/prng-695120cc.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/prng-695120cc.cjs.map":{"text":"{\"version\":3,\"file\":\"prng-695120cc.cjs\",\"sources\":[\"../prng/Xorshift32.js\",\"../prng/Xoroshiro128plus.js\",\"../prng.js\"],\"sourcesContent\":[\"/**\\n * @module prng\\n */\\n\\nimport * as binary from '../binary.js'\\n\\n/**\\n * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\\n */\\nexport class Xorshift32 {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    /**\\n     * @type {number}\\n     */\\n    this._state = seed\\n  }\\n\\n  /**\\n   * Generate a random signed integer.\\n   *\\n   * @return {Number} A 32 bit signed integer.\\n   */\\n  next () {\\n    let x = this._state\\n    x ^= x << 13\\n    x ^= x >> 17\\n    x ^= x << 5\\n    this._state = x\\n    return (x >>> 0) / (binary.BITS32 + 1)\\n  }\\n}\\n\",\"/**\\n * @module prng\\n */\\n\\nimport { Xorshift32 } from './Xorshift32.js'\\nimport * as binary from '../binary.js'\\n\\n/**\\n * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\\n *\\n * This implementation follows the idea of the original xoroshiro128plus implementation,\\n * but is optimized for the JavaScript runtime. I.e.\\n * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\\n * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\\n * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\\n *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\\n *   first 32bit addition is not carried over to the last 32bit.\\n *\\n * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\\n */\\nexport class Xoroshiro128plus {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    // This is a variant of Xoroshiro128plus to fill the initial state\\n    const xorshift32 = new Xorshift32(seed)\\n    this.state = new Uint32Array(4)\\n    for (let i = 0; i < 4; i++) {\\n      this.state[i] = xorshift32.next() * binary.BITS32\\n    }\\n    this._fresh = true\\n  }\\n\\n  /**\\n   * @return {number} Float/Double in [0,1)\\n   */\\n  next () {\\n    const state = this.state\\n    if (this._fresh) {\\n      this._fresh = false\\n      return ((state[0] + state[2]) >>> 0) / (binary.BITS32 + 1)\\n    } else {\\n      this._fresh = true\\n      const s0 = state[0]\\n      const s1 = state[1]\\n      const s2 = state[2] ^ s0\\n      const s3 = state[3] ^ s1\\n      // function js_rotl (x, k) {\\n      //   k = k - 32\\n      //   const x1 = x[0]\\n      //   const x2 = x[1]\\n      //   x[0] = x2 << k | x1 >>> (32 - k)\\n      //   x[1] = x1 << k | x2 >>> (32 - k)\\n      // }\\n      // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\\n      state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18)\\n      state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14)\\n      // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\\n      state[2] = s3 << 4 | s2 >>> 28\\n      state[3] = s2 << 4 | s3 >>> 28\\n      return (((state[1] + state[3]) >>> 0) / (binary.BITS32 + 1))\\n    }\\n  }\\n}\\n\\n/*\\n// Reference implementation\\n// Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\\n// By David Blackman and Sebastiano Vigna\\n// Who published the reference implementation under Public Domain (CC0)\\n\\n#include <stdint.h>\\n#include <stdio.h>\\n\\nuint64_t s[2];\\n\\nstatic inline uint64_t rotl(const uint64_t x, int k) {\\n    return (x << k) | (x >> (64 - k));\\n}\\n\\nuint64_t next(void) {\\n    const uint64_t s0 = s[0];\\n    uint64_t s1 = s[1];\\n    s1 ^= s0;\\n    s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\\n    s[1] = rotl(s1, 36); // c\\n    return (s[0] + s[1]) & 0xFFFFFFFF;\\n}\\n\\nint main(void)\\n{\\n    int i;\\n    s[0] = 1111 | (1337ul << 32);\\n    s[1] = 1234 | (9999ul << 32);\\n\\n    printf(\\\"1000 outputs of genrand_int31()\\\\n\\\");\\n    for (i=0; i<100; i++) {\\n        printf(\\\"%10lu \\\", i);\\n        printf(\\\"%10lu \\\", next());\\n        printf(\\\"- %10lu \\\", s[0] >> 32);\\n        printf(\\\"%10lu \\\", (s[0] << 32) >> 32);\\n        printf(\\\"%10lu \\\", s[1] >> 32);\\n        printf(\\\"%10lu \\\", (s[1] << 32) >> 32);\\n        printf(\\\"\\\\n\\\");\\n        // if (i%5==4) printf(\\\"\\\\n\\\");\\n    }\\n    return 0;\\n}\\n*/\\n\",\"/**\\n * Fast Pseudo Random Number Generators.\\n *\\n * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\\n * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\\n *\\n * @module prng\\n */\\n\\nimport * as binary from './binary.js'\\nimport { fromCharCode, fromCodePoint } from './string.js'\\nimport * as math from './math.js'\\nimport { Xoroshiro128plus } from './prng/Xoroshiro128plus.js'\\nimport * as buffer from './buffer.js'\\n\\n/**\\n * Description of the function\\n *  @callback generatorNext\\n *  @return {number} A 32bit integer\\n */\\n\\n/**\\n * A random type generator.\\n *\\n * @typedef {Object} PRNG\\n * @property {generatorNext} next Generate new number\\n */\\n\\nexport const DefaultPRNG = Xoroshiro128plus\\n\\n/**\\n * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\\n * This is the fastest full-period generator passing BigCrush without systematic failures.\\n * But there are more PRNGs available in ./PRNG/.\\n *\\n * @param {number} seed A positive 32bit integer. Do not use negative numbers.\\n * @return {PRNG}\\n */\\nexport const create = seed => new DefaultPRNG(seed)\\n\\n/**\\n * Generates a single random bool.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {Boolean} A random boolean\\n */\\nexport const bool = gen => (gen.next() >= 0.5)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int53 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const uint53 = (gen, min, max) => math.abs(int53(gen, min, max))\\n\\n/**\\n * Generates a random integer with 32 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int32 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const uint32 = (gen, min, max) => int32(gen, min, max) >>> 0\\n\\n/**\\n * @deprecated\\n * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\\n * openaring on smaller ranges.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int31 = (gen, min, max) => int32(gen, min, max)\\n\\n/**\\n * Generates a random real on [0, 1) with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {Number} A random real number on [0, 1).\\n */\\nexport const real53 = gen => gen.next() // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\\n\\n/**\\n * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {string}\\n *\\n * (Space)!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\\n */\\nexport const char = gen => fromCharCode(int31(gen, 32, 126))\\n\\n/**\\n * @param {PRNG} gen\\n * @return {string} A single letter (a-z)\\n */\\nexport const letter = gen => fromCharCode(int31(gen, 97, 122))\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} [minLen=0]\\n * @param {number} [maxLen=20]\\n * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\\n */\\nexport const word = (gen, minLen = 0, maxLen = 20) => {\\n  const len = int31(gen, minLen, maxLen)\\n  let str = ''\\n  for (let i = 0; i < len; i++) {\\n    str += letter(gen)\\n  }\\n  return str\\n}\\n\\n/**\\n * TODO: this function produces invalid runes. Does not cover all of utf16!!\\n *\\n * @param {PRNG} gen\\n * @return {string}\\n */\\nexport const utf16Rune = gen => {\\n  const codepoint = int31(gen, 0, 256)\\n  return fromCodePoint(codepoint)\\n}\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} [maxlen = 20]\\n */\\nexport const utf16String = (gen, maxlen = 20) => {\\n  const len = int31(gen, 0, maxlen)\\n  let str = ''\\n  for (let i = 0; i < len; i++) {\\n    str += utf16Rune(gen)\\n  }\\n  return str\\n}\\n\\n/**\\n * Returns one element of a given array.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Array<T>} array Non empty Array of possible values.\\n * @return {T} One of the values of the supplied Array.\\n * @template T\\n */\\nexport const oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)]\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint8Array}\\n */\\nexport const uint8Array = (gen, len) => {\\n  const buf = buffer.createUint8ArrayFromLen(len)\\n  for (let i = 0; i < buf.length; i++) {\\n    buf[i] = int32(gen, 0, binary.BITS8)\\n  }\\n  return buf\\n}\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint16Array}\\n */\\nexport const uint16Array = (gen, len) => new Uint16Array(uint8Array(gen, len * 2).buffer)\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint32Array}\\n */\\nexport const uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer)\\n\"],\"names\":[\"binary.BITS32\",\"math.floor\",\"math.abs\",\"fromCharCode\",\"fromCodePoint\",\"buffer.createUint8ArrayFromLen\",\"binary.BITS8\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/prng-695120cc.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/prng.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./binary-ac8e39e2.cjs');\nrequire('./string-f3c3d805.cjs');\nrequire('./math-08e068f9.cjs');\nvar prng = require('./prng-695120cc.cjs');\nrequire('./buffer-ac2cdedf.cjs');\nrequire('./environment-7e2ffaea.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./storage.cjs');\nrequire('./number-24f1eabe.cjs');\n\n\n\nexports.DefaultPRNG = prng.DefaultPRNG;\nexports.bool = prng.bool;\nexports.char = prng.char;\nexports.create = prng.create;\nexports.int31 = prng.int31;\nexports.int32 = prng.int32;\nexports.int53 = prng.int53;\nexports.letter = prng.letter;\nexports.oneOf = prng.oneOf;\nexports.real53 = prng.real53;\nexports.uint16Array = prng.uint16Array;\nexports.uint32 = prng.uint32;\nexports.uint32Array = prng.uint32Array;\nexports.uint53 = prng.uint53;\nexports.uint8Array = prng.uint8Array;\nexports.utf16Rune = prng.utf16Rune;\nexports.utf16String = prng.utf16String;\nexports.word = prng.word;\n///# sourceMappingURL=prng.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/prng.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/prng.cjs.map":{"text":"{\"version\":3,\"file\":\"prng.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/prng.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/promise-f0a086b2.cjs":{"text":"'use strict';\n\nvar time = require('./time-e00067da.cjs');\n\n/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nconst create = f => /** @type {Promise<T>} */ (new Promise(f));\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nconst createEmpty = f => new Promise(f);\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template T\n * @param {Array<Promise<T>>} arrp\n * @return {Promise<Array<T>>}\n */\nconst all = arrp => Promise.all(arrp);\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nconst reject = reason => Promise.reject(reason);\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nconst resolve = res => Promise.resolve(res);\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nconst until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime();\n  const hasTimeout = timeout > 0;\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle);\n      resolve();\n    } else if (hasTimeout) {\n      /* istanbul ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle);\n        reject(new Error('Timeout'));\n      }\n    }\n  };\n  const intervalHandle = setInterval(untilInterval, intervalResolution);\n});\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nconst wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout));\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nconst isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally);\n\nvar promise = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create,\n  createEmpty: createEmpty,\n  all: all,\n  reject: reject,\n  resolve: resolve,\n  until: until,\n  wait: wait,\n  isPromise: isPromise\n});\n\nexports.all = all;\nexports.create = create;\nexports.createEmpty = createEmpty;\nexports.isPromise = isPromise;\nexports.promise = promise;\nexports.reject = reject;\nexports.resolve = resolve;\nexports.until = until;\nexports.wait = wait;\n///# sourceMappingURL=promise-f0a086b2.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/promise-f0a086b2.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/promise-f0a086b2.cjs.map":{"text":"{\"version\":3,\"file\":\"promise-f0a086b2.cjs\",\"sources\":[\"../promise.js\"],\"sourcesContent\":[\"/**\\n * Utility helpers to work with promises.\\n *\\n * @module promise\\n */\\n\\nimport * as time from './time.js'\\n\\n/**\\n * @template T\\n * @callback PromiseResolve\\n * @param {T|PromiseLike<T>} [result]\\n */\\n\\n/**\\n * @template T\\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\\n * @return {Promise<T>}\\n */\\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\\n\\n/**\\n * @param {function(function():void,function(Error):void):void} f\\n * @return {Promise<void>}\\n */\\nexport const createEmpty = f => new Promise(f)\\n\\n/**\\n * `Promise.all` wait for all promises in the array to resolve and return the result\\n * @template T\\n * @param {Array<Promise<T>>} arrp\\n * @return {Promise<Array<T>>}\\n */\\nexport const all = arrp => Promise.all(arrp)\\n\\n/**\\n * @param {Error} [reason]\\n * @return {Promise<never>}\\n */\\nexport const reject = reason => Promise.reject(reason)\\n\\n/**\\n * @template T\\n * @param {T|void} res\\n * @return {Promise<T|void>}\\n */\\nexport const resolve = res => Promise.resolve(res)\\n\\n/**\\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\\n *\\n * @param {number} timeout\\n * @param {function():boolean} check\\n * @param {number} [intervalResolution]\\n * @return {Promise<void>}\\n */\\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\\n  const startTime = time.getUnixTime()\\n  const hasTimeout = timeout > 0\\n  const untilInterval = () => {\\n    if (check()) {\\n      clearInterval(intervalHandle)\\n      resolve()\\n    } else if (hasTimeout) {\\n      /* istanbul ignore else */\\n      if (time.getUnixTime() - startTime > timeout) {\\n        clearInterval(intervalHandle)\\n        reject(new Error('Timeout'))\\n      }\\n    }\\n  }\\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\\n})\\n\\n/**\\n * @param {number} timeout\\n * @return {Promise<undefined>}\\n */\\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\\n\\n/**\\n * Checks if an object is a promise using ducktyping.\\n *\\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\\n * library has some insane environment where global Promise objects are overwritten.\\n *\\n * @param {any} p\\n * @return {boolean}\\n */\\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\\n\"],\"names\":[\"time.getUnixTime\"],\"mappings\":\";;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,CAAC,+BAA+B,IAAI,OAAO,CAAC,CAAC,CAAC,EAAC;AACrE;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,EAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC;AAC5C;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,EAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,EAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,kBAAkB,GAAG,EAAE,KAAK,MAAM,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC9F,EAAE,MAAM,SAAS,GAAGA,gBAAgB,GAAE;AACtC,EAAE,MAAM,UAAU,GAAG,OAAO,GAAG,EAAC;AAChC,EAAE,MAAM,aAAa,GAAG,MAAM;AAC9B,IAAI,IAAI,KAAK,EAAE,EAAE;AACjB,MAAM,aAAa,CAAC,cAAc,EAAC;AACnC,MAAM,OAAO,GAAE;AACf,KAAK,MAAM,IAAI,UAAU,EAAE;AAC3B;AACA,MAAM,IAAIA,gBAAgB,EAAE,GAAG,SAAS,GAAG,OAAO,EAAE;AACpD,QAAQ,aAAa,CAAC,cAAc,EAAC;AACrC,QAAQ,MAAM,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,EAAC;AACpC,OAAO;AACP,KAAK;AACL,IAAG;AACH,EAAE,MAAM,cAAc,GAAG,WAAW,CAAC,aAAa,EAAE,kBAAkB,EAAC;AACvE,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,OAAO,IAAI,MAAM,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,EAAC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,CAAC,IAAI,CAAC,YAAY,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/promise-f0a086b2.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/promise.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./time-e00067da.cjs');\nvar promise = require('./promise-f0a086b2.cjs');\nrequire('./metric.cjs');\nrequire('./math-08e068f9.cjs');\n\n\n\nexports.all = promise.all;\nexports.create = promise.create;\nexports.createEmpty = promise.createEmpty;\nexports.isPromise = promise.isPromise;\nexports.reject = promise.reject;\nexports.resolve = promise.resolve;\nexports.until = promise.until;\nexports.wait = promise.wait;\n///# sourceMappingURL=promise.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/promise.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/promise.cjs.map":{"text":"{\"version\":3,\"file\":\"promise.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/promise.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/queue.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass QueueNode {\n  constructor () {\n    /**\n     * @type {QueueNode|null}\n     */\n    this.next = null;\n  }\n}\n\nclass Queue {\n  constructor () {\n    /**\n     * @type {QueueNode | null}\n     */\n    this.start = null;\n    /**\n     * @type {QueueNode | null}\n     */\n    this.end = null;\n  }\n}\n\n/**\n * @note The queue implementation is experimental and unfinished.\n * Don't use this in production yet.\n *\n * @return {Queue}\n */\nconst create = () => new Queue();\n\n/**\n * @param {Queue} queue\n */\nconst isEmpty = queue => queue.start === null;\n\n/**\n * @param {Queue} queue\n * @param {QueueNode} n\n */\nconst enqueue = (queue, n) => {\n  if (queue.end !== null) {\n    queue.end.next = n;\n    queue.end = n;\n  } else {\n    queue.end = n;\n    queue.start = n;\n  }\n};\n\n/**\n * @param {Queue} queue\n * @return {QueueNode | null}\n */\nconst dequeue = queue => {\n  const n = queue.start;\n  if (n !== null) {\n    // @ts-ignore\n    queue.start = n.next;\n    return n\n  }\n  return null\n};\n\nexports.Queue = Queue;\nexports.QueueNode = QueueNode;\nexports.create = create;\nexports.dequeue = dequeue;\nexports.enqueue = enqueue;\nexports.isEmpty = isEmpty;\n///# sourceMappingURL=queue.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/queue.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/queue.cjs.map":{"text":"{\"version\":3,\"file\":\"queue.cjs\",\"sources\":[\"../queue.js\"],\"sourcesContent\":[\"\\nexport class QueueNode {\\n  constructor () {\\n    /**\\n     * @type {QueueNode|null}\\n     */\\n    this.next = null\\n  }\\n}\\n\\nexport class Queue {\\n  constructor () {\\n    /**\\n     * @type {QueueNode | null}\\n     */\\n    this.start = null\\n    /**\\n     * @type {QueueNode | null}\\n     */\\n    this.end = null\\n  }\\n}\\n\\n/**\\n * @note The queue implementation is experimental and unfinished.\\n * Don't use this in production yet.\\n *\\n * @return {Queue}\\n */\\nexport const create = () => new Queue()\\n\\n/**\\n * @param {Queue} queue\\n */\\nexport const isEmpty = queue => queue.start === null\\n\\n/**\\n * @param {Queue} queue\\n * @param {QueueNode} n\\n */\\nexport const enqueue = (queue, n) => {\\n  if (queue.end !== null) {\\n    queue.end.next = n\\n    queue.end = n\\n  } else {\\n    queue.end = n\\n    queue.start = n\\n  }\\n}\\n\\n/**\\n * @param {Queue} queue\\n * @return {QueueNode | null}\\n */\\nexport const dequeue = queue => {\\n  const n = queue.start\\n  if (n !== null) {\\n    // @ts-ignore\\n    queue.start = n.next\\n    return n\\n  }\\n  return null\\n}\\n\"],\"names\":[],\"mappings\":\";;;;AACO,MAAM,SAAS,CAAC;AACvB,EAAE,WAAW,CAAC,GAAG;AACjB;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;AACpB,GAAG;AACH,CAAC;AACD;AACO,MAAM,KAAK,CAAC;AACnB,EAAE,WAAW,CAAC,GAAG;AACjB;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;AACrB;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,GAAG,KAAI;AACnB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,MAAM,IAAI,KAAK,GAAE;AACvC;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,KAAI;AACpD;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK;AACrC,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,EAAE;AAC1B,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAC;AACtB,IAAI,KAAK,CAAC,GAAG,GAAG,EAAC;AACjB,GAAG,MAAM;AACT,IAAI,KAAK,CAAC,GAAG,GAAG,EAAC;AACjB,IAAI,KAAK,CAAC,KAAK,GAAG,EAAC;AACnB,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,KAAK,IAAI;AAChC,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC,MAAK;AACvB,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE;AAClB;AACA,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAI;AACxB,IAAI,OAAO,CAAC;AACZ,GAAG;AACH,EAAE,OAAO,IAAI;AACb;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/queue.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/random.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar math = require('./math-08e068f9.cjs');\nvar isomorphic_js = require('./isomorphic.js');\n\nconst rand = Math.random;\n\n/* istanbul ignore next */\nconst uint32 = () => new Uint32Array(isomorphic_js.cryptoRandomBuffer(4))[0];\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nconst oneOf = arr => arr[math.floor(rand() * arr.length)];\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\nconst uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n);\n\nexports.oneOf = oneOf;\nexports.rand = rand;\nexports.uint32 = uint32;\nexports.uuidv4 = uuidv4;\n///# sourceMappingURL=random.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/random.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/random.cjs.map":{"text":"{\"version\":3,\"file\":\"random.cjs\",\"sources\":[\"../random.js\"],\"sourcesContent\":[\"\\n/**\\n * Isomorphic module for true random numbers / buffers / uuids.\\n *\\n * Attention: falls back to Math.random if the browser does not support crypto.\\n *\\n * @module random\\n */\\n\\nimport * as math from './math.js'\\nimport { cryptoRandomBuffer } from './isomorphic.js'\\n\\nexport const rand = Math.random\\n\\n/* istanbul ignore next */\\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @return {T}\\n */\\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\\n\\n// @ts-ignore\\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\\n  (c ^ uint32() & 15 >> c / 4).toString(16)\\n)\\n\"],\"names\":[\"cryptoRandomBuffer\",\"math.floor\"],\"mappings\":\";;;;;;;AAYY,MAAC,IAAI,GAAG,IAAI,CAAC,OAAM;AAC/B;AACA;AACY,MAAC,MAAM,GAAG,MAAM,IAAI,WAAW,CAACA,gCAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;AACrE;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,GAAG,IAAI,GAAG,CAACC,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAC;AAChE;AACA;AACA,MAAM,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,KAAI;AAC7C,MAAC,MAAM,GAAG,MAAM,cAAc,CAAC,OAAO,CAAC,QAAQ,2BAA2B,CAAC;AACvF,EAAE,CAAC,CAAC,GAAG,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;AAC3C;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/random.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/set-7ae96d21.cjs":{"text":"'use strict';\n\n/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nconst create = () => new Set();\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nconst toArray = set => Array.from(set);\n\nvar set = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tcreate: create,\n\ttoArray: toArray\n});\n\nexports.create = create;\nexports.set = set;\nexports.toArray = toArray;\n///# sourceMappingURL=set-7ae96d21.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/set-7ae96d21.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/set-7ae96d21.cjs.map":{"text":"{\"version\":3,\"file\":\"set-7ae96d21.cjs\",\"sources\":[\"../set.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with sets.\\n *\\n * @module set\\n */\\n\\nexport const create = () => new Set()\\n\\n/**\\n * @template T\\n * @param {Set<T>} set\\n * @return {Array<T>}\\n */\\nexport const toArray = set => Array.from(set)\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,MAAM,IAAI,GAAG,GAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/set-7ae96d21.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/set.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar set = require('./set-7ae96d21.cjs');\n\n\n\nexports.create = set.create;\nexports.toArray = set.toArray;\n///# sourceMappingURL=set.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/set.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/set.cjs.map":{"text":"{\"version\":3,\"file\":\"set.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/set.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/sort-b8702761.cjs":{"text":"'use strict';\n\nvar math = require('./math-08e068f9.cjs');\n\n/**\n * Efficient sort implementations.\n *\n * Note: These sort implementations were created to compare different sorting algorithms in JavaScript.\n * Don't use them if you don't know what you are doing. Native Array.sort is almost always a better choice.\n *\n * @module sort\n */\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @param {number} lo\n * @param {number} hi\n * @param {function(T,T):number} compare\n */\nconst _insertionSort = (arr, lo, hi, compare) => {\n  for (let i = lo + 1; i <= hi; i++) {\n    for (let j = i; j > 0 && compare(arr[j - 1], arr[j]) > 0; j--) {\n      const tmp = arr[j];\n      arr[j] = arr[j - 1];\n      arr[j - 1] = tmp;\n    }\n  }\n};\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @param {function(T,T):number} compare\n * @return {void}\n */\nconst insertionSort = (arr, compare) => {\n  _insertionSort(arr, 0, arr.length - 1, compare);\n};\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @param {number} lo\n * @param {number} hi\n * @param {function(T,T):number} compare\n */\nconst _quickSort = (arr, lo, hi, compare) => {\n  if (hi - lo < 42) {\n    _insertionSort(arr, lo, hi, compare);\n  } else {\n    const pivot = arr[math.floor((lo + hi) / 2)];\n    let i = lo;\n    let j = hi;\n    while (true) {\n      while (compare(pivot, arr[i]) > 0) {\n        i++;\n      }\n      while (compare(arr[j], pivot) > 0) {\n        j--;\n      }\n      if (i >= j) {\n        break\n      }\n      // swap arr[i] with arr[j]\n      // and increment i and j\n      const arri = arr[i];\n      arr[i++] = arr[j];\n      arr[j--] = arri;\n    }\n    _quickSort(arr, lo, j, compare);\n    _quickSort(arr, j + 1, hi, compare);\n  }\n};\n\n/**\n * This algorithm beats Array.prototype.sort in Chrome only with arrays with 10 million entries.\n * In most cases [].sort will do just fine. Make sure to performance test your use-case before you\n * integrate this algorithm.\n *\n * Note that Chrome's sort is now a stable algorithm (Timsort). Quicksort is not stable.\n *\n * @template T\n * @param {Array<T>} arr\n * @param {function(T,T):number} compare\n * @return {void}\n */\nconst quicksort = (arr, compare) => {\n  _quickSort(arr, 0, arr.length - 1, compare);\n};\n\nvar sort = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  _insertionSort: _insertionSort,\n  insertionSort: insertionSort,\n  quicksort: quicksort\n});\n\nexports._insertionSort = _insertionSort;\nexports.insertionSort = insertionSort;\nexports.quicksort = quicksort;\nexports.sort = sort;\n///# sourceMappingURL=sort-b8702761.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/sort-b8702761.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/sort-b8702761.cjs.map":{"text":"{\"version\":3,\"file\":\"sort-b8702761.cjs\",\"sources\":[\"../sort.js\"],\"sourcesContent\":[\"/**\\n * Efficient sort implementations.\\n *\\n * Note: These sort implementations were created to compare different sorting algorithms in JavaScript.\\n * Don't use them if you don't know what you are doing. Native Array.sort is almost always a better choice.\\n *\\n * @module sort\\n */\\n\\nimport * as math from './math.js'\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {number} lo\\n * @param {number} hi\\n * @param {function(T,T):number} compare\\n */\\nexport const _insertionSort = (arr, lo, hi, compare) => {\\n  for (let i = lo + 1; i <= hi; i++) {\\n    for (let j = i; j > 0 && compare(arr[j - 1], arr[j]) > 0; j--) {\\n      const tmp = arr[j]\\n      arr[j] = arr[j - 1]\\n      arr[j - 1] = tmp\\n    }\\n  }\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @return {void}\\n */\\nexport const insertionSort = (arr, compare) => {\\n  _insertionSort(arr, 0, arr.length - 1, compare)\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {number} lo\\n * @param {number} hi\\n * @param {function(T,T):number} compare\\n */\\nconst _quickSort = (arr, lo, hi, compare) => {\\n  if (hi - lo < 42) {\\n    _insertionSort(arr, lo, hi, compare)\\n  } else {\\n    const pivot = arr[math.floor((lo + hi) / 2)]\\n    let i = lo\\n    let j = hi\\n    while (true) {\\n      while (compare(pivot, arr[i]) > 0) {\\n        i++\\n      }\\n      while (compare(arr[j], pivot) > 0) {\\n        j--\\n      }\\n      if (i >= j) {\\n        break\\n      }\\n      // swap arr[i] with arr[j]\\n      // and increment i and j\\n      const arri = arr[i]\\n      arr[i++] = arr[j]\\n      arr[j--] = arri\\n    }\\n    _quickSort(arr, lo, j, compare)\\n    _quickSort(arr, j + 1, hi, compare)\\n  }\\n}\\n\\n/**\\n * This algorithm beats Array.prototype.sort in Chrome only with arrays with 10 million entries.\\n * In most cases [].sort will do just fine. Make sure to performance test your use-case before you\\n * integrate this algorithm.\\n *\\n * Note that Chrome's sort is now a stable algorithm (Timsort). Quicksort is not stable.\\n *\\n * @template T\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @return {void}\\n */\\nexport const quicksort = (arr, compare) => {\\n  _quickSort(arr, 0, arr.length - 1, compare)\\n}\\n\"],\"names\":[\"math.floor\"],\"mappings\":\";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,KAAK;AACxD,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;AACrC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACnE,MAAM,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,EAAC;AACxB,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,EAAC;AACzB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAG;AACtB,KAAK;AACL,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,aAAa,GAAG,CAAC,GAAG,EAAE,OAAO,KAAK;AAC/C,EAAE,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,EAAC;AACjD,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,KAAK;AAC7C,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;AACpB,IAAI,cAAc,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAC;AACxC,GAAG,MAAM;AACT,IAAI,MAAM,KAAK,GAAG,GAAG,CAACA,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAC;AAChD,IAAI,IAAI,CAAC,GAAG,GAAE;AACd,IAAI,IAAI,CAAC,GAAG,GAAE;AACd,IAAI,OAAO,IAAI,EAAE;AACjB,MAAM,OAAO,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AACzC,QAAQ,CAAC,GAAE;AACX,OAAO;AACP,MAAM,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;AACzC,QAAQ,CAAC,GAAE;AACX,OAAO;AACP,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE;AAClB,QAAQ,KAAK;AACb,OAAO;AACP;AACA;AACA,MAAM,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,EAAC;AACzB,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,EAAC;AACvB,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI;AACrB,KAAK;AACL,IAAI,UAAU,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,EAAC;AACnC,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC;AACvC,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,CAAC,GAAG,EAAE,OAAO,KAAK;AAC3C,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,EAAC;AAC7C;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/sort-b8702761.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/sort.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./math-08e068f9.cjs');\nvar sort = require('./sort-b8702761.cjs');\n\n\n\nexports._insertionSort = sort._insertionSort;\nexports.insertionSort = sort.insertionSort;\nexports.quicksort = sort.quicksort;\n///# sourceMappingURL=sort.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/sort.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/sort.cjs.map":{"text":"{\"version\":3,\"file\":\"sort.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/sort.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/statistics-c2316dca.cjs":{"text":"'use strict';\n\nvar math = require('./math-08e068f9.cjs');\n\n/**\n * Utility helpers for generating statistics.\n *\n * @module statistics\n */\n\n/**\n * @param {Array<number>} arr Array of values\n * @return {number} Returns null if the array is empty\n */\nconst median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[math.floor((arr.length - 1) / 2)] + arr[math.ceil((arr.length - 1) / 2)]) / 2);\n\n/**\n * @param {Array<number>} arr\n * @return {number}\n */\nconst average = arr => arr.reduce(math.add, 0) / arr.length;\n\nvar statistics = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tmedian: median,\n\taverage: average\n});\n\nexports.average = average;\nexports.median = median;\nexports.statistics = statistics;\n///# sourceMappingURL=statistics-c2316dca.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/statistics-c2316dca.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/statistics-c2316dca.cjs.map":{"text":"{\"version\":3,\"file\":\"statistics-c2316dca.cjs\",\"sources\":[\"../statistics.js\"],\"sourcesContent\":[\"/**\\n * Utility helpers for generating statistics.\\n *\\n * @module statistics\\n */\\n\\nimport * as math from './math.js'\\n\\n/**\\n * @param {Array<number>} arr Array of values\\n * @return {number} Returns null if the array is empty\\n */\\nexport const median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[math.floor((arr.length - 1) / 2)] + arr[math.ceil((arr.length - 1) / 2)]) / 2)\\n\\n/**\\n * @param {Array<number>} arr\\n * @return {number}\\n */\\nexport const average = arr => arr.reduce(math.add, 0) / arr.length\\n\"],\"names\":[\"math.floor\",\"math.ceil\",\"math.add\"],\"mappings\":\";;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAACA,UAAU,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAACC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;AAC7L;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAACC,QAAQ,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/statistics-c2316dca.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/statistics.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./math-08e068f9.cjs');\nvar statistics = require('./statistics-c2316dca.cjs');\n\n\n\nexports.average = statistics.average;\nexports.median = statistics.median;\n///# sourceMappingURL=statistics.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/statistics.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/statistics.cjs.map":{"text":"{\"version\":3,\"file\":\"statistics.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/statistics.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/storage.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map();\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue);\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill();\nlet usePolyfill = true;\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage;\n    usePolyfill = false;\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nconst varStorage = _localStorage;\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nconst onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler));\n\nexports.onChange = onChange;\nexports.varStorage = varStorage;\n///# sourceMappingURL=storage.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/storage.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/storage.cjs.map":{"text":"{\"version\":3,\"file\":\"storage.cjs\",\"sources\":[\"../storage.js\"],\"sourcesContent\":[\"/* global localStorage, addEventListener */\\n\\n/**\\n * Isomorphic variable storage.\\n *\\n * Uses LocalStorage in the browser and falls back to in-memory storage.\\n *\\n * @module storage\\n */\\n\\n/* istanbul ignore next */\\nclass VarStoragePolyfill {\\n  constructor () {\\n    this.map = new Map()\\n  }\\n\\n  /**\\n   * @param {string} key\\n   * @param {any} newValue\\n   */\\n  setItem (key, newValue) {\\n    this.map.set(key, newValue)\\n  }\\n\\n  /**\\n   * @param {string} key\\n   */\\n  getItem (key) {\\n    return this.map.get(key)\\n  }\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @type {any}\\n */\\nlet _localStorage = new VarStoragePolyfill()\\nlet usePolyfill = true\\n\\ntry {\\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\\n  /* istanbul ignore next */\\n  if (typeof localStorage !== 'undefined') {\\n    _localStorage = localStorage\\n    usePolyfill = false\\n  }\\n} catch (e) { }\\n\\n/* istanbul ignore next */\\n/**\\n * This is basically localStorage in browser, or a polyfill in nodejs\\n */\\nexport const varStorage = _localStorage\\n\\n/* istanbul ignore next */\\n/**\\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\\n *\\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\\n * @function\\n */\\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\\n\"],\"names\":[],\"mappings\":\";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,CAAC;AACzB,EAAE,WAAW,CAAC,GAAG;AACjB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,GAAE;AACxB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE;AAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAC;AAC/B,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE;AAChB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5B,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,GAAG,IAAI,kBAAkB,GAAE;AAC5C,IAAI,WAAW,GAAG,KAAI;AACtB;AACA,IAAI;AACJ;AACA;AACA,EAAE,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;AAC3C,IAAI,aAAa,GAAG,aAAY;AAChC,IAAI,WAAW,GAAG,MAAK;AACvB,GAAG;AACH,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG;AACf;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,cAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,YAAY,IAAI,WAAW,IAAI,gBAAgB,CAAC,SAAS,sBAAsB,YAAY;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/storage.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/string-f3c3d805.cjs":{"text":"'use strict';\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nconst fromCharCode = String.fromCharCode;\nconst fromCodePoint = String.fromCodePoint;\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase();\n\nconst trimLeftRegex = /^\\s*/g;\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst trimLeft = s => s.replace(trimLeftRegex, '');\n\nconst fromCamelCaseRegex = /([A-Z])/g;\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nconst fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`));\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nconst utf8ByteLength = str => unescape(encodeURIComponent(str)).length;\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nconst _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str));\n  const len = encodedString.length;\n  const buf = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i));\n  }\n  return buf\n};\n\n/* istanbul ignore next */\nconst utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null);\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nconst _encodeUtf8Native = str => utf8TextEncoder.encode(str);\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nconst encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill;\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nconst _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length;\n  let encodedString = '';\n  let bufPos = 0;\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n    const bytes = buf.subarray(bufPos, bufPos + nextLen);\n    bufPos += nextLen;\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes));\n    remainingLen -= nextLen;\n  }\n  return decodeURIComponent(escape(encodedString))\n};\n\n/* istanbul ignore next */\nexports.utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true });\n\n/* istanbul ignore next */\nif (exports.utf8TextDecoder && exports.utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  exports.utf8TextDecoder = null;\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nconst _decodeUtf8Native = buf => /** @type {TextDecoder} */ (exports.utf8TextDecoder).decode(buf);\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nconst decodeUtf8 = exports.utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill;\n\nvar string = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fromCharCode: fromCharCode,\n  fromCodePoint: fromCodePoint,\n  trimLeft: trimLeft,\n  fromCamelCase: fromCamelCase,\n  utf8ByteLength: utf8ByteLength,\n  _encodeUtf8Polyfill: _encodeUtf8Polyfill,\n  utf8TextEncoder: utf8TextEncoder,\n  _encodeUtf8Native: _encodeUtf8Native,\n  encodeUtf8: encodeUtf8,\n  _decodeUtf8Polyfill: _decodeUtf8Polyfill,\n  get utf8TextDecoder () { return exports.utf8TextDecoder; },\n  _decodeUtf8Native: _decodeUtf8Native,\n  decodeUtf8: decodeUtf8\n});\n\nexports._decodeUtf8Native = _decodeUtf8Native;\nexports._decodeUtf8Polyfill = _decodeUtf8Polyfill;\nexports._encodeUtf8Native = _encodeUtf8Native;\nexports._encodeUtf8Polyfill = _encodeUtf8Polyfill;\nexports.decodeUtf8 = decodeUtf8;\nexports.encodeUtf8 = encodeUtf8;\nexports.fromCamelCase = fromCamelCase;\nexports.fromCharCode = fromCharCode;\nexports.fromCodePoint = fromCodePoint;\nexports.string = string;\nexports.trimLeft = trimLeft;\nexports.utf8ByteLength = utf8ByteLength;\nexports.utf8TextEncoder = utf8TextEncoder;\n///# sourceMappingURL=string-f3c3d805.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/string-f3c3d805.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/string-f3c3d805.cjs.map":{"text":"{\"version\":3,\"file\":\"string-f3c3d805.cjs\",\"sources\":[\"../string.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with strings.\\n *\\n * @module string\\n */\\n\\nexport const fromCharCode = String.fromCharCode\\nexport const fromCodePoint = String.fromCodePoint\\n\\n/**\\n * @param {string} s\\n * @return {string}\\n */\\nconst toLowerCase = s => s.toLowerCase()\\n\\nconst trimLeftRegex = /^\\\\s*/g\\n\\n/**\\n * @param {string} s\\n * @return {string}\\n */\\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\\n\\nconst fromCamelCaseRegex = /([A-Z])/g\\n\\n/**\\n * @param {string} s\\n * @param {string} separator\\n * @return {string}\\n */\\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\\n\\n/**\\n * Compute the utf8ByteLength\\n * @param {string} str\\n * @return {number}\\n */\\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\nexport const _encodeUtf8Polyfill = str => {\\n  const encodedString = unescape(encodeURIComponent(str))\\n  const len = encodedString.length\\n  const buf = new Uint8Array(len)\\n  for (let i = 0; i < len; i++) {\\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\\n  }\\n  return buf\\n}\\n\\n/* istanbul ignore next */\\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\n/* istanbul ignore next */\\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\nexport const _decodeUtf8Polyfill = buf => {\\n  let remainingLen = buf.length\\n  let encodedString = ''\\n  let bufPos = 0\\n  while (remainingLen > 0) {\\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\\n    bufPos += nextLen\\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\\n    remainingLen -= nextLen\\n  }\\n  return decodeURIComponent(escape(encodedString))\\n}\\n\\n/* istanbul ignore next */\\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\\n\\n/* istanbul ignore next */\\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\\n  // Safari doesn't handle BOM correctly.\\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\\n  // Another issue is that from then on no BOM chars are recognized anymore\\n  /* istanbul ignore next */\\n  utf8TextDecoder = null\\n}\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\\n\"],\"names\":[\"utf8TextDecoder\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/string-f3c3d805.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/string.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar string = require('./string-f3c3d805.cjs');\n\n\n\nexports._decodeUtf8Native = string._decodeUtf8Native;\nexports._decodeUtf8Polyfill = string._decodeUtf8Polyfill;\nexports._encodeUtf8Native = string._encodeUtf8Native;\nexports._encodeUtf8Polyfill = string._encodeUtf8Polyfill;\nexports.decodeUtf8 = string.decodeUtf8;\nexports.encodeUtf8 = string.encodeUtf8;\nexports.fromCamelCase = string.fromCamelCase;\nexports.fromCharCode = string.fromCharCode;\nexports.fromCodePoint = string.fromCodePoint;\nexports.trimLeft = string.trimLeft;\nexports.utf8ByteLength = string.utf8ByteLength;\nObject.defineProperty(exports, 'utf8TextDecoder', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn string.utf8TextDecoder;\n\t}\n});\nexports.utf8TextEncoder = string.utf8TextEncoder;\n///# sourceMappingURL=string.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/string.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/string.cjs.map":{"text":"{\"version\":3,\"file\":\"string.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/string.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/symbol-c5caa724.cjs":{"text":"'use strict';\n\n/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nconst create = Symbol;\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nconst isSymbol = s => typeof s === 'symbol';\n\nvar symbol = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tcreate: create,\n\tisSymbol: isSymbol\n});\n\nexports.create = create;\nexports.isSymbol = isSymbol;\nexports.symbol = symbol;\n///# sourceMappingURL=symbol-c5caa724.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/symbol-c5caa724.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/symbol-c5caa724.cjs.map":{"text":"{\"version\":3,\"file\":\"symbol-c5caa724.cjs\",\"sources\":[\"../symbol.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with EcmaScript Symbols.\\n *\\n * @module symbol\\n */\\n\\n/**\\n * Return fresh symbol.\\n *\\n * @return {Symbol}\\n */\\nexport const create = Symbol\\n\\n/**\\n * @param {any} s\\n * @return {boolean}\\n */\\nexport const isSymbol = s => typeof s === 'symbol'\\n\"],\"names\":[],\"mappings\":\";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,OAAM;AAC5B;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,CAAC,IAAI,OAAO,CAAC,KAAK;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/symbol-c5caa724.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/symbol.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar symbol = require('./symbol-c5caa724.cjs');\n\n\n\nexports.create = symbol.create;\nexports.isSymbol = symbol.isSymbol;\n///# sourceMappingURL=symbol.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/symbol.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/symbol.cjs.map":{"text":"{\"version\":3,\"file\":\"symbol.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/symbol.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/test.cjs":{"text":"'use strict';\n\nvar isomorphic_js = require('./isomorphic.js');\n\n/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nconst create$7 = () => new Map();\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nconst copy = m => {\n  const r = create$7();\n  m.forEach((v, k) => { r.set(k, v); });\n  return r\n};\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nconst setIfUndefined = (map, key, createT) => {\n  let set = map.get(key);\n  if (set === undefined) {\n    map.set(key, set = createT());\n  }\n  return set\n};\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nconst map$3 = (m, f) => {\n  const res = [];\n  for (const [key, value] of m) {\n    res.push(f(value, key));\n  }\n  return res\n};\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nconst fromCharCode = String.fromCharCode;\nconst fromCodePoint = String.fromCodePoint;\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase();\n\nconst trimLeftRegex = /^\\s*/g;\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst trimLeft = s => s.replace(trimLeftRegex, '');\n\nconst fromCamelCaseRegex = /([A-Z])/g;\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nconst fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`));\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nconst utf8ByteLength = str => unescape(encodeURIComponent(str)).length;\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nconst _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str));\n  const len = encodedString.length;\n  const buf = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i));\n  }\n  return buf\n};\n\n/* istanbul ignore next */\nconst utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null);\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nconst _encodeUtf8Native = str => utf8TextEncoder.encode(str);\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nconst encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill;\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nconst _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length;\n  let encodedString = '';\n  let bufPos = 0;\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n    const bytes = buf.subarray(bufPos, bufPos + nextLen);\n    bufPos += nextLen;\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes));\n    remainingLen -= nextLen;\n  }\n  return decodeURIComponent(escape(encodedString))\n};\n\n/* istanbul ignore next */\nlet utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true });\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null;\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nconst _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf);\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nconst decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill;\n\n/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nconst undefinedToNull = v => v === undefined ? null : v;\n\n/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map();\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue);\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill();\nlet usePolyfill = true;\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage;\n    usePolyfill = false;\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nconst varStorage = _localStorage;\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nconst onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler));\n\n/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\n/* istanbul ignore next */\n// @ts-ignore\nconst isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name);\n/* istanbul ignore next */\nconst isBrowser = typeof window !== 'undefined' && !isNode;\n/* istanbul ignore next */\ntypeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n\n/**\n * @type {Map<string,string>}\n */\nlet params;\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = create$7();\n      const pargs = process.argv;\n      let currParamName = null;\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i];\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '');\n          }\n          currParamName = parg;\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg);\n            currParamName = null;\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '');\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = create$7()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=');\n          params.set(`--${fromCamelCase(key, '-')}`, value);\n          params.set(`-${fromCamelCase(key, '-')}`, value);\n        }\n      });\n    } else {\n      params = create$7();\n    }\n  }\n  return params\n};\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nconst hasParam = name => computeParams().has(name);\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nconst getParam = (name, defaultVal) => computeParams().get(name) || defaultVal;\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nconst getVariable = name => isNode ? undefinedToNull(process.env[name.toUpperCase()]) : undefinedToNull(varStorage.getItem(name));\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nconst hasConf = name => hasParam('--' + name) || getVariable(name) !== null;\n\n/* istanbul ignore next */\nconst production = hasConf('production');\n\n/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nconst create$6 = Symbol;\n\n/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nclass Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left;\n    this.right = right;\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nconst create$5 = (left, right) => new Pair(left, right);\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nconst createReversed = (right, left) => new Pair(left, right);\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nconst forEach$1 = (arr, f) => arr.forEach(p => f(p.left, p.right));\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nconst map$2 = (arr, f) => arr.map(p => f(p.left, p.right));\n\n/* eslint-env browser */\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nconst doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {});\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst createElement = name => doc.createElement(name);\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nconst createDocumentFragment = () => doc.createDocumentFragment();\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nconst createTextNode = text => doc.createTextNode(text);\n\n/* istanbul ignore next */\n/** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null);\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nconst setAttributes = (el, attrs) => {\n  forEach$1(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key);\n    } else if (value === true) {\n      el.setAttribute(key, '');\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value);\n    }\n  });\n  return el\n};\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nconst fragment = children => {\n  const fragment = createDocumentFragment();\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i]);\n  }\n  return fragment\n};\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nconst append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes));\n  return parent\n};\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nconst addEventListener$1 = (el, name, f) => el.addEventListener(name, f);\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nconst element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children);\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nconst canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'));\n  c.height = height;\n  c.width = width;\n  return c\n};\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nconst text = createTextNode;\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nconst mapToStyleString = m => map$3(m, (value, key) => `${key}:${value};`).join('');\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nconst appendChild = (parent, child) => parent.appendChild(child);\n\n/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nconst stringify = JSON.stringify;\n\n/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue$1 = [];\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n};\n\n/**\n * @param {function():void} f\n */\nconst enqueue$1 = f => {\n  queue$1.push(f);\n  if (queue$1.length === 1) {\n    setTimeout(_runQueue, 0);\n  }\n};\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId;\n  }\n\n  destroy () {\n    clearFunction(this._);\n  }\n};\n\nconst Timeout = createTimeoutClass(clearTimeout);\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nconst timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout));\n\nconst Interval = createTimeoutClass(clearInterval);\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nconst interval = (timeout, callback) => new Interval(setInterval(callback, timeout));\n\n/* istanbul ignore next */\nconst Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg));\n\n/* istanbul ignore next */\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\nconst animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb));\n\n/* istanbul ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg));\n\n/* istanbul ignore next */\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n// @ts-ignore\nconst idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb);\n\n/**\n * Common Math expressions.\n *\n * @module math\n */\n\nconst floor = Math.floor;\nconst ceil = Math.ceil;\nconst abs = Math.abs;\nconst imul = Math.imul;\nconst round = Math.round;\nconst log10 = Math.log10;\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nconst add$1 = (a, b) => a + b;\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nconst min = (a, b) => a < b ? a : b;\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nconst max = (a, b) => a > b ? a : b;\n\nconst isNaN$1 = Number.isNaN;\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nconst exp10 = exp => Math.pow(10, exp);\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nconst isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0;\n\n/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y'];\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nconst prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : log10(n);\n  let mult = 0;\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--;\n    mult--;\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++;\n    mult++;\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier];\n  return {\n    n: round((mult > 0 ? n / exp10(mult * 3) : n * exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n};\n\n/**\n * Utility module to work with time.\n *\n * @module time\n */\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nconst getDate = () => new Date();\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nconst getUnixTime = Date.now;\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nconst humanizeDuration = d => {\n  if (d < 60000) {\n    const p = prefix(d, -1);\n    return round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = floor(d / 1000);\n  const seconds = d % 60;\n  const minutes = floor(d / 60) % 60;\n  const hours = floor(d / 3600) % 24;\n  const days = floor(d / 86400);\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n};\n\n/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nconst last = arr => arr[arr.length - 1];\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nconst appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n};\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nconst every$1 = (arr, f) => arr.every(f);\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nconst equalFlat$1 = (a, b) => a.length === b.length && every$1(a, (item, index) => item === b[index]);\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nconst flatten = arr => arr.reduce((acc, val) => acc.concat(val), []);\n\n/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nconst create$4 = () => Object.create(null);\n\n/**\n * Object.assign\n */\nconst assign = Object.assign;\n\n/**\n * @param {Object<string,any>} obj\n */\nconst keys = Object.keys;\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nconst forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key);\n  }\n};\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nconst map$1 = (obj, f) => {\n  const results = [];\n  for (const key in obj) {\n    results.push(f(obj[key], key));\n  }\n  return results\n};\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nconst length$1 = obj => keys(obj).length;\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nconst some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nconst every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n};\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nconst hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nconst equalFlat = (a, b) => a === b || (length$1(a) === length$1(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val));\n\n/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nconst equalityStrict = (a, b) => a === b;\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nconst equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && equalFlat$1(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && equalFlat(a, b))));\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (length$1(a) !== length$1(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n};\n\n/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nconst BOLD = create$6();\nconst UNBOLD = create$6();\nconst BLUE = create$6();\nconst GREY = create$6();\nconst GREEN = create$6();\nconst RED = create$6();\nconst PURPLE = create$6();\nconst ORANGE = create$6();\nconst UNCOLOR = create$6();\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: create$5('font-weight', 'bold'),\n  [UNBOLD]: create$5('font-weight', 'normal'),\n  [BLUE]: create$5('color', 'blue'),\n  [GREEN]: create$5('color', 'green'),\n  [GREY]: create$5('color', 'grey'),\n  [RED]: create$5('color', 'red'),\n  [PURPLE]: create$5('color', 'purple'),\n  [ORANGE]: create$5('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: create$5('color', 'black')\n};\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n};\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = [];\n  const styles = [];\n  const currentStyle = create$7();\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = [];\n  // try with formatting until we find something unsupported\n  let i = 0;\n\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    // @ts-ignore\n    const style = _browserStyleMap[arg];\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = mapToStyleString(currentStyle);\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg);\n          styles.push(style);\n        } else {\n          strBuilder.push(arg);\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles;\n    logArgs.unshift(strBuilder.join(''));\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg);\n    }\n  }\n  return logArgs\n};\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = [];\n  const logArgs = [];\n\n  // try with formatting until we find something unsupported\n  let i = 0;\n\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    // @ts-ignore\n    const style = _nodeStyleMap[arg];\n    if (style !== undefined) {\n      strBuilder.push(style);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg);\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m');\n    logArgs.push(strBuilder.join(''));\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg);\n    }\n  }\n  return logArgs\n};\n\n/* istanbul ignore next */\nconst computeLoggingArgs = isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs;\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nconst print = (...args) => {\n  console.log(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args));\n};\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nconst printError = err => {\n  console.error(err);\n  vconsoles.forEach(vc => vc.printError(err));\n};\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nconst printImg = (url, height) => {\n  if (isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`);\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height));\n};\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nconst printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height);\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nconst group$1 = (...args) => {\n  console.group(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args));\n};\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nconst groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args));\n};\n\nconst groupEnd = () => {\n  console.groupEnd();\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd());\n};\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nconst printCanvas$1 = (canvas, height) => printImg(canvas.toDataURL(), height);\n\nconst vconsoles = new Set();\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = [];\n  const currentStyle = new Map();\n  // try with formatting until we find something unsupported\n  let i = 0;\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    // @ts-ignore\n    const style = _browserStyleMap[arg];\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = element('span', [create$5('style', mapToStyleString(currentStyle))], [text(arg)]);\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;';\n        }\n        spans.push(span);\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i];\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + stringify(content) + ' ';\n      }\n      spans.push(element('span', [], [text(/** @type {string} */ (content))]));\n    }\n  }\n  return spans\n};\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;';\n\n/* istanbul ignore next */\nclass VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom;\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom;\n    this.depth = 0;\n    vconsoles.add(this);\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    enqueue$1(() => {\n      const triangleDown = element('span', [create$5('hidden', collapsed), create$5('style', 'color:grey;font-size:120%;')], [text('▼')]);\n      const triangleRight = element('span', [create$5('hidden', !collapsed), create$5('style', 'color:grey;font-size:125%;')], [text('▶')]);\n      const content = element('div', [create$5('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, text(' ')].concat(_computeLineSpans(args)));\n      const nextContainer = element('div', [create$5('hidden', collapsed)]);\n      const nextLine = element('div', [], [content, nextContainer]);\n      append(this.ccontainer, [nextLine]);\n      this.ccontainer = nextContainer;\n      this.depth++;\n      // when header is clicked, collapse/uncollapse container\n      addEventListener$1(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden');\n        triangleDown.toggleAttribute('hidden');\n        triangleRight.toggleAttribute('hidden');\n      });\n    });\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true);\n  }\n\n  groupEnd () {\n    enqueue$1(() => {\n      if (this.depth > 0) {\n        this.depth--;\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement;\n      }\n    });\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    enqueue$1(() => {\n      append(this.ccontainer, [element('div', [create$5('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))]);\n    });\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()]);\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    enqueue$1(() => {\n      append(this.ccontainer, [element('img', [create$5('src', url), create$5('height', `${round(height * 1.5)}px`)])]);\n    });\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    enqueue$1(() => {\n      append(this.ccontainer, [node]);\n    });\n  }\n\n  destroy () {\n    enqueue$1(() => {\n      vconsoles.delete(this);\n    });\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nconst createVConsole = dom => new VConsole(dom);\n\n/**\n * Efficient diffs.\n *\n * @module diff\n */\n\n/**\n * A SimpleDiff describes a change on a String.\n *\n * ```js\n * console.log(a) // the old value\n * console.log(b) // the updated value\n * // Apply changes of diff (pseudocode)\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n * a === b // values match\n * ```\n *\n * @typedef {Object} SimpleDiff\n * @property {Number} index The index where changes were applied\n * @property {Number} remove The number of characters to delete starting\n *                                  at `index`.\n * @property {T} insert The new text to insert at `index` after applying\n *                           `delete`\n *\n * @template T\n */\n\n/**\n * Create a diff between two strings. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * @function\n *\n * @param {string} a The old version of the string\n * @param {string} b The updated version of the string\n * @return {SimpleDiff<string>} The diff description.\n */\nconst simpleDiffString = (a, b) => {\n  let left = 0; // number of same characters counting from left\n  let right = 0; // number of same characters counting from right\n  while (left < a.length && left < b.length && a[left] === b[left]) {\n    left++;\n  }\n  if (left !== a.length || left !== b.length) {\n    // Only check right if a !== b\n    while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\n      right++;\n    }\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n};\n\n/**\n * @todo Remove in favor of simpleDiffString\n * @deprecated\n */\nconst simpleDiff = simpleDiffString;\n\n/**\n * Create a diff between two arrays. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * Note: This is basically the same function as above. Another function was created so that the runtime\n * can better optimize these function calls.\n *\n * @function\n * @template T\n *\n * @param {Array<T>} a The old version of the array\n * @param {Array<T>} b The updated version of the array\n * @param {function(T, T):boolean} [compare]\n * @return {SimpleDiff<Array<T>>} The diff description.\n */\nconst simpleDiffArray = (a, b, compare = equalityStrict) => {\n  let left = 0; // number of same characters counting from left\n  let right = 0; // number of same characters counting from right\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\n    left++;\n  }\n  if (left !== a.length || left !== b.length) {\n    // Only check right if a !== b\n    while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\n      right++;\n    }\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n};\n\n/* istanbul ignore next */\nconst uint32$1 = () => new Uint32Array(isomorphic_js.cryptoRandomBuffer(4))[0];\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\nconst uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32$1() & 15 >> c / 4).toString(16)\n);\n\n/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nconst BIT1 = 1;\nconst BIT2 = 2;\nconst BIT3 = 4;\nconst BIT4 = 8;\nconst BIT5 = 16;\nconst BIT6 = 32;\nconst BIT7 = 64;\nconst BIT8 = 128;\nconst BIT9 = 256;\nconst BIT10 = 512;\nconst BIT11 = 1024;\nconst BIT12 = 2048;\nconst BIT13 = 4096;\nconst BIT14 = 8192;\nconst BIT15 = 16384;\nconst BIT16 = 32768;\nconst BIT17 = 65536;\nconst BIT18 = 1 << 17;\nconst BIT19 = 1 << 18;\nconst BIT20 = 1 << 19;\nconst BIT21 = 1 << 20;\nconst BIT22 = 1 << 21;\nconst BIT23 = 1 << 22;\nconst BIT24 = 1 << 23;\nconst BIT25 = 1 << 24;\nconst BIT26 = 1 << 25;\nconst BIT27 = 1 << 26;\nconst BIT28 = 1 << 27;\nconst BIT29 = 1 << 28;\nconst BIT30 = 1 << 29;\nconst BIT31 = 1 << 30;\nconst BIT32 = 1 << 31;\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nconst BITS0 = 0;\nconst BITS1 = 1;\nconst BITS2 = 3;\nconst BITS3 = 7;\nconst BITS4 = 15;\nconst BITS5 = 31;\nconst BITS6 = 63;\nconst BITS7 = 127;\nconst BITS8 = 255;\nconst BITS9 = 511;\nconst BITS10 = 1023;\nconst BITS11 = 2047;\nconst BITS12 = 4095;\nconst BITS13 = 8191;\nconst BITS14 = 16383;\nconst BITS15 = 32767;\nconst BITS16 = 65535;\nconst BITS17 = BIT18 - 1;\nconst BITS18 = BIT19 - 1;\nconst BITS19 = BIT20 - 1;\nconst BITS20 = BIT21 - 1;\nconst BITS21 = BIT22 - 1;\nconst BITS22 = BIT23 - 1;\nconst BITS23 = BIT24 - 1;\nconst BITS24 = BIT25 - 1;\nconst BITS25 = BIT26 - 1;\nconst BITS26 = BIT27 - 1;\nconst BITS27 = BIT28 - 1;\nconst BITS28 = BIT29 - 1;\nconst BITS29 = BIT30 - 1;\nconst BITS30 = BIT31 - 1;\n/**\n * @type {number}\n */\nconst BITS31 = 0x7FFFFFFF;\n/**\n * @type {number}\n */\nconst BITS32 = 0xFFFFFFFF;\n\nvar binary$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BIT1: BIT1,\n  BIT2: BIT2,\n  BIT3: BIT3,\n  BIT4: BIT4,\n  BIT5: BIT5,\n  BIT6: BIT6,\n  BIT7: BIT7,\n  BIT8: BIT8,\n  BIT9: BIT9,\n  BIT10: BIT10,\n  BIT11: BIT11,\n  BIT12: BIT12,\n  BIT13: BIT13,\n  BIT14: BIT14,\n  BIT15: BIT15,\n  BIT16: BIT16,\n  BIT17: BIT17,\n  BIT18: BIT18,\n  BIT19: BIT19,\n  BIT20: BIT20,\n  BIT21: BIT21,\n  BIT22: BIT22,\n  BIT23: BIT23,\n  BIT24: BIT24,\n  BIT25: BIT25,\n  BIT26: BIT26,\n  BIT27: BIT27,\n  BIT28: BIT28,\n  BIT29: BIT29,\n  BIT30: BIT30,\n  BIT31: BIT31,\n  BIT32: BIT32,\n  BITS0: BITS0,\n  BITS1: BITS1,\n  BITS2: BITS2,\n  BITS3: BITS3,\n  BITS4: BITS4,\n  BITS5: BITS5,\n  BITS6: BITS6,\n  BITS7: BITS7,\n  BITS8: BITS8,\n  BITS9: BITS9,\n  BITS10: BITS10,\n  BITS11: BITS11,\n  BITS12: BITS12,\n  BITS13: BITS13,\n  BITS14: BITS14,\n  BITS15: BITS15,\n  BITS16: BITS16,\n  BITS17: BITS17,\n  BITS18: BITS18,\n  BITS19: BITS19,\n  BITS20: BITS20,\n  BITS21: BITS21,\n  BITS22: BITS22,\n  BITS23: BITS23,\n  BITS24: BITS24,\n  BITS25: BITS25,\n  BITS26: BITS26,\n  BITS27: BITS27,\n  BITS28: BITS28,\n  BITS29: BITS29,\n  BITS30: BITS30,\n  BITS31: BITS31,\n  BITS32: BITS32\n});\n\n/**\n * @module prng\n */\n\n/**\n * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\n */\nclass Xorshift32 {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed;\n    /**\n     * @type {number}\n     */\n    this._state = seed;\n  }\n\n  /**\n   * Generate a random signed integer.\n   *\n   * @return {Number} A 32 bit signed integer.\n   */\n  next () {\n    let x = this._state;\n    x ^= x << 13;\n    x ^= x >> 17;\n    x ^= x << 5;\n    this._state = x;\n    return (x >>> 0) / (BITS32 + 1)\n  }\n}\n\n/**\n * @module prng\n */\n\n/**\n * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\n *\n * This implementation follows the idea of the original xoroshiro128plus implementation,\n * but is optimized for the JavaScript runtime. I.e.\n * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\n * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\n * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\n *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\n *   first 32bit addition is not carried over to the last 32bit.\n *\n * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\n */\nclass Xoroshiro128plus {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed;\n    // This is a variant of Xoroshiro128plus to fill the initial state\n    const xorshift32 = new Xorshift32(seed);\n    this.state = new Uint32Array(4);\n    for (let i = 0; i < 4; i++) {\n      this.state[i] = xorshift32.next() * BITS32;\n    }\n    this._fresh = true;\n  }\n\n  /**\n   * @return {number} Float/Double in [0,1)\n   */\n  next () {\n    const state = this.state;\n    if (this._fresh) {\n      this._fresh = false;\n      return ((state[0] + state[2]) >>> 0) / (BITS32 + 1)\n    } else {\n      this._fresh = true;\n      const s0 = state[0];\n      const s1 = state[1];\n      const s2 = state[2] ^ s0;\n      const s3 = state[3] ^ s1;\n      // function js_rotl (x, k) {\n      //   k = k - 32\n      //   const x1 = x[0]\n      //   const x2 = x[1]\n      //   x[0] = x2 << k | x1 >>> (32 - k)\n      //   x[1] = x1 << k | x2 >>> (32 - k)\n      // }\n      // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\n      state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18);\n      state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14);\n      // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\n      state[2] = s3 << 4 | s2 >>> 28;\n      state[3] = s2 << 4 | s3 >>> 28;\n      return (((state[1] + state[3]) >>> 0) / (BITS32 + 1))\n    }\n  }\n}\n\n/*\n// Reference implementation\n// Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\n// By David Blackman and Sebastiano Vigna\n// Who published the reference implementation under Public Domain (CC0)\n\n#include <stdint.h>\n#include <stdio.h>\n\nuint64_t s[2];\n\nstatic inline uint64_t rotl(const uint64_t x, int k) {\n    return (x << k) | (x >> (64 - k));\n}\n\nuint64_t next(void) {\n    const uint64_t s0 = s[0];\n    uint64_t s1 = s[1];\n    s1 ^= s0;\n    s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\n    s[1] = rotl(s1, 36); // c\n    return (s[0] + s[1]) & 0xFFFFFFFF;\n}\n\nint main(void)\n{\n    int i;\n    s[0] = 1111 | (1337ul << 32);\n    s[1] = 1234 | (9999ul << 32);\n\n    printf(\"1000 outputs of genrand_int31()\\n\");\n    for (i=0; i<100; i++) {\n        printf(\"%10lu \", i);\n        printf(\"%10lu \", next());\n        printf(\"- %10lu \", s[0] >> 32);\n        printf(\"%10lu \", (s[0] << 32) >> 32);\n        printf(\"%10lu \", s[1] >> 32);\n        printf(\"%10lu \", (s[1] << 32) >> 32);\n        printf(\"\\n\");\n        // if (i%5==4) printf(\"\\n\");\n    }\n    return 0;\n}\n*/\n\n/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;\nconst MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;\n\nconst LOWEST_INT32 = 1 << 31;\n/**\n * @type {number}\n */\nconst HIGHEST_INT32 = BITS31;\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nconst isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && floor(num) === num);\nconst isNaN = Number.isNaN;\n\n/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nclass Encoder {\n  constructor () {\n    this.cpos = 0;\n    this.cbuf = new Uint8Array(100);\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = [];\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nconst createEncoder = () => new Encoder();\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nconst length = encoder => {\n  let len = encoder.cpos;\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length;\n  }\n  return len\n};\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nconst toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder));\n  let curPos = 0;\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i];\n    uint8arr.set(d, curPos);\n    curPos += d.length;\n  }\n  uint8arr.set(createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos);\n  return uint8arr\n};\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length;\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos));\n    encoder.cbuf = new Uint8Array(max(bufferLen, len) * 2);\n    encoder.cpos = 0;\n  }\n};\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nconst write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length;\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf);\n    encoder.cbuf = new Uint8Array(bufferLen * 2);\n    encoder.cpos = 0;\n  }\n  encoder.cbuf[encoder.cpos++] = num;\n};\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nconst set = (encoder, pos, num) => {\n  let buffer = null;\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i];\n    if (pos < b.length) {\n      buffer = b; // found buffer\n    } else {\n      pos -= b.length;\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf;\n  }\n  buffer[pos] = num;\n};\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint8 = write;\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nconst setUint8 = set;\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint16 = (encoder, num) => {\n  write(encoder, num & BITS8);\n  write(encoder, (num >>> 8) & BITS8);\n};\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nconst setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & BITS8);\n  set(encoder, pos + 1, (num >>> 8) & BITS8);\n};\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & BITS8);\n    num >>>= 8;\n  }\n};\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & BITS8);\n  }\n};\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nconst setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & BITS8);\n    num >>>= 8;\n  }\n};\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeVarUint = (encoder, num) => {\n  while (num > BITS7) {\n    write(encoder, BIT8 | (BITS7 & num));\n    num >>>= 7;\n  }\n  write(encoder, BITS7 & num);\n};\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * We don't use zig-zag encoding because we want to keep the option open\n * to use the same function for BigInt and 53bit integers (doubles).\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nconst writeVarInt = (encoder, num) => {\n  const isNegative = isNegativeZero(num);\n  if (isNegative) {\n    num = -num;\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > BITS6 ? BIT8 : 0) | (isNegative ? BIT7 : 0) | (BITS6 & num));\n  num >>>= 6;\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > BITS7 ? BIT8 : 0) | (BITS7 & num));\n    num >>>= 7;\n  }\n};\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nconst writeVarString = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str));\n  const len = encodedString.length;\n  writeVarUint(encoder, len);\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)));\n  }\n};\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nconst writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append));\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nconst writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length;\n  const cpos = encoder.cpos;\n  const leftCopyLen = min(bufferLen - cpos, uint8Array.length);\n  const rightCopyLen = uint8Array.length - leftCopyLen;\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos);\n  encoder.cpos += leftCopyLen;\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf);\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(max(bufferLen * 2, rightCopyLen));\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen));\n    encoder.cpos = rightCopyLen;\n  }\n};\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nconst writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength);\n  writeUint8Array(encoder, uint8Array);\n};\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nconst writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len);\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len);\n  encoder.cpos += len;\n  return dview\n};\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nconst writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false);\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nconst writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false);\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nconst writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false);\n\nconst floatTestBed = new DataView(new ArrayBuffer(4));\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num);\n  return floatTestBed.getFloat32(0) === num\n};\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nconst writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119);\n      writeVarString(encoder, data);\n      break\n    case 'number':\n      if (isInteger(data) && data <= BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125);\n        writeVarInt(encoder, data);\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124);\n        writeFloat32(encoder, data);\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123);\n        writeFloat64(encoder, data);\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122);\n      writeBigInt64(encoder, data);\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126);\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117);\n        writeVarUint(encoder, data.length);\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i]);\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116);\n        writeVarUint8Array(encoder, data);\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118);\n        const keys = Object.keys(data);\n        writeVarUint(encoder, keys.length);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          writeVarString(encoder, key);\n          writeAny(encoder, data[key]);\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121);\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127);\n  }\n};\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nclass RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super();\n    /**\n     * The writer\n     */\n    this.w = writer;\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null;\n    this.count = 0;\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++;\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1); // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1;\n      // write first value\n      this.w(this, v);\n      this.s = v;\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nclass IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super();\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s);\n    this.s = v;\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nclass RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super();\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n    this.count = 0;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++;\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1); // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1;\n      // write first value\n      writeVarInt(this, v - this.s);\n      this.s = v;\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s);\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2); // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n};\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nclass UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder();\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++;\n    } else {\n      flushUintOptRleEncoder(this);\n      this.count = 1;\n      this.s = v;\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this);\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1);\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff);\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2); // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n};\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nclass IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder();\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n    this.diff = 0;\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v;\n      this.count++;\n    } else {\n      flushIntDiffOptRleEncoder(this);\n      this.count = 1;\n      this.diff = v - this.s;\n      this.s = v;\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this);\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nclass StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = [];\n    this.s = '';\n    this.lensE = new UintOptRleEncoder();\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string;\n    if (this.s.length > 19) {\n      this.sarr.push(this.s);\n      this.s = '';\n    }\n    this.lensE.write(string.length);\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder();\n    this.sarr.push(this.s);\n    this.s = '';\n    writeVarString(encoder, this.sarr.join(''));\n    writeUint8Array(encoder, this.lensE.toUint8Array());\n    return toUint8Array(encoder)\n  }\n}\n\n/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nclass Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array;\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0;\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nconst createDecoder = uint8Array => new Decoder(uint8Array);\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nconst hasContent = decoder => decoder.pos !== decoder.arr.length;\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nconst clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr);\n  _decoder.pos = newPos;\n  return _decoder\n};\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nconst readUint8Array = (decoder, len) => {\n  const view = createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len);\n  decoder.pos += len;\n  return view\n};\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nconst readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder));\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nconst readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos);\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nconst skip8 = decoder => decoder.pos++;\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nconst readUint8 = decoder => decoder.arr[decoder.pos++];\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8);\n  decoder.pos += 2;\n  return uint\n};\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0;\n  decoder.pos += 4;\n  return uint\n};\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0;\n  decoder.pos += 4;\n  return uint\n};\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst peekUint8 = decoder => decoder.arr[decoder.pos];\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8);\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nconst peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0;\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nconst readVarUint = decoder => {\n  let num = 0;\n  let len = 0;\n  while (true) {\n    const r = decoder.arr[decoder.pos++];\n    num = num | ((r & BITS7) << len);\n    len += 7;\n    if (r < BIT8) {\n      return num >>> 0 // return unsigned number!\n    }\n    /* istanbul ignore if */\n    if (len > 35) {\n      throw new Error('Integer out of range!')\n    }\n  }\n};\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nconst readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++];\n  let num = r & BITS6;\n  let len = 6;\n  const sign = (r & BIT7) > 0 ? -1 : 1;\n  if ((r & BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++];\n    num = num | ((r & BITS7) << len);\n    len += 7;\n    if (r < BIT8) {\n      return sign * (num >>> 0)\n    }\n    /* istanbul ignore if */\n    if (len > 41) {\n      throw new Error('Integer out of range!')\n    }\n  }\n};\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nconst peekVarUint = decoder => {\n  const pos = decoder.pos;\n  const s = readVarUint(decoder);\n  decoder.pos = pos;\n  return s\n};\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nconst peekVarInt = decoder => {\n  const pos = decoder.pos;\n  const s = readVarInt(decoder);\n  decoder.pos = pos;\n  return s\n};\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\nconst readVarString = decoder => {\n  let remainingLen = readVarUint(decoder);\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)); // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder));\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen);\n        decoder.pos += nextLen;\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes));\n        remainingLen -= nextLen;\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n};\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nconst peekVarString = decoder => {\n  const pos = decoder.pos;\n  const s = readVarString(decoder);\n  decoder.pos = pos;\n  return s\n};\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nconst readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len);\n  decoder.pos += len;\n  return dv\n};\n\n/**\n * @param {Decoder} decoder\n */\nconst readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false);\n\n/**\n * @param {Decoder} decoder\n */\nconst readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false);\n\n/**\n * @param {Decoder} decoder\n */\nconst readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false);\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder);\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {};\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder);\n      obj[key] = readAny(decoder);\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder);\n    const arr = [];\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder));\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n];\n\n/**\n * @param {Decoder} decoder\n */\nconst readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder);\n\n/**\n * T must not be null.\n *\n * @template T\n */\nclass RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array);\n    /**\n     * The reader\n     */\n    this.reader = reader;\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null;\n    this.count = 0;\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this);\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1; // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1; // read the current value forever\n      }\n    }\n    this.count--;\n    return /** @type {T} */ (this.s)\n  }\n}\n\nclass IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array);\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this);\n    return this.s\n  }\n}\n\nclass RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array);\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start;\n    this.count = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this);\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1; // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1; // read the current value forever\n      }\n    }\n    this.count--;\n    return /** @type {number} */ (this.s)\n  }\n}\n\nclass UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array);\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this);\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = isNegativeZero(this.s);\n      this.count = 1;\n      if (isNegative) {\n        this.s = -this.s;\n        this.count = readVarUint(this) + 2;\n      }\n    }\n    this.count--;\n    return /** @type {number} */ (this.s)\n  }\n}\n\nclass IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array);\n    /**\n     * @type {number}\n     */\n    this.s = 0;\n    this.count = 0;\n    this.diff = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this);\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1;\n      this.diff = diff >> 1;\n      this.count = 1;\n      if (hasCount) {\n        this.count = readVarUint(this) + 2;\n      }\n    }\n    this.s += this.diff;\n    this.count--;\n    return this.s\n  }\n}\n\nclass StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array);\n    this.str = readVarString(this.decoder);\n    /**\n     * @type {number}\n     */\n    this.spos = 0;\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read();\n    const res = this.str.slice(this.spos, end);\n    this.spos = end;\n    return res\n  }\n}\n\n/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\n/**\n * @param {number} len\n */\nconst createUint8ArrayFromLen = len => new Uint8Array(len);\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nconst createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length);\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nconst createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer);\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = '';\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += fromCharCode(bytes[i]);\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n};\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64');\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s);\n  const bytes = createUint8ArrayFromLen(a.length);\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i);\n  }\n  return bytes\n};\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64');\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n};\n\n/* istanbul ignore next */\nconst toBase64 = isBrowser ? toBase64Browser : toBase64Node;\n\n/* istanbul ignore next */\nconst fromBase64 = isBrowser ? fromBase64Browser : fromBase64Node;\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nconst copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength);\n  newBuf.set(uint8Array);\n  return newBuf\n};\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nconst encodeAny = data => {\n  const encoder = createEncoder();\n  writeAny(encoder, data);\n  return toUint8Array(encoder)\n};\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nconst decodeAny = buf => readAny(createDecoder(buf));\n\n/**\n * Fast Pseudo Random Number Generators.\n *\n * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\n * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\n *\n * @module prng\n */\n\n/**\n * Description of the function\n *  @callback generatorNext\n *  @return {number} A 32bit integer\n */\n\n/**\n * A random type generator.\n *\n * @typedef {Object} PRNG\n * @property {generatorNext} next Generate new number\n */\n\nconst DefaultPRNG = Xoroshiro128plus;\n\n/**\n * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\n * This is the fastest full-period generator passing BigCrush without systematic failures.\n * But there are more PRNGs available in ./PRNG/.\n *\n * @param {number} seed A positive 32bit integer. Do not use negative numbers.\n * @return {PRNG}\n */\nconst create$3 = seed => new DefaultPRNG(seed);\n\n/**\n * Generates a single random bool.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Boolean} A random boolean\n */\nconst bool = gen => (gen.next() >= 0.5);\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst int53 = (gen, min, max) => floor(gen.next() * (max + 1 - min) + min);\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst uint53 = (gen, min, max) => abs(int53(gen, min, max));\n\n/**\n * Generates a random integer with 32 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst int32 = (gen, min, max) => floor(gen.next() * (max + 1 - min) + min);\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nconst uint32 = (gen, min, max) => int32(gen, min, max) >>> 0;\n\n/**\n * @deprecated\n * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\n * openaring on smaller ranges.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\n * @return {Number} A random integer on [min, max]\n */\nconst int31 = (gen, min, max) => int32(gen, min, max);\n\n/**\n * Generates a random real on [0, 1) with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Number} A random real number on [0, 1).\n */\nconst real53 = gen => gen.next(); // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\n\n/**\n * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\n *\n * @param {PRNG} gen A random number generator.\n * @return {string}\n *\n * (Space)!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\n */\nconst char = gen => fromCharCode(int31(gen, 32, 126));\n\n/**\n * @param {PRNG} gen\n * @return {string} A single letter (a-z)\n */\nconst letter = gen => fromCharCode(int31(gen, 97, 122));\n\n/**\n * @param {PRNG} gen\n * @param {number} [minLen=0]\n * @param {number} [maxLen=20]\n * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\n */\nconst word = (gen, minLen = 0, maxLen = 20) => {\n  const len = int31(gen, minLen, maxLen);\n  let str = '';\n  for (let i = 0; i < len; i++) {\n    str += letter(gen);\n  }\n  return str\n};\n\n/**\n * TODO: this function produces invalid runes. Does not cover all of utf16!!\n *\n * @param {PRNG} gen\n * @return {string}\n */\nconst utf16Rune = gen => {\n  const codepoint = int31(gen, 0, 256);\n  return fromCodePoint(codepoint)\n};\n\n/**\n * @param {PRNG} gen\n * @param {number} [maxlen = 20]\n */\nconst utf16String = (gen, maxlen = 20) => {\n  const len = int31(gen, 0, maxlen);\n  let str = '';\n  for (let i = 0; i < len; i++) {\n    str += utf16Rune(gen);\n  }\n  return str\n};\n\n/**\n * Returns one element of a given array.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Array<T>} array Non empty Array of possible values.\n * @return {T} One of the values of the supplied Array.\n * @template T\n */\nconst oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)];\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint8Array}\n */\nconst uint8Array = (gen, len) => {\n  const buf = createUint8ArrayFromLen(len);\n  for (let i = 0; i < buf.length; i++) {\n    buf[i] = int32(gen, 0, BITS8);\n  }\n  return buf\n};\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint32Array}\n */\nconst uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer);\n\n/**\n * Utility helpers for generating statistics.\n *\n * @module statistics\n */\n\n/**\n * @param {Array<number>} arr Array of values\n * @return {number} Returns null if the array is empty\n */\nconst median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[floor((arr.length - 1) / 2)] + arr[ceil((arr.length - 1) / 2)]) / 2);\n\n/**\n * @param {Array<number>} arr\n * @return {number}\n */\nconst average = arr => arr.reduce(add$1, 0) / arr.length;\n\n/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nconst create$2 = f => /** @type {Promise<T>} */ (new Promise(f));\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nconst createEmpty = f => new Promise(f);\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template T\n * @param {Array<Promise<T>>} arrp\n * @return {Promise<Array<T>>}\n */\nconst all = arrp => Promise.all(arrp);\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nconst reject = reason => Promise.reject(reason);\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nconst resolve = res => Promise.resolve(res);\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nconst until = (timeout, check, intervalResolution = 10) => create$2((resolve, reject) => {\n  const startTime = getUnixTime();\n  const hasTimeout = timeout > 0;\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle);\n      resolve();\n    } else if (hasTimeout) {\n      /* istanbul ignore else */\n      if (getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle);\n        reject(new Error('Timeout'));\n      }\n    }\n  };\n  const intervalHandle = setInterval(untilInterval, intervalResolution);\n});\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nconst wait = timeout => create$2((resolve, reject) => setTimeout(resolve, timeout));\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nconst isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally);\n\n/**\n * Testing framework with support for generating tests.\n *\n * ```js\n * // test.js template for creating a test executable\n * import { runTests } from 'lib0/testing.js'\n * import * as log from 'lib0/logging.js'\n * import * as mod1 from './mod1.test.js'\n * import * as mod2 from './mod2.test.js'\n\n * import { isBrowser, isNode } from 'lib0/environment.js'\n *\n * if (isBrowser) {\n *   // optional: if this is ran in the browser, attach a virtual console to the dom\n *   log.createVConsole(document.body)\n * }\n *\n * runTests({\n *  mod1,\n *  mod2,\n * }).then(success => {\n *   if (isNode) {\n *     process.exit(success ? 0 : 1)\n *   }\n * })\n * ```\n *\n * ```js\n * // mod1.test.js\n * /**\n *  * runTests automatically tests all exported functions that start with \"test\".\n *  * The name of the function should be in camelCase and is used for the logging output.\n *  *\n *  * @param {t.TestCase} tc\n *  *\\/\n * export const testMyFirstTest = tc => {\n *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\n * }\n * ```\n *\n * Now you can simply run `node test.js` to run your test or run test.js in the browser.\n *\n * @module testing\n */\n\nconst extensive = hasConf('extensive');\n\n/* istanbul ignore next */\nconst envSeed = hasParam('--seed') ? Number.parseInt(getParam('--seed', '0')) : null;\n\nclass TestCase {\n  /**\n   * @param {string} moduleName\n   * @param {string} testName\n   */\n  constructor (moduleName, testName) {\n    /**\n     * @type {string}\n     */\n    this.moduleName = moduleName;\n    /**\n     * @type {string}\n     */\n    this.testName = testName;\n    this._seed = null;\n    this._prng = null;\n  }\n\n  resetSeed () {\n    this._seed = null;\n    this._prng = null;\n  }\n\n  /**\n   * @type {number}\n   */\n  /* istanbul ignore next */\n  get seed () {\n    /* istanbul ignore else */\n    if (this._seed === null) {\n      /* istanbul ignore next */\n      this._seed = envSeed === null ? uint32$1() : envSeed;\n    }\n    return this._seed\n  }\n\n  /**\n   * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\n   *\n   * @type {prng.PRNG}\n   */\n  get prng () {\n    /* istanbul ignore else */\n    if (this._prng === null) {\n      this._prng = create$3(this.seed);\n    }\n    return this._prng\n  }\n}\n\nconst repetitionTime = Number(getParam('--repetition-time', '50'));\n/* istanbul ignore next */\nconst testFilter = hasParam('--filter') ? getParam('--filter', '') : null;\n\n/* istanbul ignore next */\nconst testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*');\n\nconst repeatTestRegex = /^(repeat|repeating)\\s/;\n\n/**\n * @param {string} moduleName\n * @param {string} name\n * @param {function(TestCase):void|Promise<any>} f\n * @param {number} i\n * @param {number} numberOfTests\n */\nconst run = async (moduleName, name, f, i, numberOfTests) => {\n  const uncamelized = fromCamelCase(name.slice(4), ' ');\n  const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`);\n  /* istanbul ignore if */\n  if (filtered) {\n    return true\n  }\n  const tc = new TestCase(moduleName, name);\n  const repeat = repeatTestRegex.test(uncamelized);\n  const groupArgs = [GREY, `[${i + 1}/${numberOfTests}] `, PURPLE, `${moduleName}: `, BLUE, uncamelized];\n  /* istanbul ignore next */\n  if (testFilter === null) {\n    groupCollapsed(...groupArgs);\n  } else {\n    group$1(...groupArgs);\n  }\n  const times = [];\n  const start = isomorphic_js.performance.now();\n  let lastTime = start;\n  let err = null;\n  isomorphic_js.performance.mark(`${name}-start`);\n  do {\n    try {\n      const p = f(tc);\n      if (isPromise(p)) {\n        await p;\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    const currTime = isomorphic_js.performance.now();\n    times.push(currTime - lastTime);\n    lastTime = currTime;\n    if (repeat && err === null && (lastTime - start) < repetitionTime) {\n      tc.resetSeed();\n    } else {\n      break\n    }\n  } while (err === null && (lastTime - start) < repetitionTime)\n  isomorphic_js.performance.mark(`${name}-end`);\n  /* istanbul ignore if */\n  if (err !== null && err.constructor !== SkipError) {\n    printError(err);\n  }\n  isomorphic_js.performance.measure(name, `${name}-start`, `${name}-end`);\n  groupEnd();\n  const duration = lastTime - start;\n  let success = true;\n  times.sort((a, b) => a - b);\n  /* istanbul ignore next */\n  const againMessage = isBrowser\n    ? `     - ${window.location.href}?filter=\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\n    : `\\nrepeat: npm run test -- --filter \"\\\\[${i + 1}/\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`;\n  const timeInfo = (repeat && err === null)\n    ? ` - ${times.length} repetitions in ${humanizeDuration(duration)} (best: ${humanizeDuration(times[0])}, worst: ${humanizeDuration(last(times))}, median: ${humanizeDuration(median(times))}, average: ${humanizeDuration(average(times))})`\n    : ` in ${humanizeDuration(duration)}`;\n  if (err !== null) {\n    /* istanbul ignore else */\n    if (err.constructor === SkipError) {\n      print(GREY, BOLD, 'Skipped: ', UNBOLD, uncamelized);\n    } else {\n      success = false;\n      print(RED, BOLD, 'Failure: ', UNBOLD, UNCOLOR, uncamelized, GREY, timeInfo, againMessage);\n    }\n  } else {\n    print(GREEN, BOLD, 'Success: ', UNBOLD, UNCOLOR, uncamelized, GREY, timeInfo, againMessage);\n  }\n  return success\n};\n\n/**\n * Describe what you are currently testing. The message will be logged.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} description\n * @param {string} info\n */\nconst describe = (description, info = '') => print(BLUE, description, ' ', GREY, info);\n\n/**\n * Describe the state of the current computation.\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} info\n */\nconst info = info => describe('', info);\n\nconst printCanvas = printCanvas$1;\n\n/**\n * Group outputs in a collapsible category.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.group('subtest 1', () => {\n *     t.describe('this message is part of a collapsible section')\n *   })\n *   await t.groupAsync('subtest async 2', async () => {\n *     await someaction()\n *     t.describe('this message is part of a collapsible section')\n *   })\n * }\n * ```\n *\n * @param {string} description\n * @param {function(void):void} f\n */\nconst group = (description, f) => {\n  group$1(BLUE, description);\n  try {\n    f();\n  } finally {\n    groupEnd();\n  }\n};\n\n/**\n * Group outputs in a collapsible category.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.group('subtest 1', () => {\n *     t.describe('this message is part of a collapsible section')\n *   })\n *   await t.groupAsync('subtest async 2', async () => {\n *     await someaction()\n *     t.describe('this message is part of a collapsible section')\n *   })\n * }\n * ```\n *\n * @param {string} description\n * @param {function(void):Promise<any>} f\n */\nconst groupAsync = async (description, f) => {\n  group$1(BLUE, description);\n  try {\n    await f();\n  } finally {\n    groupEnd();\n  }\n};\n\n/**\n * Measure the time that it takes to calculate something.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.measureTime('measurement', () => {\n *     heavyCalculation()\n *   })\n *   await t.groupAsync('async measurement', async () => {\n *     await heavyAsyncCalculation()\n *   })\n * }\n * ```\n *\n * @param {string} message\n * @param {function():void} f\n * @return {number} Returns a promise that resolves the measured duration to apply f\n */\nconst measureTime = (message, f) => {\n  let duration;\n  const start = isomorphic_js.performance.now();\n  try {\n    f();\n  } finally {\n    duration = isomorphic_js.performance.now() - start;\n    print(PURPLE, message, GREY, ` ${humanizeDuration(duration)}`);\n  }\n  return duration\n};\n\n/**\n * Measure the time that it takes to calculate something.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.measureTimeAsync('measurement', async () => {\n *     await heavyCalculation()\n *   })\n *   await t.groupAsync('async measurement', async () => {\n *     await heavyAsyncCalculation()\n *   })\n * }\n * ```\n *\n * @param {string} message\n * @param {function():Promise<any>} f\n * @return {Promise<number>} Returns a promise that resolves the measured duration to apply f\n */\nconst measureTimeAsync = async (message, f) => {\n  let duration;\n  const start = isomorphic_js.performance.now();\n  try {\n    await f();\n  } finally {\n    duration = isomorphic_js.performance.now() - start;\n    print(PURPLE, message, GREY, ` ${humanizeDuration(duration)}`);\n  }\n  return duration\n};\n\n/**\n * @template T\n * @param {Array<T>} as\n * @param {Array<T>} bs\n * @param {string} [m]\n * @return {boolean}\n */\nconst compareArrays = (as, bs, m = 'Arrays match') => {\n  if (as.length !== bs.length) {\n    fail(m);\n  }\n  for (let i = 0; i < as.length; i++) {\n    if (as[i] !== bs[i]) {\n      fail(m);\n    }\n  }\n  return true\n};\n\n/**\n * @param {string} a\n * @param {string} b\n * @param {string} [m]\n * @throws {TestError} Throws if tests fails\n */\nconst compareStrings = (a, b, m = 'Strings match') => {\n  if (a !== b) {\n    const diff = simpleDiff(a, b);\n    print(GREY, a.slice(0, diff.index), RED, a.slice(diff.index, diff.remove), GREEN, diff.insert, GREY, a.slice(diff.index + diff.remove));\n    fail(m);\n  }\n};\n\n/**\n * @template K,V\n * @param {Object<K,V>} a\n * @param {Object<K,V>} b\n * @param {string} [m]\n * @throws {TestError} Throws if test fails\n */\nconst compareObjects = (a, b, m = 'Objects match') => { equalFlat(a, b) || fail(m); };\n\n/**\n * @param {any} constructor\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @throws {TestError}\n */\nconst compareValues = (constructor, a, b, path) => {\n  if (a !== b) {\n    fail(`Values ${stringify(a)} and ${stringify(b)} don't match (${path})`);\n  }\n  return true\n};\n\n/**\n * @param {string?} message\n * @param {string} reason\n * @param {string} path\n * @throws {TestError}\n */\nconst _failMessage = (message, reason, path) => fail(\n  message === null\n    ? `${reason} ${path}`\n    : `${message} (${reason}) ${path}`\n);\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @param {string?} message\n * @param {function(any,any,any,string,any):boolean} customCompare\n */\nconst _compare = (a, b, path, message, customCompare) => {\n  // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\n  if (a == null || b == null) {\n    return compareValues(null, a, b, path)\n  }\n  if (a.constructor !== b.constructor) {\n    _failMessage(message, 'Constructors don\\'t match', path);\n  }\n  let success = true;\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        _failMessage(message, 'ArrayBuffer lengths match', path);\n      }\n      for (let i = 0; success && i < a.length; i++) {\n        success = success && a[i] === b[i];\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Sets have different number of attributes', path);\n      }\n      // @ts-ignore\n      a.forEach(value => {\n        if (!b.has(value)) {\n          _failMessage(message, `b.${path} does have ${value}`, path);\n        }\n      });\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Maps have different number of attributes', path);\n      }\n      // @ts-ignore\n      a.forEach((value, key) => {\n        if (!b.has(key)) {\n          _failMessage(message, `Property ${path}[\"${key}\"] does not exist on second argument`, path);\n        }\n        _compare(value, b.get(key), `${path}[\"${key}\"]`, message, customCompare);\n      });\n      break\n    }\n    case Object:\n      if (length$1(a) !== length$1(b)) {\n        _failMessage(message, 'Objects have a different number of attributes', path);\n      }\n      forEach(a, (value, key) => {\n        if (!hasProperty(b, key)) {\n          _failMessage(message, `Property ${path} does not exist on second argument`, path);\n        }\n        _compare(value, b[key], `${path}[\"${key}\"]`, message, customCompare);\n      });\n      break\n    case Array:\n      if (a.length !== b.length) {\n        _failMessage(message, 'Arrays have a different number of attributes', path);\n      }\n      // @ts-ignore\n      a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare));\n      break\n    /* istanbul ignore next */\n    default:\n      if (!customCompare(a.constructor, a, b, path, compareValues)) {\n        _failMessage(message, `Values ${stringify(a)} and ${stringify(b)} don't match`, path);\n      }\n  }\n  assert(success, message);\n  return true\n};\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @param {string?} [message]\n * @param {function(any,T,T,string,any):boolean} [customCompare]\n */\nconst compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare);\n\n/* istanbul ignore next */\n/**\n * @param {boolean} condition\n * @param {string?} [message]\n * @throws {TestError}\n */\nconst assert = (condition, message = null) => condition || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`);\n\n/**\n * @param {function():void} f\n * @throws {TestError}\n */\nconst fails = f => {\n  let err = null;\n  try {\n    f();\n  } catch (_err) {\n    err = _err;\n    print(GREEN, '⇖ This Error was expected');\n  }\n  /* istanbul ignore if */\n  if (err === null) {\n    fail('Expected this to fail');\n  }\n};\n\n/**\n * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\n */\nconst runTests = async tests => {\n  const numberOfTests = map$1(tests, mod => map$1(mod, f => /* istanbul ignore next */ f ? 1 : 0).reduce(add$1, 0)).reduce(add$1, 0);\n  let successfulTests = 0;\n  let testnumber = 0;\n  const start = isomorphic_js.performance.now();\n  for (const modName in tests) {\n    const mod = tests[modName];\n    for (const fname in mod) {\n      const f = mod[fname];\n      /* istanbul ignore else */\n      if (f) {\n        const repeatEachTest = 1;\n        let success = true;\n        for (let i = 0; success && i < repeatEachTest; i++) {\n          success = await run(modName, fname, f, testnumber, numberOfTests);\n        }\n        testnumber++;\n        /* istanbul ignore else */\n        if (success) {\n          successfulTests++;\n        }\n      }\n    }\n  }\n  const end = isomorphic_js.performance.now();\n  print('');\n  const success = successfulTests === numberOfTests;\n  /* istanbul ignore next */\n  if (success) {\n    /* istanbul ignore next */\n    print(GREEN, BOLD, 'All tests successful!', GREY, UNBOLD, ` in ${humanizeDuration(end - start)}`);\n    /* istanbul ignore next */\n    printImgBase64(nyanCatImage, 50);\n  } else {\n    const failedTests = numberOfTests - successfulTests;\n    print(RED, BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`);\n  }\n  return success\n};\n\nclass TestError extends Error {}\n\n/**\n * @param {string} reason\n * @throws {TestError}\n */\nconst fail = reason => {\n  print(RED, BOLD, 'X ', UNBOLD, reason);\n  throw new TestError('Test Failed')\n};\n\nclass SkipError extends Error {}\n\n/**\n * @param {boolean} cond If true, this tests will be skipped\n * @throws {SkipError}\n */\nconst skip = (cond = true) => {\n  if (cond) {\n    throw new SkipError('skipping..')\n  }\n};\n\n// eslint-disable-next-line\nconst nyanCatImage = '';\n\n/**\n * @param {t.TestCase} tc\n */\nconst testAppend = tc => {\n  const arr = [1, 2, 3];\n  appendTo(arr, arr.slice());\n  compareArrays(arr, [1, 2, 3, 1, 2, 3]);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testflatten = tc => {\n  const arr = [[1, 2, 3], [4]];\n  compareArrays(flatten(arr), [1, 2, 3, 4]);\n};\n\nvar array = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testAppend: testAppend,\n  testflatten: testflatten\n});\n\nconst testLogging = () => {\n  print(BLUE, 'blue ');\n  print(BLUE, 'blue ', BOLD, 'blue,bold');\n  print(GREEN, RED, 'red ', 'red');\n  print(ORANGE, 'orange');\n  print(BOLD, 'bold ', UNBOLD, 'nobold');\n  print(GREEN, 'green ', UNCOLOR, 'nocolor');\n  print('expecting objects from now on!');\n  print({ 'my-object': 'isLogged' });\n  print(GREEN, 'green ', { 'my-object': 'isLogged' });\n  print(GREEN, 'green ', { 'my-object': 'isLogged' }, 'unformatted');\n  print(BLUE, BOLD, 'number', 1);\n  print(BLUE, BOLD, 'number', 1, {}, 's', 2);\n  print({}, 'dtrn');\n};\n\nvar logging = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testLogging: testLogging\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testLowercaseTransformation = tc => {\n  compareStrings(fromCamelCase('ThisIsATest', ' '), 'this is a test');\n  compareStrings(fromCamelCase('Testing', ' '), 'testing');\n  compareStrings(fromCamelCase('testingThis', ' '), 'testing this');\n  compareStrings(fromCamelCase('testYAY', ' '), 'test y a y');\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatStringUtf8Encoding = tc => {\n  skip(!utf8TextDecoder);\n  const str = utf16String(tc.prng, 1000000);\n  let nativeResult, polyfilledResult;\n  measureTime('TextEncoder utf8 encoding', () => {\n    nativeResult = _encodeUtf8Native(str);\n  });\n  measureTime('Polyfilled utf8 encoding', () => {\n    polyfilledResult = _encodeUtf8Polyfill(str);\n  });\n  compare(nativeResult, polyfilledResult, 'Encoded utf8 buffers match');\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatStringUtf8Decoding = tc => {\n  skip(!utf8TextDecoder);\n  const buf = encodeUtf8(utf16String(tc.prng, 1000000));\n  let nativeResult, polyfilledResult;\n  measureTime('TextEncoder utf8 decoding', () => {\n    nativeResult = _decodeUtf8Native(buf);\n  });\n  measureTime('Polyfilled utf8 decoding', () => {\n    polyfilledResult = _decodeUtf8Polyfill(buf);\n  });\n  compare(nativeResult, polyfilledResult, 'Decoded utf8 buffers match');\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testBomEncodingDecoding = tc => {\n  const bomStr = '﻿bom';\n  assert(bomStr.length === 4);\n  const polyfilledResult = _decodeUtf8Polyfill(_encodeUtf8Polyfill(bomStr));\n  assert(polyfilledResult.length === 4);\n  assert(polyfilledResult === bomStr);\n  if (utf8TextDecoder) {\n    const nativeResult = _decodeUtf8Native(_encodeUtf8Native(bomStr));\n    assert(nativeResult === polyfilledResult);\n  }\n};\n\nvar string = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testLowercaseTransformation: testLowercaseTransformation,\n  testRepeatStringUtf8Encoding: testRepeatStringUtf8Encoding,\n  testRepeatStringUtf8Decoding: testRepeatStringUtf8Decoding,\n  testBomEncodingDecoding: testBomEncodingDecoding\n});\n\n/* global BigInt */\n\n/**\n * @type {Array<function(prng.PRNG, number, boolean):any>}\n */\nlet genAnyLookupTable = [\n  gen => BigInt(int53(gen, MIN_SAFE_INTEGER, MAX_SAFE_INTEGER)), // TYPE 122\n  gen => undefined, // TYPE 127\n  gen => null, // TYPE 126\n  gen => int53(gen, LOWEST_INT32, HIGHEST_INT32), // TYPE 125\n  gen => real53(gen), // TYPE 124 and 123\n  gen => true, // TYPE 121\n  gen => false, // TYPE 120\n  gen => utf16String(gen), // TYPE 119\n  (gen, depth, toJsonCompatible) => ({ val: genAny(gen, depth + 1, toJsonCompatible) }), // TYPE 118\n  (gen, depth, toJsonCompatible) => Array.from({ length: uint32(gen, 0, 20 - depth) }).map(() => genAny(gen, depth + 1, toJsonCompatible)), // TYPE 117\n  gen => uint8Array(gen, uint32(gen, 0, 50)) // TYPE 116\n];\n\nconst genAnyLookupTableJsonCompatible = genAnyLookupTable.slice(1);\n\nif (typeof BigInt === 'undefined') {\n  genAnyLookupTable = genAnyLookupTable.slice(1);\n}\n\n/**\n * @param {prng.PRNG} gen\n * @param {number} _depth The current call-depth\n */\nconst genAny = (gen, _depth = 0, toJsonCompatible = false) => oneOf(gen, toJsonCompatible ? genAnyLookupTableJsonCompatible : genAnyLookupTable)(gen, _depth, toJsonCompatible);\n\n/**\n * Check if binary encoding is compatible with golang binary encoding - binary.PutVarUint.\n *\n * Result: is compatible up to 32 bit: [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n */\nconst testGolangBinaryEncodingCompatibility = () => {\n  const tests = [\n    { in: 0, out: [0] },\n    { in: 1, out: [1] },\n    { in: 128, out: [128, 1] },\n    { in: 200, out: [200, 1] },\n    { in: 32, out: [32] },\n    { in: 500, out: [244, 3] },\n    { in: 256, out: [128, 2] },\n    { in: 700, out: [188, 5] },\n    { in: 1024, out: [128, 8] },\n    { in: 1025, out: [129, 8] },\n    { in: 4048, out: [208, 31] },\n    { in: 5050, out: [186, 39] },\n    { in: 1000000, out: [192, 132, 61] },\n    { in: 34951959, out: [151, 166, 213, 16] },\n    { in: 2147483646, out: [254, 255, 255, 255, 7] },\n    { in: 2147483647, out: [255, 255, 255, 255, 7] },\n    { in: 2147483648, out: [128, 128, 128, 128, 8] },\n    { in: 2147483700, out: [180, 128, 128, 128, 8] },\n    { in: 4294967294, out: [254, 255, 255, 255, 15] },\n    { in: 4294967295, out: [255, 255, 255, 255, 15] }\n  ];\n  tests.forEach(test => {\n    const encoder = createEncoder();\n    writeVarUint(encoder, test.in);\n    const buffer = toUint8Array(encoder);\n    assert(buffer.byteLength === test.out.length);\n    assert(buffer.length > 0);\n    for (let j = 0; j < buffer.length; j++) {\n      assert(buffer[j] === test.out[j]);\n    }\n  });\n};\n\n/**\n * @template T\n * @param {string} testname\n * @param {function(encoding.Encoder, T):void} write\n * @param {function(decoding.Decoder):T} read\n * @param {T} val\n * @param {boolean} doLog\n */\nfunction test (testname, write, read, val, doLog = true) {\n  const encoder = createEncoder();\n  write(encoder, val);\n  const reader = createDecoder(toUint8Array(encoder));\n  const result = read(reader);\n  const utf8ByteLength$1 = utf8ByteLength(val + '');\n  const binaryByteLength = length(encoder);\n  if (doLog) {\n    describe(testname, ` utf8 encode: ${utf8ByteLength$1} bytes / binary encode: ${binaryByteLength} bytes`);\n  }\n  compare(val, result);\n  return {\n    utf8ByteLength: utf8ByteLength$1,\n    binaryByteLength\n  }\n}\n\n/**\n * @param {string} s\n */\nconst testVarString = s => {\n  const encoder = createEncoder();\n  writeVarString(encoder, s);\n  const decoder = createDecoder(toUint8Array(encoder));\n  const peeked = peekVarString(decoder);\n  const result = readVarString(decoder);\n  compareStrings(s, result);\n  compareStrings(s, peeked);\n};\n\nconst testStringDecodingPerformance = () => {\n  // test if it is faster to read N single characters, or if it is faster to read N characters in one flush.\n  // to make the comparison meaningful, we read read N characters in an Array\n  const N = 2000000;\n  const durationSingleElements = measureTime('read / write single elements', () => {\n    const encoder = createEncoder();\n    measureTime('read / write single elements - write', () => {\n      for (let i = 0; i < N; i++) {\n        writeVarString(encoder, 'i');\n      }\n    });\n    const decoder = createDecoder(toUint8Array(encoder));\n    measureTime('read / write single elements - read', () => {\n      const arr = [];\n      for (let i = 0; i < N; i++) {\n        arr.push(readVarString(decoder));\n      }\n    });\n  });\n\n  const durationConcatElementsNative = measureTime('read / write concatenated string using native encoder/decoder', () => {\n    let stringbuf = new Uint8Array();\n    const encoderLengths = createEncoder();\n    measureTime('read / write concatenated string using native encoder/decoder - write', () => {\n      let s = '';\n      const sArr = [];\n      for (let i = 0; i < N; i++) {\n        s += 'i';\n        writeVarUint(encoderLengths, 1); // we write a single char.\n        if (i % 20 === 0) {\n          sArr.push(s);\n          s = '';\n        }\n      }\n      sArr.push(s);\n      stringbuf = encodeUtf8(sArr.join(''));\n    });\n    const decoderLengths = createDecoder(toUint8Array(encoderLengths));\n    measureTime('read / write concatenated string using native encoder/decoder - read', () => {\n      const arr = [];\n      const concatS = decodeUtf8(stringbuf);\n      for (let i = 0; i < N; i++) {\n        const len = readVarUint(decoderLengths);\n        arr.push(concatS.slice(i, len)); // push using slice\n      }\n    });\n  });\n  const durationConcatElements = measureTime('read / write concatenated string', () => {\n    let stringbuf = new Uint8Array();\n    const encoder = createEncoder();\n    const encoderLengths = createEncoder();\n    measureTime('read / write concatenated string - write', () => {\n      let s = '';\n      for (let i = 0; i < N; i++) {\n        s += 'i';\n        writeVarUint(encoderLengths, 1); // we write a single char.\n        if (i % 20 === 0) {\n          writeVarString(encoder, s);\n          s = '';\n        }\n      }\n      writeVarString(encoder, s);\n      stringbuf = toUint8Array(encoder);\n    });\n    const decoder = createDecoder(stringbuf);\n    const decoderLengths = createDecoder(toUint8Array(encoderLengths));\n    measureTime('read / write concatenated string - read', () => {\n      const arr = [];\n      const concatS = readVarString(decoder);\n      for (let i = 0; i < N; i++) {\n        const len = readVarUint(decoderLengths);\n        arr.push(concatS.slice(i, len)); // push using slice\n      }\n    });\n  });\n  assert(durationConcatElements < durationSingleElements, 'We expect that the second approach is faster. If this fails, our expectantion is not met in your javascript environment. Please report this issue.');\n  assert(durationConcatElements < durationConcatElementsNative * 1.3, 'We expect that the native approach is slower. If this fails, our expectantion is not met in your javascript environment. Please report this issue.');\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testAnyEncodeUnknowns = tc => {\n  const encoder = createEncoder();\n  // @ts-ignore\n  writeAny(encoder, Symbol('a'));\n  writeAny(encoder, undefined);\n  writeAny(encoder, () => {});\n  const decoder = createDecoder(toUint8Array(encoder));\n  assert(readAny(decoder) === undefined);\n  assert(readAny(decoder) === undefined);\n  assert(readAny(decoder) === undefined);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testAnyEncodeDate = tc => {\n  test('Encode current date', writeAny, readAny, new Date().getTime());\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testEncodeMax32bitUint = tc => {\n  test('max 32bit uint', writeVarUint, readVarUint, BITS32);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testVarUintEncoding = tc => {\n  test('varUint 1 byte', writeVarUint, readVarUint, 42);\n  test('varUint 2 bytes', writeVarUint, readVarUint, 1 << 9 | 3);\n  test('varUint 3 bytes', writeVarUint, readVarUint, 1 << 17 | 1 << 9 | 3);\n  test('varUint 4 bytes', writeVarUint, readVarUint, 1 << 25 | 1 << 17 | 1 << 9 | 3);\n  test('varUint of 2839012934', writeVarUint, readVarUint, 2839012934);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testVarIntEncoding = tc => {\n  test('varInt 1 byte', writeVarInt, readVarInt, -42);\n  test('varInt 2 bytes', writeVarInt, readVarInt, -(1 << 9 | 3));\n  test('varInt 3 bytes', writeVarInt, readVarInt, -(1 << 17 | 1 << 9 | 3));\n  test('varInt 4 bytes', writeVarInt, readVarInt, -(1 << 25 | 1 << 17 | 1 << 9 | 3));\n  test('varInt of -691529286', writeVarInt, readVarInt, -(691529286));\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatVarUintEncoding = tc => {\n  const n = int32(tc.prng, 0, (1 << 28) - 1);\n  test(`varUint of ${n}`, writeVarUint, readVarUint, n, false);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatVarIntEncoding = tc => {\n  const n = uint32(tc.prng, 0, BITS32);\n  test(`varInt of ${n}`, writeVarInt, readVarInt, n, false);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatAnyEncoding = tc => {\n  const n = genAny(tc.prng);\n  test('any encoding', writeAny, readAny, n, false);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatPeekVarUintEncoding = tc => {\n  const n = int32(tc.prng, 0, (1 << 28) - 1);\n  test(`varUint of ${n}`, writeVarUint, peekVarUint, n, false);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatPeekVarIntEncoding = tc => {\n  const n = uint32(tc.prng, 0, BITS32);\n  test(`varInt of ${n}`, writeVarInt, peekVarInt, n, false);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testAnyVsJsonEncoding = tc => {\n  const n = Array.from({ length: 5000 }).map(() => genAny(tc.prng, 5, true));\n  measureTime('lib0 any encoding', () => {\n    const encoder = createEncoder();\n    writeAny(encoder, n);\n    const buffer = toUint8Array(encoder);\n    info('buffer length is ' + buffer.length);\n    readAny(createDecoder(buffer));\n  });\n  measureTime('JSON.stringify encoding', () => {\n    const encoder = createEncoder();\n    writeVarString(encoder, JSON.stringify(n));\n    const buffer = toUint8Array(encoder);\n    info('buffer length is ' + buffer.length);\n    JSON.parse(readVarString(createDecoder(buffer)));\n  });\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testStringEncoding = tc => {\n  testVarString('hello');\n  testVarString('test!');\n  testVarString('☺☺☺');\n  testVarString('');\n  testVarString('1234');\n  testVarString('쾟');\n  testVarString('龟'); // surrogate length 3\n  testVarString('😝'); // surrogate length 4\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatStringEncoding = tc =>\n  testVarString(utf16String(tc.prng));\n\n/**\n * @param {t.TestCase} tc\n */\nconst testSetMethods = tc => {\n  const encoder = createEncoder();\n  writeUint8(encoder, 1);\n  writeUint16(encoder, 33);\n  writeUint32(encoder, 29329);\n  setUint8(encoder, 0, 8);\n  setUint16(encoder, 1, 16);\n  setUint32(encoder, 3, 32);\n  const buf = toUint8Array(encoder);\n  const decoder = createDecoder(buf);\n  assert(peekUint8(decoder) === 8);\n  readUint8(decoder);\n  assert(peekUint16(decoder) === 16);\n  readUint16(decoder);\n  assert(peekUint32(decoder) === 32);\n  readUint32(decoder);\n};\n\nconst defLen = 1000;\nconst loops = 10000;\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst strictComparison = (a, b) => a === b;\n\n/**\n * @typedef {Object} EncodingPair\n * @property {function(decoding.Decoder):any} EncodingPair.read\n * @property {function(encoding.Encoder,any):void} EncodingPair.write\n * @property {function(prng.PRNG):any} EncodingPair.gen\n * @property {function(any,any):boolean} EncodingPair.compare\n * @property {string} name\n */\n\n/**\n * @template T\n * @type {Array<EncodingPair>}\n */\nconst encodingPairs = [\n  { name: 'uint8Array', read: decoder => readUint8Array(decoder, defLen), write: writeUint8Array, gen: gen => uint8Array(gen, defLen), compare: compare },\n  { name: 'varUint8Array', read: readVarUint8Array, write: writeVarUint8Array, gen: gen => uint8Array(gen, uint32(gen, 0, defLen)), compare: compare },\n  { name: 'uint8', read: readUint8, write: writeUint8, gen: gen => uint32(gen, 0, BITS8), compare: strictComparison },\n  { name: 'uint16', read: readUint16, write: writeUint16, gen: gen => uint32(gen, 0, BITS16), compare: strictComparison },\n  { name: 'uint32', read: readUint32, write: writeUint32, gen: gen => uint32(gen, 0, BITS32), compare: strictComparison },\n  { name: 'uint32bigEndian', read: readUint32BigEndian, write: writeUint32BigEndian, gen: gen => uint32(gen, 0, BITS32), compare: strictComparison },\n  { name: 'varString', read: readVarString, write: writeVarString, gen: gen => utf16String(gen, uint32(gen, 0, defLen)), compare: strictComparison },\n  { name: 'varUint', read: readVarUint, write: writeVarUint, gen: gen => uint53(gen, 0, BITS32), compare: strictComparison },\n  { name: 'varInt', read: readVarInt, write: writeVarInt, gen: gen => int53(gen, LOWEST_INT32, HIGHEST_INT32), compare: strictComparison },\n  { name: 'Any', read: readAny, write: writeAny, gen: genAny, compare: compare }\n];\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatRandomWrites = tc => {\n  describe(`Writing ${loops} random values`, `defLen=${defLen}`);\n  const gen = tc.prng;\n  const ops = [];\n  const encoder = createEncoder();\n  for (let i = 0; i < 10000; i++) {\n    const pair = oneOf(gen, encodingPairs);\n    const val = pair.gen(gen);\n    pair.write(encoder, val);\n    ops.push({\n      compare: pair.compare,\n      read: pair.read,\n      val,\n      name: pair.name\n    });\n  }\n  const tailData = uint8Array(gen, int32(gen, 0, defLen));\n  writeUint8Array(encoder, tailData);\n  const buf = toUint8Array(encoder);\n  const decoder = createDecoder(buf);\n  assert(length(encoder) === buf.byteLength);\n  for (let i = 0; i < ops.length; i++) {\n    const o = ops[i];\n    const val = o.read(decoder);\n    assert(o.compare(val, o.val), o.name);\n  }\n  compare(tailData, readTailAsUint8Array(decoder));\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testWriteUint8ArrayOverflow = tc => {\n  const encoder = createEncoder();\n  const initialLen = encoder.cbuf.byteLength;\n  const buf = createUint8ArrayFromLen(initialLen * 4);\n  for (let i = 0; i < buf.length; i++) {\n    buf[i] = i;\n  }\n  writeUint8Array(encoder, buf);\n  write(encoder, 42);\n  const res = toUint8Array(encoder);\n  assert(res.length === initialLen * 4 + 1);\n  for (let i = 0; i < buf.length - 1; i++) {\n    assert(res[i] === (i % 256));\n  }\n  assert(res[initialLen * 4] === 42);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testSetOnOverflow = tc => {\n  const encoder = createEncoder();\n  const initialLen = encoder.cbuf.byteLength;\n  encoder.cpos = initialLen - 2;\n  writeUint32(encoder, BITS32);\n  const buf = toUint8Array(encoder);\n  assert(length(encoder) === initialLen + 2);\n  const decoder = createDecoder(buf);\n  const space = createUint8ArrayFromArrayBuffer(readUint8Array(decoder, initialLen - 2));\n  for (let i = 0; i < initialLen - 2; i++) {\n    assert(space[i] === 0);\n  }\n  assert(hasContent(decoder));\n  assert(BITS32 === readUint32(decoder));\n  assert(!hasContent(decoder));\n  setUint8(encoder, 5, BITS8);\n  setUint8(encoder, initialLen + 1, 7);\n  const buf2 = toUint8Array(encoder);\n  assert(buf2[5] === BITS8);\n  assert(buf[5] === 0, 'old buffer is not affected');\n  assert(buf2[initialLen + 1] === 7);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testCloneDecoder = tc => {\n  const encoder = createEncoder();\n  writeUint8(encoder, 12132);\n  writeVarUint(encoder, 329840128734);\n  writeVarString(encoder, 'dtrnuiaednudiaendturinaedt nduiaen dturinaed ');\n  const buf = toUint8Array(encoder);\n  const decoder = createDecoder(buf);\n  skip8(decoder);\n  const decoder2 = clone(decoder);\n  const payload1 = readTailAsUint8Array(decoder);\n  const payload2 = readTailAsUint8Array(decoder2);\n  compare(payload1, payload2);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testWriteBinaryEncoder = tc => {\n  const encoder = createEncoder();\n  writeUint16(encoder, 4);\n  const encoder2 = createEncoder();\n  writeVarUint(encoder2, 143095);\n  writeBinaryEncoder(encoder2, encoder);\n  const buf = toUint8Array(encoder2);\n  const decoder = createDecoder(buf);\n  assert(readVarUint(decoder) === 143095);\n  assert(readUint16(decoder) === 4);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testOverflowStringDecoding = tc => {\n  const gen = tc.prng;\n  const encoder = createEncoder();\n  let longStr = '';\n  while (longStr.length < 11000) {\n    longStr += utf16String(gen, 100000);\n  }\n  writeVarString(encoder, longStr);\n  const buf = toUint8Array(encoder);\n  const decoder = createDecoder(buf);\n  assert(longStr === readVarString(decoder));\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRleEncoder = tc => {\n  const N = 100;\n  const encoder = new RleEncoder(writeVarUint);\n  for (let i = 0; i < N; i++) {\n    encoder.write(i);\n    for (let j = 0; j < i; j++) { // write additional i times\n      encoder.write(i);\n    }\n  }\n  const decoder = new RleDecoder(toUint8Array(encoder), readVarUint);\n  for (let i = 0; i < N; i++) {\n    assert(i === decoder.read());\n    for (let j = 0; j < i; j++) { // read additional i times\n      assert(i === decoder.read());\n    }\n  }\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRleIntDiffEncoder = tc => {\n  const N = 100;\n  const encoder = new RleIntDiffEncoder(0);\n  for (let i = -N; i < N; i++) {\n    encoder.write(i);\n    for (let j = 0; j < i; j++) { // write additional i times\n      encoder.write(i);\n    }\n  }\n  const decoder = new RleIntDiffDecoder(toUint8Array(encoder), 0);\n  for (let i = -N; i < N; i++) {\n    assert(i === decoder.read());\n    for (let j = 0; j < i; j++) { // read additional i times\n      assert(i === decoder.read());\n    }\n  }\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testUintOptRleEncoder = tc => {\n  const N = 100;\n  const encoder = new UintOptRleEncoder();\n  for (let i = 0; i < N; i++) {\n    encoder.write(i);\n    for (let j = 0; j < i; j++) { // write additional i times\n      encoder.write(i);\n    }\n  }\n  const decoder = new UintOptRleDecoder(encoder.toUint8Array());\n  for (let i = 0; i < N; i++) {\n    assert(i === decoder.read());\n    for (let j = 0; j < i; j++) { // read additional i times\n      assert(i === decoder.read());\n    }\n  }\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testIntDiffRleEncoder = tc => {\n  const N = 100;\n  const encoder = new IntDiffOptRleEncoder();\n  for (let i = -N; i < N; i++) {\n    encoder.write(i);\n    for (let j = 0; j < i; j++) { // write additional i times\n      encoder.write(i);\n    }\n  }\n  const decoder = new IntDiffOptRleDecoder(encoder.toUint8Array());\n  for (let i = -N; i < N; i++) {\n    assert(i === decoder.read());\n    for (let j = 0; j < i; j++) { // read additional i times\n      assert(i === decoder.read());\n    }\n  }\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testIntEncoders = tc => {\n  const arrLen = 10000;\n  const gen = tc.prng;\n  /**\n   * @type {Array<number>}\n   */\n  const vals = [];\n  for (let i = 0; i < arrLen; i++) {\n    vals.push(int32(gen, -10, 10));\n  }\n  /**\n   * @type {Array<{ encoder: any, read: function(any):any }>}\n   */\n  const intEncoders = [\n    { encoder: new IntDiffOptRleEncoder(), read: encoder => new IntDiffOptRleDecoder(encoder.toUint8Array()) },\n    { encoder: new IntDiffEncoder(0), read: encoder => new IntDiffDecoder(toUint8Array(encoder), 0) },\n    { encoder: new IntDiffEncoder(42), read: encoder => new IntDiffDecoder(toUint8Array(encoder), 42) },\n    { encoder: new RleIntDiffEncoder(0), read: encoder => new RleIntDiffDecoder(toUint8Array(encoder), 0) }\n  ];\n  intEncoders.forEach(({ encoder, read }) => {\n    vals.forEach(v => encoder.write(v));\n    /**\n     * @type {Array<number>}\n     */\n    const readVals = [];\n    const dec = read(encoder);\n    for (let i = 0; i < arrLen; i++) {\n      readVals.push(dec.read());\n    }\n    compare(vals, readVals);\n  });\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testIntDiffEncoder = tc => {\n  const N = 100;\n  const encoder = new IntDiffEncoder(0);\n  for (let i = -N; i < N; i++) {\n    encoder.write(i);\n  }\n  const decoder = new IntDiffDecoder(toUint8Array(encoder), 0);\n  for (let i = -N; i < N; i++) {\n    assert(i === decoder.read());\n  }\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testStringDecoder = tc => {\n  const gen = tc.prng;\n  const N = 1000;\n  const words = [];\n  for (let i = 0; i < N; i++) {\n    words.push(utf16String(gen));\n    if (i % 100 === 0) {\n      const char$1 = char(gen).slice(0, 1);\n      words.push(char$1);\n      words.push(char$1);\n    }\n    if (i % 107 === 0) {\n      words.push(word(gen, 3000, 8000));\n    }\n  }\n  const encoder = new StringEncoder();\n  for (let i = 0; i < words.length; i++) {\n    encoder.write(words[i]);\n  }\n  const decoder = new StringDecoder(encoder.toUint8Array());\n  for (let i = 0; i < words.length; i++) {\n    assert(decoder.read() === words[i]);\n  }\n};\n\nvar encoding = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testGolangBinaryEncodingCompatibility: testGolangBinaryEncodingCompatibility,\n  testStringDecodingPerformance: testStringDecodingPerformance,\n  testAnyEncodeUnknowns: testAnyEncodeUnknowns,\n  testAnyEncodeDate: testAnyEncodeDate,\n  testEncodeMax32bitUint: testEncodeMax32bitUint,\n  testVarUintEncoding: testVarUintEncoding,\n  testVarIntEncoding: testVarIntEncoding,\n  testRepeatVarUintEncoding: testRepeatVarUintEncoding,\n  testRepeatVarIntEncoding: testRepeatVarIntEncoding,\n  testRepeatAnyEncoding: testRepeatAnyEncoding,\n  testRepeatPeekVarUintEncoding: testRepeatPeekVarUintEncoding,\n  testRepeatPeekVarIntEncoding: testRepeatPeekVarIntEncoding,\n  testAnyVsJsonEncoding: testAnyVsJsonEncoding,\n  testStringEncoding: testStringEncoding,\n  testRepeatStringEncoding: testRepeatStringEncoding,\n  testSetMethods: testSetMethods,\n  testRepeatRandomWrites: testRepeatRandomWrites,\n  testWriteUint8ArrayOverflow: testWriteUint8ArrayOverflow,\n  testSetOnOverflow: testSetOnOverflow,\n  testCloneDecoder: testCloneDecoder,\n  testWriteBinaryEncoder: testWriteBinaryEncoder,\n  testOverflowStringDecoding: testOverflowStringDecoding,\n  testRleEncoder: testRleEncoder,\n  testRleIntDiffEncoder: testRleIntDiffEncoder,\n  testUintOptRleEncoder: testUintOptRleEncoder,\n  testIntDiffRleEncoder: testIntDiffRleEncoder,\n  testIntEncoders: testIntEncoders,\n  testIntDiffEncoder: testIntDiffEncoder,\n  testStringDecoder: testStringDecoder\n});\n\n/**\n * @param {string} a\n * @param {string} b\n * @param {{index: number,remove:number,insert:string}} expected\n */\nfunction runDiffTest (a, b, expected) {\n  const result = simpleDiffString(a, b);\n  compare(result, expected);\n  const arrResult = simpleDiffArray(a.split(''), b.split(''));\n  compare(arrResult, assign({}, result, { insert: result.insert.split('') }));\n}\n\n/**\n * @param {t.TestCase} tc\n */\nconst testDiffing = tc => {\n  runDiffTest('abc', 'axc', { index: 1, remove: 1, insert: 'x' });\n  runDiffTest('bc', 'xc', { index: 0, remove: 1, insert: 'x' });\n  runDiffTest('ab', 'ax', { index: 1, remove: 1, insert: 'x' });\n  runDiffTest('b', 'x', { index: 0, remove: 1, insert: 'x' });\n  runDiffTest('', 'abc', { index: 0, remove: 0, insert: 'abc' });\n  runDiffTest('abc', 'xyz', { index: 0, remove: 3, insert: 'xyz' });\n  runDiffTest('axz', 'au', { index: 1, remove: 2, insert: 'u' });\n  runDiffTest('ax', 'axy', { index: 2, remove: 0, insert: 'y' });\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatDiffing = tc => {\n  const a = word(tc.prng);\n  const b = word(tc.prng);\n  const change = simpleDiffString(a, b);\n  const recomposed = `${a.slice(0, change.index)}${change.insert}${a.slice(change.index + change.remove)}`;\n  compareStrings(recomposed, b);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testArrayDiffing = tc => {\n  const a = [[1, 2], { x: 'x' }];\n  const b = [[1, 2], { x: 'x' }];\n  compare(simpleDiffArray(a, b, equalityFlat), { index: 2, remove: 0, insert: [] });\n  compare(simpleDiffArray(a, b, equalityStrict), { index: 0, remove: 2, insert: b });\n  compare(simpleDiffArray([{ x: 'y' }, []], a, equalityFlat), { index: 0, remove: 2, insert: b });\n};\n\nvar diff = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testDiffing: testDiffing,\n  testRepeatDiffing: testRepeatDiffing,\n  testArrayDiffing: testArrayDiffing\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testComparing = tc => {\n  compare({}, {});\n  compare({ a: 4 }, { a: 4 }, 'simple compare (object)');\n  compare([1, 2], [1, 2], 'simple compare (array)');\n  compare({ a: [1, 2] }, { a: [1, 2] }, 'simple compare nested');\n  compare(new Set(['3', 1234]), new Set(['3', 1234]), 'compare Sets');\n  const map1 = create$7();\n  map1.set(1, 2);\n  map1.set('x', {});\n  map1.set(98, 'tst');\n  const map2 = new Map();\n  map2.set(1, 2);\n  map2.set('x', {});\n  map2.set(98, 'tst');\n  compare(map1, map2, 'compare Maps');\n\n  describe('The following errors are expected!');\n  fails(() => {\n    compare({ a: 4 }, { b: 5 }, 'childs are not equal');\n  });\n  fails(() => {\n    compare({ a: 4 }, { a: 5 }, 'childs are not equal');\n  });\n  fails(() => {\n    compare({ a: 4 }, null, 'childs are not equal');\n  });\n  fails(() => {\n    // @ts-ignore\n    compare({ a: 4 }, [4], 'childs have different types');\n  });\n  fails(() => {\n    compare({ a: 4 }, { a: 4, b: 5 }, 'childs have different length (object)');\n  });\n  fails(() => {\n    compare([1], [1, 2]); // childs have different length (array) -- no message\n  });\n  fails(() => {\n    compare(createUint8ArrayFromLen(1), createUint8ArrayFromLen(2), 'Uint8Arrays have different length');\n  });\n  fails(() => {\n    compare(createUint8ArrayFromLen(1).buffer, createUint8ArrayFromLen(2).buffer, 'ArrayBuffer have different length');\n  });\n  fails(() => {\n    compareStrings('str1', 'str2', 'Strings comparison can fail');\n  });\n  compareArrays([], [], 'Comparing empty arrays');\n  fails(() => {\n    compareArrays([1], [1, 2], 'Compare arrays with different length');\n  });\n  fails(() => {\n    compareArrays([1], [2]); // Compare different arrays -- no message\n  });\n  compareObjects({ x: 1 }, { x: 1 }, 'comparing objects');\n  fails(() => {\n    compareObjects({}, { x: 1 }, 'compareObjects can fail');\n  });\n  fails(() => {\n    compareObjects({ x: 3 }, { x: 1 }); // Compare different objects -- no message\n  });\n  fails(() => {\n    compare({ x: undefined }, { y: 1 }, 'compare correctly handles undefined');\n  });\n  fails(() => {\n    compareObjects({ x: undefined }, { y: 1 }, 'compare correctly handles undefined');\n  });\n  describe('Map fails');\n  fails(() => {\n    const m1 = new Map();\n    m1.set(1, 2);\n    const m2 = new Map();\n    m2.set(1, 3);\n    compare(m1, m2); // childs have different length (array) -- no message\n  });\n  fails(() => {\n    const m1 = new Map();\n    m1.set(2, 2);\n    const m2 = new Map();\n    m2.set(1, 2);\n    compare(m1, m2); // childs have different length (array) -- no message\n  });\n  fails(() => {\n    const m1 = new Map();\n    m1.set(1, 2);\n    const m2 = new Map();\n    compare(m1, m2); // childs have different length (array) -- no message\n  });\n  describe('Set fails');\n  fails(() => {\n    compare(new Set([1]), new Set([1, 2])); // childs have different length (array) -- no message\n  });\n  fails(() => {\n    compare(new Set([1]), new Set([2])); // childs have different length (array) -- no message\n  });\n};\n\nconst testFailing = () => {\n  fails(() => {\n    fail('This fail is expected');\n  });\n};\n\nconst testSkipping = () => {\n  skip(false);\n  assert(true);\n  skip();\n  /* istanbul ignore next */\n  fail('should have skipped');\n};\n\nconst testAsync = async () => {\n  await measureTimeAsync('time', () => create$2(r => setTimeout(r)));\n  await groupAsync('some description', () => wait(1));\n};\n\nconst testRepeatRepetition = () => {\n  const arr = [];\n  const n = 100;\n  for (let i = 1; i <= n; i++) {\n    arr.push(i);\n  }\n  assert(arr.reduce(add$1, 0) === (n + 1) * n / 2);\n};\n\nvar testing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testComparing: testComparing,\n  testFailing: testFailing,\n  testSkipping: testSkipping,\n  testAsync: testAsync,\n  testRepeatRepetition: testRepeatRepetition\n});\n\n/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* istanbul ignore next */\nconst create$1 = s => new Error(s);\n\n/* eslint-env browser */\n\n/**\n * IDB Request to Promise transformer\n *\n * @param {IDBRequest} request\n * @return {Promise<any>}\n */\n/* istanbul ignore next */\nconst rtop = request => create$2((resolve, reject) => {\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onerror = event => reject(new Error(event.target.error));\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onblocked = () => location.reload();\n  // @ts-ignore\n  request.onsuccess = event => resolve(event.target.result);\n});\n\n/**\n * @param {string} name\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\n * @return {Promise<IDBDatabase>}\n */\n/* istanbul ignore next */\nconst openDB = (name, initDB) => create$2((resolve, reject) => {\n  const request = indexedDB.open(name);\n  /**\n   * @param {any} event\n   */\n  request.onupgradeneeded = event => initDB(event.target.result);\n  /* istanbul ignore next */\n  /**\n   * @param {any} event\n   */\n  request.onerror = event => reject(create$1(event.target.error));\n  /* istanbul ignore next */\n  request.onblocked = () => location.reload();\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    /**\n     * @type {IDBDatabase}\n     */\n    const db = event.target.result;\n    /* istanbul ignore next */\n    db.onversionchange = () => { db.close(); };\n    /* istanbul ignore if */\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener('unload', () => db.close());\n    }\n    resolve(db);\n  };\n});\n\n/**\n * @param {string} name\n */\n/* istanbul ignore next */\nconst deleteDB = name => rtop(indexedDB.deleteDatabase(name));\n\n/**\n * @param {IDBDatabase} db\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\n */\n/* istanbul ignore next */\nconst createStores = (db, definitions) => definitions.forEach(d =>\n  // @ts-ignore\n  db.createObjectStore.apply(db, d)\n);\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\n */\n/* istanbul ignore next */\nconst get = (store, key) =>\n  rtop(store.get(key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\n */\n/* istanbul ignore next */\nconst del = (store, key) =>\n  rtop(store.delete(key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean} item\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\n */\n/* istanbul ignore next */\nconst put = (store, item, key) =>\n  rtop(store.put(item, key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean}  item\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\n * @return {Promise<any>}\n */\n/* istanbul ignore next */\nconst add = (store, item, key) =>\n  rtop(store.add(item, key));\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date}  item\n * @return {Promise<number>} Returns the generated key\n */\n/* istanbul ignore next */\nconst addAutoKey = (store, item) =>\n  rtop(store.add(item));\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\n/* istanbul ignore next */\nconst getAll = (store, range) =>\n  rtop(store.getAll(range));\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\n/* istanbul ignore next */\nconst getAllKeys = (store, range) =>\n  rtop(store.getAllKeys(range));\n\n/**\n * @typedef KeyValuePair\n * @type {Object}\n * @property {any} k key\n * @property {any} v Value\n */\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<KeyValuePair>>}\n */\n/* istanbul ignore next */\nconst getAllKeysValues = (store, range) =>\n  // @ts-ignore\n  all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })));\n\n/**\n * @param {any} request\n * @param {function(IDBCursorWithValue):void|boolean} f\n * @return {Promise<void>}\n */\n/* istanbul ignore next */\nconst iterateOnRequest = (request, f) => create$2((resolve, reject) => {\n  /* istanbul ignore next */\n  request.onerror = reject;\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    const cursor = event.target.result;\n    if (cursor === null || f(cursor) === false) {\n      return resolve()\n    }\n    cursor.continue();\n  };\n});\n\n/**\n * Iterate on keys and values\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any,any):void|boolean} f Callback that receives (value, key)\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\n/* istanbul ignore next */\nconst iterate = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key));\n\n/**\n * Iterate on the keys (no values)\n *\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any):void|boolean} f callback that receives the key\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\n/* istanbul ignore next */\nconst iterateKeys = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key));\n\n/**\n * Open store from transaction\n * @param {IDBTransaction} t\n * @param {String} store\n * @returns {IDBObjectStore}\n */\n/* istanbul ignore next */\nconst getStore$1 = (t, store) => t.objectStore(store);\n\n/**\n * @param {any} lower\n * @param {any} upper\n * @param {boolean} lowerOpen\n * @param {boolean} upperOpen\n */\n/* istanbul ignore next */\nconst createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);\n\n/* istanbul ignore next */\n/**\n * @param {IDBDatabase} db\n */\nconst initTestDB = db => createStores(db, [['test', { autoIncrement: true }]]);\nconst testDBName = 'idb-test';\n\n/* istanbul ignore next */\n/**\n * @param {IDBDatabase} db\n */\nconst createTransaction = db => db.transaction(['test'], 'readwrite');\n\n/* istanbul ignore next */\n/**\n * @param {IDBTransaction} t\n * @return {IDBObjectStore}\n */\nconst getStore = t => getStore$1(t, 'test');\n\n/* istanbul ignore next */\nconst testRetrieveElements = async () => {\n  skip(!isBrowser);\n  describe('create, then iterate some keys');\n  await deleteDB(testDBName);\n  const db = await openDB(testDBName, initTestDB);\n  const transaction = createTransaction(db);\n  const store = getStore(transaction);\n  await put(store, 0, ['t', 1]);\n  await put(store, 1, ['t', 2]);\n  const expectedKeys = [['t', 1], ['t', 2]];\n  const expectedVals = [0, 1];\n  const expectedKeysVals = [{ v: 0, k: ['t', 1] }, { v: 1, k: ['t', 2] }];\n  describe('idb.getAll');\n  const valsGetAll = await getAll(store);\n  compare(valsGetAll, expectedVals);\n  describe('idb.getAllKeys');\n  const valsGetAllKeys = await getAllKeys(store);\n  compare(valsGetAllKeys, expectedKeys);\n  describe('idb.getAllKeysVals');\n  const valsGetAllKeysVals = await getAllKeysValues(store);\n  compare(valsGetAllKeysVals, expectedKeysVals);\n\n  /**\n   * @param {string} desc\n   * @param {IDBKeyRange?} keyrange\n   */\n  const iterateTests = async (desc, keyrange) => {\n    describe(`idb.iterate (${desc})`);\n    /**\n     * @type {Array<{v:any,k:any}>}\n     */\n    const valsIterate = [];\n    await iterate(store, keyrange, (v, k) => {\n      valsIterate.push({ v, k });\n    });\n    compare(valsIterate, expectedKeysVals);\n    describe(`idb.iterateKeys (${desc})`);\n    /**\n     * @type {Array<any>}\n     */\n    const keysIterate = [];\n    await iterateKeys(store, keyrange, key => {\n      keysIterate.push(key);\n    });\n    compare(keysIterate, expectedKeys);\n  };\n  await iterateTests('range=null', null);\n  const range = createIDBKeyRangeBound(['t', 1], ['t', 2], false, false);\n  // adding more items that should not be touched by iteration with above range\n  await put(store, 2, ['t', 3]);\n  await put(store, 2, ['t', 0]);\n  await iterateTests('range!=null', range);\n\n  describe('idb.get');\n  const getV = await get(store, ['t', 1]);\n  assert(getV === 0);\n  describe('idb.del');\n  await del(store, ['t', 0]);\n  const getVDel = await get(store, ['t', 0]);\n  assert(getVDel === undefined);\n  describe('idb.add');\n  await add(store, 99, 42);\n  const idbVAdd = await get(store, 42);\n  assert(idbVAdd === 99);\n  describe('idb.addAutoKey');\n  const key = await addAutoKey(store, 1234);\n  const retrieved = await get(store, key);\n  assert(retrieved === 1234);\n};\n\nvar indexeddb = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testRetrieveElements: testRetrieveElements\n});\n\n/**\n * @module prng\n */\nconst N = 624;\nconst M = 397;\n\n/**\n * @param {number} u\n * @param {number} v\n */\nconst twist = (u, v) => ((((u & 0x80000000) | (v & 0x7fffffff)) >>> 1) ^ ((v & 1) ? 0x9908b0df : 0));\n\n/**\n * @param {Uint32Array} state\n */\nconst nextState = state => {\n  let p = 0;\n  let j;\n  for (j = N - M + 1; --j; p++) {\n    state[p] = state[p + M] ^ twist(state[p], state[p + 1]);\n  }\n  for (j = M; --j; p++) {\n    state[p] = state[p + M - N] ^ twist(state[p], state[p + 1]);\n  }\n  state[p] = state[p + M - N] ^ twist(state[p], state[0]);\n};\n\n/**\n * This is a port of Shawn Cokus's implementation of the original Mersenne Twister algorithm (http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/MTARCOK/mt19937ar-cok.c).\n * MT has a very high period of 2^19937. Though the authors of xorshift describe that a high period is not\n * very relevant (http://vigna.di.unimi.it/xorshift/). It is four times slower than xoroshiro128plus and\n * needs to recompute its state after generating 624 numbers.\n *\n * ```js\n * const gen = new Mt19937(new Date().getTime())\n * console.log(gen.next())\n * ```\n *\n * @public\n */\nclass Mt19937 {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed;\n    const state = new Uint32Array(N);\n    state[0] = seed;\n    for (let i = 1; i < N; i++) {\n      state[i] = (imul(1812433253, (state[i - 1] ^ (state[i - 1] >>> 30))) + i) & BITS32;\n    }\n    this._state = state;\n    this._i = 0;\n    nextState(this._state);\n  }\n\n  /**\n   * Generate a random signed integer.\n   *\n   * @return {Number} A 32 bit signed integer.\n   */\n  next () {\n    if (this._i === N) {\n      // need to compute a new state\n      nextState(this._state);\n      this._i = 0;\n    }\n    let y = this._state[this._i++];\n    y ^= (y >>> 11);\n    y ^= (y << 7) & 0x9d2c5680;\n    y ^= (y << 15) & 0xefc60000;\n    y ^= (y >>> 18);\n    return (y >>> 0) / (BITS32 + 1)\n  }\n}\n\nconst genTestData = 5000;\n\n/**\n * @param {t.TestCase} tc\n * @param {prng.PRNG} gen\n */\nconst runGenTest = (tc, gen) => {\n  group('next - average distribution', () => {\n    let sum = 0;\n    for (let i = 0; i < genTestData; i++) {\n      const next = gen.next();\n      if (next >= 1) {\n        fail('unexpected prng result');\n      }\n      sum += next;\n    }\n    const avg = sum / genTestData;\n    assert(avg >= 0.45);\n    assert(avg <= 0.55);\n  });\n\n  group('bool - bool distribution is fair', () => {\n    let head = 0;\n    let tail = 0;\n    let b;\n    let i;\n\n    for (i = 0; i < genTestData; i++) {\n      b = bool(gen);\n      if (b) {\n        head++;\n      } else {\n        tail++;\n      }\n    }\n    info(`Generated ${head} heads and ${tail} tails.`);\n    assert(tail >= floor(genTestData * 0.45), 'Generated enough tails.');\n    assert(head >= floor(genTestData * 0.45), 'Generated enough heads.');\n  });\n  group('int31 - integers average correctly', () => {\n    let count = 0;\n    let i;\n\n    for (i = 0; i < genTestData; i++) {\n      count += uint32(gen, 0, 100);\n    }\n    const average = count / genTestData;\n    const expectedAverage = 100 / 2;\n    info(`Average is: ${average}. Expected average is ${expectedAverage}.`);\n    assert(abs(average - expectedAverage) <= 2, 'Expected average is at most 1 off.');\n  });\n\n  group('int32 - generates integer with 32 bits', () => {\n    let largest = 0;\n    let smallest = 0;\n    let i;\n    let newNum;\n    for (i = 0; i < genTestData; i++) {\n      newNum = int32(gen, -BITS31, BITS31);\n      if (newNum > largest) {\n        largest = newNum;\n      }\n      if (newNum < smallest) {\n        smallest = newNum;\n      }\n    }\n    assert(smallest < -1000, 'Smallest number is negative');\n    assert(largest > 1000, 'Largest number is positive');\n    info(`Largest number generated is ${largest} (0x${largest.toString(16)})`);\n    info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`);\n    assert((smallest & BIT32) !== 0, 'Largest number is 32 bits long'); // largest.. assuming we convert int to uint\n  });\n\n  group('uint32 - generates unsigned integer with 32 bits', () => {\n    let num = 0;\n    let i;\n    let newNum;\n    for (i = 0; i < genTestData; i++) {\n      newNum = uint32(gen, 0, BITS32);\n      if (newNum > num) {\n        num = newNum;\n      }\n    }\n    info(`Largest number generated is ${num} (0x${num.toString(16)})`);\n    assert((num & BIT32) !== 0, 'Largest number is 32 bits long.');\n  });\n\n  group('int53 - generates integer exceeding 32 bits', () => {\n    let largest = 0;\n    let smallest = 0;\n    let i;\n    let newNum;\n    for (i = 0; i < genTestData; i++) {\n      newNum = int53(gen, Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\n      if (newNum > largest) {\n        largest = newNum;\n      }\n      if (newNum < smallest) {\n        smallest = newNum;\n      }\n    }\n    assert(smallest < -1000, 'Smallest number is negative');\n    assert(largest > 1000, 'Largest number is positive');\n    info(`Largest number generated is ${largest}`);\n    info(`Smallest number generated is ${smallest}`);\n    assert(largest > (BITS32 >>> 0), 'Largest number exceeds BITS32');\n    assert(smallest < BITS32, 'Smallest Number is smaller than BITS32 (negative)');\n  });\n\n  group('uint53 - generates integer exceeding 32 bits', () => {\n    let largest = 0;\n    let smallest = 10000;\n    let i;\n    let newNum;\n    for (i = 0; i < genTestData; i++) {\n      newNum = uint53(gen, 0, Number.MAX_SAFE_INTEGER);\n      if (newNum > largest) {\n        largest = newNum;\n      }\n      /* istanbul ignore if */\n      if (newNum < smallest) {\n        smallest = newNum;\n      }\n    }\n    assert(smallest >= 0, 'Smallest number is not negative');\n    assert(largest > 1000, 'Largest number is positive');\n    info(`Largest number generated is ${largest}`);\n    info(`Smallest number generated is ${smallest}`);\n    assert(largest > (BITS32 >>> 0), 'Largest number exceeds BITS32');\n  });\n\n  group('int31 - generates integer with 31 bits', () => {\n    let num = 0;\n    let i;\n    let newNum;\n    for (i = 0; i < genTestData; i++) {\n      newNum = uint32(gen, 0, BITS31);\n      if (newNum > num) {\n        num = newNum;\n      }\n    }\n    info(`Largest number generated is ${num} (0x${num.toString(16)})`);\n    assert((num & BIT31) !== 0, 'Largest number is 31 bits long.');\n  });\n\n  group('real - has 53 bit resolution', () => {\n    let num = 0;\n    let i;\n    let newNum;\n    for (i = 0; i < genTestData; i++) {\n      newNum = real53(gen) * MAX_SAFE_INTEGER;\n      if (newNum > num) {\n        num = newNum;\n      }\n    }\n    info(`Largest number generated is ${num}.`);\n    assert((MAX_SAFE_INTEGER - num) / MAX_SAFE_INTEGER < 0.01, 'Largest number is close to MAX_SAFE_INTEGER (at most 1% off).');\n  });\n\n  group('char - generates all ascii characters', () => {\n    const charSet = new Set();\n    const chars = ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\"';\n    for (let i = chars.length - 1; i >= 0; i--) {\n      charSet.add(chars[i]);\n    }\n    for (let i = 0; i < genTestData; i++) {\n      const char$1 = char(gen);\n      charSet.delete(char$1);\n    }\n    info(`Charactes missing: ${charSet.size} - generating all of \"${chars}\"`);\n    assert(charSet.size === 0, 'Generated all documented characters.');\n  });\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testGeneratorXoroshiro128plus = tc => runGenTest(tc, new Xoroshiro128plus(tc.seed));\n\n/**\n * @param {t.TestCase} tc\n */\nconst testGeneratorXorshift32 = tc => {\n  skip(!production);\n  runGenTest(tc, new Xorshift32(tc.seed));\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testGeneratorMt19937 = tc => {\n  skip(!production);\n  runGenTest(tc, new Mt19937(tc.seed));\n};\n\n/* istanbul ignore next */\n/**\n * @param {prng.PRNG} gen\n * @param {t.TestCase} tc\n */\nconst printDistribution = (gen, tc) => {\n  const DIAMETER = genTestData / 50;\n  const canvas$1 = canvas(DIAMETER * 3, DIAMETER);\n  const ctx = canvas$1.getContext('2d');\n  if (ctx == null) {\n    return skip()\n  }\n  ctx.fillStyle = 'blue';\n  for (let i = 0; i < genTestData; i++) {\n    const x = int32(gen, 0, DIAMETER * 3);\n    const y = int32(gen, 0, DIAMETER);\n    ctx.fillRect(x, y, 1, 2);\n  }\n  printCanvas(canvas$1, DIAMETER);\n};\n\n/* istanbul ignore next */\n/**\n * @param {t.TestCase} tc\n */\nconst testNumberDistributions = tc => {\n  skip(!isBrowser);\n  group('Xoroshiro128plus', () => printDistribution(new Xoroshiro128plus(tc.seed), tc));\n  group('Xorshift32', () => printDistribution(new Xorshift32(tc.seed), tc));\n  group('MT19937', () => printDistribution(new Mt19937(tc.seed), tc));\n};\n\nvar prng = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testGeneratorXoroshiro128plus: testGeneratorXoroshiro128plus,\n  testGeneratorXorshift32: testGeneratorXorshift32,\n  testGeneratorMt19937: testGeneratorMt19937,\n  testNumberDistributions: testNumberDistributions\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testMedian = tc => {\n  assert(isNaN$1(median([])), 'median([]) = NaN');\n  assert(median([1]) === 1, 'median([x]) = x');\n  assert(median([1, 2, 3]) === 2, 'median([a,b,c]) = b');\n  assert(median([1, 2, 3, 4]) === (2 + 3) / 2, 'median([a,b,c,d]) = (b+c)/2');\n  assert(median([1, 2, 3, 4, 5]) === 3, 'median([a,b,c,d,e]) = c');\n  assert(median([1, 2, 3, 4, 5, 6]) === (3 + 4) / 2, 'median([a,b,c,d,e,f]) = (c+d)/2');\n};\n\nvar statistics = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testMedian: testMedian\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testBitx = tc => {\n  for (let i = 1; i <= 32; i++) {\n    // @ts-ignore\n    assert(binary$1[`BIT${i}`] === (1 << (i - 1)), `BIT${i}=${1 << (i - 1)}`);\n  }\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testBitsx = tc => {\n  assert(BITS0 === 0);\n  for (let i = 1; i < 32; i++) {\n    const expected = ((1 << i) - 1) >>> 0;\n    // @ts-ignore\n    const have = binary$1[`BITS${i}`];\n    assert(have === expected, `BITS${i}=${have}=${expected}`);\n  }\n  assert(BITS32 === 0xFFFFFFFF);\n};\n\nvar binary = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testBitx: testBitx,\n  testBitsx: testBitsx\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testUint32 = tc => {\n  const iterations = 10000;\n  let largest = 0;\n  let smallest = HIGHEST_INT32;\n  let newNum = 0;\n  let lenSum = 0;\n  let ones = 0;\n  for (let i = 0; i < iterations; i++) {\n    newNum = uint32$1();\n    lenSum += newNum.toString().length;\n    ones += newNum.toString(2).split('').filter(x => x === '1').length;\n    if (newNum > largest) {\n      largest = newNum;\n    }\n    if (newNum < smallest) {\n      smallest = newNum;\n    }\n  }\n  info(`Largest number generated is ${largest} (0x${largest.toString(16)})`);\n  info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`);\n  info(`Average decimal length of number is ${lenSum / iterations}`);\n  info(`Average number of 1s in number is ${ones / iterations} (expecting ~16)`);\n  assert(((largest & BITS32) >>> 0) === largest, 'Largest number is 32 bits long.');\n  assert(((smallest & BITS32) >>> 0) === smallest, 'Smallest number is 32 bits long.');\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testUuidv4 = tc => {\n  info(`Generated a UUIDv4: ${uuidv4()}`);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testUuidv4Overlaps = tc => {\n  skip(!production);\n  const iterations = extensive ? 1000000 : 10000;\n  const uuids = new Set();\n  for (let i = 0; i < iterations; i++) {\n    const uuid = uuidv4();\n    if (uuids.has(uuid)) {\n      fail('uuid already exists');\n    } else {\n      uuids.add(uuid);\n    }\n    if (uuids.size % (iterations / 20) === 0) {\n      info(`${round(uuids.size * 100 / iterations)}% complete`);\n    }\n  }\n  assert(uuids.size === iterations);\n};\n\nvar random = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testUint32: testUint32,\n  testUuidv4: testUuidv4,\n  testUuidv4Overlaps: testUuidv4Overlaps\n});\n\n/**\n * @param {Promise<any>} p\n * @param {number} min\n * @param {number} max\n */\nconst measureP = (p, min, max) => {\n  const start = getUnixTime();\n  return p.then(() => {\n    const duration = getUnixTime() - start;\n    assert(duration <= max, 'Expected promise to take less time');\n    assert(duration >= min, 'Expected promise to take more time');\n  })\n};\n\n/**\n * @template T\n * @param {Promise<T>} p\n * @return {Promise<T>}\n */\nconst failsP = p => create$2((resolve, reject) => p.then(() => reject(create$1('Promise should fail')), resolve));\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatPromise = async tc => {\n  assert(createEmpty(r => r()).constructor === Promise, 'p.create() creates a Promise');\n  assert(resolve().constructor === Promise, 'p.reject() creates a Promise');\n  const rejectedP = reject();\n  assert(rejectedP.constructor === Promise, 'p.reject() creates a Promise');\n  rejectedP.catch(() => {});\n  await createEmpty(r => r());\n  await failsP(reject());\n  await resolve();\n  await measureP(wait(10), 7, 1000);\n  await measureP(failsP(until(15, () => false)), 15, 1000);\n  const startTime = getUnixTime();\n  await measureP(until(0, () => (getUnixTime() - startTime) > 100), 100, 1000);\n  await all([wait(5), wait(10)]);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testispromise = tc => {\n  assert(isPromise(new Promise(() => {})));\n  assert(isPromise(create$2(() => {})));\n  const rej = reject();\n  assert(isPromise(rej));\n  rej.catch(() => {});\n  assert(isPromise(resolve()));\n  assert(isPromise({ then: () => {}, catch: () => {}, finally: () => {} }));\n  fails(() => {\n    assert(isPromise({ then: () => {}, catch: () => {} }));\n  });\n};\n\nvar promise = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testRepeatPromise: testRepeatPromise,\n  testispromise: testispromise\n});\n\nclass QueueNode {\n  constructor () {\n    /**\n     * @type {QueueNode|null}\n     */\n    this.next = null;\n  }\n}\n\nclass Queue {\n  constructor () {\n    /**\n     * @type {QueueNode | null}\n     */\n    this.start = null;\n    /**\n     * @type {QueueNode | null}\n     */\n    this.end = null;\n  }\n}\n\n/**\n * @note The queue implementation is experimental and unfinished.\n * Don't use this in production yet.\n *\n * @return {Queue}\n */\nconst create = () => new Queue();\n\n/**\n * @param {Queue} queue\n */\nconst isEmpty = queue => queue.start === null;\n\n/**\n * @param {Queue} queue\n * @param {QueueNode} n\n */\nconst enqueue = (queue, n) => {\n  if (queue.end !== null) {\n    queue.end.next = n;\n    queue.end = n;\n  } else {\n    queue.end = n;\n    queue.start = n;\n  }\n};\n\n/**\n * @param {Queue} queue\n * @return {QueueNode | null}\n */\nconst dequeue = queue => {\n  const n = queue.start;\n  if (n !== null) {\n    // @ts-ignore\n    queue.start = n.next;\n    return n\n  }\n  return null\n};\n\nclass QueueItem extends QueueNode {\n  /**\n   * @param {number} v\n   */\n  constructor (v) {\n    super();\n    this.v = v;\n  }\n}\n\n/**\n * @param {t.TestCase} tc\n */\nconst testEnqueueDequeue = tc => {\n  const N = 30;\n  /**\n   * @type {queue.Queue}\n   */\n  const q = create();\n  assert(isEmpty(q));\n  assert(dequeue(q) === null);\n  for (let i = 0; i < N; i++) {\n    enqueue(q, new QueueItem(i));\n    assert(!isEmpty(q));\n  }\n  for (let i = 0; i < N; i++) {\n    const item = /** @type {QueueItem} */ (dequeue(q));\n    assert(item !== null && item.v === i);\n  }\n  assert(dequeue(q) === null);\n};\n\nvar queue = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testEnqueueDequeue: testEnqueueDequeue\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testMap = tc => {\n  const m = create$7();\n  m.set(1, 2);\n  m.set(2, 3);\n  assert(map$3(m, (value, key) => value * 2 + key).reduce(add$1) === 13);\n  let numberOfWrites = 0;\n  const createT = () => {\n    numberOfWrites++;\n    return {}\n  };\n  setIfUndefined(m, 3, createT);\n  setIfUndefined(m, 3, createT);\n  setIfUndefined(m, 3, createT);\n  compare(copy(m), m);\n  assert(numberOfWrites === 1);\n};\n\nvar map = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testMap: testMap\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testEventloopOrder = tc => {\n  let currI = 0;\n  for (let i = 0; i < 10; i++) {\n    const bi = i;\n    enqueue$1(() => {\n      assert(currI++ === bi);\n    });\n  }\n  enqueue$1(() => {\n    assert(currI === 10);\n  });\n  assert(currI === 0);\n  return all([\n    createEmpty(resolve => enqueue$1(resolve)),\n    until(0, () => currI === 10)\n  ])\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testTimeout = async tc => {\n  let set = false;\n  const timeout$1 = timeout(0, () => {\n    set = true;\n  });\n  timeout$1.destroy();\n  await create$2(resolve => {\n    timeout(10, resolve);\n  });\n  assert(set === false);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testInterval = async tc => {\n  let set = false;\n  const timeout = interval(1, () => {\n    set = true;\n  });\n  timeout.destroy();\n  let i = 0;\n  interval(1, () => {\n    i++;\n  });\n  await until(0, () => i > 2);\n  assert(set === false);\n  assert(i > 1);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testAnimationFrame = async tc => {\n  let x = false;\n  animationFrame(() => { x = true; });\n  await until(0, () => x);\n  assert(x);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testIdleCallback = async tc => {\n  await create$2(resolve => {\n    idleCallback(resolve);\n  });\n};\n\nvar eventloop = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testEventloopOrder: testEventloopOrder,\n  testTimeout: testTimeout,\n  testInterval: testInterval,\n  testAnimationFrame: testAnimationFrame,\n  testIdleCallback: testIdleCallback\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testTime = tc => {\n  const l = getDate().getTime();\n  const r = getUnixTime();\n  assert(abs(l - r) < 10, 'Times generated are roughly the same');\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testHumanDuration = tc => {\n  assert(humanizeDuration(10) === '10ms');\n  assert(humanizeDuration(0.1) === '100μs');\n  assert(humanizeDuration(61030) === '1min 1s');\n  assert(humanizeDuration(60030) === '1min');\n  assert(humanizeDuration(3600000) === '1h');\n  assert(humanizeDuration(3640000) === '1h 1min');\n  assert(humanizeDuration(3700000) === '1h 2min');\n  assert(humanizeDuration(60 * 60 * 1000 + 29000) === '1h');\n  assert(humanizeDuration(60 * 60 * 1000 + 31000) === '1h 1min');\n  assert(humanizeDuration(60 * 60 * 1000 + 31000 * 3) === '1h 2min');\n  assert(humanizeDuration(3600000 * 25) === '1d 1h');\n  assert(humanizeDuration(3600000 * 24.6) === '1d 1h');\n  assert(humanizeDuration(3600000 * 25.6) === '1d 2h');\n  assert(humanizeDuration(3600000 * 24 * 400) === '400d');\n  // test round\n  assert(humanizeDuration(6001) === '6s');\n};\n\nvar time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testTime: testTime,\n  testHumanDuration: testHumanDuration\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testPair = tc => {\n  const ps = [create$5(1, 2), create$5(3, 4), createReversed(6, 5)];\n  describe('Counting elements in pair list');\n  let countLeft = 0;\n  let countRight = 0;\n  forEach$1(ps, (left, right) => {\n    countLeft += left;\n    countRight += right;\n  });\n  assert(countLeft === 9);\n  assert(countRight === 12);\n  assert(countLeft === map$2(ps, left => left).reduce(add$1));\n  assert(countRight === map$2(ps, (left, right) => right).reduce(add$1));\n};\n\nvar pair = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testPair: testPair\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testObject = tc => {\n  assert(create$4().constructor === undefined, 'object.create creates an empty object without constructor');\n  describe('object.equalFlat');\n  assert(equalFlat({}, {}), 'comparing equal objects');\n  assert(equalFlat({ x: 1 }, { x: 1 }), 'comparing equal objects');\n  assert(equalFlat({ x: 'dtrn' }, { x: 'dtrn' }), 'comparing equal objects');\n  assert(!equalFlat({ x: {} }, { x: {} }), 'flatEqual does not dive deep');\n  assert(equalFlat({ x: undefined }, { x: undefined }), 'flatEqual handles undefined');\n  assert(!equalFlat({ x: undefined }, { y: {} }), 'flatEqual handles undefined');\n  describe('object.every');\n  assert(every({ a: 1, b: 3 }, (v, k) => (v % 2) === 1 && k !== 'c'));\n  assert(!every({ a: 1, b: 3, c: 5 }, (v, k) => (v % 2) === 1 && k !== 'c'));\n  describe('object.some');\n  assert(some({ a: 1, b: 3 }, (v, k) => v === 3 && k === 'b'));\n  assert(!some({ a: 1, b: 5 }, (v, k) => v === 3));\n  assert(some({ a: 1, b: 5 }, () => true));\n  assert(!some({ a: 1, b: 5 }, (v, k) => false));\n  describe('object.forEach');\n  let forEachSum = 0;\n  forEach({ x: 1, y: 3 }, (v, k) => { forEachSum += v; });\n  assert(forEachSum === 4);\n  describe('object.map');\n  assert(map$1({ x: 1, z: 5 }, (v, k) => v).reduce(add$1) === 6);\n  describe('object.length');\n  assert(length$1({}) === 0);\n  assert(length$1({ x: 1 }) === 1);\n};\n\nvar object = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testObject: testObject\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testMath = tc => {\n  describe('math.abs');\n  assert(abs(-1) === 1);\n  assert(abs(Number.MIN_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER);\n  assert(abs(Number.MAX_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER);\n  describe('math.add');\n  assert([1, 2, 3, 4, 5].reduce(add$1) === 15);\n  describe('math.ceil');\n  assert(ceil(1.5) === 2);\n  assert(ceil(-1.5) === -1);\n  describe('math.floor');\n  assert(floor(1.5) === 1);\n  assert(floor(-1.5) === -2);\n  describe('math.isNaN');\n  assert(isNaN$1(NaN));\n  // @ts-ignore\n  assert(!isNaN$1(null));\n  describe('math.max');\n  assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(max) === 3475);\n  describe('math.min');\n  assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(min) === 1);\n  describe('math.round');\n  assert(round(0.5) === 1);\n  assert(round(-0.5) === 0);\n};\n\nvar math = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testMath: testMath\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testNumber = tc => {\n  describe('isNaN');\n  assert(isNaN(NaN));\n  assert(!isNaN(1 / 0));\n  // @ts-ignore\n  assert(isNaN('a' / 0));\n  assert(!isNaN(0));\n  describe('isInteger');\n  assert(!isInteger(1 / 0));\n  assert(!isInteger(NaN));\n  assert(isInteger(0));\n  assert(isInteger(-1));\n};\n\nvar number = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testNumber: testNumber\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testRepeatBase64Encoding = tc => {\n  const gen = tc.prng;\n  const barr = uint8Array(gen, 100000);\n  const copied = copyUint8Array(barr);\n  const encoded = toBase64(barr);\n  assert(encoded.constructor === String);\n  const decoded = fromBase64(encoded);\n  assert(decoded.constructor === Uint8Array);\n  assert(decoded.byteLength === barr.byteLength);\n  for (let i = 0; i < barr.length; i++) {\n    assert(barr[i] === decoded[i]);\n  }\n  compare(copied, decoded);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testAnyEncoding = tc => {\n  const obj = { val: 1, arr: [1, 2], str: '409231dtrnä' };\n  const res = decodeAny(encodeAny(obj));\n  compare(obj, res);\n};\n\nvar buffer = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testRepeatBase64Encoding: testRepeatBase64Encoding,\n  testAnyEncoding: testAnyEncoding\n});\n\n/**\n * Efficient sort implementations.\n *\n * Note: These sort implementations were created to compare different sorting algorithms in JavaScript.\n * Don't use them if you don't know what you are doing. Native Array.sort is almost always a better choice.\n *\n * @module sort\n */\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @param {number} lo\n * @param {number} hi\n * @param {function(T,T):number} compare\n */\nconst _insertionSort = (arr, lo, hi, compare) => {\n  for (let i = lo + 1; i <= hi; i++) {\n    for (let j = i; j > 0 && compare(arr[j - 1], arr[j]) > 0; j--) {\n      const tmp = arr[j];\n      arr[j] = arr[j - 1];\n      arr[j - 1] = tmp;\n    }\n  }\n};\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @param {function(T,T):number} compare\n * @return {void}\n */\nconst insertionSort = (arr, compare) => {\n  _insertionSort(arr, 0, arr.length - 1, compare);\n};\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @param {number} lo\n * @param {number} hi\n * @param {function(T,T):number} compare\n */\nconst _quickSort = (arr, lo, hi, compare) => {\n  if (hi - lo < 42) {\n    _insertionSort(arr, lo, hi, compare);\n  } else {\n    const pivot = arr[floor((lo + hi) / 2)];\n    let i = lo;\n    let j = hi;\n    while (true) {\n      while (compare(pivot, arr[i]) > 0) {\n        i++;\n      }\n      while (compare(arr[j], pivot) > 0) {\n        j--;\n      }\n      if (i >= j) {\n        break\n      }\n      // swap arr[i] with arr[j]\n      // and increment i and j\n      const arri = arr[i];\n      arr[i++] = arr[j];\n      arr[j--] = arri;\n    }\n    _quickSort(arr, lo, j, compare);\n    _quickSort(arr, j + 1, hi, compare);\n  }\n};\n\n/**\n * This algorithm beats Array.prototype.sort in Chrome only with arrays with 10 million entries.\n * In most cases [].sort will do just fine. Make sure to performance test your use-case before you\n * integrate this algorithm.\n *\n * Note that Chrome's sort is now a stable algorithm (Timsort). Quicksort is not stable.\n *\n * @template T\n * @param {Array<T>} arr\n * @param {function(T,T):number} compare\n * @return {void}\n */\nconst quicksort = (arr, compare) => {\n  _quickSort(arr, 0, arr.length - 1, compare);\n};\n\n/**\n * @template T\n * @param {t.TestCase} tc\n * @param {Array<T>} arr\n * @param {function(T,T):number} compare\n * @param {function(T):number} getVal\n */\nconst runSortTest = (tc, arr, compare, getVal) => {\n  const arrSort = arr;\n  const arrQuicksort = arr.slice();\n  const arrInsertionsort = arr.slice();\n  measureTime('Array.constructor.sort', () => {\n    arrSort.sort(compare);\n  });\n  if (arrInsertionsort.length <= 10000) {\n    measureTime('Insertionsort', () => {\n      insertionSort(arrInsertionsort, compare);\n    });\n    compareArrays(arrSort, arrInsertionsort, 'compare Insertionsort with expected result');\n  }\n  measureTime('Quicksort', () => {\n    quicksort(arrQuicksort, compare);\n  });\n  // quickSort is not stable\n  compareArrays(arrSort.map(getVal), arrQuicksort.map(getVal), 'compare Quicksort with expected result');\n};\n\n/**\n * @template T\n * @param {t.TestCase} tc\n * @param {function(number):Array<T>} createArray\n * @param {function(T,T):number} compare 0 if equal, 1 if a<b, -1 otherwise\n * @param {function(T):number} getVal\n */\nconst createSortTest = (tc, createArray, compare, getVal) => {\n  describe('sort 10 elements');\n  runSortTest(tc, createArray(10), compare, getVal);\n  describe('sort 10 elements');\n  runSortTest(tc, createArray(10), compare, getVal);\n  describe('sort 10 elements');\n  runSortTest(tc, createArray(10), compare, getVal);\n  describe('sort 50 elements');\n  runSortTest(tc, createArray(50), compare, getVal);\n  describe('sort 100 elements');\n  runSortTest(tc, createArray(100), compare, getVal);\n  describe('sort 500 elements');\n  runSortTest(tc, createArray(500), compare, getVal);\n  describe('sort 1k elements');\n  runSortTest(tc, createArray(1000), compare, getVal);\n  describe('sort 10k elements');\n  runSortTest(tc, createArray(10000), compare, getVal);\n  describe('sort 100k elements');\n  runSortTest(tc, createArray(100000), compare, getVal);\n  if (extensive) {\n    describe('sort 1M elements');\n    runSortTest(tc, createArray(1000000), compare, getVal);\n    describe('sort 10M elements');\n    runSortTest(tc, createArray(10000000), compare, getVal);\n  }\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testSortUint16 = tc => {\n  skip(!production);\n  /**\n   * @param {number} i\n   * @return {number}\n   */\n  const getVal = i => i;\n  /**\n   * @param {number} a\n   * @param {number} b\n   * @return {number}\n   */\n  const compare = (a, b) => a - b;\n  /**\n   * @param {number} len\n   * @return {Array<number>}\n   */\n  const createArray = len => Array.from(new Uint16Array(uint8Array(tc.prng, len * 2)));\n  createSortTest(tc, createArray, compare, getVal);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testSortUint32 = tc => {\n  skip(!production);\n  /**\n   * @param {number} i\n   * @return {number}\n   */\n  const getVal = i => i;\n  /**\n   * @param {number} a\n   * @param {number} b\n   * @return {number}\n   */\n  const compare = (a, b) => a - b;\n  /**\n   * @param {number} len\n   * @return {Array<number>}\n   */\n  const createArray = len => Array.from(uint32Array(tc.prng, len));\n  createSortTest(tc, createArray, compare, getVal);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testSortObjectUint32 = tc => {\n  /**\n   * @param {{index:number}} obj\n   * @return {number}\n   */\n  const getVal = obj => obj.index;\n  /**\n   * @param {{index:number}} a\n   * @param {{index:number}} b\n   * @return {number}\n   */\n  const compare = (a, b) => a.index - b.index;\n  /**\n   * @param {number} len\n   * @return {Array<{index:number}>}\n   */\n  const createArray = len => Array.from(uint32Array(tc.prng, len)).map(index => ({ index }));\n  createSortTest(tc, createArray, compare, getVal);\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testListVsArrayPerformance = tc => {\n  /**\n   * @typedef {{ val: number }} Val\n   * @typedef {{ val: Val, next: item }|null} item\n   */\n  const len = 100000;\n  measureTime('array creation', () => {\n    /**\n     * @type {Array<Val>}\n     */\n    const array = new Array(len);\n    for (let i = 0; i < len; i++) {\n      array[i] = { val: i };\n    }\n  });\n  measureTime('list creation', () => {\n    /**\n     * @type {item}\n     */\n    const listStart = { val: { val: 0 }, next: null };\n    for (let i = 1, n = listStart; i < len; i++) {\n      const next = { val: { val: i }, next: null };\n      n.next = next;\n      n = next;\n    }\n  });\n};\n\nvar sort = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testSortUint16: testSortUint16,\n  testSortUint32: testSortUint32,\n  testSortObjectUint32: testSortObjectUint32,\n  testListVsArrayPerformance: testListVsArrayPerformance\n});\n\n/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nconst decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {};\n  const urlQuerySplit = url.split('?');\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    const item = pairs[i];\n    if (item.length > 0) {\n      const pair = item.split('=');\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n  }\n  return query\n};\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nconst encodeQueryParams = params =>\n  map$1(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');\n\n/**\n * @param {Object<string,any>} params\n */\nconst paramTest = params => {\n  const out = decodeQueryParams(encodeQueryParams(params));\n  compareObjects(params, out, 'Compare params');\n};\n\n/**\n * @param {t.TestCase} tc\n */\nconst testUrlParamQuery = tc => {\n  paramTest({});\n  paramTest({ a: '4' });\n  paramTest({ a: 'dtrn', b: '0x0' });\n\n  compareObjects({ }, decodeQueryParams('http://localhost:8080/dtrn?'));\n  compareObjects({ a: 'ay' }, decodeQueryParams('http://localhost:8080/dtrn?a=ay'));\n  compareObjects({ a: '' }, decodeQueryParams('http://localhost:8080/dtrn?a='));\n  compareObjects({ a: '' }, decodeQueryParams('http://localhost:8080/dtrn?a'));\n  compareObjects({ a: 'ay' }, decodeQueryParams('http://localhost:8080/dtrn?a=ay&'));\n  compareObjects({ a: 'ay', b: 'bey' }, decodeQueryParams('http://localhost:8080/dtrn?a=ay&b=bey'));\n};\n\nvar url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testUrlParamQuery: testUrlParamQuery\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testMetricPrefix = tc => {\n  compare(prefix(0), { n: 0, prefix: '' });\n  compare(prefix(1, -1), { n: 1, prefix: 'm' });\n  compare(prefix(1.5), { n: 1.5, prefix: '' });\n  compare(prefix(100.5), { n: 100.5, prefix: '' });\n  compare(prefix(1000.5), { n: 1.0005, prefix: 'k' });\n  compare(prefix(0.3), { n: 300, prefix: 'm' });\n  compare(prefix(0.001), { n: 1, prefix: 'm' });\n  // up\n  compare(prefix(10000), { n: 10, prefix: 'k' });\n  compare(prefix(1e7), { n: 10, prefix: 'M' });\n  compare(prefix(1e11), { n: 100, prefix: 'G' });\n  compare(prefix(1e12 + 3), { n: (1e12 + 3) / 1e12, prefix: 'T' });\n  compare(prefix(1e15), { n: 1, prefix: 'P' });\n  compare(prefix(1e20), { n: 100, prefix: 'E' });\n  compare(prefix(1e22), { n: 10, prefix: 'Z' });\n  compare(prefix(1e24), { n: 1, prefix: 'Y' });\n  compare(prefix(1e28), { n: 10000, prefix: 'Y' });\n  // down\n  compare(prefix(0.01), { n: 10, prefix: 'm' });\n  compare(prefix(1e-4), { n: 100, prefix: 'μ' });\n  compare(prefix(1e-9), { n: 1, prefix: 'n' });\n  compare(prefix(1e-12), { n: 1, prefix: 'p' });\n  compare(prefix(1e-14), { n: 10, prefix: 'f' });\n  compare(prefix(1e-18), { n: 1, prefix: 'a' });\n  compare(prefix(1e-21), { n: 1, prefix: 'z' });\n  compare(prefix(1e-22), { n: 100, prefix: 'y' });\n  compare(prefix(1e-30), { n: 0.000001, prefix: 'y' });\n};\n\nvar metric = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testMetricPrefix: testMetricPrefix\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testDeepEquality = tc => {\n  assert(equalityDeep(1, 1));\n  assert(!equalityDeep(1, 2));\n  assert(!equalityDeep(1, '1'));\n  assert(!equalityDeep(1, null));\n\n  const obj = { b: 5 };\n  const map1 = new Map();\n  const map2 = new Map();\n  const map3 = new Map();\n  const map4 = new Map();\n  map1.set('a', obj);\n  map2.set('a', { b: 5 });\n  map3.set('b', obj);\n  map4.set('a', obj);\n  map4.set('b', obj);\n\n  assert(equalityDeep({ a: 4 }, { a: 4 }));\n  assert(equalityDeep({ a: 4, obj: { b: 5 } }, { a: 4, obj }));\n  assert(!equalityDeep({ a: 4 }, { a: 4, obj }));\n  assert(equalityDeep({ a: [], obj }, { a: [], obj }));\n  assert(!equalityDeep({ a: [], obj }, { a: [], obj: undefined }));\n\n  assert(equalityDeep({}, {}));\n  assert(!equalityDeep({}, { a: 4 }));\n\n  assert(equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1]));\n  assert(!equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 2]));\n  assert(!equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1, 3]));\n  assert(equalityDeep([], []));\n  assert(!equalityDeep([1], []));\n\n  assert(equalityDeep(map1, map2));\n  assert(!equalityDeep(map1, map3));\n  assert(!equalityDeep(map1, map4));\n\n  const set1 = new Set([1]);\n  const set2 = new Set([true]);\n  const set3 = new Set([1, true]);\n  const set4 = new Set([true]);\n\n  assert(equalityDeep(set2, set4));\n  assert(!equalityDeep(set1, set2));\n  assert(!equalityDeep(set1, set3));\n  assert(!equalityDeep(set1, set4));\n  assert(!equalityDeep(set2, set3));\n  assert(equalityDeep(set2, set4));\n\n  const buf1 = Uint8Array.from([1, 2]);\n  const buf2 = Uint8Array.from([1, 3]);\n  const buf3 = Uint8Array.from([1, 2, 3]);\n  const buf4 = Uint8Array.from([1, 2]);\n\n  assert(!equalityDeep(buf1, buf2));\n  assert(!equalityDeep(buf2, buf3));\n  assert(!equalityDeep(buf3, buf4));\n  assert(equalityDeep(buf4, buf1));\n\n  assert(!equalityDeep(buf1.buffer, buf2.buffer));\n  assert(!equalityDeep(buf2.buffer, buf3.buffer));\n  assert(!equalityDeep(buf3.buffer, buf4.buffer));\n  assert(equalityDeep(buf4.buffer, buf1.buffer));\n\n  assert(!equalityDeep(buf1, buf4.buffer));\n};\n\nvar func = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testDeepEquality: testDeepEquality\n});\n\n/**\n * @param {t.TestCase} tc\n */\nconst testStorageModule = tc => {\n  const s = varStorage;\n  /**\n   * @type {any}\n   */\n  let lastEvent = null;\n  onChange(event => {\n    lastEvent = event;\n  });\n  s.setItem('key', 'value');\n  assert(lastEvent === null);\n};\n\nvar storage = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  testStorageModule: testStorageModule\n});\n\n/* istanbul ignore if */\nif (isBrowser) {\n  createVConsole(document.body);\n}\n\nrunTests({\n  array,\n  logging,\n  string,\n  encoding,\n  diff,\n  testing,\n  indexeddb,\n  prng,\n  statistics,\n  binary,\n  random,\n  promise,\n  queue,\n  map,\n  eventloop,\n  time,\n  pair,\n  object,\n  math,\n  number,\n  buffer,\n  sort,\n  url,\n  metric,\n  func,\n  storage\n}).then(success => {\n  /* istanbul ignore next */\n  if (isNode) {\n    process.exit(success ? 0 : 1);\n  }\n});\n///# sourceMappingURL=test.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/test.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/test.cjs.map":{"text":"{\"version\":3,\"file\":\"test.cjs\",\"sources\":[\"../map.js\",\"../string.js\",\"../conditions.js\",\"../storage.js\",\"../environment.js\",\"../symbol.js\",\"../pair.js\",\"../dom.js\",\"../json.js\",\"../eventloop.js\",\"../math.js\",\"../metric.js\",\"../time.js\",\"../array.js\",\"../object.js\",\"../function.js\",\"../logging.js\",\"../diff.js\",\"../random.js\",\"../binary.js\",\"../prng/Xorshift32.js\",\"../prng/Xoroshiro128plus.js\",\"../number.js\",\"../encoding.js\",\"../decoding.js\",\"../buffer.js\",\"../prng.js\",\"../statistics.js\",\"../promise.js\",\"../testing.js\",\"../array.test.js\",\"../logging.test.js\",\"../string.test.js\",\"../encoding.test.js\",\"../diff.test.js\",\"../testing.test.js\",\"../error.js\",\"../indexeddb.js\",\"../indexeddb.test.js\",\"../prng/Mt19937.js\",\"../prng.test.js\",\"../statistics.test.js\",\"../binary.test.js\",\"../random.test.js\",\"../promise.test.js\",\"../queue.js\",\"../queue.test.js\",\"../map.test.js\",\"../eventloop.test.js\",\"../time.test.js\",\"../pair.test.js\",\"../object.test.js\",\"../math.test.js\",\"../number.test.js\",\"../buffer.test.js\",\"../sort.js\",\"../sort.test.js\",\"../url.js\",\"../url.test.js\",\"../metric.test.js\",\"../function.test.js\",\"../storage.test.js\",\"../test.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with key-value stores.\\n *\\n * @module map\\n */\\n\\n/**\\n * Creates a new Map instance.\\n *\\n * @function\\n * @return {Map<any, any>}\\n *\\n * @function\\n */\\nexport const create = () => new Map()\\n\\n/**\\n * Copy a Map object into a fresh Map object.\\n *\\n * @function\\n * @template X,Y\\n * @param {Map<X,Y>} m\\n * @return {Map<X,Y>}\\n */\\nexport const copy = m => {\\n  const r = create()\\n  m.forEach((v, k) => { r.set(k, v) })\\n  return r\\n}\\n\\n/**\\n * Get map property. Create T if property is undefined and set T on map.\\n *\\n * ```js\\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\\n * listeners.add(listener)\\n * ```\\n *\\n * @function\\n * @template T,K\\n * @param {Map<K, T>} map\\n * @param {K} key\\n * @param {function():T} createT\\n * @return {T}\\n */\\nexport const setIfUndefined = (map, key, createT) => {\\n  let set = map.get(key)\\n  if (set === undefined) {\\n    map.set(key, set = createT())\\n  }\\n  return set\\n}\\n\\n/**\\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\\n *\\n * @function\\n * @template K\\n * @template V\\n * @template R\\n * @param {Map<K,V>} m\\n * @param {function(V,K):R} f\\n * @return {Array<R>}\\n */\\nexport const map = (m, f) => {\\n  const res = []\\n  for (const [key, value] of m) {\\n    res.push(f(value, key))\\n  }\\n  return res\\n}\\n\\n/**\\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\\n *\\n * @todo should rename to some - similarly to Array.some\\n *\\n * @function\\n * @template K\\n * @template V\\n * @param {Map<K,V>} m\\n * @param {function(V,K):boolean} f\\n * @return {boolean}\\n */\\nexport const any = (m, f) => {\\n  for (const [key, value] of m) {\\n    if (f(value, key)) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\n/**\\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\\n *\\n * @function\\n * @template K\\n * @template V\\n * @param {Map<K,V>} m\\n * @param {function(V,K):boolean} f\\n * @return {boolean}\\n */\\nexport const all = (m, f) => {\\n  for (const [key, value] of m) {\\n    if (!f(value, key)) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\",\"/**\\n * Utility module to work with strings.\\n *\\n * @module string\\n */\\n\\nexport const fromCharCode = String.fromCharCode\\nexport const fromCodePoint = String.fromCodePoint\\n\\n/**\\n * @param {string} s\\n * @return {string}\\n */\\nconst toLowerCase = s => s.toLowerCase()\\n\\nconst trimLeftRegex = /^\\\\s*/g\\n\\n/**\\n * @param {string} s\\n * @return {string}\\n */\\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\\n\\nconst fromCamelCaseRegex = /([A-Z])/g\\n\\n/**\\n * @param {string} s\\n * @param {string} separator\\n * @return {string}\\n */\\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\\n\\n/**\\n * Compute the utf8ByteLength\\n * @param {string} str\\n * @return {number}\\n */\\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\nexport const _encodeUtf8Polyfill = str => {\\n  const encodedString = unescape(encodeURIComponent(str))\\n  const len = encodedString.length\\n  const buf = new Uint8Array(len)\\n  for (let i = 0; i < len; i++) {\\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\\n  }\\n  return buf\\n}\\n\\n/* istanbul ignore next */\\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\n/* istanbul ignore next */\\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\nexport const _decodeUtf8Polyfill = buf => {\\n  let remainingLen = buf.length\\n  let encodedString = ''\\n  let bufPos = 0\\n  while (remainingLen > 0) {\\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\\n    bufPos += nextLen\\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\\n    remainingLen -= nextLen\\n  }\\n  return decodeURIComponent(escape(encodedString))\\n}\\n\\n/* istanbul ignore next */\\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\\n\\n/* istanbul ignore next */\\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\\n  // Safari doesn't handle BOM correctly.\\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\\n  // Another issue is that from then on no BOM chars are recognized anymore\\n  /* istanbul ignore next */\\n  utf8TextDecoder = null\\n}\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\\n\",\"/**\\n * Often used conditions.\\n *\\n * @module conditions\\n */\\n\\n/**\\n * @template T\\n * @param {T|null|undefined} v\\n * @return {T|null}\\n */\\n/* istanbul ignore next */\\nexport const undefinedToNull = v => v === undefined ? null : v\\n\",\"/* global localStorage, addEventListener */\\n\\n/**\\n * Isomorphic variable storage.\\n *\\n * Uses LocalStorage in the browser and falls back to in-memory storage.\\n *\\n * @module storage\\n */\\n\\n/* istanbul ignore next */\\nclass VarStoragePolyfill {\\n  constructor () {\\n    this.map = new Map()\\n  }\\n\\n  /**\\n   * @param {string} key\\n   * @param {any} newValue\\n   */\\n  setItem (key, newValue) {\\n    this.map.set(key, newValue)\\n  }\\n\\n  /**\\n   * @param {string} key\\n   */\\n  getItem (key) {\\n    return this.map.get(key)\\n  }\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @type {any}\\n */\\nlet _localStorage = new VarStoragePolyfill()\\nlet usePolyfill = true\\n\\ntry {\\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\\n  /* istanbul ignore next */\\n  if (typeof localStorage !== 'undefined') {\\n    _localStorage = localStorage\\n    usePolyfill = false\\n  }\\n} catch (e) { }\\n\\n/* istanbul ignore next */\\n/**\\n * This is basically localStorage in browser, or a polyfill in nodejs\\n */\\nexport const varStorage = _localStorage\\n\\n/* istanbul ignore next */\\n/**\\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\\n *\\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\\n * @function\\n */\\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\\n\",\"/**\\n * Isomorphic module to work access the environment (query params, env variables).\\n *\\n * @module map\\n */\\n\\nimport * as map from './map.js'\\nimport * as string from './string.js'\\nimport * as conditions from './conditions.js'\\nimport * as storage from './storage.js'\\n\\n/* istanbul ignore next */\\n// @ts-ignore\\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\\\.js/.test(process.release.name)\\n/* istanbul ignore next */\\nexport const isBrowser = typeof window !== 'undefined' && !isNode\\n/* istanbul ignore next */\\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\\n\\n/**\\n * @type {Map<string,string>}\\n */\\nlet params\\nconst args = []\\n\\n/* istanbul ignore next */\\nconst computeParams = () => {\\n  if (params === undefined) {\\n    if (isNode) {\\n      params = map.create()\\n      const pargs = process.argv\\n      let currParamName = null\\n      /* istanbul ignore next */\\n      for (let i = 0; i < pargs.length; i++) {\\n        const parg = pargs[i]\\n        if (parg[0] === '-') {\\n          if (currParamName !== null) {\\n            params.set(currParamName, '')\\n          }\\n          currParamName = parg\\n        } else {\\n          if (currParamName !== null) {\\n            params.set(currParamName, parg)\\n            currParamName = null\\n          } else {\\n            args.push(parg)\\n          }\\n        }\\n      }\\n      if (currParamName !== null) {\\n        params.set(currParamName, '')\\n      }\\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\\n    } else if (typeof location === 'object') {\\n      params = map.create()\\n      // eslint-disable-next-line no-undef\\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\\n        if (kv.length !== 0) {\\n          const [key, value] = kv.split('=')\\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\\n        }\\n      })\\n    } else {\\n      params = map.create()\\n    }\\n  }\\n  return params\\n}\\n\\n/**\\n * @param {string} name\\n * @return {boolean}\\n */\\n/* istanbul ignore next */\\nexport const hasParam = name => computeParams().has(name)\\n\\n/**\\n * @param {string} name\\n * @param {string} defaultVal\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\\n// export const getArgs = name => computeParams() && args\\n\\n/**\\n * @param {string} name\\n * @return {string|null}\\n */\\n/* istanbul ignore next */\\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\\n\\n/**\\n * @param {string} name\\n * @return {string|null}\\n */\\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\\n\\n/**\\n * @param {string} name\\n * @return {boolean}\\n */\\n/* istanbul ignore next */\\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\\n\\n/* istanbul ignore next */\\nexport const production = hasConf('production')\\n\",\"/**\\n * Utility module to work with EcmaScript Symbols.\\n *\\n * @module symbol\\n */\\n\\n/**\\n * Return fresh symbol.\\n *\\n * @return {Symbol}\\n */\\nexport const create = Symbol\\n\\n/**\\n * @param {any} s\\n * @return {boolean}\\n */\\nexport const isSymbol = s => typeof s === 'symbol'\\n\",\"/**\\n * Working with value pairs.\\n *\\n * @module pair\\n */\\n\\n/**\\n * @template L,R\\n */\\nexport class Pair {\\n  /**\\n   * @param {L} left\\n   * @param {R} right\\n   */\\n  constructor (left, right) {\\n    this.left = left\\n    this.right = right\\n  }\\n}\\n\\n/**\\n * @template L,R\\n * @param {L} left\\n * @param {R} right\\n * @return {Pair<L,R>}\\n */\\nexport const create = (left, right) => new Pair(left, right)\\n\\n/**\\n * @template L,R\\n * @param {R} right\\n * @param {L} left\\n * @return {Pair<L,R>}\\n */\\nexport const createReversed = (right, left) => new Pair(left, right)\\n\\n/**\\n * @template L,R\\n * @param {Array<Pair<L,R>>} arr\\n * @param {function(L, R):any} f\\n */\\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\\n\\n/**\\n * @template L,R,X\\n * @param {Array<Pair<L,R>>} arr\\n * @param {function(L, R):X} f\\n * @return {Array<X>}\\n */\\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\\n\",\"/* eslint-env browser */\\n\\n/**\\n * Utility module to work with the DOM.\\n *\\n * @module dom\\n */\\n\\nimport * as pair from './pair.js'\\nimport * as map from './map.js'\\n\\n/* istanbul ignore next */\\n/**\\n * @type {Document}\\n */\\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\\n\\n/**\\n * @param {string} name\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const createElement = name => doc.createElement(name)\\n\\n/**\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const createDocumentFragment = () => doc.createDocumentFragment()\\n\\n/**\\n * @param {string} text\\n * @return {Text}\\n */\\n/* istanbul ignore next */\\nexport const createTextNode = text => doc.createTextNode(text)\\n\\n/* istanbul ignore next */\\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\\n\\n/**\\n * @param {HTMLElement} el\\n * @param {string} name\\n * @param {Object} opts\\n */\\n/* istanbul ignore next */\\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\\n\\n/**\\n * @param {Element} el\\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const setAttributes = (el, attrs) => {\\n  pair.forEach(attrs, (key, value) => {\\n    if (value === false) {\\n      el.removeAttribute(key)\\n    } else if (value === true) {\\n      el.setAttribute(key, '')\\n    } else {\\n      // @ts-ignore\\n      el.setAttribute(key, value)\\n    }\\n  })\\n  return el\\n}\\n\\n/**\\n * @param {Element} el\\n * @param {Map<string, string>} attrs Array of key-value pairs\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const setAttributesMap = (el, attrs) => {\\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\\n  return el\\n}\\n\\n/**\\n * @param {Array<Node>|HTMLCollection} children\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const fragment = children => {\\n  const fragment = createDocumentFragment()\\n  for (let i = 0; i < children.length; i++) {\\n    appendChild(fragment, children[i])\\n  }\\n  return fragment\\n}\\n\\n/**\\n * @param {Element} parent\\n * @param {Array<Node>} nodes\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const append = (parent, nodes) => {\\n  appendChild(parent, fragment(nodes))\\n  return parent\\n}\\n\\n/**\\n * @param {HTMLElement} el\\n */\\n/* istanbul ignore next */\\nexport const remove = el => el.remove()\\n\\n/**\\n * @param {EventTarget} el\\n * @param {string} name\\n * @param {EventListener} f\\n */\\n/* istanbul ignore next */\\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\\n\\n/**\\n * @param {EventTarget} el\\n * @param {string} name\\n * @param {EventListener} f\\n */\\n/* istanbul ignore next */\\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\\n\\n/**\\n * @param {Node} node\\n * @param {Array<pair.Pair<string,EventListener>>} listeners\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const addEventListeners = (node, listeners) => {\\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\\n  return node\\n}\\n\\n/**\\n * @param {Node} node\\n * @param {Array<pair.Pair<string,EventListener>>} listeners\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const removeEventListeners = (node, listeners) => {\\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\\n  return node\\n}\\n\\n/**\\n * @param {string} name\\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\\n * @param {Array<Node>} children\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const element = (name, attrs = [], children = []) =>\\n  append(setAttributes(createElement(name), attrs), children)\\n\\n/**\\n * @param {number} width\\n * @param {number} height\\n */\\n/* istanbul ignore next */\\nexport const canvas = (width, height) => {\\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\\n  c.height = height\\n  c.width = width\\n  return c\\n}\\n\\n/**\\n * @param {string} t\\n * @return {Text}\\n */\\n/* istanbul ignore next */\\nexport const text = createTextNode\\n\\n/**\\n * @param {pair.Pair<string,string>} pair\\n */\\n/* istanbul ignore next */\\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\\n\\n/**\\n * @param {Array<pair.Pair<string,string>>} pairs\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\\n\\n/**\\n * @param {Map<string,string>} m\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\\n\\n/**\\n * @todo should always query on a dom element\\n *\\n * @param {HTMLElement|ShadowRoot} el\\n * @param {string} query\\n * @return {HTMLElement | null}\\n */\\n/* istanbul ignore next */\\nexport const querySelector = (el, query) => el.querySelector(query)\\n\\n/**\\n * @param {HTMLElement|ShadowRoot} el\\n * @param {string} query\\n * @return {NodeListOf<HTMLElement>}\\n */\\n/* istanbul ignore next */\\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\\n\\n/**\\n * @param {string} id\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\\n\\n/**\\n * @param {string} html\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\\n\\n/**\\n * @param {string} html\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\\n\\n/**\\n * @param {string} html\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\\n\\n/**\\n * @param {HTMLElement} oldEl\\n * @param {HTMLElement|DocumentFragment} newEl\\n */\\n/* istanbul ignore next */\\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\\n\\n/**\\n * @param {HTMLElement} parent\\n * @param {HTMLElement} el\\n * @param {Node|null} ref\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\\n\\n/**\\n * @param {Node} parent\\n * @param {Node} child\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const appendChild = (parent, child) => parent.appendChild(child)\\n\\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\\nexport const TEXT_NODE = doc.TEXT_NODE\\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\\nexport const COMMENT_NODE = doc.COMMENT_NODE\\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\\n\\n/**\\n * @param {any} node\\n * @param {number} type\\n */\\nexport const checkNodeType = (node, type) => node.nodeType === type\\n\\n/**\\n * @param {Node} parent\\n * @param {HTMLElement} child\\n */\\nexport const isParentOf = (parent, child) => {\\n  let p = child.parentNode\\n  while (p && p !== parent) {\\n    p = p.parentNode\\n  }\\n  return p === parent\\n}\\n\",\"/**\\n * JSON utility functions.\\n *\\n * @module json\\n */\\n\\n/**\\n * Transform JavaScript object to JSON.\\n *\\n * @param {any} object\\n * @return {string}\\n */\\nexport const stringify = JSON.stringify\\n\\n/**\\n * Parse JSON object.\\n *\\n * @param {string} json\\n * @return {any}\\n */\\nexport const parse = JSON.parse\\n\",\"/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\\n\\n/**\\n * Utility module to work with EcmaScript's event loop.\\n *\\n * @module eventloop\\n */\\n\\n/**\\n * @type {Array<function>}\\n */\\nlet queue = []\\n\\nconst _runQueue = () => {\\n  for (let i = 0; i < queue.length; i++) {\\n    queue[i]()\\n  }\\n  queue = []\\n}\\n\\n/**\\n * @param {function():void} f\\n */\\nexport const enqueue = f => {\\n  queue.push(f)\\n  if (queue.length === 1) {\\n    setTimeout(_runQueue, 0)\\n  }\\n}\\n\\n/**\\n * @typedef {Object} TimeoutObject\\n * @property {function} TimeoutObject.destroy\\n */\\n\\n/**\\n * @param {function(number):void} clearFunction\\n */\\nconst createTimeoutClass = clearFunction => class TT {\\n  /**\\n   * @param {number} timeoutId\\n   */\\n  constructor (timeoutId) {\\n    this._ = timeoutId\\n  }\\n\\n  destroy () {\\n    clearFunction(this._)\\n  }\\n}\\n\\nconst Timeout = createTimeoutClass(clearTimeout)\\n\\n/**\\n * @param {number} timeout\\n * @param {function} callback\\n * @return {TimeoutObject}\\n */\\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\\n\\nconst Interval = createTimeoutClass(clearInterval)\\n\\n/**\\n * @param {number} timeout\\n * @param {function} callback\\n * @return {TimeoutObject}\\n */\\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\\n\\n/* istanbul ignore next */\\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\\n\\n/* istanbul ignore next */\\n/**\\n * @param {function(number):void} cb\\n * @return {TimeoutObject}\\n */\\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\\n\\n/* istanbul ignore next */\\n// @ts-ignore\\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\\n\\n/* istanbul ignore next */\\n/**\\n * Note: this is experimental and is probably only useful in browsers.\\n *\\n * @param {function} cb\\n * @return {TimeoutObject}\\n */\\n// @ts-ignore\\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\\n\\n/**\\n * @param {number} timeout Timeout of the debounce action\\n * @return {function(function():void):void}\\n */\\nexport const createDebouncer = timeout => {\\n  let timer = -1\\n  return f => {\\n    clearTimeout(timer)\\n    if (f) {\\n      timer = /** @type {any} */ (setTimeout(f, timeout))\\n    }\\n  }\\n}\\n\",\"/**\\n * Common Math expressions.\\n *\\n * @module math\\n */\\n\\nexport const floor = Math.floor\\nexport const ceil = Math.ceil\\nexport const abs = Math.abs\\nexport const imul = Math.imul\\nexport const round = Math.round\\nexport const log10 = Math.log10\\nexport const log2 = Math.log2\\nexport const log = Math.log\\nexport const sqrt = Math.sqrt\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The sum of a and b\\n */\\nexport const add = (a, b) => a + b\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The smaller element of a and b\\n */\\nexport const min = (a, b) => a < b ? a : b\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The bigger element of a and b\\n */\\nexport const max = (a, b) => a > b ? a : b\\n\\nexport const isNaN = Number.isNaN\\n\\nexport const pow = Math.pow\\n/**\\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\\n *\\n * @param {number} exp\\n * @return {number}\\n */\\nexport const exp10 = exp => Math.pow(10, exp)\\n\\nexport const sign = Math.sign\\n\\n/**\\n * @param {number} n\\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\\n */\\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\\n\",\"/**\\n * Utility module to convert metric values.\\n *\\n * @module metric\\n */\\n\\nimport * as math from './math.js'\\n\\nexport const yotta = 1e24\\nexport const zetta = 1e21\\nexport const exa = 1e18\\nexport const peta = 1e15\\nexport const tera = 1e12\\nexport const giga = 1e9\\nexport const mega = 1e6\\nexport const kilo = 1e3\\nexport const hecto = 1e2\\nexport const deca = 10\\nexport const deci = 0.1\\nexport const centi = 0.01\\nexport const milli = 1e-3\\nexport const micro = 1e-6\\nexport const nano = 1e-9\\nexport const pico = 1e-12\\nexport const femto = 1e-15\\nexport const atto = 1e-18\\nexport const zepto = 1e-21\\nexport const yocto = 1e-24\\n\\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\\n\\n/**\\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\\n *\\n * @param {number} n\\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\\n * @return {{n:number,prefix:string}}\\n */\\nexport const prefix = (n, baseMultiplier = 0) => {\\n  const nPow = n === 0 ? 0 : math.log10(n)\\n  let mult = 0\\n  while (nPow < mult * 3 && baseMultiplier > -8) {\\n    baseMultiplier--\\n    mult--\\n  }\\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\\n    baseMultiplier++\\n    mult++\\n  }\\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\\n  return {\\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\\n    prefix\\n  }\\n}\\n\",\"/**\\n * Utility module to work with time.\\n *\\n * @module time\\n */\\n\\nimport * as metric from './metric.js'\\nimport * as math from './math.js'\\n\\n/**\\n * Return current time.\\n *\\n * @return {Date}\\n */\\nexport const getDate = () => new Date()\\n\\n/**\\n * Return current unix time.\\n *\\n * @return {number}\\n */\\nexport const getUnixTime = Date.now\\n\\n/**\\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\\n *\\n * @param {number} d duration in milliseconds\\n * @return {string} humanized approximation of time\\n */\\nexport const humanizeDuration = d => {\\n  if (d < 60000) {\\n    const p = metric.prefix(d, -1)\\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\\n  }\\n  d = math.floor(d / 1000)\\n  const seconds = d % 60\\n  const minutes = math.floor(d / 60) % 60\\n  const hours = math.floor(d / 3600) % 24\\n  const days = math.floor(d / 86400)\\n  if (days > 0) {\\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\\n  }\\n  if (hours > 0) {\\n    /* istanbul ignore next */\\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\\n  }\\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\\n}\\n\",\"/**\\n * Utility module to work with Arrays.\\n *\\n * @module array\\n */\\n\\n/**\\n * Return the last element of an array. The element must exist\\n *\\n * @template L\\n * @param {Array<L>} arr\\n * @return {L}\\n */\\nexport const last = arr => arr[arr.length - 1]\\n\\n/**\\n * @template C\\n * @return {Array<C>}\\n */\\nexport const create = () => /** @type {Array<C>} */ ([])\\n\\n/**\\n * @template D\\n * @param {Array<D>} a\\n * @return {Array<D>}\\n */\\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\\n\\n/**\\n * Append elements from src to dest\\n *\\n * @template M\\n * @param {Array<M>} dest\\n * @param {Array<M>} src\\n */\\nexport const appendTo = (dest, src) => {\\n  for (let i = 0; i < src.length; i++) {\\n    dest.push(src[i])\\n  }\\n}\\n\\n/**\\n * Transforms something array-like to an actual Array.\\n *\\n * @function\\n * @template T\\n * @param {ArrayLike<T>|Iterable<T>} arraylike\\n * @return {T}\\n */\\nexport const from = Array.from\\n\\n/**\\n * True iff condition holds on every element in the Array.\\n *\\n * @function\\n * @template ITEM\\n *\\n * @param {Array<ITEM>} arr\\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\\n * @return {boolean}\\n */\\nexport const every = (arr, f) => arr.every(f)\\n\\n/**\\n * True iff condition holds on some element in the Array.\\n *\\n * @function\\n * @template S\\n * @param {Array<S>} arr\\n * @param {function(S, number, Array<S>):boolean} f\\n * @return {boolean}\\n */\\nexport const some = (arr, f) => arr.some(f)\\n\\n/**\\n * @template ELEM\\n *\\n * @param {Array<ELEM>} a\\n * @param {Array<ELEM>} b\\n * @return {boolean}\\n */\\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\\n\\n/**\\n * @template ELEM\\n * @param {Array<Array<ELEM>>} arr\\n * @return {Array<ELEM>}\\n */\\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\\n\",\"/**\\n * Utility functions for working with EcmaScript objects.\\n *\\n * @module object\\n */\\n\\n/**\\n * @return {Object<string,any>} obj\\n */\\nexport const create = () => Object.create(null)\\n\\n/**\\n * Object.assign\\n */\\nexport const assign = Object.assign\\n\\n/**\\n * @param {Object<string,any>} obj\\n */\\nexport const keys = Object.keys\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):any} f\\n */\\nexport const forEach = (obj, f) => {\\n  for (const key in obj) {\\n    f(obj[key], key)\\n  }\\n}\\n\\n/**\\n * @template R\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):R} f\\n * @return {Array<R>}\\n */\\nexport const map = (obj, f) => {\\n  const results = []\\n  for (const key in obj) {\\n    results.push(f(obj[key], key))\\n  }\\n  return results\\n}\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @return {number}\\n */\\nexport const length = obj => keys(obj).length\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):boolean} f\\n * @return {boolean}\\n */\\nexport const some = (obj, f) => {\\n  for (const key in obj) {\\n    if (f(obj[key], key)) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):boolean} f\\n * @return {boolean}\\n */\\nexport const every = (obj, f) => {\\n  for (const key in obj) {\\n    if (!f(obj[key], key)) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\\n/**\\n * Calls `Object.prototype.hasOwnProperty`.\\n *\\n * @param {any} obj\\n * @param {string|symbol} key\\n * @return {boolean}\\n */\\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\\n\\n/**\\n * @param {Object<string,any>} a\\n * @param {Object<string,any>} b\\n * @return {boolean}\\n */\\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\\n\",\"/**\\n * Common functions and function call helpers.\\n *\\n * @module function\\n */\\n\\nimport * as array from './array.js'\\nimport * as object from './object.js'\\n\\n/**\\n * Calls all functions in `fs` with args. Only throws after all functions were called.\\n *\\n * @param {Array<function>} fs\\n * @param {Array<any>} args\\n */\\nexport const callAll = (fs, args, i = 0) => {\\n  try {\\n    for (; i < fs.length; i++) {\\n      fs[i](...args)\\n    }\\n  } finally {\\n    if (i < fs.length) {\\n      callAll(fs, args, i + 1)\\n    }\\n  }\\n}\\n\\nexport const nop = () => {}\\n\\n/**\\n * @template T\\n * @param {function():T} f\\n * @return {T}\\n */\\nexport const apply = f => f()\\n\\n/**\\n * @template A\\n *\\n * @param {A} a\\n * @return {A}\\n */\\nexport const id = a => a\\n\\n/**\\n * @template T\\n *\\n * @param {T} a\\n * @param {T} b\\n * @return {boolean}\\n */\\nexport const equalityStrict = (a, b) => a === b\\n\\n/**\\n * @template T\\n *\\n * @param {Array<T>|object} a\\n * @param {Array<T>|object} b\\n * @return {boolean}\\n */\\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @return {boolean}\\n */\\nexport const equalityDeep = (a, b) => {\\n  if (a == null || b == null) {\\n    return equalityStrict(a, b)\\n  }\\n  if (a.constructor !== b.constructor) {\\n    return false\\n  }\\n  if (a === b) {\\n    return true\\n  }\\n  switch (a.constructor) {\\n    case ArrayBuffer:\\n      a = new Uint8Array(a)\\n      b = new Uint8Array(b)\\n    // eslint-disable-next-line no-fallthrough\\n    case Uint8Array: {\\n      if (a.byteLength !== b.byteLength) {\\n        return false\\n      }\\n      for (let i = 0; i < a.length; i++) {\\n        if (a[i] !== b[i]) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Set: {\\n      if (a.size !== b.size) {\\n        return false\\n      }\\n      for (const value of a) {\\n        if (!b.has(value)) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Map: {\\n      if (a.size !== b.size) {\\n        return false\\n      }\\n      for (const key of a.keys()) {\\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Object:\\n      if (object.length(a) !== object.length(b)) {\\n        return false\\n      }\\n      for (const key in a) {\\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\\n          return false\\n        }\\n      }\\n      break\\n    case Array:\\n      if (a.length !== b.length) {\\n        return false\\n      }\\n      for (let i = 0; i < a.length; i++) {\\n        if (!equalityDeep(a[i], b[i])) {\\n          return false\\n        }\\n      }\\n      break\\n    default:\\n      return false\\n  }\\n  return true\\n}\\n\",\"/**\\n * Isomorphic logging module with support for colors!\\n *\\n * @module logging\\n */\\n\\nimport * as env from './environment.js'\\nimport * as symbol from './symbol.js'\\nimport * as pair from './pair.js'\\nimport * as dom from './dom.js'\\nimport * as json from './json.js'\\nimport * as map from './map.js'\\nimport * as eventloop from './eventloop.js'\\nimport * as math from './math.js'\\nimport * as time from './time.js'\\nimport * as func from './function.js'\\n\\nexport const BOLD = symbol.create()\\nexport const UNBOLD = symbol.create()\\nexport const BLUE = symbol.create()\\nexport const GREY = symbol.create()\\nexport const GREEN = symbol.create()\\nexport const RED = symbol.create()\\nexport const PURPLE = symbol.create()\\nexport const ORANGE = symbol.create()\\nexport const UNCOLOR = symbol.create()\\n\\n/**\\n * @type {Object<Symbol,pair.Pair<string,string>>}\\n */\\nconst _browserStyleMap = {\\n  [BOLD]: pair.create('font-weight', 'bold'),\\n  [UNBOLD]: pair.create('font-weight', 'normal'),\\n  [BLUE]: pair.create('color', 'blue'),\\n  [GREEN]: pair.create('color', 'green'),\\n  [GREY]: pair.create('color', 'grey'),\\n  [RED]: pair.create('color', 'red'),\\n  [PURPLE]: pair.create('color', 'purple'),\\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\\n  [UNCOLOR]: pair.create('color', 'black')\\n}\\n\\nconst _nodeStyleMap = {\\n  [BOLD]: '\\\\u001b[1m',\\n  [UNBOLD]: '\\\\u001b[2m',\\n  [BLUE]: '\\\\x1b[34m',\\n  [GREEN]: '\\\\x1b[32m',\\n  [GREY]: '\\\\u001b[37m',\\n  [RED]: '\\\\x1b[31m',\\n  [PURPLE]: '\\\\x1b[35m',\\n  [ORANGE]: '\\\\x1b[38;5;208m',\\n  [UNCOLOR]: '\\\\x1b[0m'\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<string|object|number>}\\n */\\nconst computeBrowserLoggingArgs = args => {\\n  const strBuilder = []\\n  const styles = []\\n  const currentStyle = map.create()\\n  /**\\n   * @type {Array<string|Object|number>}\\n   */\\n  let logArgs = []\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _browserStyleMap[arg]\\n    if (style !== undefined) {\\n      currentStyle.set(style.left, style.right)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        const style = dom.mapToStyleString(currentStyle)\\n        if (i > 0 || style.length > 0) {\\n          strBuilder.push('%c' + arg)\\n          styles.push(style)\\n        } else {\\n          strBuilder.push(arg)\\n        }\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n\\n  if (i > 0) {\\n    // create logArgs with what we have so far\\n    logArgs = styles\\n    logArgs.unshift(strBuilder.join(''))\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    if (!(arg instanceof Symbol)) {\\n      logArgs.push(arg)\\n    }\\n  }\\n  return logArgs\\n}\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<string|object|number>}\\n */\\nconst computeNodeLoggingArgs = args => {\\n  const strBuilder = []\\n  const logArgs = []\\n\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _nodeStyleMap[arg]\\n    if (style !== undefined) {\\n      strBuilder.push(style)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        strBuilder.push(arg)\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n  if (i > 0) {\\n    // create logArgs with what we have so far\\n    strBuilder.push('\\\\x1b[0m')\\n    logArgs.push(strBuilder.join(''))\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    /* istanbul ignore else */\\n    if (!(arg instanceof Symbol)) {\\n      logArgs.push(arg)\\n    }\\n  }\\n  return logArgs\\n}\\n\\n/* istanbul ignore next */\\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const print = (...args) => {\\n  console.log(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.print(args))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const warn = (...args) => {\\n  console.warn(...computeLoggingArgs(args))\\n  args.unshift(ORANGE)\\n  vconsoles.forEach(vc => vc.print(args))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Error} err\\n */\\nexport const printError = err => {\\n  console.error(err)\\n  vconsoles.forEach(vc => vc.printError(err))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} url image location\\n * @param {number} height height of the image in pixel\\n */\\nexport const printImg = (url, height) => {\\n  if (env.isBrowser) {\\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\\n  }\\n  vconsoles.forEach(vc => vc.printImg(url, height))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} base64\\n * @param {number} height\\n */\\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const group = (...args) => {\\n  console.group(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.group(args))\\n}\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const groupCollapsed = (...args) => {\\n  console.groupCollapsed(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\\n}\\n\\nexport const groupEnd = () => {\\n  console.groupEnd()\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.groupEnd())\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {function():Node} createNode\\n */\\nexport const printDom = createNode =>\\n  vconsoles.forEach(vc => vc.printDom(createNode()))\\n\\n/* istanbul ignore next */\\n/**\\n * @param {HTMLCanvasElement} canvas\\n * @param {number} height\\n */\\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\\n\\nexport const vconsoles = new Set()\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<Element>}\\n */\\nconst _computeLineSpans = args => {\\n  const spans = []\\n  const currentStyle = new Map()\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _browserStyleMap[arg]\\n    if (style !== undefined) {\\n      currentStyle.set(style.left, style.right)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        // @ts-ignore\\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\\n        if (span.innerHTML === '') {\\n          span.innerHTML = '&nbsp;'\\n        }\\n        spans.push(span)\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    let content = args[i]\\n    if (!(content instanceof Symbol)) {\\n      if (content.constructor !== String && content.constructor !== Number) {\\n        content = ' ' + json.stringify(content) + ' '\\n      }\\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\\n    }\\n  }\\n  return spans\\n}\\n\\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\\n\\n/* istanbul ignore next */\\nexport class VConsole {\\n  /**\\n   * @param {Element} dom\\n   */\\n  constructor (dom) {\\n    this.dom = dom\\n    /**\\n     * @type {Element}\\n     */\\n    this.ccontainer = this.dom\\n    this.depth = 0\\n    vconsoles.add(this)\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   * @param {boolean} collapsed\\n   */\\n  group (args, collapsed = false) {\\n    eventloop.enqueue(() => {\\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\\n      const nextLine = dom.element('div', [], [content, nextContainer])\\n      dom.append(this.ccontainer, [nextLine])\\n      this.ccontainer = nextContainer\\n      this.depth++\\n      // when header is clicked, collapse/uncollapse container\\n      dom.addEventListener(content, 'click', event => {\\n        nextContainer.toggleAttribute('hidden')\\n        triangleDown.toggleAttribute('hidden')\\n        triangleRight.toggleAttribute('hidden')\\n      })\\n    })\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   */\\n  groupCollapsed (args) {\\n    this.group(args, true)\\n  }\\n\\n  groupEnd () {\\n    eventloop.enqueue(() => {\\n      if (this.depth > 0) {\\n        this.depth--\\n        // @ts-ignore\\n        this.ccontainer = this.ccontainer.parentElement.parentElement\\n      }\\n    })\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   */\\n  print (args) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\\n    })\\n  }\\n\\n  /**\\n   * @param {Error} err\\n   */\\n  printError (err) {\\n    this.print([RED, BOLD, err.toString()])\\n  }\\n\\n  /**\\n   * @param {string} url\\n   * @param {number} height\\n   */\\n  printImg (url, height) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\\n    })\\n  }\\n\\n  /**\\n   * @param {Node} node\\n   */\\n  printDom (node) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [node])\\n    })\\n  }\\n\\n  destroy () {\\n    eventloop.enqueue(() => {\\n      vconsoles.delete(this)\\n    })\\n  }\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Element} dom\\n */\\nexport const createVConsole = dom => new VConsole(dom)\\n\\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\\nlet nextColor = 0\\nlet lastLoggingTime = time.getUnixTime()\\n\\n/**\\n * @param {string} moduleName\\n * @return {function(...any):void}\\n */\\nexport const createModuleLogger = moduleName => {\\n  const color = loggingColors[nextColor]\\n  const debugRegexVar = env.getVariable('log')\\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\\n  nextColor = (nextColor + 1) % loggingColors.length\\n  moduleName += ': '\\n\\n  return !doLogging ? func.nop : (...args) => {\\n    const timeNow = time.getUnixTime()\\n    const timeDiff = timeNow - lastLoggingTime\\n    lastLoggingTime = timeNow\\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\\n  }\\n}\\n\",\"/**\\n * Efficient diffs.\\n *\\n * @module diff\\n */\\n\\nimport { equalityStrict } from './function.js'\\n\\n/**\\n * A SimpleDiff describes a change on a String.\\n *\\n * ```js\\n * console.log(a) // the old value\\n * console.log(b) // the updated value\\n * // Apply changes of diff (pseudocode)\\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\\n * a === b // values match\\n * ```\\n *\\n * @typedef {Object} SimpleDiff\\n * @property {Number} index The index where changes were applied\\n * @property {Number} remove The number of characters to delete starting\\n *                                  at `index`.\\n * @property {T} insert The new text to insert at `index` after applying\\n *                           `delete`\\n *\\n * @template T\\n */\\n\\n/**\\n * Create a diff between two strings. This diff implementation is highly\\n * efficient, but not very sophisticated.\\n *\\n * @function\\n *\\n * @param {string} a The old version of the string\\n * @param {string} b The updated version of the string\\n * @return {SimpleDiff<string>} The diff description.\\n */\\nexport const simpleDiffString = (a, b) => {\\n  let left = 0 // number of same characters counting from left\\n  let right = 0 // number of same characters counting from right\\n  while (left < a.length && left < b.length && a[left] === b[left]) {\\n    left++\\n  }\\n  if (left !== a.length || left !== b.length) {\\n    // Only check right if a !== b\\n    while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\\n      right++\\n    }\\n  }\\n  return {\\n    index: left,\\n    remove: a.length - left - right,\\n    insert: b.slice(left, b.length - right)\\n  }\\n}\\n\\n/**\\n * @todo Remove in favor of simpleDiffString\\n * @deprecated\\n */\\nexport const simpleDiff = simpleDiffString\\n\\n/**\\n * Create a diff between two arrays. This diff implementation is highly\\n * efficient, but not very sophisticated.\\n *\\n * Note: This is basically the same function as above. Another function was created so that the runtime\\n * can better optimize these function calls.\\n *\\n * @function\\n * @template T\\n *\\n * @param {Array<T>} a The old version of the array\\n * @param {Array<T>} b The updated version of the array\\n * @param {function(T, T):boolean} [compare]\\n * @return {SimpleDiff<Array<T>>} The diff description.\\n */\\nexport const simpleDiffArray = (a, b, compare = equalityStrict) => {\\n  let left = 0 // number of same characters counting from left\\n  let right = 0 // number of same characters counting from right\\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\\n    left++\\n  }\\n  if (left !== a.length || left !== b.length) {\\n    // Only check right if a !== b\\n    while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\\n      right++\\n    }\\n  }\\n  return {\\n    index: left,\\n    remove: a.length - left - right,\\n    insert: b.slice(left, b.length - right)\\n  }\\n}\\n\",\"\\n/**\\n * Isomorphic module for true random numbers / buffers / uuids.\\n *\\n * Attention: falls back to Math.random if the browser does not support crypto.\\n *\\n * @module random\\n */\\n\\nimport * as math from './math.js'\\nimport { cryptoRandomBuffer } from './isomorphic.js'\\n\\nexport const rand = Math.random\\n\\n/* istanbul ignore next */\\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @return {T}\\n */\\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\\n\\n// @ts-ignore\\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\\n  (c ^ uint32() & 15 >> c / 4).toString(16)\\n)\\n\",\"/* eslint-env browser */\\n\\n/**\\n * Binary data constants.\\n *\\n * @module binary\\n */\\n\\n/**\\n * n-th bit activated.\\n *\\n * @type {number}\\n */\\nexport const BIT1 = 1\\nexport const BIT2 = 2\\nexport const BIT3 = 4\\nexport const BIT4 = 8\\nexport const BIT5 = 16\\nexport const BIT6 = 32\\nexport const BIT7 = 64\\nexport const BIT8 = 128\\nexport const BIT9 = 256\\nexport const BIT10 = 512\\nexport const BIT11 = 1024\\nexport const BIT12 = 2048\\nexport const BIT13 = 4096\\nexport const BIT14 = 8192\\nexport const BIT15 = 16384\\nexport const BIT16 = 32768\\nexport const BIT17 = 65536\\nexport const BIT18 = 1 << 17\\nexport const BIT19 = 1 << 18\\nexport const BIT20 = 1 << 19\\nexport const BIT21 = 1 << 20\\nexport const BIT22 = 1 << 21\\nexport const BIT23 = 1 << 22\\nexport const BIT24 = 1 << 23\\nexport const BIT25 = 1 << 24\\nexport const BIT26 = 1 << 25\\nexport const BIT27 = 1 << 26\\nexport const BIT28 = 1 << 27\\nexport const BIT29 = 1 << 28\\nexport const BIT30 = 1 << 29\\nexport const BIT31 = 1 << 30\\nexport const BIT32 = 1 << 31\\n\\n/**\\n * First n bits activated.\\n *\\n * @type {number}\\n */\\nexport const BITS0 = 0\\nexport const BITS1 = 1\\nexport const BITS2 = 3\\nexport const BITS3 = 7\\nexport const BITS4 = 15\\nexport const BITS5 = 31\\nexport const BITS6 = 63\\nexport const BITS7 = 127\\nexport const BITS8 = 255\\nexport const BITS9 = 511\\nexport const BITS10 = 1023\\nexport const BITS11 = 2047\\nexport const BITS12 = 4095\\nexport const BITS13 = 8191\\nexport const BITS14 = 16383\\nexport const BITS15 = 32767\\nexport const BITS16 = 65535\\nexport const BITS17 = BIT18 - 1\\nexport const BITS18 = BIT19 - 1\\nexport const BITS19 = BIT20 - 1\\nexport const BITS20 = BIT21 - 1\\nexport const BITS21 = BIT22 - 1\\nexport const BITS22 = BIT23 - 1\\nexport const BITS23 = BIT24 - 1\\nexport const BITS24 = BIT25 - 1\\nexport const BITS25 = BIT26 - 1\\nexport const BITS26 = BIT27 - 1\\nexport const BITS27 = BIT28 - 1\\nexport const BITS28 = BIT29 - 1\\nexport const BITS29 = BIT30 - 1\\nexport const BITS30 = BIT31 - 1\\n/**\\n * @type {number}\\n */\\nexport const BITS31 = 0x7FFFFFFF\\n/**\\n * @type {number}\\n */\\nexport const BITS32 = 0xFFFFFFFF\\n\",\"/**\\n * @module prng\\n */\\n\\nimport * as binary from '../binary.js'\\n\\n/**\\n * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\\n */\\nexport class Xorshift32 {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    /**\\n     * @type {number}\\n     */\\n    this._state = seed\\n  }\\n\\n  /**\\n   * Generate a random signed integer.\\n   *\\n   * @return {Number} A 32 bit signed integer.\\n   */\\n  next () {\\n    let x = this._state\\n    x ^= x << 13\\n    x ^= x >> 17\\n    x ^= x << 5\\n    this._state = x\\n    return (x >>> 0) / (binary.BITS32 + 1)\\n  }\\n}\\n\",\"/**\\n * @module prng\\n */\\n\\nimport { Xorshift32 } from './Xorshift32.js'\\nimport * as binary from '../binary.js'\\n\\n/**\\n * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\\n *\\n * This implementation follows the idea of the original xoroshiro128plus implementation,\\n * but is optimized for the JavaScript runtime. I.e.\\n * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\\n * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\\n * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\\n *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\\n *   first 32bit addition is not carried over to the last 32bit.\\n *\\n * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\\n */\\nexport class Xoroshiro128plus {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    // This is a variant of Xoroshiro128plus to fill the initial state\\n    const xorshift32 = new Xorshift32(seed)\\n    this.state = new Uint32Array(4)\\n    for (let i = 0; i < 4; i++) {\\n      this.state[i] = xorshift32.next() * binary.BITS32\\n    }\\n    this._fresh = true\\n  }\\n\\n  /**\\n   * @return {number} Float/Double in [0,1)\\n   */\\n  next () {\\n    const state = this.state\\n    if (this._fresh) {\\n      this._fresh = false\\n      return ((state[0] + state[2]) >>> 0) / (binary.BITS32 + 1)\\n    } else {\\n      this._fresh = true\\n      const s0 = state[0]\\n      const s1 = state[1]\\n      const s2 = state[2] ^ s0\\n      const s3 = state[3] ^ s1\\n      // function js_rotl (x, k) {\\n      //   k = k - 32\\n      //   const x1 = x[0]\\n      //   const x2 = x[1]\\n      //   x[0] = x2 << k | x1 >>> (32 - k)\\n      //   x[1] = x1 << k | x2 >>> (32 - k)\\n      // }\\n      // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\\n      state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18)\\n      state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14)\\n      // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\\n      state[2] = s3 << 4 | s2 >>> 28\\n      state[3] = s2 << 4 | s3 >>> 28\\n      return (((state[1] + state[3]) >>> 0) / (binary.BITS32 + 1))\\n    }\\n  }\\n}\\n\\n/*\\n// Reference implementation\\n// Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\\n// By David Blackman and Sebastiano Vigna\\n// Who published the reference implementation under Public Domain (CC0)\\n\\n#include <stdint.h>\\n#include <stdio.h>\\n\\nuint64_t s[2];\\n\\nstatic inline uint64_t rotl(const uint64_t x, int k) {\\n    return (x << k) | (x >> (64 - k));\\n}\\n\\nuint64_t next(void) {\\n    const uint64_t s0 = s[0];\\n    uint64_t s1 = s[1];\\n    s1 ^= s0;\\n    s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\\n    s[1] = rotl(s1, 36); // c\\n    return (s[0] + s[1]) & 0xFFFFFFFF;\\n}\\n\\nint main(void)\\n{\\n    int i;\\n    s[0] = 1111 | (1337ul << 32);\\n    s[1] = 1234 | (9999ul << 32);\\n\\n    printf(\\\"1000 outputs of genrand_int31()\\\\n\\\");\\n    for (i=0; i<100; i++) {\\n        printf(\\\"%10lu \\\", i);\\n        printf(\\\"%10lu \\\", next());\\n        printf(\\\"- %10lu \\\", s[0] >> 32);\\n        printf(\\\"%10lu \\\", (s[0] << 32) >> 32);\\n        printf(\\\"%10lu \\\", s[1] >> 32);\\n        printf(\\\"%10lu \\\", (s[1] << 32) >> 32);\\n        printf(\\\"\\\\n\\\");\\n        // if (i%5==4) printf(\\\"\\\\n\\\");\\n    }\\n    return 0;\\n}\\n*/\\n\",\"/**\\n * Utility helpers for working with numbers.\\n *\\n * @module number\\n */\\n\\nimport * as math from './math.js'\\nimport * as binary from './binary.js'\\n\\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\\n\\nexport const LOWEST_INT32 = 1 << 31\\n/**\\n * @type {number}\\n */\\nexport const HIGHEST_INT32 = binary.BITS31\\n\\n/**\\n * @module number\\n */\\n\\n/* istanbul ignore next */\\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\\nexport const isNaN = Number.isNaN\\n\",\"/**\\n * Efficient schema-less binary encoding with support for variable length encoding.\\n *\\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\\n *\\n * Encodes numbers in little-endian order (least to most significant byte order)\\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\\n * which is also used in Protocol Buffers.\\n *\\n * ```js\\n * // encoding step\\n * const encoder = new encoding.createEncoder()\\n * encoding.writeVarUint(encoder, 256)\\n * encoding.writeVarString(encoder, 'Hello world!')\\n * const buf = encoding.toUint8Array(encoder)\\n * ```\\n *\\n * ```js\\n * // decoding step\\n * const decoder = new decoding.createDecoder(buf)\\n * decoding.readVarUint(decoder) // => 256\\n * decoding.readVarString(decoder) // => 'Hello world!'\\n * decoding.hasContent(decoder) // => false - all data is read\\n * ```\\n *\\n * @module encoding\\n */\\n\\nimport * as buffer from './buffer.js'\\nimport * as math from './math.js'\\nimport * as number from './number.js'\\nimport * as binary from './binary.js'\\n\\n/**\\n * A BinaryEncoder handles the encoding to an Uint8Array.\\n */\\nexport class Encoder {\\n  constructor () {\\n    this.cpos = 0\\n    this.cbuf = new Uint8Array(100)\\n    /**\\n     * @type {Array<Uint8Array>}\\n     */\\n    this.bufs = []\\n  }\\n}\\n\\n/**\\n * @function\\n * @return {Encoder}\\n */\\nexport const createEncoder = () => new Encoder()\\n\\n/**\\n * The current length of the encoded data.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @return {number}\\n */\\nexport const length = encoder => {\\n  let len = encoder.cpos\\n  for (let i = 0; i < encoder.bufs.length; i++) {\\n    len += encoder.bufs[i].length\\n  }\\n  return len\\n}\\n\\n/**\\n * Transform to Uint8Array.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @return {Uint8Array} The created ArrayBuffer.\\n */\\nexport const toUint8Array = encoder => {\\n  const uint8arr = new Uint8Array(length(encoder))\\n  let curPos = 0\\n  for (let i = 0; i < encoder.bufs.length; i++) {\\n    const d = encoder.bufs[i]\\n    uint8arr.set(d, curPos)\\n    curPos += d.length\\n  }\\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\\n  return uint8arr\\n}\\n\\n/**\\n * Verify that it is possible to write `len` bytes wtihout checking. If\\n * necessary, a new Buffer with the required length is attached.\\n *\\n * @param {Encoder} encoder\\n * @param {number} len\\n */\\nconst verifyLen = (encoder, len) => {\\n  const bufferLen = encoder.cbuf.length\\n  if (bufferLen - encoder.cpos < len) {\\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\\n    encoder.cpos = 0\\n  }\\n}\\n\\n/**\\n * Write one byte to the encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The byte that is to be encoded.\\n */\\nexport const write = (encoder, num) => {\\n  const bufferLen = encoder.cbuf.length\\n  if (encoder.cpos === bufferLen) {\\n    encoder.bufs.push(encoder.cbuf)\\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\\n    encoder.cpos = 0\\n  }\\n  encoder.cbuf[encoder.cpos++] = num\\n}\\n\\n/**\\n * Write one byte at a specific position.\\n * Position must already be written (i.e. encoder.length > pos)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos Position to which to write data\\n * @param {number} num Unsigned 8-bit integer\\n */\\nexport const set = (encoder, pos, num) => {\\n  let buffer = null\\n  // iterate all buffers and adjust position\\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\\n    const b = encoder.bufs[i]\\n    if (pos < b.length) {\\n      buffer = b // found buffer\\n    } else {\\n      pos -= b.length\\n    }\\n  }\\n  if (buffer === null) {\\n    // use current buffer\\n    buffer = encoder.cbuf\\n  }\\n  buffer[pos] = num\\n}\\n\\n/**\\n * Write one byte as an unsigned integer.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint8 = write\\n\\n/**\\n * Write one byte as an unsigned Integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint8 = set\\n\\n/**\\n * Write two bytes as an unsigned integer.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint16 = (encoder, num) => {\\n  write(encoder, num & binary.BITS8)\\n  write(encoder, (num >>> 8) & binary.BITS8)\\n}\\n/**\\n * Write two bytes as an unsigned integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint16 = (encoder, pos, num) => {\\n  set(encoder, pos, num & binary.BITS8)\\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint32 = (encoder, num) => {\\n  for (let i = 0; i < 4; i++) {\\n    write(encoder, num & binary.BITS8)\\n    num >>>= 8\\n  }\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint32BigEndian = (encoder, num) => {\\n  for (let i = 3; i >= 0; i--) {\\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\\n  }\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint32 = (encoder, pos, num) => {\\n  for (let i = 0; i < 4; i++) {\\n    set(encoder, pos + i, num & binary.BITS8)\\n    num >>>= 8\\n  }\\n}\\n\\n/**\\n * Write a variable length unsigned integer.\\n *\\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeVarUint = (encoder, num) => {\\n  while (num > binary.BITS7) {\\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\\n    num >>>= 7\\n  }\\n  write(encoder, binary.BITS7 & num)\\n}\\n\\n/**\\n * Write a variable length integer.\\n *\\n * Encodes integers in the range from [-2147483648, -2147483647].\\n *\\n * We don't use zig-zag encoding because we want to keep the option open\\n * to use the same function for BigInt and 53bit integers (doubles).\\n *\\n * We use the 7th bit instead for signaling that this is a negative number.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeVarInt = (encoder, num) => {\\n  const isNegative = math.isNegativeZero(num)\\n  if (isNegative) {\\n    num = -num\\n  }\\n  //             |- whether to continue reading         |- whether is negative     |- number\\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\\n  num >>>= 6\\n  // We don't need to consider the case of num === 0 so we can use a different\\n  // pattern here than above.\\n  while (num > 0) {\\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\\n    num >>>= 7\\n  }\\n}\\n\\n/**\\n * Write a variable length string.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {String} str The string that is to be encoded.\\n */\\nexport const writeVarString = (encoder, str) => {\\n  const encodedString = unescape(encodeURIComponent(str))\\n  const len = encodedString.length\\n  writeVarUint(encoder, len)\\n  for (let i = 0; i < len; i++) {\\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\\n  }\\n}\\n\\n/**\\n * Write the content of another Encoder.\\n *\\n * @TODO: can be improved!\\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\\n *                Encoders start with a rather big initial buffer.\\n *\\n * @function\\n * @param {Encoder} encoder The enUint8Arr\\n * @param {Encoder} append The BinaryEncoder to be written.\\n */\\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\\n\\n/**\\n * Append fixed-length Uint8Array to the encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {Uint8Array} uint8Array\\n */\\nexport const writeUint8Array = (encoder, uint8Array) => {\\n  const bufferLen = encoder.cbuf.length\\n  const cpos = encoder.cpos\\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\\n  const rightCopyLen = uint8Array.length - leftCopyLen\\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\\n  encoder.cpos += leftCopyLen\\n  if (rightCopyLen > 0) {\\n    // Still something to write, write right half..\\n    // Append new buffer\\n    encoder.bufs.push(encoder.cbuf)\\n    // must have at least size of remaining buffer\\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\\n    // copy array\\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\\n    encoder.cpos = rightCopyLen\\n  }\\n}\\n\\n/**\\n * Append an Uint8Array to Encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {Uint8Array} uint8Array\\n */\\nexport const writeVarUint8Array = (encoder, uint8Array) => {\\n  writeVarUint(encoder, uint8Array.byteLength)\\n  writeUint8Array(encoder, uint8Array)\\n}\\n\\n/**\\n * Create an DataView of the next `len` bytes. Use it to write data after\\n * calling this function.\\n *\\n * ```js\\n * // write float32 using DataView\\n * const dv = writeOnDataView(encoder, 4)\\n * dv.setFloat32(0, 1.1)\\n * // read float32 using DataView\\n * const dv = readFromDataView(encoder, 4)\\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\\n * ```\\n *\\n * @param {Encoder} encoder\\n * @param {number} len\\n * @return {DataView}\\n */\\nexport const writeOnDataView = (encoder, len) => {\\n  verifyLen(encoder, len)\\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\\n  encoder.cpos += len\\n  return dview\\n}\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {number} num\\n */\\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {number} num\\n */\\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {bigint} num\\n */\\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {bigint} num\\n */\\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\\n\\nconst floatTestBed = new DataView(new ArrayBuffer(4))\\n/**\\n * Check if a number can be encoded as a 32 bit float.\\n *\\n * @param {number} num\\n * @return {boolean}\\n */\\nconst isFloat32 = num => {\\n  floatTestBed.setFloat32(0, num)\\n  return floatTestBed.getFloat32(0) === num\\n}\\n\\n/**\\n * Encode data with efficient binary format.\\n *\\n * Differences to JSON:\\n * • Transforms data to a binary format (not to a string)\\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\\n * • Numbers are efficiently encoded either as a variable length integer, as a\\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\\n *\\n * Encoding table:\\n *\\n * | Data Type           | Prefix   | Encoding Method    | Comment |\\n * | ------------------- | -------- | ------------------ | ------- |\\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\\n * | null                | 126      |                    | |\\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\\n * | float32             | 124      | writeFloat32       | |\\n * | float64             | 123      | writeFloat64       | |\\n * | bigint              | 122      | writeBigInt64      | |\\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\\n * | string              | 119      | writeVarString     | |\\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\\n *\\n * Reasons for the decreasing prefix:\\n * We need the first bit for extendability (later we may want to encode the\\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\\n * [0-30]   the beginning of the data range is used for custom purposes\\n *          (defined by the function that uses this library)\\n * [31-127] the end of the data range is used for data encoding by\\n *          lib0/encoding.js\\n *\\n * @param {Encoder} encoder\\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\\n */\\nexport const writeAny = (encoder, data) => {\\n  switch (typeof data) {\\n    case 'string':\\n      // TYPE 119: STRING\\n      write(encoder, 119)\\n      writeVarString(encoder, data)\\n      break\\n    case 'number':\\n      if (number.isInteger(data) && data <= binary.BITS31) {\\n        // TYPE 125: INTEGER\\n        write(encoder, 125)\\n        writeVarInt(encoder, data)\\n      } else if (isFloat32(data)) {\\n        // TYPE 124: FLOAT32\\n        write(encoder, 124)\\n        writeFloat32(encoder, data)\\n      } else {\\n        // TYPE 123: FLOAT64\\n        write(encoder, 123)\\n        writeFloat64(encoder, data)\\n      }\\n      break\\n    case 'bigint':\\n      // TYPE 122: BigInt\\n      write(encoder, 122)\\n      writeBigInt64(encoder, data)\\n      break\\n    case 'object':\\n      if (data === null) {\\n        // TYPE 126: null\\n        write(encoder, 126)\\n      } else if (data instanceof Array) {\\n        // TYPE 117: Array\\n        write(encoder, 117)\\n        writeVarUint(encoder, data.length)\\n        for (let i = 0; i < data.length; i++) {\\n          writeAny(encoder, data[i])\\n        }\\n      } else if (data instanceof Uint8Array) {\\n        // TYPE 116: ArrayBuffer\\n        write(encoder, 116)\\n        writeVarUint8Array(encoder, data)\\n      } else {\\n        // TYPE 118: Object\\n        write(encoder, 118)\\n        const keys = Object.keys(data)\\n        writeVarUint(encoder, keys.length)\\n        for (let i = 0; i < keys.length; i++) {\\n          const key = keys[i]\\n          writeVarString(encoder, key)\\n          writeAny(encoder, data[key])\\n        }\\n      }\\n      break\\n    case 'boolean':\\n      // TYPE 120/121: boolean (true/false)\\n      write(encoder, data ? 120 : 121)\\n      break\\n    default:\\n      // TYPE 127: undefined\\n      write(encoder, 127)\\n  }\\n}\\n\\n/**\\n * Now come a few stateful encoder that have their own classes.\\n */\\n\\n/**\\n * Basic Run Length Encoder - a basic compression implementation.\\n *\\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\\n *\\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\\n *\\n * @note T must not be null!\\n *\\n * @template T\\n */\\nexport class RleEncoder extends Encoder {\\n  /**\\n   * @param {function(Encoder, T):void} writer\\n   */\\n  constructor (writer) {\\n    super()\\n    /**\\n     * The writer\\n     */\\n    this.w = writer\\n    /**\\n     * Current state\\n     * @type {T|null}\\n     */\\n    this.s = null\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {T} v\\n   */\\n  write (v) {\\n    if (this.s === v) {\\n      this.count++\\n    } else {\\n      if (this.count > 0) {\\n        // flush counter, unless this is the first value (count = 0)\\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\\n      }\\n      this.count = 1\\n      // write first value\\n      this.w(this, v)\\n      this.s = v\\n    }\\n  }\\n}\\n\\n/**\\n * Basic diff decoder using variable length encoding.\\n *\\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\\n */\\nexport class IntDiffEncoder extends Encoder {\\n  /**\\n   * @param {number} start\\n   */\\n  constructor (start) {\\n    super()\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    writeVarInt(this, v - this.s)\\n    this.s = v\\n  }\\n}\\n\\n/**\\n * A combination of IntDiffEncoder and RleEncoder.\\n *\\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\\n *\\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\\n */\\nexport class RleIntDiffEncoder extends Encoder {\\n  /**\\n   * @param {number} start\\n   */\\n  constructor (start) {\\n    super()\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s === v && this.count > 0) {\\n      this.count++\\n    } else {\\n      if (this.count > 0) {\\n        // flush counter, unless this is the first value (count = 0)\\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\\n      }\\n      this.count = 1\\n      // write first value\\n      writeVarInt(this, v - this.s)\\n      this.s = v\\n    }\\n  }\\n}\\n\\n/**\\n * @param {UintOptRleEncoder} encoder\\n */\\nconst flushUintOptRleEncoder = encoder => {\\n  /* istanbul ignore else */\\n  if (encoder.count > 0) {\\n    // flush counter, unless this is the first value (count = 0)\\n    // case 1: just a single value. set sign to positive\\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\\n    if (encoder.count > 1) {\\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\\n    }\\n  }\\n}\\n\\n/**\\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\\n *\\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\\n *\\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\\n */\\nexport class UintOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s === v) {\\n      this.count++\\n    } else {\\n      flushUintOptRleEncoder(this)\\n      this.count = 1\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushUintOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * Increasing Uint Optimized RLE Encoder\\n *\\n * The RLE encoder counts the number of same occurences of the same value.\\n * The IncUintOptRle encoder counts if the value increases.\\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\\n * as [1, 3, 5].\\n */\\nexport class IncUintOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s + this.count === v) {\\n      this.count++\\n    } else {\\n      flushUintOptRleEncoder(this)\\n      this.count = 1\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushUintOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * @param {IntDiffOptRleEncoder} encoder\\n */\\nconst flushIntDiffOptRleEncoder = encoder => {\\n  if (encoder.count > 0) {\\n    //          31 bit making up the diff | wether to write the counter\\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\\n    // flush counter, unless this is the first value (count = 0)\\n    // case 1: just a single value. set first bit to positive\\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\\n    writeVarInt(encoder.encoder, encodedDiff)\\n    if (encoder.count > 1) {\\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\\n    }\\n  }\\n}\\n\\n/**\\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\\n *\\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\\n *\\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\\n *\\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\\n * * 1 bit that denotes whether the next value is a count (LSB)\\n * * 1 bit that denotes whether this value is negative (MSB - 1)\\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\\n *\\n * Therefore, only five bits remain to encode diff ranges.\\n *\\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\\n */\\nexport class IntDiffOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n    this.diff = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.diff === v - this.s) {\\n      this.s = v\\n      this.count++\\n    } else {\\n      flushIntDiffOptRleEncoder(this)\\n      this.count = 1\\n      this.diff = v - this.s\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushIntDiffOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * Optimized String Encoder.\\n *\\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\\n *\\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\\n *\\n * The lengths are encoded using a UintOptRleEncoder.\\n */\\nexport class StringEncoder {\\n  constructor () {\\n    /**\\n     * @type {Array<string>}\\n     */\\n    this.sarr = []\\n    this.s = ''\\n    this.lensE = new UintOptRleEncoder()\\n  }\\n\\n  /**\\n   * @param {string} string\\n   */\\n  write (string) {\\n    this.s += string\\n    if (this.s.length > 19) {\\n      this.sarr.push(this.s)\\n      this.s = ''\\n    }\\n    this.lensE.write(string.length)\\n  }\\n\\n  toUint8Array () {\\n    const encoder = new Encoder()\\n    this.sarr.push(this.s)\\n    this.s = ''\\n    writeVarString(encoder, this.sarr.join(''))\\n    writeUint8Array(encoder, this.lensE.toUint8Array())\\n    return toUint8Array(encoder)\\n  }\\n}\\n\",\"/**\\n * Efficient schema-less binary decoding with support for variable length encoding.\\n *\\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\\n *\\n * Encodes numbers in little-endian order (least to most significant byte order)\\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\\n * which is also used in Protocol Buffers.\\n *\\n * ```js\\n * // encoding step\\n * const encoder = new encoding.createEncoder()\\n * encoding.writeVarUint(encoder, 256)\\n * encoding.writeVarString(encoder, 'Hello world!')\\n * const buf = encoding.toUint8Array(encoder)\\n * ```\\n *\\n * ```js\\n * // decoding step\\n * const decoder = new decoding.createDecoder(buf)\\n * decoding.readVarUint(decoder) // => 256\\n * decoding.readVarString(decoder) // => 'Hello world!'\\n * decoding.hasContent(decoder) // => false - all data is read\\n * ```\\n *\\n * @module decoding\\n */\\n\\nimport * as buffer from './buffer.js'\\nimport * as binary from './binary.js'\\nimport * as math from './math.js'\\n\\n/**\\n * A Decoder handles the decoding of an Uint8Array.\\n */\\nexport class Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array Binary data to decode\\n   */\\n  constructor (uint8Array) {\\n    /**\\n     * Decoding target.\\n     *\\n     * @type {Uint8Array}\\n     */\\n    this.arr = uint8Array\\n    /**\\n     * Current decoding position.\\n     *\\n     * @type {number}\\n     */\\n    this.pos = 0\\n  }\\n}\\n\\n/**\\n * @function\\n * @param {Uint8Array} uint8Array\\n * @return {Decoder}\\n */\\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\\n\\n/**\\n * @function\\n * @param {Decoder} decoder\\n * @return {boolean}\\n */\\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\\n\\n/**\\n * Clone a decoder instance.\\n * Optionally set a new position parameter.\\n *\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @param {number} [newPos] Defaults to current position\\n * @return {Decoder} A clone of `decoder`\\n */\\nexport const clone = (decoder, newPos = decoder.pos) => {\\n  const _decoder = createDecoder(decoder.arr)\\n  _decoder.pos = newPos\\n  return _decoder\\n}\\n\\n/**\\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\\n *\\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\\n *\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @param {number} len The length of bytes to read\\n * @return {Uint8Array}\\n */\\nexport const readUint8Array = (decoder, len) => {\\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\\n  decoder.pos += len\\n  return view\\n}\\n\\n/**\\n * Read variable length Uint8Array.\\n *\\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {Uint8Array}\\n */\\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\\n\\n/**\\n * Read the rest of the content as an ArrayBuffer\\n * @function\\n * @param {Decoder} decoder\\n * @return {Uint8Array}\\n */\\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\\n\\n/**\\n * Skip one byte, jump to the next position.\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @return {number} The next position\\n */\\nexport const skip8 = decoder => decoder.pos++\\n\\n/**\\n * Read one byte as unsigned integer.\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @return {number} Unsigned 8-bit integer\\n */\\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\\n\\n/**\\n * Read 2 bytes as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint16 = decoder => {\\n  const uint =\\n    decoder.arr[decoder.pos] +\\n    (decoder.arr[decoder.pos + 1] << 8)\\n  decoder.pos += 2\\n  return uint\\n}\\n\\n/**\\n * Read 4 bytes as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint32 = decoder => {\\n  const uint =\\n    (decoder.arr[decoder.pos] +\\n    (decoder.arr[decoder.pos + 1] << 8) +\\n    (decoder.arr[decoder.pos + 2] << 16) +\\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\\n  decoder.pos += 4\\n  return uint\\n}\\n\\n/**\\n * Read 4 bytes as unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint32BigEndian = decoder => {\\n  const uint =\\n    (decoder.arr[decoder.pos + 3] +\\n    (decoder.arr[decoder.pos + 2] << 8) +\\n    (decoder.arr[decoder.pos + 1] << 16) +\\n    (decoder.arr[decoder.pos] << 24)) >>> 0\\n  decoder.pos += 4\\n  return uint\\n}\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint16 = decoder =>\\n  decoder.arr[decoder.pos] +\\n  (decoder.arr[decoder.pos + 1] << 8)\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint32 = decoder => (\\n  decoder.arr[decoder.pos] +\\n  (decoder.arr[decoder.pos + 1] << 8) +\\n  (decoder.arr[decoder.pos + 2] << 16) +\\n  (decoder.arr[decoder.pos + 3] << 24)\\n) >>> 0\\n\\n/**\\n * Read unsigned integer (32bit) with variable length.\\n * 1/8th of the storage is used as encoding overhead.\\n *  * numbers < 2^7 is stored in one bytlength\\n *  * numbers < 2^14 is stored in two bylength\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.length\\n */\\nexport const readVarUint = decoder => {\\n  let num = 0\\n  let len = 0\\n  while (true) {\\n    const r = decoder.arr[decoder.pos++]\\n    num = num | ((r & binary.BITS7) << len)\\n    len += 7\\n    if (r < binary.BIT8) {\\n      return num >>> 0 // return unsigned number!\\n    }\\n    /* istanbul ignore if */\\n    if (len > 35) {\\n      throw new Error('Integer out of range!')\\n    }\\n  }\\n}\\n\\n/**\\n * Read signed integer (32bit) with variable length.\\n * 1/8th of the storage is used as encoding overhead.\\n *  * numbers < 2^7 is stored in one bytlength\\n *  * numbers < 2^14 is stored in two bylength\\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.length\\n */\\nexport const readVarInt = decoder => {\\n  let r = decoder.arr[decoder.pos++]\\n  let num = r & binary.BITS6\\n  let len = 6\\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\\n  if ((r & binary.BIT8) === 0) {\\n    // don't continue reading\\n    return sign * num\\n  }\\n  while (true) {\\n    r = decoder.arr[decoder.pos++]\\n    num = num | ((r & binary.BITS7) << len)\\n    len += 7\\n    if (r < binary.BIT8) {\\n      return sign * (num >>> 0)\\n    }\\n    /* istanbul ignore if */\\n    if (len > 41) {\\n      throw new Error('Integer out of range!')\\n    }\\n  }\\n}\\n\\n/**\\n * Look ahead and read varUint without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number}\\n */\\nexport const peekVarUint = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarUint(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * Look ahead and read varUint without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number}\\n */\\nexport const peekVarInt = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarInt(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * Read string of variable length\\n * * varUint is used to store the length of the string\\n *\\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\\n * when String.fromCodePoint is fed with all characters as arguments.\\n * But most environments have a maximum number of arguments per functions.\\n * For effiency reasons we apply a maximum of 10000 characters at once.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {String} The read String.\\n */\\nexport const readVarString = decoder => {\\n  let remainingLen = readVarUint(decoder)\\n  if (remainingLen === 0) {\\n    return ''\\n  } else {\\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\\n      while (remainingLen--) {\\n        encodedString += String.fromCodePoint(readUint8(decoder))\\n      }\\n    } else {\\n      while (remainingLen > 0) {\\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\\n        // this is dangerous, we create a fresh array view from the existing buffer\\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\\n        decoder.pos += nextLen\\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\\n        remainingLen -= nextLen\\n      }\\n    }\\n    return decodeURIComponent(escape(encodedString))\\n  }\\n}\\n\\n/**\\n * Look ahead and read varString without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {string}\\n */\\nexport const peekVarString = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarString(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * @param {Decoder} decoder\\n * @param {number} len\\n * @return {DataView}\\n */\\nexport const readFromDataView = (decoder, len) => {\\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\\n  decoder.pos += len\\n  return dv\\n}\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\\n\\n/**\\n * @type {Array<function(Decoder):any>}\\n */\\nconst readAnyLookupTable = [\\n  decoder => undefined, // CASE 127: undefined\\n  decoder => null, // CASE 126: null\\n  readVarInt, // CASE 125: integer\\n  readFloat32, // CASE 124: float32\\n  readFloat64, // CASE 123: float64\\n  readBigInt64, // CASE 122: bigint\\n  decoder => false, // CASE 121: boolean (false)\\n  decoder => true, // CASE 120: boolean (true)\\n  readVarString, // CASE 119: string\\n  decoder => { // CASE 118: object<string,any>\\n    const len = readVarUint(decoder)\\n    /**\\n     * @type {Object<string,any>}\\n     */\\n    const obj = {}\\n    for (let i = 0; i < len; i++) {\\n      const key = readVarString(decoder)\\n      obj[key] = readAny(decoder)\\n    }\\n    return obj\\n  },\\n  decoder => { // CASE 117: array<any>\\n    const len = readVarUint(decoder)\\n    const arr = []\\n    for (let i = 0; i < len; i++) {\\n      arr.push(readAny(decoder))\\n    }\\n    return arr\\n  },\\n  readVarUint8Array // CASE 116: Uint8Array\\n]\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\\n\\n/**\\n * T must not be null.\\n *\\n * @template T\\n */\\nexport class RleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {function(Decoder):T} reader\\n   */\\n  constructor (uint8Array, reader) {\\n    super(uint8Array)\\n    /**\\n     * The reader\\n     */\\n    this.reader = reader\\n    /**\\n     * Current state\\n     * @type {T|null}\\n     */\\n    this.s = null\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = this.reader(this)\\n      if (hasContent(this)) {\\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\\n      } else {\\n        this.count = -1 // read the current value forever\\n      }\\n    }\\n    this.count--\\n    return /** @type {T} */ (this.s)\\n  }\\n}\\n\\nexport class IntDiffDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {number} start\\n   */\\n  constructor (uint8Array, start) {\\n    super(uint8Array)\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    this.s += readVarInt(this)\\n    return this.s\\n  }\\n}\\n\\nexport class RleIntDiffDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {number} start\\n   */\\n  constructor (uint8Array, start) {\\n    super(uint8Array)\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    if (this.count === 0) {\\n      this.s += readVarInt(this)\\n      if (hasContent(this)) {\\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\\n      } else {\\n        this.count = -1 // read the current value forever\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s)\\n  }\\n}\\n\\nexport class UintOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = readVarInt(this)\\n      // if the sign is negative, we read the count too, otherwise count is 1\\n      const isNegative = math.isNegativeZero(this.s)\\n      this.count = 1\\n      if (isNegative) {\\n        this.s = -this.s\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s)\\n  }\\n}\\n\\nexport class IncUintOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = readVarInt(this)\\n      // if the sign is negative, we read the count too, otherwise count is 1\\n      const isNegative = math.isNegativeZero(this.s)\\n      this.count = 1\\n      if (isNegative) {\\n        this.s = -this.s\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s++)\\n  }\\n}\\n\\nexport class IntDiffOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n    this.diff = 0\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    if (this.count === 0) {\\n      const diff = readVarInt(this)\\n      // if the first bit is set, we read more data\\n      const hasCount = diff & 1\\n      this.diff = diff >> 1\\n      this.count = 1\\n      if (hasCount) {\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.s += this.diff\\n    this.count--\\n    return this.s\\n  }\\n}\\n\\nexport class StringDecoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    this.decoder = new UintOptRleDecoder(uint8Array)\\n    this.str = readVarString(this.decoder)\\n    /**\\n     * @type {number}\\n     */\\n    this.spos = 0\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  read () {\\n    const end = this.spos + this.decoder.read()\\n    const res = this.str.slice(this.spos, end)\\n    this.spos = end\\n    return res\\n  }\\n}\\n\",\"/**\\n * Utility functions to work with buffers (Uint8Array).\\n *\\n * @module buffer\\n */\\n\\nimport * as string from './string.js'\\nimport * as env from './environment.js'\\nimport * as encoding from './encoding.js'\\nimport * as decoding from './decoding.js'\\n\\n/**\\n * @param {number} len\\n */\\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\\n\\n/**\\n * Create Uint8Array with initial content from buffer\\n *\\n * @param {ArrayBuffer} buffer\\n * @param {number} byteOffset\\n * @param {number} length\\n */\\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\\n\\n/**\\n * Create Uint8Array with initial content from buffer\\n *\\n * @param {ArrayBuffer} buffer\\n */\\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Uint8Array} bytes\\n * @return {string}\\n */\\nconst toBase64Browser = bytes => {\\n  let s = ''\\n  for (let i = 0; i < bytes.byteLength; i++) {\\n    s += string.fromCharCode(bytes[i])\\n  }\\n  // eslint-disable-next-line no-undef\\n  return btoa(s)\\n}\\n\\n/**\\n * @param {Uint8Array} bytes\\n * @return {string}\\n */\\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} s\\n * @return {Uint8Array}\\n */\\nconst fromBase64Browser = s => {\\n  // eslint-disable-next-line no-undef\\n  const a = atob(s)\\n  const bytes = createUint8ArrayFromLen(a.length)\\n  for (let i = 0; i < a.length; i++) {\\n    bytes[i] = a.charCodeAt(i)\\n  }\\n  return bytes\\n}\\n\\n/**\\n * @param {string} s\\n */\\nconst fromBase64Node = s => {\\n  const buf = Buffer.from(s, 'base64')\\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\\n}\\n\\n/* istanbul ignore next */\\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\\n\\n/* istanbul ignore next */\\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\\n\\n/**\\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\\n *\\n * @param {Uint8Array} uint8Array\\n * @return {Uint8Array}\\n */\\nexport const copyUint8Array = uint8Array => {\\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\\n  newBuf.set(uint8Array)\\n  return newBuf\\n}\\n\\n/**\\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\\n * See encoding.writeAny for more information.\\n *\\n * @param {any} data\\n * @return {Uint8Array}\\n */\\nexport const encodeAny = data => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeAny(encoder, data)\\n  return encoding.toUint8Array(encoder)\\n}\\n\\n/**\\n * Decode an any-encoded value.\\n *\\n * @param {Uint8Array} buf\\n * @return {any}\\n */\\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\\n\",\"/**\\n * Fast Pseudo Random Number Generators.\\n *\\n * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\\n * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\\n *\\n * @module prng\\n */\\n\\nimport * as binary from './binary.js'\\nimport { fromCharCode, fromCodePoint } from './string.js'\\nimport * as math from './math.js'\\nimport { Xoroshiro128plus } from './prng/Xoroshiro128plus.js'\\nimport * as buffer from './buffer.js'\\n\\n/**\\n * Description of the function\\n *  @callback generatorNext\\n *  @return {number} A 32bit integer\\n */\\n\\n/**\\n * A random type generator.\\n *\\n * @typedef {Object} PRNG\\n * @property {generatorNext} next Generate new number\\n */\\n\\nexport const DefaultPRNG = Xoroshiro128plus\\n\\n/**\\n * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\\n * This is the fastest full-period generator passing BigCrush without systematic failures.\\n * But there are more PRNGs available in ./PRNG/.\\n *\\n * @param {number} seed A positive 32bit integer. Do not use negative numbers.\\n * @return {PRNG}\\n */\\nexport const create = seed => new DefaultPRNG(seed)\\n\\n/**\\n * Generates a single random bool.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {Boolean} A random boolean\\n */\\nexport const bool = gen => (gen.next() >= 0.5)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int53 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const uint53 = (gen, min, max) => math.abs(int53(gen, min, max))\\n\\n/**\\n * Generates a random integer with 32 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int32 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const uint32 = (gen, min, max) => int32(gen, min, max) >>> 0\\n\\n/**\\n * @deprecated\\n * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\\n * openaring on smaller ranges.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int31 = (gen, min, max) => int32(gen, min, max)\\n\\n/**\\n * Generates a random real on [0, 1) with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {Number} A random real number on [0, 1).\\n */\\nexport const real53 = gen => gen.next() // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\\n\\n/**\\n * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {string}\\n *\\n * (Space)!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\\n */\\nexport const char = gen => fromCharCode(int31(gen, 32, 126))\\n\\n/**\\n * @param {PRNG} gen\\n * @return {string} A single letter (a-z)\\n */\\nexport const letter = gen => fromCharCode(int31(gen, 97, 122))\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} [minLen=0]\\n * @param {number} [maxLen=20]\\n * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\\n */\\nexport const word = (gen, minLen = 0, maxLen = 20) => {\\n  const len = int31(gen, minLen, maxLen)\\n  let str = ''\\n  for (let i = 0; i < len; i++) {\\n    str += letter(gen)\\n  }\\n  return str\\n}\\n\\n/**\\n * TODO: this function produces invalid runes. Does not cover all of utf16!!\\n *\\n * @param {PRNG} gen\\n * @return {string}\\n */\\nexport const utf16Rune = gen => {\\n  const codepoint = int31(gen, 0, 256)\\n  return fromCodePoint(codepoint)\\n}\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} [maxlen = 20]\\n */\\nexport const utf16String = (gen, maxlen = 20) => {\\n  const len = int31(gen, 0, maxlen)\\n  let str = ''\\n  for (let i = 0; i < len; i++) {\\n    str += utf16Rune(gen)\\n  }\\n  return str\\n}\\n\\n/**\\n * Returns one element of a given array.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Array<T>} array Non empty Array of possible values.\\n * @return {T} One of the values of the supplied Array.\\n * @template T\\n */\\nexport const oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)]\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint8Array}\\n */\\nexport const uint8Array = (gen, len) => {\\n  const buf = buffer.createUint8ArrayFromLen(len)\\n  for (let i = 0; i < buf.length; i++) {\\n    buf[i] = int32(gen, 0, binary.BITS8)\\n  }\\n  return buf\\n}\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint16Array}\\n */\\nexport const uint16Array = (gen, len) => new Uint16Array(uint8Array(gen, len * 2).buffer)\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint32Array}\\n */\\nexport const uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer)\\n\",\"/**\\n * Utility helpers for generating statistics.\\n *\\n * @module statistics\\n */\\n\\nimport * as math from './math.js'\\n\\n/**\\n * @param {Array<number>} arr Array of values\\n * @return {number} Returns null if the array is empty\\n */\\nexport const median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[math.floor((arr.length - 1) / 2)] + arr[math.ceil((arr.length - 1) / 2)]) / 2)\\n\\n/**\\n * @param {Array<number>} arr\\n * @return {number}\\n */\\nexport const average = arr => arr.reduce(math.add, 0) / arr.length\\n\",\"/**\\n * Utility helpers to work with promises.\\n *\\n * @module promise\\n */\\n\\nimport * as time from './time.js'\\n\\n/**\\n * @template T\\n * @callback PromiseResolve\\n * @param {T|PromiseLike<T>} [result]\\n */\\n\\n/**\\n * @template T\\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\\n * @return {Promise<T>}\\n */\\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\\n\\n/**\\n * @param {function(function():void,function(Error):void):void} f\\n * @return {Promise<void>}\\n */\\nexport const createEmpty = f => new Promise(f)\\n\\n/**\\n * `Promise.all` wait for all promises in the array to resolve and return the result\\n * @template T\\n * @param {Array<Promise<T>>} arrp\\n * @return {Promise<Array<T>>}\\n */\\nexport const all = arrp => Promise.all(arrp)\\n\\n/**\\n * @param {Error} [reason]\\n * @return {Promise<never>}\\n */\\nexport const reject = reason => Promise.reject(reason)\\n\\n/**\\n * @template T\\n * @param {T|void} res\\n * @return {Promise<T|void>}\\n */\\nexport const resolve = res => Promise.resolve(res)\\n\\n/**\\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\\n *\\n * @param {number} timeout\\n * @param {function():boolean} check\\n * @param {number} [intervalResolution]\\n * @return {Promise<void>}\\n */\\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\\n  const startTime = time.getUnixTime()\\n  const hasTimeout = timeout > 0\\n  const untilInterval = () => {\\n    if (check()) {\\n      clearInterval(intervalHandle)\\n      resolve()\\n    } else if (hasTimeout) {\\n      /* istanbul ignore else */\\n      if (time.getUnixTime() - startTime > timeout) {\\n        clearInterval(intervalHandle)\\n        reject(new Error('Timeout'))\\n      }\\n    }\\n  }\\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\\n})\\n\\n/**\\n * @param {number} timeout\\n * @return {Promise<undefined>}\\n */\\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\\n\\n/**\\n * Checks if an object is a promise using ducktyping.\\n *\\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\\n * library has some insane environment where global Promise objects are overwritten.\\n *\\n * @param {any} p\\n * @return {boolean}\\n */\\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\\n\",\"/**\\n * Testing framework with support for generating tests.\\n *\\n * ```js\\n * // test.js template for creating a test executable\\n * import { runTests } from 'lib0/testing.js'\\n * import * as log from 'lib0/logging.js'\\n * import * as mod1 from './mod1.test.js'\\n * import * as mod2 from './mod2.test.js'\\n\\n * import { isBrowser, isNode } from 'lib0/environment.js'\\n *\\n * if (isBrowser) {\\n *   // optional: if this is ran in the browser, attach a virtual console to the dom\\n *   log.createVConsole(document.body)\\n * }\\n *\\n * runTests({\\n *  mod1,\\n *  mod2,\\n * }).then(success => {\\n *   if (isNode) {\\n *     process.exit(success ? 0 : 1)\\n *   }\\n * })\\n * ```\\n *\\n * ```js\\n * // mod1.test.js\\n * /**\\n *  * runTests automatically tests all exported functions that start with \\\"test\\\".\\n *  * The name of the function should be in camelCase and is used for the logging output.\\n *  *\\n *  * @param {t.TestCase} tc\\n *  *\\\\/\\n * export const testMyFirstTest = tc => {\\n *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\\n * }\\n * ```\\n *\\n * Now you can simply run `node test.js` to run your test or run test.js in the browser.\\n *\\n * @module testing\\n */\\n\\nimport * as log from './logging.js'\\nimport { simpleDiff } from './diff.js'\\nimport * as object from './object.js'\\nimport * as string from './string.js'\\nimport * as math from './math.js'\\nimport * as random from './random.js'\\nimport * as prng from './prng.js'\\nimport * as statistics from './statistics.js'\\nimport * as array from './array.js'\\nimport * as env from './environment.js'\\nimport * as json from './json.js'\\nimport * as time from './time.js'\\nimport * as promise from './promise.js'\\n\\nimport { performance } from './isomorphic.js'\\n\\nexport { production } from './environment.js'\\n\\nexport const extensive = env.hasConf('extensive')\\n\\n/* istanbul ignore next */\\nexport const envSeed = env.hasParam('--seed') ? Number.parseInt(env.getParam('--seed', '0')) : null\\n\\nexport class TestCase {\\n  /**\\n   * @param {string} moduleName\\n   * @param {string} testName\\n   */\\n  constructor (moduleName, testName) {\\n    /**\\n     * @type {string}\\n     */\\n    this.moduleName = moduleName\\n    /**\\n     * @type {string}\\n     */\\n    this.testName = testName\\n    this._seed = null\\n    this._prng = null\\n  }\\n\\n  resetSeed () {\\n    this._seed = null\\n    this._prng = null\\n  }\\n\\n  /**\\n   * @type {number}\\n   */\\n  /* istanbul ignore next */\\n  get seed () {\\n    /* istanbul ignore else */\\n    if (this._seed === null) {\\n      /* istanbul ignore next */\\n      this._seed = envSeed === null ? random.uint32() : envSeed\\n    }\\n    return this._seed\\n  }\\n\\n  /**\\n   * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\\n   *\\n   * @type {prng.PRNG}\\n   */\\n  get prng () {\\n    /* istanbul ignore else */\\n    if (this._prng === null) {\\n      this._prng = prng.create(this.seed)\\n    }\\n    return this._prng\\n  }\\n}\\n\\nexport const repetitionTime = Number(env.getParam('--repetition-time', '50'))\\n/* istanbul ignore next */\\nconst testFilter = env.hasParam('--filter') ? env.getParam('--filter', '') : null\\n\\n/* istanbul ignore next */\\nconst testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*')\\n\\nconst repeatTestRegex = /^(repeat|repeating)\\\\s/\\n\\n/**\\n * @param {string} moduleName\\n * @param {string} name\\n * @param {function(TestCase):void|Promise<any>} f\\n * @param {number} i\\n * @param {number} numberOfTests\\n */\\nexport const run = async (moduleName, name, f, i, numberOfTests) => {\\n  const uncamelized = string.fromCamelCase(name.slice(4), ' ')\\n  const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`)\\n  /* istanbul ignore if */\\n  if (filtered) {\\n    return true\\n  }\\n  const tc = new TestCase(moduleName, name)\\n  const repeat = repeatTestRegex.test(uncamelized)\\n  const groupArgs = [log.GREY, `[${i + 1}/${numberOfTests}] `, log.PURPLE, `${moduleName}: `, log.BLUE, uncamelized]\\n  /* istanbul ignore next */\\n  if (testFilter === null) {\\n    log.groupCollapsed(...groupArgs)\\n  } else {\\n    log.group(...groupArgs)\\n  }\\n  const times = []\\n  const start = performance.now()\\n  let lastTime = start\\n  let err = null\\n  performance.mark(`${name}-start`)\\n  do {\\n    try {\\n      const p = f(tc)\\n      if (promise.isPromise(p)) {\\n        await p\\n      }\\n    } catch (_err) {\\n      err = _err\\n    }\\n    const currTime = performance.now()\\n    times.push(currTime - lastTime)\\n    lastTime = currTime\\n    if (repeat && err === null && (lastTime - start) < repetitionTime) {\\n      tc.resetSeed()\\n    } else {\\n      break\\n    }\\n  } while (err === null && (lastTime - start) < repetitionTime)\\n  performance.mark(`${name}-end`)\\n  /* istanbul ignore if */\\n  if (err !== null && err.constructor !== SkipError) {\\n    log.printError(err)\\n  }\\n  performance.measure(name, `${name}-start`, `${name}-end`)\\n  log.groupEnd()\\n  const duration = lastTime - start\\n  let success = true\\n  times.sort((a, b) => a - b)\\n  /* istanbul ignore next */\\n  const againMessage = env.isBrowser\\n    ? `     - ${window.location.href}?filter=\\\\\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\\n    : `\\\\nrepeat: npm run test -- --filter \\\"\\\\\\\\[${i + 1}/\\\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`\\n  const timeInfo = (repeat && err === null)\\n    ? ` - ${times.length} repetitions in ${time.humanizeDuration(duration)} (best: ${time.humanizeDuration(times[0])}, worst: ${time.humanizeDuration(array.last(times))}, median: ${time.humanizeDuration(statistics.median(times))}, average: ${time.humanizeDuration(statistics.average(times))})`\\n    : ` in ${time.humanizeDuration(duration)}`\\n  if (err !== null) {\\n    /* istanbul ignore else */\\n    if (err.constructor === SkipError) {\\n      log.print(log.GREY, log.BOLD, 'Skipped: ', log.UNBOLD, uncamelized)\\n    } else {\\n      success = false\\n      log.print(log.RED, log.BOLD, 'Failure: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\\n    }\\n  } else {\\n    log.print(log.GREEN, log.BOLD, 'Success: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\\n  }\\n  return success\\n}\\n\\n/**\\n * Describe what you are currently testing. The message will be logged.\\n *\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {string} info\\n */\\nexport const describe = (description, info = '') => log.print(log.BLUE, description, ' ', log.GREY, info)\\n\\n/**\\n * Describe the state of the current computation.\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\\n * }\\n * ```\\n *\\n * @param {string} info\\n */\\nexport const info = info => describe('', info)\\n\\nexport const printDom = log.printDom\\n\\nexport const printCanvas = log.printCanvas\\n\\n/**\\n * Group outputs in a collapsible category.\\n *\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.group('subtest 1', () => {\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n *   await t.groupAsync('subtest async 2', async () => {\\n *     await someaction()\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {function(void):void} f\\n */\\nexport const group = (description, f) => {\\n  log.group(log.BLUE, description)\\n  try {\\n    f()\\n  } finally {\\n    log.groupEnd()\\n  }\\n}\\n\\n/**\\n * Group outputs in a collapsible category.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.group('subtest 1', () => {\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n *   await t.groupAsync('subtest async 2', async () => {\\n *     await someaction()\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {function(void):Promise<any>} f\\n */\\nexport const groupAsync = async (description, f) => {\\n  log.group(log.BLUE, description)\\n  try {\\n    await f()\\n  } finally {\\n    log.groupEnd()\\n  }\\n}\\n\\n/**\\n * Measure the time that it takes to calculate something.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.measureTime('measurement', () => {\\n *     heavyCalculation()\\n *   })\\n *   await t.groupAsync('async measurement', async () => {\\n *     await heavyAsyncCalculation()\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} message\\n * @param {function():void} f\\n * @return {number} Returns a promise that resolves the measured duration to apply f\\n */\\nexport const measureTime = (message, f) => {\\n  let duration\\n  const start = performance.now()\\n  try {\\n    f()\\n  } finally {\\n    duration = performance.now() - start\\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\\n  }\\n  return duration\\n}\\n\\n/**\\n * Measure the time that it takes to calculate something.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.measureTimeAsync('measurement', async () => {\\n *     await heavyCalculation()\\n *   })\\n *   await t.groupAsync('async measurement', async () => {\\n *     await heavyAsyncCalculation()\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} message\\n * @param {function():Promise<any>} f\\n * @return {Promise<number>} Returns a promise that resolves the measured duration to apply f\\n */\\nexport const measureTimeAsync = async (message, f) => {\\n  let duration\\n  const start = performance.now()\\n  try {\\n    await f()\\n  } finally {\\n    duration = performance.now() - start\\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\\n  }\\n  return duration\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} as\\n * @param {Array<T>} bs\\n * @param {string} [m]\\n * @return {boolean}\\n */\\nexport const compareArrays = (as, bs, m = 'Arrays match') => {\\n  if (as.length !== bs.length) {\\n    fail(m)\\n  }\\n  for (let i = 0; i < as.length; i++) {\\n    if (as[i] !== bs[i]) {\\n      fail(m)\\n    }\\n  }\\n  return true\\n}\\n\\n/**\\n * @param {string} a\\n * @param {string} b\\n * @param {string} [m]\\n * @throws {TestError} Throws if tests fails\\n */\\nexport const compareStrings = (a, b, m = 'Strings match') => {\\n  if (a !== b) {\\n    const diff = simpleDiff(a, b)\\n    log.print(log.GREY, a.slice(0, diff.index), log.RED, a.slice(diff.index, diff.remove), log.GREEN, diff.insert, log.GREY, a.slice(diff.index + diff.remove))\\n    fail(m)\\n  }\\n}\\n\\n/**\\n * @template K,V\\n * @param {Object<K,V>} a\\n * @param {Object<K,V>} b\\n * @param {string} [m]\\n * @throws {TestError} Throws if test fails\\n */\\nexport const compareObjects = (a, b, m = 'Objects match') => { object.equalFlat(a, b) || fail(m) }\\n\\n/**\\n * @param {any} constructor\\n * @param {any} a\\n * @param {any} b\\n * @param {string} path\\n * @throws {TestError}\\n */\\nconst compareValues = (constructor, a, b, path) => {\\n  if (a !== b) {\\n    fail(`Values ${json.stringify(a)} and ${json.stringify(b)} don't match (${path})`)\\n  }\\n  return true\\n}\\n\\n/**\\n * @param {string?} message\\n * @param {string} reason\\n * @param {string} path\\n * @throws {TestError}\\n */\\nconst _failMessage = (message, reason, path) => fail(\\n  message === null\\n    ? `${reason} ${path}`\\n    : `${message} (${reason}) ${path}`\\n)\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @param {string} path\\n * @param {string?} message\\n * @param {function(any,any,any,string,any):boolean} customCompare\\n */\\nconst _compare = (a, b, path, message, customCompare) => {\\n  // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\\n  if (a == null || b == null) {\\n    return compareValues(null, a, b, path)\\n  }\\n  if (a.constructor !== b.constructor) {\\n    _failMessage(message, 'Constructors don\\\\'t match', path)\\n  }\\n  let success = true\\n  switch (a.constructor) {\\n    case ArrayBuffer:\\n      a = new Uint8Array(a)\\n      b = new Uint8Array(b)\\n    // eslint-disable-next-line no-fallthrough\\n    case Uint8Array: {\\n      if (a.byteLength !== b.byteLength) {\\n        _failMessage(message, 'ArrayBuffer lengths match', path)\\n      }\\n      for (let i = 0; success && i < a.length; i++) {\\n        success = success && a[i] === b[i]\\n      }\\n      break\\n    }\\n    case Set: {\\n      if (a.size !== b.size) {\\n        _failMessage(message, 'Sets have different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach(value => {\\n        if (!b.has(value)) {\\n          _failMessage(message, `b.${path} does have ${value}`, path)\\n        }\\n      })\\n      break\\n    }\\n    case Map: {\\n      if (a.size !== b.size) {\\n        _failMessage(message, 'Maps have different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach((value, key) => {\\n        if (!b.has(key)) {\\n          _failMessage(message, `Property ${path}[\\\"${key}\\\"] does not exist on second argument`, path)\\n        }\\n        _compare(value, b.get(key), `${path}[\\\"${key}\\\"]`, message, customCompare)\\n      })\\n      break\\n    }\\n    case Object:\\n      if (object.length(a) !== object.length(b)) {\\n        _failMessage(message, 'Objects have a different number of attributes', path)\\n      }\\n      object.forEach(a, (value, key) => {\\n        if (!object.hasProperty(b, key)) {\\n          _failMessage(message, `Property ${path} does not exist on second argument`, path)\\n        }\\n        _compare(value, b[key], `${path}[\\\"${key}\\\"]`, message, customCompare)\\n      })\\n      break\\n    case Array:\\n      if (a.length !== b.length) {\\n        _failMessage(message, 'Arrays have a different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare))\\n      break\\n    /* istanbul ignore next */\\n    default:\\n      if (!customCompare(a.constructor, a, b, path, compareValues)) {\\n        _failMessage(message, `Values ${json.stringify(a)} and ${json.stringify(b)} don't match`, path)\\n      }\\n  }\\n  assert(success, message)\\n  return true\\n}\\n\\n/**\\n * @template T\\n * @param {T} a\\n * @param {T} b\\n * @param {string?} [message]\\n * @param {function(any,T,T,string,any):boolean} [customCompare]\\n */\\nexport const compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare)\\n\\n/* istanbul ignore next */\\n/**\\n * @param {boolean} condition\\n * @param {string?} [message]\\n * @throws {TestError}\\n */\\nexport const assert = (condition, message = null) => condition || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`)\\n\\n/**\\n * @param {function():void} f\\n * @throws {TestError}\\n */\\nexport const fails = f => {\\n  let err = null\\n  try {\\n    f()\\n  } catch (_err) {\\n    err = _err\\n    log.print(log.GREEN, '⇖ This Error was expected')\\n  }\\n  /* istanbul ignore if */\\n  if (err === null) {\\n    fail('Expected this to fail')\\n  }\\n}\\n\\n/**\\n * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\\n */\\nexport const runTests = async tests => {\\n  const numberOfTests = object.map(tests, mod => object.map(mod, f => /* istanbul ignore next */ f ? 1 : 0).reduce(math.add, 0)).reduce(math.add, 0)\\n  let successfulTests = 0\\n  let testnumber = 0\\n  const start = performance.now()\\n  for (const modName in tests) {\\n    const mod = tests[modName]\\n    for (const fname in mod) {\\n      const f = mod[fname]\\n      /* istanbul ignore else */\\n      if (f) {\\n        const repeatEachTest = 1\\n        let success = true\\n        for (let i = 0; success && i < repeatEachTest; i++) {\\n          success = await run(modName, fname, f, testnumber, numberOfTests)\\n        }\\n        testnumber++\\n        /* istanbul ignore else */\\n        if (success) {\\n          successfulTests++\\n        }\\n      }\\n    }\\n  }\\n  const end = performance.now()\\n  log.print('')\\n  const success = successfulTests === numberOfTests\\n  /* istanbul ignore next */\\n  if (success) {\\n    /* istanbul ignore next */\\n    log.print(log.GREEN, log.BOLD, 'All tests successful!', log.GREY, log.UNBOLD, ` in ${time.humanizeDuration(end - start)}`)\\n    /* istanbul ignore next */\\n    log.printImgBase64(nyanCatImage, 50)\\n  } else {\\n    const failedTests = numberOfTests - successfulTests\\n    log.print(log.RED, log.BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`)\\n  }\\n  return success\\n}\\n\\nclass TestError extends Error {}\\n\\n/**\\n * @param {string} reason\\n * @throws {TestError}\\n */\\nexport const fail = reason => {\\n  log.print(log.RED, log.BOLD, 'X ', log.UNBOLD, reason)\\n  throw new TestError('Test Failed')\\n}\\n\\nclass SkipError extends Error {}\\n\\n/**\\n * @param {boolean} cond If true, this tests will be skipped\\n * @throws {SkipError}\\n */\\nexport const skip = (cond = true) => {\\n  if (cond) {\\n    throw new SkipError('skipping..')\\n  }\\n}\\n\\n// eslint-disable-next-line\\nconst nyanCatImage = ''\\n\",\"\\nimport * as array from './array.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAppend = tc => {\\n  const arr = [1, 2, 3]\\n  array.appendTo(arr, arr.slice())\\n  t.compareArrays(arr, [1, 2, 3, 1, 2, 3])\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testflatten = tc => {\\n  const arr = [[1, 2, 3], [4]]\\n  t.compareArrays(array.flatten(arr), [1, 2, 3, 4])\\n}\\n\",\"\\nimport * as log from './logging.js'\\n\\nexport const testLogging = () => {\\n  log.print(log.BLUE, 'blue ')\\n  log.print(log.BLUE, 'blue ', log.BOLD, 'blue,bold')\\n  log.print(log.GREEN, log.RED, 'red ', 'red')\\n  log.print(log.ORANGE, 'orange')\\n  log.print(log.BOLD, 'bold ', log.UNBOLD, 'nobold')\\n  log.print(log.GREEN, 'green ', log.UNCOLOR, 'nocolor')\\n  log.print('expecting objects from now on!')\\n  log.print({ 'my-object': 'isLogged' })\\n  log.print(log.GREEN, 'green ', { 'my-object': 'isLogged' })\\n  log.print(log.GREEN, 'green ', { 'my-object': 'isLogged' }, 'unformatted')\\n  log.print(log.BLUE, log.BOLD, 'number', 1)\\n  log.print(log.BLUE, log.BOLD, 'number', 1, {}, 's', 2)\\n  log.print({}, 'dtrn')\\n}\\n\",\"import * as prng from './prng.js'\\nimport * as string from './string.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testLowercaseTransformation = tc => {\\n  t.compareStrings(string.fromCamelCase('ThisIsATest', ' '), 'this is a test')\\n  t.compareStrings(string.fromCamelCase('Testing', ' '), 'testing')\\n  t.compareStrings(string.fromCamelCase('testingThis', ' '), 'testing this')\\n  t.compareStrings(string.fromCamelCase('testYAY', ' '), 'test y a y')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatStringUtf8Encoding = tc => {\\n  t.skip(!string.utf8TextDecoder)\\n  const str = prng.utf16String(tc.prng, 1000000)\\n  let nativeResult, polyfilledResult\\n  t.measureTime('TextEncoder utf8 encoding', () => {\\n    nativeResult = string._encodeUtf8Native(str)\\n  })\\n  t.measureTime('Polyfilled utf8 encoding', () => {\\n    polyfilledResult = string._encodeUtf8Polyfill(str)\\n  })\\n  t.compare(nativeResult, polyfilledResult, 'Encoded utf8 buffers match')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatStringUtf8Decoding = tc => {\\n  t.skip(!string.utf8TextDecoder)\\n  const buf = string.encodeUtf8(prng.utf16String(tc.prng, 1000000))\\n  let nativeResult, polyfilledResult\\n  t.measureTime('TextEncoder utf8 decoding', () => {\\n    nativeResult = string._decodeUtf8Native(buf)\\n  })\\n  t.measureTime('Polyfilled utf8 decoding', () => {\\n    polyfilledResult = string._decodeUtf8Polyfill(buf)\\n  })\\n  t.compare(nativeResult, polyfilledResult, 'Decoded utf8 buffers match')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testBomEncodingDecoding = tc => {\\n  const bomStr = '﻿bom'\\n  t.assert(bomStr.length === 4)\\n  const polyfilledResult = string._decodeUtf8Polyfill(string._encodeUtf8Polyfill(bomStr))\\n  t.assert(polyfilledResult.length === 4)\\n  t.assert(polyfilledResult === bomStr)\\n  if (string.utf8TextDecoder) {\\n    const nativeResult = string._decodeUtf8Native(string._encodeUtf8Native(bomStr))\\n    t.assert(nativeResult === polyfilledResult)\\n  }\\n}\\n\",\"/* global BigInt */\\nimport * as encoding from './encoding.js'\\nimport * as decoding from './decoding.js'\\nimport * as prng from './prng.js'\\nimport * as t from './testing.js'\\nimport * as string from './string.js'\\nimport * as binary from './binary.js'\\nimport * as buffer from './buffer.js'\\nimport * as number from './number.js'\\n\\n/**\\n * @type {Array<function(prng.PRNG, number, boolean):any>}\\n */\\nlet genAnyLookupTable = [\\n  gen => BigInt(prng.int53(gen, number.MIN_SAFE_INTEGER, number.MAX_SAFE_INTEGER)), // TYPE 122\\n  gen => undefined, // TYPE 127\\n  gen => null, // TYPE 126\\n  gen => prng.int53(gen, number.LOWEST_INT32, number.HIGHEST_INT32), // TYPE 125\\n  gen => prng.real53(gen), // TYPE 124 and 123\\n  gen => true, // TYPE 121\\n  gen => false, // TYPE 120\\n  gen => prng.utf16String(gen), // TYPE 119\\n  (gen, depth, toJsonCompatible) => ({ val: genAny(gen, depth + 1, toJsonCompatible) }), // TYPE 118\\n  (gen, depth, toJsonCompatible) => Array.from({ length: prng.uint32(gen, 0, 20 - depth) }).map(() => genAny(gen, depth + 1, toJsonCompatible)), // TYPE 117\\n  gen => prng.uint8Array(gen, prng.uint32(gen, 0, 50)) // TYPE 116\\n]\\n\\nconst genAnyLookupTableJsonCompatible = genAnyLookupTable.slice(1)\\n\\nif (typeof BigInt === 'undefined') {\\n  genAnyLookupTable = genAnyLookupTable.slice(1)\\n}\\n\\n/**\\n * @param {prng.PRNG} gen\\n * @param {number} _depth The current call-depth\\n */\\nconst genAny = (gen, _depth = 0, toJsonCompatible = false) => prng.oneOf(gen, toJsonCompatible ? genAnyLookupTableJsonCompatible : genAnyLookupTable)(gen, _depth, toJsonCompatible)\\n\\n/**\\n * Check if binary encoding is compatible with golang binary encoding - binary.PutVarUint.\\n *\\n * Result: is compatible up to 32 bit: [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\\n */\\nexport const testGolangBinaryEncodingCompatibility = () => {\\n  const tests = [\\n    { in: 0, out: [0] },\\n    { in: 1, out: [1] },\\n    { in: 128, out: [128, 1] },\\n    { in: 200, out: [200, 1] },\\n    { in: 32, out: [32] },\\n    { in: 500, out: [244, 3] },\\n    { in: 256, out: [128, 2] },\\n    { in: 700, out: [188, 5] },\\n    { in: 1024, out: [128, 8] },\\n    { in: 1025, out: [129, 8] },\\n    { in: 4048, out: [208, 31] },\\n    { in: 5050, out: [186, 39] },\\n    { in: 1000000, out: [192, 132, 61] },\\n    { in: 34951959, out: [151, 166, 213, 16] },\\n    { in: 2147483646, out: [254, 255, 255, 255, 7] },\\n    { in: 2147483647, out: [255, 255, 255, 255, 7] },\\n    { in: 2147483648, out: [128, 128, 128, 128, 8] },\\n    { in: 2147483700, out: [180, 128, 128, 128, 8] },\\n    { in: 4294967294, out: [254, 255, 255, 255, 15] },\\n    { in: 4294967295, out: [255, 255, 255, 255, 15] }\\n  ]\\n  tests.forEach(test => {\\n    const encoder = encoding.createEncoder()\\n    encoding.writeVarUint(encoder, test.in)\\n    const buffer = encoding.toUint8Array(encoder)\\n    t.assert(buffer.byteLength === test.out.length)\\n    t.assert(buffer.length > 0)\\n    for (let j = 0; j < buffer.length; j++) {\\n      t.assert(buffer[j] === test.out[j])\\n    }\\n  })\\n}\\n\\n/**\\n * @template T\\n * @param {string} testname\\n * @param {function(encoding.Encoder, T):void} write\\n * @param {function(decoding.Decoder):T} read\\n * @param {T} val\\n * @param {boolean} doLog\\n */\\nfunction test (testname, write, read, val, doLog = true) {\\n  const encoder = encoding.createEncoder()\\n  write(encoder, val)\\n  const reader = decoding.createDecoder(encoding.toUint8Array(encoder))\\n  const result = read(reader)\\n  const utf8ByteLength = string.utf8ByteLength(val + '')\\n  const binaryByteLength = encoding.length(encoder)\\n  if (doLog) {\\n    t.describe(testname, ` utf8 encode: ${utf8ByteLength} bytes / binary encode: ${binaryByteLength} bytes`)\\n  }\\n  t.compare(val, result)\\n  return {\\n    utf8ByteLength,\\n    binaryByteLength\\n  }\\n}\\n\\n/**\\n * @param {string} s\\n */\\nconst testVarString = s => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeVarString(encoder, s)\\n  const decoder = decoding.createDecoder(encoding.toUint8Array(encoder))\\n  const peeked = decoding.peekVarString(decoder)\\n  const result = decoding.readVarString(decoder)\\n  t.compareStrings(s, result)\\n  t.compareStrings(s, peeked)\\n}\\n\\nexport const testStringDecodingPerformance = () => {\\n  // test if it is faster to read N single characters, or if it is faster to read N characters in one flush.\\n  // to make the comparison meaningful, we read read N characters in an Array\\n  const N = 2000000\\n  const durationSingleElements = t.measureTime('read / write single elements', () => {\\n    const encoder = encoding.createEncoder()\\n    t.measureTime('read / write single elements - write', () => {\\n      for (let i = 0; i < N; i++) {\\n        encoding.writeVarString(encoder, 'i')\\n      }\\n    })\\n    const decoder = decoding.createDecoder(encoding.toUint8Array(encoder))\\n    t.measureTime('read / write single elements - read', () => {\\n      const arr = []\\n      for (let i = 0; i < N; i++) {\\n        arr.push(decoding.readVarString(decoder))\\n      }\\n    })\\n  })\\n\\n  const durationConcatElementsNative = t.measureTime('read / write concatenated string using native encoder/decoder', () => {\\n    let stringbuf = new Uint8Array()\\n    const encoderLengths = encoding.createEncoder()\\n    t.measureTime('read / write concatenated string using native encoder/decoder - write', () => {\\n      let s = ''\\n      const sArr = []\\n      for (let i = 0; i < N; i++) {\\n        s += 'i'\\n        encoding.writeVarUint(encoderLengths, 1) // we write a single char.\\n        if (i % 20 === 0) {\\n          sArr.push(s)\\n          s = ''\\n        }\\n      }\\n      sArr.push(s)\\n      stringbuf = string.encodeUtf8(sArr.join(''))\\n    })\\n    const decoderLengths = decoding.createDecoder(encoding.toUint8Array(encoderLengths))\\n    t.measureTime('read / write concatenated string using native encoder/decoder - read', () => {\\n      const arr = []\\n      const concatS = string.decodeUtf8(stringbuf)\\n      for (let i = 0; i < N; i++) {\\n        const len = decoding.readVarUint(decoderLengths)\\n        arr.push(concatS.slice(i, len)) // push using slice\\n      }\\n    })\\n  })\\n  const durationConcatElements = t.measureTime('read / write concatenated string', () => {\\n    let stringbuf = new Uint8Array()\\n    const encoder = encoding.createEncoder()\\n    const encoderLengths = encoding.createEncoder()\\n    t.measureTime('read / write concatenated string - write', () => {\\n      let s = ''\\n      for (let i = 0; i < N; i++) {\\n        s += 'i'\\n        encoding.writeVarUint(encoderLengths, 1) // we write a single char.\\n        if (i % 20 === 0) {\\n          encoding.writeVarString(encoder, s)\\n          s = ''\\n        }\\n      }\\n      encoding.writeVarString(encoder, s)\\n      stringbuf = encoding.toUint8Array(encoder)\\n    })\\n    const decoder = decoding.createDecoder(stringbuf)\\n    const decoderLengths = decoding.createDecoder(encoding.toUint8Array(encoderLengths))\\n    t.measureTime('read / write concatenated string - read', () => {\\n      const arr = []\\n      const concatS = decoding.readVarString(decoder)\\n      for (let i = 0; i < N; i++) {\\n        const len = decoding.readVarUint(decoderLengths)\\n        arr.push(concatS.slice(i, len)) // push using slice\\n      }\\n    })\\n  })\\n  t.assert(durationConcatElements < durationSingleElements, 'We expect that the second approach is faster. If this fails, our expectantion is not met in your javascript environment. Please report this issue.')\\n  t.assert(durationConcatElements < durationConcatElementsNative * 1.3, 'We expect that the native approach is slower. If this fails, our expectantion is not met in your javascript environment. Please report this issue.')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyEncodeUnknowns = tc => {\\n  const encoder = encoding.createEncoder()\\n  // @ts-ignore\\n  encoding.writeAny(encoder, Symbol('a'))\\n  encoding.writeAny(encoder, undefined)\\n  encoding.writeAny(encoder, () => {})\\n  const decoder = decoding.createDecoder(encoding.toUint8Array(encoder))\\n  t.assert(decoding.readAny(decoder) === undefined)\\n  t.assert(decoding.readAny(decoder) === undefined)\\n  t.assert(decoding.readAny(decoder) === undefined)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyEncodeDate = tc => {\\n  test('Encode current date', encoding.writeAny, decoding.readAny, new Date().getTime())\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testEncodeMax32bitUint = tc => {\\n  test('max 32bit uint', encoding.writeVarUint, decoding.readVarUint, binary.BITS32)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testVarUintEncoding = tc => {\\n  test('varUint 1 byte', encoding.writeVarUint, decoding.readVarUint, 42)\\n  test('varUint 2 bytes', encoding.writeVarUint, decoding.readVarUint, 1 << 9 | 3)\\n  test('varUint 3 bytes', encoding.writeVarUint, decoding.readVarUint, 1 << 17 | 1 << 9 | 3)\\n  test('varUint 4 bytes', encoding.writeVarUint, decoding.readVarUint, 1 << 25 | 1 << 17 | 1 << 9 | 3)\\n  test('varUint of 2839012934', encoding.writeVarUint, decoding.readVarUint, 2839012934)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testVarIntEncoding = tc => {\\n  test('varInt 1 byte', encoding.writeVarInt, decoding.readVarInt, -42)\\n  test('varInt 2 bytes', encoding.writeVarInt, decoding.readVarInt, -(1 << 9 | 3))\\n  test('varInt 3 bytes', encoding.writeVarInt, decoding.readVarInt, -(1 << 17 | 1 << 9 | 3))\\n  test('varInt 4 bytes', encoding.writeVarInt, decoding.readVarInt, -(1 << 25 | 1 << 17 | 1 << 9 | 3))\\n  test('varInt of -691529286', encoding.writeVarInt, decoding.readVarInt, -(691529286))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatVarUintEncoding = tc => {\\n  const n = prng.int32(tc.prng, 0, (1 << 28) - 1)\\n  test(`varUint of ${n}`, encoding.writeVarUint, decoding.readVarUint, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatVarIntEncoding = tc => {\\n  const n = prng.uint32(tc.prng, 0, binary.BITS32)\\n  test(`varInt of ${n}`, encoding.writeVarInt, decoding.readVarInt, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatAnyEncoding = tc => {\\n  const n = genAny(tc.prng)\\n  test('any encoding', encoding.writeAny, decoding.readAny, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatPeekVarUintEncoding = tc => {\\n  const n = prng.int32(tc.prng, 0, (1 << 28) - 1)\\n  test(`varUint of ${n}`, encoding.writeVarUint, decoding.peekVarUint, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatPeekVarIntEncoding = tc => {\\n  const n = prng.uint32(tc.prng, 0, binary.BITS32)\\n  test(`varInt of ${n}`, encoding.writeVarInt, decoding.peekVarInt, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyVsJsonEncoding = tc => {\\n  const n = Array.from({ length: 5000 }).map(() => genAny(tc.prng, 5, true))\\n  t.measureTime('lib0 any encoding', () => {\\n    const encoder = encoding.createEncoder()\\n    encoding.writeAny(encoder, n)\\n    const buffer = encoding.toUint8Array(encoder)\\n    t.info('buffer length is ' + buffer.length)\\n    decoding.readAny(decoding.createDecoder(buffer))\\n  })\\n  t.measureTime('JSON.stringify encoding', () => {\\n    const encoder = encoding.createEncoder()\\n    encoding.writeVarString(encoder, JSON.stringify(n))\\n    const buffer = encoding.toUint8Array(encoder)\\n    t.info('buffer length is ' + buffer.length)\\n    JSON.parse(decoding.readVarString(decoding.createDecoder(buffer)))\\n  })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testStringEncoding = tc => {\\n  testVarString('hello')\\n  testVarString('test!')\\n  testVarString('☺☺☺')\\n  testVarString('')\\n  testVarString('1234')\\n  testVarString('쾟')\\n  testVarString('龟') // surrogate length 3\\n  testVarString('😝') // surrogate length 4\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatStringEncoding = tc =>\\n  testVarString(prng.utf16String(tc.prng))\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSetMethods = tc => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeUint8(encoder, 1)\\n  encoding.writeUint16(encoder, 33)\\n  encoding.writeUint32(encoder, 29329)\\n  encoding.setUint8(encoder, 0, 8)\\n  encoding.setUint16(encoder, 1, 16)\\n  encoding.setUint32(encoder, 3, 32)\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(decoding.peekUint8(decoder) === 8)\\n  decoding.readUint8(decoder)\\n  t.assert(decoding.peekUint16(decoder) === 16)\\n  decoding.readUint16(decoder)\\n  t.assert(decoding.peekUint32(decoder) === 32)\\n  decoding.readUint32(decoder)\\n}\\n\\nconst defLen = 1000\\nconst loops = 10000\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @return {boolean}\\n */\\nconst strictComparison = (a, b) => a === b\\n\\n/**\\n * @typedef {Object} EncodingPair\\n * @property {function(decoding.Decoder):any} EncodingPair.read\\n * @property {function(encoding.Encoder,any):void} EncodingPair.write\\n * @property {function(prng.PRNG):any} EncodingPair.gen\\n * @property {function(any,any):boolean} EncodingPair.compare\\n * @property {string} name\\n */\\n\\n/**\\n * @template T\\n * @type {Array<EncodingPair>}\\n */\\nconst encodingPairs = [\\n  { name: 'uint8Array', read: decoder => decoding.readUint8Array(decoder, defLen), write: encoding.writeUint8Array, gen: gen => prng.uint8Array(gen, defLen), compare: t.compare },\\n  { name: 'varUint8Array', read: decoding.readVarUint8Array, write: encoding.writeVarUint8Array, gen: gen => prng.uint8Array(gen, prng.uint32(gen, 0, defLen)), compare: t.compare },\\n  { name: 'uint8', read: decoding.readUint8, write: encoding.writeUint8, gen: gen => prng.uint32(gen, 0, binary.BITS8), compare: strictComparison },\\n  { name: 'uint16', read: decoding.readUint16, write: encoding.writeUint16, gen: gen => prng.uint32(gen, 0, binary.BITS16), compare: strictComparison },\\n  { name: 'uint32', read: decoding.readUint32, write: encoding.writeUint32, gen: gen => prng.uint32(gen, 0, binary.BITS32), compare: strictComparison },\\n  { name: 'uint32bigEndian', read: decoding.readUint32BigEndian, write: encoding.writeUint32BigEndian, gen: gen => prng.uint32(gen, 0, binary.BITS32), compare: strictComparison },\\n  { name: 'varString', read: decoding.readVarString, write: encoding.writeVarString, gen: gen => prng.utf16String(gen, prng.uint32(gen, 0, defLen)), compare: strictComparison },\\n  { name: 'varUint', read: decoding.readVarUint, write: encoding.writeVarUint, gen: gen => prng.uint53(gen, 0, binary.BITS32), compare: strictComparison },\\n  { name: 'varInt', read: decoding.readVarInt, write: encoding.writeVarInt, gen: gen => prng.int53(gen, number.LOWEST_INT32, number.HIGHEST_INT32), compare: strictComparison },\\n  { name: 'Any', read: decoding.readAny, write: encoding.writeAny, gen: genAny, compare: t.compare }\\n]\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatRandomWrites = tc => {\\n  t.describe(`Writing ${loops} random values`, `defLen=${defLen}`)\\n  const gen = tc.prng\\n  const ops = []\\n  const encoder = encoding.createEncoder()\\n  for (let i = 0; i < 10000; i++) {\\n    const pair = prng.oneOf(gen, encodingPairs)\\n    const val = pair.gen(gen)\\n    pair.write(encoder, val)\\n    ops.push({\\n      compare: pair.compare,\\n      read: pair.read,\\n      val,\\n      name: pair.name\\n    })\\n  }\\n  const tailData = prng.uint8Array(gen, prng.int32(gen, 0, defLen))\\n  encoding.writeUint8Array(encoder, tailData)\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(encoding.length(encoder) === buf.byteLength)\\n  for (let i = 0; i < ops.length; i++) {\\n    const o = ops[i]\\n    const val = o.read(decoder)\\n    t.assert(o.compare(val, o.val), o.name)\\n  }\\n  t.compare(tailData, decoding.readTailAsUint8Array(decoder))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testWriteUint8ArrayOverflow = tc => {\\n  const encoder = encoding.createEncoder()\\n  const initialLen = encoder.cbuf.byteLength\\n  const buf = buffer.createUint8ArrayFromLen(initialLen * 4)\\n  for (let i = 0; i < buf.length; i++) {\\n    buf[i] = i\\n  }\\n  encoding.writeUint8Array(encoder, buf)\\n  encoding.write(encoder, 42)\\n  const res = encoding.toUint8Array(encoder)\\n  t.assert(res.length === initialLen * 4 + 1)\\n  for (let i = 0; i < buf.length - 1; i++) {\\n    t.assert(res[i] === (i % 256))\\n  }\\n  t.assert(res[initialLen * 4] === 42)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSetOnOverflow = tc => {\\n  const encoder = encoding.createEncoder()\\n  const initialLen = encoder.cbuf.byteLength\\n  encoder.cpos = initialLen - 2\\n  encoding.writeUint32(encoder, binary.BITS32)\\n  const buf = encoding.toUint8Array(encoder)\\n  t.assert(encoding.length(encoder) === initialLen + 2)\\n  const decoder = decoding.createDecoder(buf)\\n  const space = buffer.createUint8ArrayFromArrayBuffer(decoding.readUint8Array(decoder, initialLen - 2))\\n  for (let i = 0; i < initialLen - 2; i++) {\\n    t.assert(space[i] === 0)\\n  }\\n  t.assert(decoding.hasContent(decoder))\\n  t.assert(binary.BITS32 === decoding.readUint32(decoder))\\n  t.assert(!decoding.hasContent(decoder))\\n  encoding.setUint8(encoder, 5, binary.BITS8)\\n  encoding.setUint8(encoder, initialLen + 1, 7)\\n  const buf2 = encoding.toUint8Array(encoder)\\n  t.assert(buf2[5] === binary.BITS8)\\n  t.assert(buf[5] === 0, 'old buffer is not affected')\\n  t.assert(buf2[initialLen + 1] === 7)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testCloneDecoder = tc => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeUint8(encoder, 12132)\\n  encoding.writeVarUint(encoder, 329840128734)\\n  encoding.writeVarString(encoder, 'dtrnuiaednudiaendturinaedt nduiaen dturinaed ')\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  decoding.skip8(decoder)\\n  const decoder2 = decoding.clone(decoder)\\n  const payload1 = decoding.readTailAsUint8Array(decoder)\\n  const payload2 = decoding.readTailAsUint8Array(decoder2)\\n  t.compare(payload1, payload2)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testWriteBinaryEncoder = tc => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeUint16(encoder, 4)\\n  const encoder2 = encoding.createEncoder()\\n  encoding.writeVarUint(encoder2, 143095)\\n  encoding.writeBinaryEncoder(encoder2, encoder)\\n  const buf = encoding.toUint8Array(encoder2)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(decoding.readVarUint(decoder) === 143095)\\n  t.assert(decoding.readUint16(decoder) === 4)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testOverflowStringDecoding = tc => {\\n  const gen = tc.prng\\n  const encoder = encoding.createEncoder()\\n  let longStr = ''\\n  while (longStr.length < 11000) {\\n    longStr += prng.utf16String(gen, 100000)\\n  }\\n  encoding.writeVarString(encoder, longStr)\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(longStr === decoding.readVarString(decoder))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRleEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.RleEncoder(encoding.writeVarUint)\\n  for (let i = 0; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.RleDecoder(encoding.toUint8Array(encoder), decoding.readVarUint)\\n  for (let i = 0; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRleIntDiffEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.RleIntDiffEncoder(0)\\n  for (let i = -N; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.RleIntDiffDecoder(encoding.toUint8Array(encoder), 0)\\n  for (let i = -N; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUintOptRleEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.UintOptRleEncoder()\\n  for (let i = 0; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.UintOptRleDecoder(encoder.toUint8Array())\\n  for (let i = 0; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIntDiffRleEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.IntDiffOptRleEncoder()\\n  for (let i = -N; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.IntDiffOptRleDecoder(encoder.toUint8Array())\\n  for (let i = -N; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIntEncoders = tc => {\\n  const arrLen = 10000\\n  const gen = tc.prng\\n  /**\\n   * @type {Array<number>}\\n   */\\n  const vals = []\\n  for (let i = 0; i < arrLen; i++) {\\n    vals.push(prng.int32(gen, -10, 10))\\n  }\\n  /**\\n   * @type {Array<{ encoder: any, read: function(any):any }>}\\n   */\\n  const intEncoders = [\\n    { encoder: new encoding.IntDiffOptRleEncoder(), read: encoder => new decoding.IntDiffOptRleDecoder(encoder.toUint8Array()) },\\n    { encoder: new encoding.IntDiffEncoder(0), read: encoder => new decoding.IntDiffDecoder(encoding.toUint8Array(encoder), 0) },\\n    { encoder: new encoding.IntDiffEncoder(42), read: encoder => new decoding.IntDiffDecoder(encoding.toUint8Array(encoder), 42) },\\n    { encoder: new encoding.RleIntDiffEncoder(0), read: encoder => new decoding.RleIntDiffDecoder(encoding.toUint8Array(encoder), 0) }\\n  ]\\n  intEncoders.forEach(({ encoder, read }) => {\\n    vals.forEach(v => encoder.write(v))\\n    /**\\n     * @type {Array<number>}\\n     */\\n    const readVals = []\\n    const dec = read(encoder)\\n    for (let i = 0; i < arrLen; i++) {\\n      readVals.push(dec.read())\\n    }\\n    t.compare(vals, readVals)\\n  })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIntDiffEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.IntDiffEncoder(0)\\n  for (let i = -N; i < N; i++) {\\n    encoder.write(i)\\n  }\\n  const decoder = new decoding.IntDiffDecoder(encoding.toUint8Array(encoder), 0)\\n  for (let i = -N; i < N; i++) {\\n    t.assert(i === decoder.read())\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testStringDecoder = tc => {\\n  const gen = tc.prng\\n  const N = 1000\\n  const words = []\\n  for (let i = 0; i < N; i++) {\\n    words.push(prng.utf16String(gen))\\n    if (i % 100 === 0) {\\n      const char = prng.char(gen).slice(0, 1)\\n      words.push(char)\\n      words.push(char)\\n    }\\n    if (i % 107 === 0) {\\n      words.push(prng.word(gen, 3000, 8000))\\n    }\\n  }\\n  const encoder = new encoding.StringEncoder()\\n  for (let i = 0; i < words.length; i++) {\\n    encoder.write(words[i])\\n  }\\n  const decoder = new decoding.StringDecoder(encoder.toUint8Array())\\n  for (let i = 0; i < words.length; i++) {\\n    t.assert(decoder.read() === words[i])\\n  }\\n}\\n\",\"import { simpleDiffString, simpleDiffArray } from './diff.js'\\nimport * as prng from './prng.js'\\nimport * as f from './function.js'\\nimport * as t from './testing.js'\\nimport * as object from './object.js'\\n\\n/**\\n * @param {string} a\\n * @param {string} b\\n * @param {{index: number,remove:number,insert:string}} expected\\n */\\nfunction runDiffTest (a, b, expected) {\\n  const result = simpleDiffString(a, b)\\n  t.compare(result, expected)\\n  const arrResult = simpleDiffArray(a.split(''), b.split(''))\\n  t.compare(arrResult, object.assign({}, result, { insert: result.insert.split('') }))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testDiffing = tc => {\\n  runDiffTest('abc', 'axc', { index: 1, remove: 1, insert: 'x' })\\n  runDiffTest('bc', 'xc', { index: 0, remove: 1, insert: 'x' })\\n  runDiffTest('ab', 'ax', { index: 1, remove: 1, insert: 'x' })\\n  runDiffTest('b', 'x', { index: 0, remove: 1, insert: 'x' })\\n  runDiffTest('', 'abc', { index: 0, remove: 0, insert: 'abc' })\\n  runDiffTest('abc', 'xyz', { index: 0, remove: 3, insert: 'xyz' })\\n  runDiffTest('axz', 'au', { index: 1, remove: 2, insert: 'u' })\\n  runDiffTest('ax', 'axy', { index: 2, remove: 0, insert: 'y' })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatDiffing = tc => {\\n  const a = prng.word(tc.prng)\\n  const b = prng.word(tc.prng)\\n  const change = simpleDiffString(a, b)\\n  const recomposed = `${a.slice(0, change.index)}${change.insert}${a.slice(change.index + change.remove)}`\\n  t.compareStrings(recomposed, b)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testArrayDiffing = tc => {\\n  const a = [[1, 2], { x: 'x' }]\\n  const b = [[1, 2], { x: 'x' }]\\n  t.compare(simpleDiffArray(a, b, f.equalityFlat), { index: 2, remove: 0, insert: [] })\\n  t.compare(simpleDiffArray(a, b, f.equalityStrict), { index: 0, remove: 2, insert: b })\\n  t.compare(simpleDiffArray([{ x: 'y' }, []], a, f.equalityFlat), { index: 0, remove: 2, insert: b })\\n}\\n\",\"import * as t from './testing.js'\\nimport * as math from './math.js'\\nimport * as buffer from './buffer.js'\\nimport * as map from './map.js'\\nimport * as promise from './promise.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testComparing = tc => {\\n  t.compare({}, {})\\n  t.compare({ a: 4 }, { a: 4 }, 'simple compare (object)')\\n  t.compare([1, 2], [1, 2], 'simple compare (array)')\\n  t.compare({ a: [1, 2] }, { a: [1, 2] }, 'simple compare nested')\\n  t.compare(new Set(['3', 1234]), new Set(['3', 1234]), 'compare Sets')\\n  const map1 = map.create()\\n  map1.set(1, 2)\\n  map1.set('x', {})\\n  map1.set(98, 'tst')\\n  const map2 = new Map()\\n  map2.set(1, 2)\\n  map2.set('x', {})\\n  map2.set(98, 'tst')\\n  t.compare(map1, map2, 'compare Maps')\\n\\n  t.describe('The following errors are expected!')\\n  t.fails(() => {\\n    t.compare({ a: 4 }, { b: 5 }, 'childs are not equal')\\n  })\\n  t.fails(() => {\\n    t.compare({ a: 4 }, { a: 5 }, 'childs are not equal')\\n  })\\n  t.fails(() => {\\n    t.compare({ a: 4 }, null, 'childs are not equal')\\n  })\\n  t.fails(() => {\\n    // @ts-ignore\\n    t.compare({ a: 4 }, [4], 'childs have different types')\\n  })\\n  t.fails(() => {\\n    t.compare({ a: 4 }, { a: 4, b: 5 }, 'childs have different length (object)')\\n  })\\n  t.fails(() => {\\n    t.compare([1], [1, 2]) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    t.compare(buffer.createUint8ArrayFromLen(1), buffer.createUint8ArrayFromLen(2), 'Uint8Arrays have different length')\\n  })\\n  t.fails(() => {\\n    t.compare(buffer.createUint8ArrayFromLen(1).buffer, buffer.createUint8ArrayFromLen(2).buffer, 'ArrayBuffer have different length')\\n  })\\n  t.fails(() => {\\n    t.compareStrings('str1', 'str2', 'Strings comparison can fail')\\n  })\\n  t.compareArrays([], [], 'Comparing empty arrays')\\n  t.fails(() => {\\n    t.compareArrays([1], [1, 2], 'Compare arrays with different length')\\n  })\\n  t.fails(() => {\\n    t.compareArrays([1], [2]) // Compare different arrays -- no message\\n  })\\n  t.compareObjects({ x: 1 }, { x: 1 }, 'comparing objects')\\n  t.fails(() => {\\n    t.compareObjects({}, { x: 1 }, 'compareObjects can fail')\\n  })\\n  t.fails(() => {\\n    t.compareObjects({ x: 3 }, { x: 1 }) // Compare different objects -- no message\\n  })\\n  t.fails(() => {\\n    t.compare({ x: undefined }, { y: 1 }, 'compare correctly handles undefined')\\n  })\\n  t.fails(() => {\\n    t.compareObjects({ x: undefined }, { y: 1 }, 'compare correctly handles undefined')\\n  })\\n  t.describe('Map fails')\\n  t.fails(() => {\\n    const m1 = new Map()\\n    m1.set(1, 2)\\n    const m2 = new Map()\\n    m2.set(1, 3)\\n    t.compare(m1, m2) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    const m1 = new Map()\\n    m1.set(2, 2)\\n    const m2 = new Map()\\n    m2.set(1, 2)\\n    t.compare(m1, m2) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    const m1 = new Map()\\n    m1.set(1, 2)\\n    const m2 = new Map()\\n    t.compare(m1, m2) // childs have different length (array) -- no message\\n  })\\n  t.describe('Set fails')\\n  t.fails(() => {\\n    t.compare(new Set([1]), new Set([1, 2])) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    t.compare(new Set([1]), new Set([2])) // childs have different length (array) -- no message\\n  })\\n}\\n\\nexport const testFailing = () => {\\n  t.fails(() => {\\n    t.fail('This fail is expected')\\n  })\\n}\\n\\nexport const testSkipping = () => {\\n  t.skip(false)\\n  t.assert(true)\\n  t.skip()\\n  /* istanbul ignore next */\\n  t.fail('should have skipped')\\n}\\n\\nexport const testAsync = async () => {\\n  await t.measureTimeAsync('time', () => promise.create(r => setTimeout(r)))\\n  await t.groupAsync('some description', () => promise.wait(1))\\n}\\n\\nexport const testRepeatRepetition = () => {\\n  const arr = []\\n  const n = 100\\n  for (let i = 1; i <= n; i++) {\\n    arr.push(i)\\n  }\\n  t.assert(arr.reduce(math.add, 0) === (n + 1) * n / 2)\\n}\\n\",\"/**\\n * Error helpers.\\n *\\n * @module error\\n */\\n\\n/**\\n * @param {string} s\\n * @return {Error}\\n */\\n/* istanbul ignore next */\\nexport const create = s => new Error(s)\\n\\n/**\\n * @throws {Error}\\n * @return {never}\\n */\\n/* istanbul ignore next */\\nexport const methodUnimplemented = () => {\\n  throw create('Method unimplemented')\\n}\\n\\n/**\\n * @throws {Error}\\n * @return {never}\\n */\\n/* istanbul ignore next */\\nexport const unexpectedCase = () => {\\n  throw create('Unexpected case')\\n}\\n\",\"/* eslint-env browser */\\n\\n/**\\n * Helpers to work with IndexedDB.\\n *\\n * @module idb\\n */\\n\\nimport * as promise from './promise.js'\\nimport * as error from './error.js'\\n\\n/**\\n * IDB Request to Promise transformer\\n *\\n * @param {IDBRequest} request\\n * @return {Promise<any>}\\n */\\n/* istanbul ignore next */\\nexport const rtop = request => promise.create((resolve, reject) => {\\n  /* istanbul ignore next */\\n  // @ts-ignore\\n  request.onerror = event => reject(new Error(event.target.error))\\n  /* istanbul ignore next */\\n  // @ts-ignore\\n  request.onblocked = () => location.reload()\\n  // @ts-ignore\\n  request.onsuccess = event => resolve(event.target.result)\\n})\\n\\n/**\\n * @param {string} name\\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\\n * @return {Promise<IDBDatabase>}\\n */\\n/* istanbul ignore next */\\nexport const openDB = (name, initDB) => promise.create((resolve, reject) => {\\n  const request = indexedDB.open(name)\\n  /**\\n   * @param {any} event\\n   */\\n  request.onupgradeneeded = event => initDB(event.target.result)\\n  /* istanbul ignore next */\\n  /**\\n   * @param {any} event\\n   */\\n  request.onerror = event => reject(error.create(event.target.error))\\n  /* istanbul ignore next */\\n  request.onblocked = () => location.reload()\\n  /**\\n   * @param {any} event\\n   */\\n  request.onsuccess = event => {\\n    /**\\n     * @type {IDBDatabase}\\n     */\\n    const db = event.target.result\\n    /* istanbul ignore next */\\n    db.onversionchange = () => { db.close() }\\n    /* istanbul ignore if */\\n    if (typeof addEventListener !== 'undefined') {\\n      addEventListener('unload', () => db.close())\\n    }\\n    resolve(db)\\n  }\\n})\\n\\n/**\\n * @param {string} name\\n */\\n/* istanbul ignore next */\\nexport const deleteDB = name => rtop(indexedDB.deleteDatabase(name))\\n\\n/**\\n * @param {IDBDatabase} db\\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\\n */\\n/* istanbul ignore next */\\nexport const createStores = (db, definitions) => definitions.forEach(d =>\\n  // @ts-ignore\\n  db.createObjectStore.apply(db, d)\\n)\\n\\n/**\\n * @param {IDBDatabase} db\\n * @param {Array<string>} stores\\n * @param {\\\"readwrite\\\"|\\\"readonly\\\"} [access]\\n * @return {Array<IDBObjectStore>}\\n */\\nexport const transact = (db, stores, access = 'readwrite') => {\\n  const transaction = db.transaction(stores, access)\\n  return stores.map(store => getStore(transaction, store))\\n}\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<number>}\\n */\\n/* istanbul ignore next */\\nexport const count = (store, range) =>\\n  rtop(store.count(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const get = (store, key) =>\\n  rtop(store.get(key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\\n */\\n/* istanbul ignore next */\\nexport const del = (store, key) =>\\n  rtop(store.delete(key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | boolean} item\\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\\n */\\n/* istanbul ignore next */\\nexport const put = (store, item, key) =>\\n  rtop(store.put(item, key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | boolean}  item\\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\\n * @return {Promise<any>}\\n */\\n/* istanbul ignore next */\\nexport const add = (store, item, key) =>\\n  rtop(store.add(item, key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date}  item\\n * @return {Promise<number>} Returns the generated key\\n */\\n/* istanbul ignore next */\\nexport const addAutoKey = (store, item) =>\\n  rtop(store.add(item))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const getAll = (store, range) =>\\n  rtop(store.getAll(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const getAllKeys = (store, range) =>\\n  rtop(store.getAllKeys(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} query\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n * @return {Promise<any>}\\n */\\nexport const queryFirst = (store, query, direction) => {\\n  /**\\n   * @type {any}\\n   */\\n  let first = null\\n  return iterateKeys(store, query, key => {\\n    first = key\\n    return false\\n  }, direction).then(() => first)\\n}\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @return {Promise<any>}\\n */\\nexport const getLastKey = store => queryFirst(store, null, 'prev')\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @return {Promise<any>}\\n */\\nexport const getFirstKey = store => queryFirst(store, null, 'prev')\\n\\n/**\\n * @typedef KeyValuePair\\n * @type {Object}\\n * @property {any} k key\\n * @property {any} v Value\\n */\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<KeyValuePair>>}\\n */\\n/* istanbul ignore next */\\nexport const getAllKeysValues = (store, range) =>\\n  // @ts-ignore\\n  promise.all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })))\\n\\n/**\\n * @param {any} request\\n * @param {function(IDBCursorWithValue):void|boolean} f\\n * @return {Promise<void>}\\n */\\n/* istanbul ignore next */\\nconst iterateOnRequest = (request, f) => promise.create((resolve, reject) => {\\n  /* istanbul ignore next */\\n  request.onerror = reject\\n  /**\\n   * @param {any} event\\n   */\\n  request.onsuccess = event => {\\n    const cursor = event.target.result\\n    if (cursor === null || f(cursor) === false) {\\n      return resolve()\\n    }\\n    cursor.continue()\\n  }\\n})\\n\\n/**\\n * Iterate on keys and values\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} keyrange\\n * @param {function(any,any):void|boolean} f Callback that receives (value, key)\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n */\\n/* istanbul ignore next */\\nexport const iterate = (store, keyrange, f, direction = 'next') =>\\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key))\\n\\n/**\\n * Iterate on the keys (no values)\\n *\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} keyrange\\n * @param {function(any):void|boolean} f callback that receives the key\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n */\\n/* istanbul ignore next */\\nexport const iterateKeys = (store, keyrange, f, direction = 'next') =>\\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key))\\n\\n/**\\n * Open store from transaction\\n * @param {IDBTransaction} t\\n * @param {String} store\\n * @returns {IDBObjectStore}\\n */\\n/* istanbul ignore next */\\nexport const getStore = (t, store) => t.objectStore(store)\\n\\n/**\\n * @param {any} lower\\n * @param {any} upper\\n * @param {boolean} lowerOpen\\n * @param {boolean} upperOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\\n\\n/**\\n * @param {any} upper\\n * @param {boolean} upperOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeUpperBound = (upper, upperOpen) => IDBKeyRange.upperBound(upper, upperOpen)\\n\\n/**\\n * @param {any} lower\\n * @param {boolean} lowerOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeLowerBound = (lower, lowerOpen) => IDBKeyRange.lowerBound(lower, lowerOpen)\\n\",\"import * as t from './testing.js'\\nimport * as idb from './indexeddb.js'\\nimport { isBrowser } from './environment.js'\\n\\n/* istanbul ignore next */\\n/**\\n * @param {IDBDatabase} db\\n */\\nconst initTestDB = db => idb.createStores(db, [['test', { autoIncrement: true }]])\\nconst testDBName = 'idb-test'\\n\\n/* istanbul ignore next */\\n/**\\n * @param {IDBDatabase} db\\n */\\nconst createTransaction = db => db.transaction(['test'], 'readwrite')\\n\\n/* istanbul ignore next */\\n/**\\n * @param {IDBTransaction} t\\n * @return {IDBObjectStore}\\n */\\nconst getStore = t => idb.getStore(t, 'test')\\n\\n/* istanbul ignore next */\\nexport const testRetrieveElements = async () => {\\n  t.skip(!isBrowser)\\n  t.describe('create, then iterate some keys')\\n  await idb.deleteDB(testDBName)\\n  const db = await idb.openDB(testDBName, initTestDB)\\n  const transaction = createTransaction(db)\\n  const store = getStore(transaction)\\n  await idb.put(store, 0, ['t', 1])\\n  await idb.put(store, 1, ['t', 2])\\n  const expectedKeys = [['t', 1], ['t', 2]]\\n  const expectedVals = [0, 1]\\n  const expectedKeysVals = [{ v: 0, k: ['t', 1] }, { v: 1, k: ['t', 2] }]\\n  t.describe('idb.getAll')\\n  const valsGetAll = await idb.getAll(store)\\n  t.compare(valsGetAll, expectedVals)\\n  t.describe('idb.getAllKeys')\\n  const valsGetAllKeys = await idb.getAllKeys(store)\\n  t.compare(valsGetAllKeys, expectedKeys)\\n  t.describe('idb.getAllKeysVals')\\n  const valsGetAllKeysVals = await idb.getAllKeysValues(store)\\n  t.compare(valsGetAllKeysVals, expectedKeysVals)\\n\\n  /**\\n   * @param {string} desc\\n   * @param {IDBKeyRange?} keyrange\\n   */\\n  const iterateTests = async (desc, keyrange) => {\\n    t.describe(`idb.iterate (${desc})`)\\n    /**\\n     * @type {Array<{v:any,k:any}>}\\n     */\\n    const valsIterate = []\\n    await idb.iterate(store, keyrange, (v, k) => {\\n      valsIterate.push({ v, k })\\n    })\\n    t.compare(valsIterate, expectedKeysVals)\\n    t.describe(`idb.iterateKeys (${desc})`)\\n    /**\\n     * @type {Array<any>}\\n     */\\n    const keysIterate = []\\n    await idb.iterateKeys(store, keyrange, key => {\\n      keysIterate.push(key)\\n    })\\n    t.compare(keysIterate, expectedKeys)\\n  }\\n  await iterateTests('range=null', null)\\n  const range = idb.createIDBKeyRangeBound(['t', 1], ['t', 2], false, false)\\n  // adding more items that should not be touched by iteration with above range\\n  await idb.put(store, 2, ['t', 3])\\n  await idb.put(store, 2, ['t', 0])\\n  await iterateTests('range!=null', range)\\n\\n  t.describe('idb.get')\\n  const getV = await idb.get(store, ['t', 1])\\n  t.assert(getV === 0)\\n  t.describe('idb.del')\\n  await idb.del(store, ['t', 0])\\n  const getVDel = await idb.get(store, ['t', 0])\\n  t.assert(getVDel === undefined)\\n  t.describe('idb.add')\\n  await idb.add(store, 99, 42)\\n  const idbVAdd = await idb.get(store, 42)\\n  t.assert(idbVAdd === 99)\\n  t.describe('idb.addAutoKey')\\n  const key = await idb.addAutoKey(store, 1234)\\n  const retrieved = await idb.get(store, key)\\n  t.assert(retrieved === 1234)\\n}\\n\",\"import * as binary from '../binary.js'\\nimport * as math from '../math.js'\\n\\n/**\\n * @module prng\\n */\\nconst N = 624\\nconst M = 397\\n\\n/**\\n * @param {number} u\\n * @param {number} v\\n */\\nconst twist = (u, v) => ((((u & 0x80000000) | (v & 0x7fffffff)) >>> 1) ^ ((v & 1) ? 0x9908b0df : 0))\\n\\n/**\\n * @param {Uint32Array} state\\n */\\nconst nextState = state => {\\n  let p = 0\\n  let j\\n  for (j = N - M + 1; --j; p++) {\\n    state[p] = state[p + M] ^ twist(state[p], state[p + 1])\\n  }\\n  for (j = M; --j; p++) {\\n    state[p] = state[p + M - N] ^ twist(state[p], state[p + 1])\\n  }\\n  state[p] = state[p + M - N] ^ twist(state[p], state[0])\\n}\\n\\n/**\\n * This is a port of Shawn Cokus's implementation of the original Mersenne Twister algorithm (http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/MTARCOK/mt19937ar-cok.c).\\n * MT has a very high period of 2^19937. Though the authors of xorshift describe that a high period is not\\n * very relevant (http://vigna.di.unimi.it/xorshift/). It is four times slower than xoroshiro128plus and\\n * needs to recompute its state after generating 624 numbers.\\n *\\n * ```js\\n * const gen = new Mt19937(new Date().getTime())\\n * console.log(gen.next())\\n * ```\\n *\\n * @public\\n */\\nexport class Mt19937 {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    const state = new Uint32Array(N)\\n    state[0] = seed\\n    for (let i = 1; i < N; i++) {\\n      state[i] = (math.imul(1812433253, (state[i - 1] ^ (state[i - 1] >>> 30))) + i) & binary.BITS32\\n    }\\n    this._state = state\\n    this._i = 0\\n    nextState(this._state)\\n  }\\n\\n  /**\\n   * Generate a random signed integer.\\n   *\\n   * @return {Number} A 32 bit signed integer.\\n   */\\n  next () {\\n    if (this._i === N) {\\n      // need to compute a new state\\n      nextState(this._state)\\n      this._i = 0\\n    }\\n    let y = this._state[this._i++]\\n    y ^= (y >>> 11)\\n    y ^= (y << 7) & 0x9d2c5680\\n    y ^= (y << 15) & 0xefc60000\\n    y ^= (y >>> 18)\\n    return (y >>> 0) / (binary.BITS32 + 1)\\n  }\\n}\\n\",\"\\nimport { Xoroshiro128plus } from './prng/Xoroshiro128plus.js'\\nimport * as prng from './prng.js'\\nimport { MAX_SAFE_INTEGER } from './number.js'\\nimport * as binary from './binary.js'\\nimport * as t from './testing.js'\\nimport { Xorshift32 } from './prng/Xorshift32.js'\\nimport { Mt19937 } from './prng/Mt19937.js'\\nimport * as dom from './dom.js'\\nimport { isBrowser, production } from './environment.js'\\nimport * as math from './math.js'\\n\\nconst genTestData = 5000\\n\\n/**\\n * @param {t.TestCase} tc\\n * @param {prng.PRNG} gen\\n */\\nconst runGenTest = (tc, gen) => {\\n  t.group('next - average distribution', () => {\\n    let sum = 0\\n    for (let i = 0; i < genTestData; i++) {\\n      const next = gen.next()\\n      if (next >= 1) {\\n        t.fail('unexpected prng result')\\n      }\\n      sum += next\\n    }\\n    const avg = sum / genTestData\\n    t.assert(avg >= 0.45)\\n    t.assert(avg <= 0.55)\\n  })\\n\\n  t.group('bool - bool distribution is fair', () => {\\n    let head = 0\\n    let tail = 0\\n    let b\\n    let i\\n\\n    for (i = 0; i < genTestData; i++) {\\n      b = prng.bool(gen)\\n      if (b) {\\n        head++\\n      } else {\\n        tail++\\n      }\\n    }\\n    t.info(`Generated ${head} heads and ${tail} tails.`)\\n    t.assert(tail >= math.floor(genTestData * 0.45), 'Generated enough tails.')\\n    t.assert(head >= math.floor(genTestData * 0.45), 'Generated enough heads.')\\n  })\\n  t.group('int31 - integers average correctly', () => {\\n    let count = 0\\n    let i\\n\\n    for (i = 0; i < genTestData; i++) {\\n      count += prng.uint32(gen, 0, 100)\\n    }\\n    const average = count / genTestData\\n    const expectedAverage = 100 / 2\\n    t.info(`Average is: ${average}. Expected average is ${expectedAverage}.`)\\n    t.assert(math.abs(average - expectedAverage) <= 2, 'Expected average is at most 1 off.')\\n  })\\n\\n  t.group('int32 - generates integer with 32 bits', () => {\\n    let largest = 0\\n    let smallest = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.int32(gen, -binary.BITS31, binary.BITS31)\\n      if (newNum > largest) {\\n        largest = newNum\\n      }\\n      if (newNum < smallest) {\\n        smallest = newNum\\n      }\\n    }\\n    t.assert(smallest < -1000, 'Smallest number is negative')\\n    t.assert(largest > 1000, 'Largest number is positive')\\n    t.info(`Largest number generated is ${largest} (0x${largest.toString(16)})`)\\n    t.info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`)\\n    t.assert((smallest & binary.BIT32) !== 0, 'Largest number is 32 bits long') // largest.. assuming we convert int to uint\\n  })\\n\\n  t.group('uint32 - generates unsigned integer with 32 bits', () => {\\n    let num = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.uint32(gen, 0, binary.BITS32)\\n      if (newNum > num) {\\n        num = newNum\\n      }\\n    }\\n    t.info(`Largest number generated is ${num} (0x${num.toString(16)})`)\\n    t.assert((num & binary.BIT32) !== 0, 'Largest number is 32 bits long.')\\n  })\\n\\n  t.group('int53 - generates integer exceeding 32 bits', () => {\\n    let largest = 0\\n    let smallest = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.int53(gen, Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)\\n      if (newNum > largest) {\\n        largest = newNum\\n      }\\n      if (newNum < smallest) {\\n        smallest = newNum\\n      }\\n    }\\n    t.assert(smallest < -1000, 'Smallest number is negative')\\n    t.assert(largest > 1000, 'Largest number is positive')\\n    t.info(`Largest number generated is ${largest}`)\\n    t.info(`Smallest number generated is ${smallest}`)\\n    t.assert(largest > (binary.BITS32 >>> 0), 'Largest number exceeds BITS32')\\n    t.assert(smallest < binary.BITS32, 'Smallest Number is smaller than BITS32 (negative)')\\n  })\\n\\n  t.group('uint53 - generates integer exceeding 32 bits', () => {\\n    let largest = 0\\n    let smallest = 10000\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.uint53(gen, 0, Number.MAX_SAFE_INTEGER)\\n      if (newNum > largest) {\\n        largest = newNum\\n      }\\n      /* istanbul ignore if */\\n      if (newNum < smallest) {\\n        smallest = newNum\\n      }\\n    }\\n    t.assert(smallest >= 0, 'Smallest number is not negative')\\n    t.assert(largest > 1000, 'Largest number is positive')\\n    t.info(`Largest number generated is ${largest}`)\\n    t.info(`Smallest number generated is ${smallest}`)\\n    t.assert(largest > (binary.BITS32 >>> 0), 'Largest number exceeds BITS32')\\n  })\\n\\n  t.group('int31 - generates integer with 31 bits', () => {\\n    let num = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.uint32(gen, 0, binary.BITS31)\\n      if (newNum > num) {\\n        num = newNum\\n      }\\n    }\\n    t.info(`Largest number generated is ${num} (0x${num.toString(16)})`)\\n    t.assert((num & binary.BIT31) !== 0, 'Largest number is 31 bits long.')\\n  })\\n\\n  t.group('real - has 53 bit resolution', () => {\\n    let num = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.real53(gen) * MAX_SAFE_INTEGER\\n      if (newNum > num) {\\n        num = newNum\\n      }\\n    }\\n    t.info(`Largest number generated is ${num}.`)\\n    t.assert((MAX_SAFE_INTEGER - num) / MAX_SAFE_INTEGER < 0.01, 'Largest number is close to MAX_SAFE_INTEGER (at most 1% off).')\\n  })\\n\\n  t.group('char - generates all ascii characters', () => {\\n    const charSet = new Set()\\n    const chars = ' !\\\"#$%&\\\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\\\"'\\n    for (let i = chars.length - 1; i >= 0; i--) {\\n      charSet.add(chars[i])\\n    }\\n    for (let i = 0; i < genTestData; i++) {\\n      const char = prng.char(gen)\\n      charSet.delete(char)\\n    }\\n    t.info(`Charactes missing: ${charSet.size} - generating all of \\\"${chars}\\\"`)\\n    t.assert(charSet.size === 0, 'Generated all documented characters.')\\n  })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testGeneratorXoroshiro128plus = tc => runGenTest(tc, new Xoroshiro128plus(tc.seed))\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testGeneratorXorshift32 = tc => {\\n  t.skip(!production)\\n  runGenTest(tc, new Xorshift32(tc.seed))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testGeneratorMt19937 = tc => {\\n  t.skip(!production)\\n  runGenTest(tc, new Mt19937(tc.seed))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {prng.PRNG} gen\\n * @param {t.TestCase} tc\\n */\\nconst printDistribution = (gen, tc) => {\\n  const DIAMETER = genTestData / 50\\n  const canvas = dom.canvas(DIAMETER * 3, DIAMETER)\\n  const ctx = canvas.getContext('2d')\\n  if (ctx == null) {\\n    return t.skip()\\n  }\\n  ctx.fillStyle = 'blue'\\n  for (let i = 0; i < genTestData; i++) {\\n    const x = prng.int32(gen, 0, DIAMETER * 3)\\n    const y = prng.int32(gen, 0, DIAMETER)\\n    ctx.fillRect(x, y, 1, 2)\\n  }\\n  t.printCanvas(canvas, DIAMETER)\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testNumberDistributions = tc => {\\n  t.skip(!isBrowser)\\n  t.group('Xoroshiro128plus', () => printDistribution(new Xoroshiro128plus(tc.seed), tc))\\n  t.group('Xorshift32', () => printDistribution(new Xorshift32(tc.seed), tc))\\n  t.group('MT19937', () => printDistribution(new Mt19937(tc.seed), tc))\\n}\\n\",\"import * as statistics from './statistics.js'\\nimport * as t from './testing.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMedian = tc => {\\n  t.assert(math.isNaN(statistics.median([])), 'median([]) = NaN')\\n  t.assert(statistics.median([1]) === 1, 'median([x]) = x')\\n  t.assert(statistics.median([1, 2, 3]) === 2, 'median([a,b,c]) = b')\\n  t.assert(statistics.median([1, 2, 3, 4]) === (2 + 3) / 2, 'median([a,b,c,d]) = (b+c)/2')\\n  t.assert(statistics.median([1, 2, 3, 4, 5]) === 3, 'median([a,b,c,d,e]) = c')\\n  t.assert(statistics.median([1, 2, 3, 4, 5, 6]) === (3 + 4) / 2, 'median([a,b,c,d,e,f]) = (c+d)/2')\\n}\\n\",\"\\nimport * as binary from './binary.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testBitx = tc => {\\n  for (let i = 1; i <= 32; i++) {\\n    // @ts-ignore\\n    t.assert(binary[`BIT${i}`] === (1 << (i - 1)), `BIT${i}=${1 << (i - 1)}`)\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testBitsx = tc => {\\n  t.assert(binary.BITS0 === 0)\\n  for (let i = 1; i < 32; i++) {\\n    const expected = ((1 << i) - 1) >>> 0\\n    // @ts-ignore\\n    const have = binary[`BITS${i}`]\\n    t.assert(have === expected, `BITS${i}=${have}=${expected}`)\\n  }\\n  t.assert(binary.BITS32 === 0xFFFFFFFF)\\n}\\n\",\"import * as random from './random.js'\\nimport * as t from './testing.js'\\nimport * as binary from './binary.js'\\nimport * as math from './math.js'\\nimport * as number from './number.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUint32 = tc => {\\n  const iterations = 10000\\n  let largest = 0\\n  let smallest = number.HIGHEST_INT32\\n  let newNum = 0\\n  let lenSum = 0\\n  let ones = 0\\n  for (let i = 0; i < iterations; i++) {\\n    newNum = random.uint32()\\n    lenSum += newNum.toString().length\\n    ones += newNum.toString(2).split('').filter(x => x === '1').length\\n    if (newNum > largest) {\\n      largest = newNum\\n    }\\n    if (newNum < smallest) {\\n      smallest = newNum\\n    }\\n  }\\n  t.info(`Largest number generated is ${largest} (0x${largest.toString(16)})`)\\n  t.info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`)\\n  t.info(`Average decimal length of number is ${lenSum / iterations}`)\\n  t.info(`Average number of 1s in number is ${ones / iterations} (expecting ~16)`)\\n  t.assert(((largest & binary.BITS32) >>> 0) === largest, 'Largest number is 32 bits long.')\\n  t.assert(((smallest & binary.BITS32) >>> 0) === smallest, 'Smallest number is 32 bits long.')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUuidv4 = tc => {\\n  t.info(`Generated a UUIDv4: ${random.uuidv4()}`)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUuidv4Overlaps = tc => {\\n  t.skip(!t.production)\\n  const iterations = t.extensive ? 1000000 : 10000\\n  const uuids = new Set()\\n  for (let i = 0; i < iterations; i++) {\\n    const uuid = random.uuidv4()\\n    if (uuids.has(uuid)) {\\n      t.fail('uuid already exists')\\n    } else {\\n      uuids.add(uuid)\\n    }\\n    if (uuids.size % (iterations / 20) === 0) {\\n      t.info(`${math.round(uuids.size * 100 / iterations)}% complete`)\\n    }\\n  }\\n  t.assert(uuids.size === iterations)\\n}\\n\",\"import * as promise from './promise.js'\\nimport * as t from './testing.js'\\nimport * as time from './time.js'\\nimport * as error from './error.js'\\n\\n/**\\n * @param {Promise<any>} p\\n * @param {number} min\\n * @param {number} max\\n */\\nconst measureP = (p, min, max) => {\\n  const start = time.getUnixTime()\\n  return p.then(() => {\\n    const duration = time.getUnixTime() - start\\n    t.assert(duration <= max, 'Expected promise to take less time')\\n    t.assert(duration >= min, 'Expected promise to take more time')\\n  })\\n}\\n\\n/**\\n * @template T\\n * @param {Promise<T>} p\\n * @return {Promise<T>}\\n */\\nconst failsP = p => promise.create((resolve, reject) => p.then(() => reject(error.create('Promise should fail')), resolve))\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatPromise = async tc => {\\n  t.assert(promise.createEmpty(r => r()).constructor === Promise, 'p.create() creates a Promise')\\n  t.assert(promise.resolve().constructor === Promise, 'p.reject() creates a Promise')\\n  const rejectedP = promise.reject()\\n  t.assert(rejectedP.constructor === Promise, 'p.reject() creates a Promise')\\n  rejectedP.catch(() => {})\\n  await promise.createEmpty(r => r())\\n  await failsP(promise.reject())\\n  await promise.resolve()\\n  await measureP(promise.wait(10), 7, 1000)\\n  await measureP(failsP(promise.until(15, () => false)), 15, 1000)\\n  const startTime = time.getUnixTime()\\n  await measureP(promise.until(0, () => (time.getUnixTime() - startTime) > 100), 100, 1000)\\n  await promise.all([promise.wait(5), promise.wait(10)])\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testispromise = tc => {\\n  t.assert(promise.isPromise(new Promise(() => {})))\\n  t.assert(promise.isPromise(promise.create(() => {})))\\n  const rej = promise.reject()\\n  t.assert(promise.isPromise(rej))\\n  rej.catch(() => {})\\n  t.assert(promise.isPromise(promise.resolve()))\\n  t.assert(promise.isPromise({ then: () => {}, catch: () => {}, finally: () => {} }))\\n  t.fails(() => {\\n    t.assert(promise.isPromise({ then: () => {}, catch: () => {} }))\\n  })\\n}\\n\",\"\\nexport class QueueNode {\\n  constructor () {\\n    /**\\n     * @type {QueueNode|null}\\n     */\\n    this.next = null\\n  }\\n}\\n\\nexport class Queue {\\n  constructor () {\\n    /**\\n     * @type {QueueNode | null}\\n     */\\n    this.start = null\\n    /**\\n     * @type {QueueNode | null}\\n     */\\n    this.end = null\\n  }\\n}\\n\\n/**\\n * @note The queue implementation is experimental and unfinished.\\n * Don't use this in production yet.\\n *\\n * @return {Queue}\\n */\\nexport const create = () => new Queue()\\n\\n/**\\n * @param {Queue} queue\\n */\\nexport const isEmpty = queue => queue.start === null\\n\\n/**\\n * @param {Queue} queue\\n * @param {QueueNode} n\\n */\\nexport const enqueue = (queue, n) => {\\n  if (queue.end !== null) {\\n    queue.end.next = n\\n    queue.end = n\\n  } else {\\n    queue.end = n\\n    queue.start = n\\n  }\\n}\\n\\n/**\\n * @param {Queue} queue\\n * @return {QueueNode | null}\\n */\\nexport const dequeue = queue => {\\n  const n = queue.start\\n  if (n !== null) {\\n    // @ts-ignore\\n    queue.start = n.next\\n    return n\\n  }\\n  return null\\n}\\n\",\"import * as t from './testing.js'\\nimport * as queue from './queue.js'\\n\\nclass QueueItem extends queue.QueueNode {\\n  /**\\n   * @param {number} v\\n   */\\n  constructor (v) {\\n    super()\\n    this.v = v\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testEnqueueDequeue = tc => {\\n  const N = 30\\n  /**\\n   * @type {queue.Queue}\\n   */\\n  const q = queue.create()\\n  t.assert(queue.isEmpty(q))\\n  t.assert(queue.dequeue(q) === null)\\n  for (let i = 0; i < N; i++) {\\n    queue.enqueue(q, new QueueItem(i))\\n    t.assert(!queue.isEmpty(q))\\n  }\\n  for (let i = 0; i < N; i++) {\\n    const item = /** @type {QueueItem} */ (queue.dequeue(q))\\n    t.assert(item !== null && item.v === i)\\n  }\\n  t.assert(queue.dequeue(q) === null)\\n}\\n\",\"import * as map from './map.js'\\nimport * as math from './math.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMap = tc => {\\n  const m = map.create()\\n  m.set(1, 2)\\n  m.set(2, 3)\\n  t.assert(map.map(m, (value, key) => value * 2 + key).reduce(math.add) === 13)\\n  let numberOfWrites = 0\\n  const createT = () => {\\n    numberOfWrites++\\n    return {}\\n  }\\n  map.setIfUndefined(m, 3, createT)\\n  map.setIfUndefined(m, 3, createT)\\n  map.setIfUndefined(m, 3, createT)\\n  t.compare(map.copy(m), m)\\n  t.assert(numberOfWrites === 1)\\n}\\n\",\"import * as eventloop from './eventloop.js'\\nimport * as t from './testing.js'\\nimport * as promise from './promise.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testEventloopOrder = tc => {\\n  let currI = 0\\n  for (let i = 0; i < 10; i++) {\\n    const bi = i\\n    eventloop.enqueue(() => {\\n      t.assert(currI++ === bi)\\n    })\\n  }\\n  eventloop.enqueue(() => {\\n    t.assert(currI === 10)\\n  })\\n  t.assert(currI === 0)\\n  return promise.all([\\n    promise.createEmpty(resolve => eventloop.enqueue(resolve)),\\n    promise.until(0, () => currI === 10)\\n  ])\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testTimeout = async tc => {\\n  let set = false\\n  const timeout = eventloop.timeout(0, () => {\\n    set = true\\n  })\\n  timeout.destroy()\\n  await promise.create(resolve => {\\n    eventloop.timeout(10, resolve)\\n  })\\n  t.assert(set === false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testInterval = async tc => {\\n  let set = false\\n  const timeout = eventloop.interval(1, () => {\\n    set = true\\n  })\\n  timeout.destroy()\\n  let i = 0\\n  eventloop.interval(1, () => {\\n    i++\\n  })\\n  await promise.until(0, () => i > 2)\\n  t.assert(set === false)\\n  t.assert(i > 1)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnimationFrame = async tc => {\\n  let x = false\\n  eventloop.animationFrame(() => { x = true })\\n  await promise.until(0, () => x)\\n  t.assert(x)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIdleCallback = async tc => {\\n  await promise.create(resolve => {\\n    eventloop.idleCallback(resolve)\\n  })\\n}\\n\",\"import * as time from './time.js'\\nimport * as t from './testing.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testTime = tc => {\\n  const l = time.getDate().getTime()\\n  const r = time.getUnixTime()\\n  t.assert(math.abs(l - r) < 10, 'Times generated are roughly the same')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testHumanDuration = tc => {\\n  t.assert(time.humanizeDuration(10) === '10ms')\\n  t.assert(time.humanizeDuration(0.1) === '100μs')\\n  t.assert(time.humanizeDuration(61030) === '1min 1s')\\n  t.assert(time.humanizeDuration(60030) === '1min')\\n  t.assert(time.humanizeDuration(3600000) === '1h')\\n  t.assert(time.humanizeDuration(3640000) === '1h 1min')\\n  t.assert(time.humanizeDuration(3700000) === '1h 2min')\\n  t.assert(time.humanizeDuration(60 * 60 * 1000 + 29000) === '1h')\\n  t.assert(time.humanizeDuration(60 * 60 * 1000 + 31000) === '1h 1min')\\n  t.assert(time.humanizeDuration(60 * 60 * 1000 + 31000 * 3) === '1h 2min')\\n  t.assert(time.humanizeDuration(3600000 * 25) === '1d 1h')\\n  t.assert(time.humanizeDuration(3600000 * 24.6) === '1d 1h')\\n  t.assert(time.humanizeDuration(3600000 * 25.6) === '1d 2h')\\n  t.assert(time.humanizeDuration(3600000 * 24 * 400) === '400d')\\n  // test round\\n  t.assert(time.humanizeDuration(6001) === '6s')\\n}\\n\",\"import * as t from './testing.js'\\nimport * as pair from './pair.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testPair = tc => {\\n  const ps = [pair.create(1, 2), pair.create(3, 4), pair.createReversed(6, 5)]\\n  t.describe('Counting elements in pair list')\\n  let countLeft = 0\\n  let countRight = 0\\n  pair.forEach(ps, (left, right) => {\\n    countLeft += left\\n    countRight += right\\n  })\\n  t.assert(countLeft === 9)\\n  t.assert(countRight === 12)\\n  t.assert(countLeft === pair.map(ps, left => left).reduce(math.add))\\n  t.assert(countRight === pair.map(ps, (left, right) => right).reduce(math.add))\\n}\\n\",\"import * as t from './testing.js'\\nimport * as object from './object.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testObject = tc => {\\n  t.assert(object.create().constructor === undefined, 'object.create creates an empty object without constructor')\\n  t.describe('object.equalFlat')\\n  t.assert(object.equalFlat({}, {}), 'comparing equal objects')\\n  t.assert(object.equalFlat({ x: 1 }, { x: 1 }), 'comparing equal objects')\\n  t.assert(object.equalFlat({ x: 'dtrn' }, { x: 'dtrn' }), 'comparing equal objects')\\n  t.assert(!object.equalFlat({ x: {} }, { x: {} }), 'flatEqual does not dive deep')\\n  t.assert(object.equalFlat({ x: undefined }, { x: undefined }), 'flatEqual handles undefined')\\n  t.assert(!object.equalFlat({ x: undefined }, { y: {} }), 'flatEqual handles undefined')\\n  t.describe('object.every')\\n  t.assert(object.every({ a: 1, b: 3 }, (v, k) => (v % 2) === 1 && k !== 'c'))\\n  t.assert(!object.every({ a: 1, b: 3, c: 5 }, (v, k) => (v % 2) === 1 && k !== 'c'))\\n  t.describe('object.some')\\n  t.assert(object.some({ a: 1, b: 3 }, (v, k) => v === 3 && k === 'b'))\\n  t.assert(!object.some({ a: 1, b: 5 }, (v, k) => v === 3))\\n  t.assert(object.some({ a: 1, b: 5 }, () => true))\\n  t.assert(!object.some({ a: 1, b: 5 }, (v, k) => false))\\n  t.describe('object.forEach')\\n  let forEachSum = 0\\n  object.forEach({ x: 1, y: 3 }, (v, k) => { forEachSum += v })\\n  t.assert(forEachSum === 4)\\n  t.describe('object.map')\\n  t.assert(object.map({ x: 1, z: 5 }, (v, k) => v).reduce(math.add) === 6)\\n  t.describe('object.length')\\n  t.assert(object.length({}) === 0)\\n  t.assert(object.length({ x: 1 }) === 1)\\n}\\n\",\"import * as t from './testing.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMath = tc => {\\n  t.describe('math.abs')\\n  t.assert(math.abs(-1) === 1)\\n  t.assert(math.abs(Number.MIN_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER)\\n  t.assert(math.abs(Number.MAX_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER)\\n  t.describe('math.add')\\n  t.assert([1, 2, 3, 4, 5].reduce(math.add) === 15)\\n  t.describe('math.ceil')\\n  t.assert(math.ceil(1.5) === 2)\\n  t.assert(math.ceil(-1.5) === -1)\\n  t.describe('math.floor')\\n  t.assert(math.floor(1.5) === 1)\\n  t.assert(math.floor(-1.5) === -2)\\n  t.describe('math.isNaN')\\n  t.assert(math.isNaN(NaN))\\n  // @ts-ignore\\n  t.assert(!math.isNaN(null))\\n  t.describe('math.max')\\n  t.assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(math.max) === 3475)\\n  t.describe('math.min')\\n  t.assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(math.min) === 1)\\n  t.describe('math.round')\\n  t.assert(math.round(0.5) === 1)\\n  t.assert(math.round(-0.5) === 0)\\n}\\n\",\"import * as t from './testing.js'\\nimport * as number from './number.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testNumber = tc => {\\n  t.describe('isNaN')\\n  t.assert(number.isNaN(NaN))\\n  t.assert(!number.isNaN(1 / 0))\\n  // @ts-ignore\\n  t.assert(number.isNaN('a' / 0))\\n  t.assert(!number.isNaN(0))\\n  t.describe('isInteger')\\n  t.assert(!number.isInteger(1 / 0))\\n  t.assert(!number.isInteger(NaN))\\n  t.assert(number.isInteger(0))\\n  t.assert(number.isInteger(-1))\\n}\\n\",\"import * as t from './testing.js'\\nimport * as buffer from './buffer.js'\\nimport * as prng from './prng.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatBase64Encoding = tc => {\\n  const gen = tc.prng\\n  const barr = prng.uint8Array(gen, 100000)\\n  const copied = buffer.copyUint8Array(barr)\\n  const encoded = buffer.toBase64(barr)\\n  t.assert(encoded.constructor === String)\\n  const decoded = buffer.fromBase64(encoded)\\n  t.assert(decoded.constructor === Uint8Array)\\n  t.assert(decoded.byteLength === barr.byteLength)\\n  for (let i = 0; i < barr.length; i++) {\\n    t.assert(barr[i] === decoded[i])\\n  }\\n  t.compare(copied, decoded)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyEncoding = tc => {\\n  const obj = { val: 1, arr: [1, 2], str: '409231dtrnä' }\\n  const res = buffer.decodeAny(buffer.encodeAny(obj))\\n  t.compare(obj, res)\\n}\\n\",\"/**\\n * Efficient sort implementations.\\n *\\n * Note: These sort implementations were created to compare different sorting algorithms in JavaScript.\\n * Don't use them if you don't know what you are doing. Native Array.sort is almost always a better choice.\\n *\\n * @module sort\\n */\\n\\nimport * as math from './math.js'\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {number} lo\\n * @param {number} hi\\n * @param {function(T,T):number} compare\\n */\\nexport const _insertionSort = (arr, lo, hi, compare) => {\\n  for (let i = lo + 1; i <= hi; i++) {\\n    for (let j = i; j > 0 && compare(arr[j - 1], arr[j]) > 0; j--) {\\n      const tmp = arr[j]\\n      arr[j] = arr[j - 1]\\n      arr[j - 1] = tmp\\n    }\\n  }\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @return {void}\\n */\\nexport const insertionSort = (arr, compare) => {\\n  _insertionSort(arr, 0, arr.length - 1, compare)\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {number} lo\\n * @param {number} hi\\n * @param {function(T,T):number} compare\\n */\\nconst _quickSort = (arr, lo, hi, compare) => {\\n  if (hi - lo < 42) {\\n    _insertionSort(arr, lo, hi, compare)\\n  } else {\\n    const pivot = arr[math.floor((lo + hi) / 2)]\\n    let i = lo\\n    let j = hi\\n    while (true) {\\n      while (compare(pivot, arr[i]) > 0) {\\n        i++\\n      }\\n      while (compare(arr[j], pivot) > 0) {\\n        j--\\n      }\\n      if (i >= j) {\\n        break\\n      }\\n      // swap arr[i] with arr[j]\\n      // and increment i and j\\n      const arri = arr[i]\\n      arr[i++] = arr[j]\\n      arr[j--] = arri\\n    }\\n    _quickSort(arr, lo, j, compare)\\n    _quickSort(arr, j + 1, hi, compare)\\n  }\\n}\\n\\n/**\\n * This algorithm beats Array.prototype.sort in Chrome only with arrays with 10 million entries.\\n * In most cases [].sort will do just fine. Make sure to performance test your use-case before you\\n * integrate this algorithm.\\n *\\n * Note that Chrome's sort is now a stable algorithm (Timsort). Quicksort is not stable.\\n *\\n * @template T\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @return {void}\\n */\\nexport const quicksort = (arr, compare) => {\\n  _quickSort(arr, 0, arr.length - 1, compare)\\n}\\n\",\"import * as prng from './prng.js'\\nimport * as t from './testing.js'\\nimport * as sort from './sort.js'\\n\\n/**\\n * @template T\\n * @param {t.TestCase} tc\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @param {function(T):number} getVal\\n */\\nconst runSortTest = (tc, arr, compare, getVal) => {\\n  const arrSort = arr\\n  const arrQuicksort = arr.slice()\\n  const arrInsertionsort = arr.slice()\\n  t.measureTime('Array.constructor.sort', () => {\\n    arrSort.sort(compare)\\n  })\\n  if (arrInsertionsort.length <= 10000) {\\n    t.measureTime('Insertionsort', () => {\\n      sort.insertionSort(arrInsertionsort, compare)\\n    })\\n    t.compareArrays(arrSort, arrInsertionsort, 'compare Insertionsort with expected result')\\n  }\\n  t.measureTime('Quicksort', () => {\\n    sort.quicksort(arrQuicksort, compare)\\n  })\\n  // quickSort is not stable\\n  t.compareArrays(arrSort.map(getVal), arrQuicksort.map(getVal), 'compare Quicksort with expected result')\\n}\\n\\n/**\\n * @template T\\n * @param {t.TestCase} tc\\n * @param {function(number):Array<T>} createArray\\n * @param {function(T,T):number} compare 0 if equal, 1 if a<b, -1 otherwise\\n * @param {function(T):number} getVal\\n */\\nconst createSortTest = (tc, createArray, compare, getVal) => {\\n  t.describe('sort 10 elements')\\n  runSortTest(tc, createArray(10), compare, getVal)\\n  t.describe('sort 10 elements')\\n  runSortTest(tc, createArray(10), compare, getVal)\\n  t.describe('sort 10 elements')\\n  runSortTest(tc, createArray(10), compare, getVal)\\n  t.describe('sort 50 elements')\\n  runSortTest(tc, createArray(50), compare, getVal)\\n  t.describe('sort 100 elements')\\n  runSortTest(tc, createArray(100), compare, getVal)\\n  t.describe('sort 500 elements')\\n  runSortTest(tc, createArray(500), compare, getVal)\\n  t.describe('sort 1k elements')\\n  runSortTest(tc, createArray(1000), compare, getVal)\\n  t.describe('sort 10k elements')\\n  runSortTest(tc, createArray(10000), compare, getVal)\\n  t.describe('sort 100k elements')\\n  runSortTest(tc, createArray(100000), compare, getVal)\\n  if (t.extensive) {\\n    t.describe('sort 1M elements')\\n    runSortTest(tc, createArray(1000000), compare, getVal)\\n    t.describe('sort 10M elements')\\n    runSortTest(tc, createArray(10000000), compare, getVal)\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSortUint16 = tc => {\\n  t.skip(!t.production)\\n  /**\\n   * @param {number} i\\n   * @return {number}\\n   */\\n  const getVal = i => i\\n  /**\\n   * @param {number} a\\n   * @param {number} b\\n   * @return {number}\\n   */\\n  const compare = (a, b) => a - b\\n  /**\\n   * @param {number} len\\n   * @return {Array<number>}\\n   */\\n  const createArray = len => Array.from(new Uint16Array(prng.uint8Array(tc.prng, len * 2)))\\n  createSortTest(tc, createArray, compare, getVal)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSortUint32 = tc => {\\n  t.skip(!t.production)\\n  /**\\n   * @param {number} i\\n   * @return {number}\\n   */\\n  const getVal = i => i\\n  /**\\n   * @param {number} a\\n   * @param {number} b\\n   * @return {number}\\n   */\\n  const compare = (a, b) => a - b\\n  /**\\n   * @param {number} len\\n   * @return {Array<number>}\\n   */\\n  const createArray = len => Array.from(prng.uint32Array(tc.prng, len))\\n  createSortTest(tc, createArray, compare, getVal)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSortObjectUint32 = tc => {\\n  /**\\n   * @param {{index:number}} obj\\n   * @return {number}\\n   */\\n  const getVal = obj => obj.index\\n  /**\\n   * @param {{index:number}} a\\n   * @param {{index:number}} b\\n   * @return {number}\\n   */\\n  const compare = (a, b) => a.index - b.index\\n  /**\\n   * @param {number} len\\n   * @return {Array<{index:number}>}\\n   */\\n  const createArray = len => Array.from(prng.uint32Array(tc.prng, len)).map(index => ({ index }))\\n  createSortTest(tc, createArray, compare, getVal)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testListVsArrayPerformance = tc => {\\n  /**\\n   * @typedef {{ val: number }} Val\\n   * @typedef {{ val: Val, next: item }|null} item\\n   */\\n  const len = 100000\\n  t.measureTime('array creation', () => {\\n    /**\\n     * @type {Array<Val>}\\n     */\\n    const array = new Array(len)\\n    for (let i = 0; i < len; i++) {\\n      array[i] = { val: i }\\n    }\\n  })\\n  t.measureTime('list creation', () => {\\n    /**\\n     * @type {item}\\n     */\\n    const listStart = { val: { val: 0 }, next: null }\\n    for (let i = 1, n = listStart; i < len; i++) {\\n      const next = { val: { val: i }, next: null }\\n      n.next = next\\n      n = next\\n    }\\n  })\\n}\\n\",\"/**\\n * Utility module to work with urls.\\n *\\n * @module url\\n */\\n\\nimport * as object from './object.js'\\n\\n/**\\n * Parse query parameters from an url.\\n *\\n * @param {string} url\\n * @return {Object<string,string>}\\n */\\nexport const decodeQueryParams = url => {\\n  /**\\n   * @type {Object<string,string>}\\n   */\\n  const query = {}\\n  const urlQuerySplit = url.split('?')\\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\\n  for (var i = 0; i < pairs.length; i++) {\\n    const item = pairs[i]\\n    if (item.length > 0) {\\n      const pair = item.split('=')\\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\\n    }\\n  }\\n  return query\\n}\\n\\n/**\\n * @param {Object<string,string>} params\\n * @return {string}\\n */\\nexport const encodeQueryParams = params =>\\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\\n\",\"import * as t from './testing.js'\\nimport * as url from './url.js'\\n\\n/**\\n * @param {Object<string,any>} params\\n */\\nconst paramTest = params => {\\n  const out = url.decodeQueryParams(url.encodeQueryParams(params))\\n  t.compareObjects(params, out, 'Compare params')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUrlParamQuery = tc => {\\n  paramTest({})\\n  paramTest({ a: '4' })\\n  paramTest({ a: 'dtrn', b: '0x0' })\\n\\n  t.compareObjects({ }, url.decodeQueryParams('http://localhost:8080/dtrn?'))\\n  t.compareObjects({ a: 'ay' }, url.decodeQueryParams('http://localhost:8080/dtrn?a=ay'))\\n  t.compareObjects({ a: '' }, url.decodeQueryParams('http://localhost:8080/dtrn?a='))\\n  t.compareObjects({ a: '' }, url.decodeQueryParams('http://localhost:8080/dtrn?a'))\\n  t.compareObjects({ a: 'ay' }, url.decodeQueryParams('http://localhost:8080/dtrn?a=ay&'))\\n  t.compareObjects({ a: 'ay', b: 'bey' }, url.decodeQueryParams('http://localhost:8080/dtrn?a=ay&b=bey'))\\n}\\n\",\"import * as t from './testing.js'\\nimport * as metric from './metric.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMetricPrefix = tc => {\\n  t.compare(metric.prefix(0), { n: 0, prefix: '' })\\n  t.compare(metric.prefix(1, -1), { n: 1, prefix: 'm' })\\n  t.compare(metric.prefix(1.5), { n: 1.5, prefix: '' })\\n  t.compare(metric.prefix(100.5), { n: 100.5, prefix: '' })\\n  t.compare(metric.prefix(1000.5), { n: 1.0005, prefix: 'k' })\\n  t.compare(metric.prefix(0.3), { n: 300, prefix: 'm' })\\n  t.compare(metric.prefix(0.001), { n: 1, prefix: 'm' })\\n  // up\\n  t.compare(metric.prefix(10000), { n: 10, prefix: 'k' })\\n  t.compare(metric.prefix(1e7), { n: 10, prefix: 'M' })\\n  t.compare(metric.prefix(1e11), { n: 100, prefix: 'G' })\\n  t.compare(metric.prefix(1e12 + 3), { n: (1e12 + 3) / 1e12, prefix: 'T' })\\n  t.compare(metric.prefix(1e15), { n: 1, prefix: 'P' })\\n  t.compare(metric.prefix(1e20), { n: 100, prefix: 'E' })\\n  t.compare(metric.prefix(1e22), { n: 10, prefix: 'Z' })\\n  t.compare(metric.prefix(1e24), { n: 1, prefix: 'Y' })\\n  t.compare(metric.prefix(1e28), { n: 10000, prefix: 'Y' })\\n  // down\\n  t.compare(metric.prefix(0.01), { n: 10, prefix: 'm' })\\n  t.compare(metric.prefix(1e-4), { n: 100, prefix: 'μ' })\\n  t.compare(metric.prefix(1e-9), { n: 1, prefix: 'n' })\\n  t.compare(metric.prefix(1e-12), { n: 1, prefix: 'p' })\\n  t.compare(metric.prefix(1e-14), { n: 10, prefix: 'f' })\\n  t.compare(metric.prefix(1e-18), { n: 1, prefix: 'a' })\\n  t.compare(metric.prefix(1e-21), { n: 1, prefix: 'z' })\\n  t.compare(metric.prefix(1e-22), { n: 100, prefix: 'y' })\\n  t.compare(metric.prefix(1e-30), { n: 0.000001, prefix: 'y' })\\n}\\n\",\"import * as f from './function.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testDeepEquality = tc => {\\n  t.assert(f.equalityDeep(1, 1))\\n  t.assert(!f.equalityDeep(1, 2))\\n  t.assert(!f.equalityDeep(1, '1'))\\n  t.assert(!f.equalityDeep(1, null))\\n\\n  const obj = { b: 5 }\\n  const map1 = new Map()\\n  const map2 = new Map()\\n  const map3 = new Map()\\n  const map4 = new Map()\\n  map1.set('a', obj)\\n  map2.set('a', { b: 5 })\\n  map3.set('b', obj)\\n  map4.set('a', obj)\\n  map4.set('b', obj)\\n\\n  t.assert(f.equalityDeep({ a: 4 }, { a: 4 }))\\n  t.assert(f.equalityDeep({ a: 4, obj: { b: 5 } }, { a: 4, obj }))\\n  t.assert(!f.equalityDeep({ a: 4 }, { a: 4, obj }))\\n  t.assert(f.equalityDeep({ a: [], obj }, { a: [], obj }))\\n  t.assert(!f.equalityDeep({ a: [], obj }, { a: [], obj: undefined }))\\n\\n  t.assert(f.equalityDeep({}, {}))\\n  t.assert(!f.equalityDeep({}, { a: 4 }))\\n\\n  t.assert(f.equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1]))\\n  t.assert(!f.equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 2]))\\n  t.assert(!f.equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1, 3]))\\n  t.assert(f.equalityDeep([], []))\\n  t.assert(!f.equalityDeep([1], []))\\n\\n  t.assert(f.equalityDeep(map1, map2))\\n  t.assert(!f.equalityDeep(map1, map3))\\n  t.assert(!f.equalityDeep(map1, map4))\\n\\n  const set1 = new Set([1])\\n  const set2 = new Set([true])\\n  const set3 = new Set([1, true])\\n  const set4 = new Set([true])\\n\\n  t.assert(f.equalityDeep(set2, set4))\\n  t.assert(!f.equalityDeep(set1, set2))\\n  t.assert(!f.equalityDeep(set1, set3))\\n  t.assert(!f.equalityDeep(set1, set4))\\n  t.assert(!f.equalityDeep(set2, set3))\\n  t.assert(f.equalityDeep(set2, set4))\\n\\n  const buf1 = Uint8Array.from([1, 2])\\n  const buf2 = Uint8Array.from([1, 3])\\n  const buf3 = Uint8Array.from([1, 2, 3])\\n  const buf4 = Uint8Array.from([1, 2])\\n\\n  t.assert(!f.equalityDeep(buf1, buf2))\\n  t.assert(!f.equalityDeep(buf2, buf3))\\n  t.assert(!f.equalityDeep(buf3, buf4))\\n  t.assert(f.equalityDeep(buf4, buf1))\\n\\n  t.assert(!f.equalityDeep(buf1.buffer, buf2.buffer))\\n  t.assert(!f.equalityDeep(buf2.buffer, buf3.buffer))\\n  t.assert(!f.equalityDeep(buf3.buffer, buf4.buffer))\\n  t.assert(f.equalityDeep(buf4.buffer, buf1.buffer))\\n\\n  t.assert(!f.equalityDeep(buf1, buf4.buffer))\\n}\\n\",\"import * as storage from './storage.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testStorageModule = tc => {\\n  const s = storage.varStorage\\n  /**\\n   * @type {any}\\n   */\\n  let lastEvent = null\\n  storage.onChange(event => {\\n    lastEvent = event\\n  })\\n  s.setItem('key', 'value')\\n  t.assert(lastEvent === null)\\n}\\n\",\"import { runTests } from './testing.js'\\nimport * as array from './array.test.js'\\nimport * as logging from './logging.test.js'\\nimport * as string from './string.test.js'\\nimport * as encoding from './encoding.test.js'\\nimport * as diff from './diff.test.js'\\nimport * as testing from './testing.test.js'\\nimport * as indexeddb from './indexeddb.test.js'\\nimport * as prng from './prng.test.js'\\nimport * as log from './logging.js'\\nimport * as statistics from './statistics.test.js'\\nimport * as binary from './binary.test.js'\\nimport * as random from './random.test.js'\\nimport * as promise from './promise.test.js'\\nimport * as queue from './queue.test.js'\\nimport * as map from './map.test.js'\\nimport * as eventloop from './eventloop.test.js'\\nimport * as time from './time.test.js'\\nimport * as pair from './pair.test.js'\\nimport * as object from './object.test.js'\\nimport * as math from './math.test.js'\\nimport * as number from './number.test.js'\\nimport * as buffer from './buffer.test.js'\\nimport * as sort from './sort.test.js'\\nimport * as url from './url.test.js'\\nimport * as metric from './metric.test.js'\\nimport * as func from './function.test.js'\\nimport * as storage from './storage.test.js'\\n\\nimport { isBrowser, isNode } from './environment.js'\\n\\n/* istanbul ignore if */\\nif (isBrowser) {\\n  log.createVConsole(document.body)\\n}\\n\\nrunTests({\\n  array,\\n  logging,\\n  string,\\n  encoding,\\n  diff,\\n  testing,\\n  indexeddb,\\n  prng,\\n  statistics,\\n  binary,\\n  random,\\n  promise,\\n  queue,\\n  map,\\n  eventloop,\\n  time,\\n  pair,\\n  object,\\n  math,\\n  number,\\n  buffer,\\n  sort,\\n  url,\\n  metric,\\n  func,\\n  storage\\n}).then(success => {\\n  /* istanbul ignore next */\\n  if (isNode) {\\n    process.exit(success ? 0 : 1)\\n  }\\n})\\n\"],\"names\":[\"create\",\"map\",\"map.create\",\"string.fromCamelCase\",\"conditions.undefinedToNull\",\"storage.varStorage\",\"forEach\",\"pair.forEach\",\"addEventListener\",\"map.map\",\"queue\",\"enqueue\",\"add\",\"isNaN\",\"math.log10\",\"math.round\",\"math.exp10\",\"metric.prefix\",\"math.floor\",\"every\",\"equalFlat\",\"length\",\"array.equalFlat\",\"object.equalFlat\",\"object.length\",\"object.hasProperty\",\"symbol.create\",\"pair.create\",\"dom.mapToStyleString\",\"env.isNode\",\"env.isBrowser\",\"group\",\"printCanvas\",\"dom.element\",\"dom.text\",\"json.stringify\",\"eventloop.enqueue\",\"dom.append\",\"dom.addEventListener\",\"uint32\",\"cryptoRandomBuffer\",\"binary.BITS32\",\"binary.BITS31\",\"buffer.createUint8ArrayViewFromArrayBuffer\",\"math.max\",\"binary.BITS8\",\"binary.BITS7\",\"binary.BIT8\",\"math.isNegativeZero\",\"binary.BITS6\",\"binary.BIT7\",\"math.min\",\"number.isInteger\",\"string.fromCharCode\",\"encoding.createEncoder\",\"encoding.writeAny\",\"encoding.toUint8Array\",\"decoding.readAny\",\"decoding.createDecoder\",\"math.abs\",\"buffer.createUint8ArrayFromLen\",\"math.ceil\",\"math.add\",\"time.getUnixTime\",\"env.hasConf\",\"env.hasParam\",\"env.getParam\",\"random.uint32\",\"prng.create\",\"log.GREY\",\"log.PURPLE\",\"log.BLUE\",\"log.groupCollapsed\",\"log.group\",\"performance\",\"promise.isPromise\",\"log.printError\",\"log.groupEnd\",\"time.humanizeDuration\",\"array.last\",\"statistics.median\",\"statistics.average\",\"log.print\",\"log.BOLD\",\"log.UNBOLD\",\"log.RED\",\"log.UNCOLOR\",\"log.GREEN\",\"log.printCanvas\",\"object.forEach\",\"object.map\",\"log.printImgBase64\",\"array.appendTo\",\"t.compareArrays\",\"array.flatten\",\"log.ORANGE\",\"t.compareStrings\",\"t.skip\",\"string.utf8TextDecoder\",\"prng.utf16String\",\"t.measureTime\",\"string._encodeUtf8Native\",\"string._encodeUtf8Polyfill\",\"t.compare\",\"string.encodeUtf8\",\"string._decodeUtf8Native\",\"string._decodeUtf8Polyfill\",\"t.assert\",\"prng.int53\",\"number.MIN_SAFE_INTEGER\",\"number.MAX_SAFE_INTEGER\",\"number.LOWEST_INT32\",\"number.HIGHEST_INT32\",\"prng.real53\",\"prng.uint32\",\"prng.uint8Array\",\"prng.oneOf\",\"encoding.writeVarUint\",\"utf8ByteLength\",\"string.utf8ByteLength\",\"encoding.length\",\"t.describe\",\"encoding.writeVarString\",\"decoding.peekVarString\",\"decoding.readVarString\",\"string.decodeUtf8\",\"decoding.readVarUint\",\"encoding.writeVarInt\",\"decoding.readVarInt\",\"prng.int32\",\"decoding.peekVarUint\",\"decoding.peekVarInt\",\"t.info\",\"encoding.writeUint8\",\"encoding.writeUint16\",\"encoding.writeUint32\",\"encoding.setUint8\",\"encoding.setUint16\",\"encoding.setUint32\",\"decoding.peekUint8\",\"decoding.readUint8\",\"decoding.peekUint16\",\"decoding.readUint16\",\"decoding.peekUint32\",\"decoding.readUint32\",\"decoding.readUint8Array\",\"encoding.writeUint8Array\",\"decoding.readVarUint8Array\",\"encoding.writeVarUint8Array\",\"binary.BITS16\",\"decoding.readUint32BigEndian\",\"encoding.writeUint32BigEndian\",\"prng.uint53\",\"decoding.readTailAsUint8Array\",\"encoding.write\",\"buffer.createUint8ArrayFromArrayBuffer\",\"decoding.hasContent\",\"decoding.skip8\",\"decoding.clone\",\"encoding.writeBinaryEncoder\",\"encoding.RleEncoder\",\"decoding.RleDecoder\",\"encoding.RleIntDiffEncoder\",\"decoding.RleIntDiffDecoder\",\"encoding.UintOptRleEncoder\",\"decoding.UintOptRleDecoder\",\"encoding.IntDiffOptRleEncoder\",\"decoding.IntDiffOptRleDecoder\",\"encoding.IntDiffEncoder\",\"decoding.IntDiffDecoder\",\"char\",\"prng.char\",\"prng.word\",\"encoding.StringEncoder\",\"decoding.StringDecoder\",\"object.assign\",\"f.equalityFlat\",\"f.equalityStrict\",\"t.fails\",\"t.compareObjects\",\"t.fail\",\"t.measureTimeAsync\",\"promise.create\",\"t.groupAsync\",\"promise.wait\",\"error.create\",\"promise.all\",\"getStore\",\"idb.createStores\",\"idb.getStore\",\"idb.deleteDB\",\"idb.openDB\",\"idb.put\",\"idb.getAll\",\"idb.getAllKeys\",\"idb.getAllKeysValues\",\"idb.iterate\",\"idb.iterateKeys\",\"idb.createIDBKeyRangeBound\",\"idb.get\",\"idb.del\",\"idb.add\",\"idb.addAutoKey\",\"math.imul\",\"t.group\",\"prng.bool\",\"binary.BIT32\",\"binary.BIT31\",\"canvas\",\"dom.canvas\",\"t.printCanvas\",\"math.isNaN\",\"binary\",\"binary.BITS0\",\"random.uuidv4\",\"t.production\",\"t.extensive\",\"promise.createEmpty\",\"promise.resolve\",\"promise.reject\",\"promise.until\",\"queue.QueueNode\",\"queue.create\",\"queue.isEmpty\",\"queue.dequeue\",\"queue.enqueue\",\"map.setIfUndefined\",\"map.copy\",\"timeout\",\"eventloop.timeout\",\"eventloop.interval\",\"eventloop.animationFrame\",\"eventloop.idleCallback\",\"time.getDate\",\"pair.createReversed\",\"pair.map\",\"object.create\",\"object.every\",\"object.some\",\"number.isNaN\",\"buffer.copyUint8Array\",\"buffer.toBase64\",\"buffer.fromBase64\",\"buffer.decodeAny\",\"buffer.encodeAny\",\"sort.insertionSort\",\"sort.quicksort\",\"prng.uint32Array\",\"url.decodeQueryParams\",\"url.encodeQueryParams\",\"f.equalityDeep\",\"storage.onChange\",\"log.createVConsole\"],\"mappings\":\"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AM,CAAC,KAAKA,MAAa,GAAG,CAAC,CAAC,CAAC;AAClE,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9GA;AACA;AACA;AACA;AACA;AAIA;AACO,MAAM,gBAAgB,GAAG,MAAM,CAAC,iBAAgB;AAChD,MAAM,gBAAgB,GAAG,MAAM,CAAC,iBAAgB;AACvD;AACO,MAAM,YAAY,GAAG,CAAC,IAAI,GAAE;AACnC;AACA;AACA;AACO,MAAM,aAAa,GAAGC,OAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,KAAK,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAIxB,KAAU,CAAC,GAAG,CAAC,KAAK,GAAG,EAAC;AAClH,MAAM,KAAK,GAAG,MAAM,CAAC;;ACxB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACO,MAAM,OAAO,CAAC;AACrB,EAAE,WAAW,CAAC,GAAG;AACjB,IAAI,IAAI,CAAC,IAAI,GAAG,EAAC;AACjB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;AACnC;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,GAAG,GAAE;AAClB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,MAAM,IAAI,OAAO,GAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,OAAO,IAAI;AACjC,EA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\"}","title":"$:/plugins/commons/yjs/lib0/dist/test.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/test.js":{"text":"(function () {\n  'use strict';\n\n  /**\n   * Utility module to work with key-value stores.\n   *\n   * @module map\n   */\n\n  /**\n   * Creates a new Map instance.\n   *\n   * @function\n   * @return {Map<any, any>}\n   *\n   * @function\n   */\n  const create$7 = () => new Map();\n\n  /**\n   * Copy a Map object into a fresh Map object.\n   *\n   * @function\n   * @template X,Y\n   * @param {Map<X,Y>} m\n   * @return {Map<X,Y>}\n   */\n  const copy = m => {\n    const r = create$7();\n    m.forEach((v, k) => { r.set(k, v); });\n    return r\n  };\n\n  /**\n   * Get map property. Create T if property is undefined and set T on map.\n   *\n   * ```js\n   * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n   * listeners.add(listener)\n   * ```\n   *\n   * @function\n   * @template T,K\n   * @param {Map<K, T>} map\n   * @param {K} key\n   * @param {function():T} createT\n   * @return {T}\n   */\n  const setIfUndefined = (map, key, createT) => {\n    let set = map.get(key);\n    if (set === undefined) {\n      map.set(key, set = createT());\n    }\n    return set\n  };\n\n  /**\n   * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n   *\n   * @function\n   * @template K\n   * @template V\n   * @template R\n   * @param {Map<K,V>} m\n   * @param {function(V,K):R} f\n   * @return {Array<R>}\n   */\n  const map$3 = (m, f) => {\n    const res = [];\n    for (const [key, value] of m) {\n      res.push(f(value, key));\n    }\n    return res\n  };\n\n  /**\n   * Utility module to work with strings.\n   *\n   * @module string\n   */\n\n  const fromCharCode = String.fromCharCode;\n  const fromCodePoint = String.fromCodePoint;\n\n  /**\n   * @param {string} s\n   * @return {string}\n   */\n  const toLowerCase = s => s.toLowerCase();\n\n  const trimLeftRegex = /^\\s*/g;\n\n  /**\n   * @param {string} s\n   * @return {string}\n   */\n  const trimLeft = s => s.replace(trimLeftRegex, '');\n\n  const fromCamelCaseRegex = /([A-Z])/g;\n\n  /**\n   * @param {string} s\n   * @param {string} separator\n   * @return {string}\n   */\n  const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`));\n\n  /**\n   * Compute the utf8ByteLength\n   * @param {string} str\n   * @return {number}\n   */\n  const utf8ByteLength = str => unescape(encodeURIComponent(str)).length;\n\n  /**\n   * @param {string} str\n   * @return {Uint8Array}\n   */\n  const _encodeUtf8Polyfill = str => {\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    const buf = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      buf[i] = /** @type {number} */ (encodedString.codePointAt(i));\n    }\n    return buf\n  };\n\n  /* istanbul ignore next */\n  const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null);\n\n  /**\n   * @param {string} str\n   * @return {Uint8Array}\n   */\n  const _encodeUtf8Native = str => utf8TextEncoder.encode(str);\n\n  /**\n   * @param {string} str\n   * @return {Uint8Array}\n   */\n  /* istanbul ignore next */\n  const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill;\n\n  /**\n   * @param {Uint8Array} buf\n   * @return {string}\n   */\n  const _decodeUtf8Polyfill = buf => {\n    let remainingLen = buf.length;\n    let encodedString = '';\n    let bufPos = 0;\n    while (remainingLen > 0) {\n      const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n      const bytes = buf.subarray(bufPos, bufPos + nextLen);\n      bufPos += nextLen;\n      // Starting with ES5.1 we can supply a generic array-like object as arguments\n      encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes));\n      remainingLen -= nextLen;\n    }\n    return decodeURIComponent(escape(encodedString))\n  };\n\n  /* istanbul ignore next */\n  let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true });\n\n  /* istanbul ignore next */\n  if (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n    // Safari doesn't handle BOM correctly.\n    // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n    // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n    // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n    // Another issue is that from then on no BOM chars are recognized anymore\n    /* istanbul ignore next */\n    utf8TextDecoder = null;\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @return {string}\n   */\n  const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf);\n\n  /**\n   * @param {Uint8Array} buf\n   * @return {string}\n   */\n  /* istanbul ignore next */\n  const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill;\n\n  /**\n   * Often used conditions.\n   *\n   * @module conditions\n   */\n\n  /**\n   * @template T\n   * @param {T|null|undefined} v\n   * @return {T|null}\n   */\n  /* istanbul ignore next */\n  const undefinedToNull = v => v === undefined ? null : v;\n\n  /* global localStorage, addEventListener */\n\n  /**\n   * Isomorphic variable storage.\n   *\n   * Uses LocalStorage in the browser and falls back to in-memory storage.\n   *\n   * @module storage\n   */\n\n  /* istanbul ignore next */\n  class VarStoragePolyfill {\n    constructor () {\n      this.map = new Map();\n    }\n\n    /**\n     * @param {string} key\n     * @param {any} newValue\n     */\n    setItem (key, newValue) {\n      this.map.set(key, newValue);\n    }\n\n    /**\n     * @param {string} key\n     */\n    getItem (key) {\n      return this.map.get(key)\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * @type {any}\n   */\n  let _localStorage = new VarStoragePolyfill();\n  let usePolyfill = true;\n\n  try {\n    // if the same-origin rule is violated, accessing localStorage might thrown an error\n    /* istanbul ignore next */\n    if (typeof localStorage !== 'undefined') {\n      _localStorage = localStorage;\n      usePolyfill = false;\n    }\n  } catch (e) { }\n\n  /* istanbul ignore next */\n  /**\n   * This is basically localStorage in browser, or a polyfill in nodejs\n   */\n  const varStorage = _localStorage;\n\n  /* istanbul ignore next */\n  /**\n   * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n   *\n   * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n   * @function\n   */\n  const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler));\n\n  /**\n   * Isomorphic module to work access the environment (query params, env variables).\n   *\n   * @module map\n   */\n\n  /* istanbul ignore next */\n  // @ts-ignore\n  const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name);\n  /* istanbul ignore next */\n  const isBrowser = typeof window !== 'undefined' && !isNode;\n  /* istanbul ignore next */\n  typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n\n  /**\n   * @type {Map<string,string>}\n   */\n  let params;\n\n  /* istanbul ignore next */\n  const computeParams = () => {\n    if (params === undefined) {\n      if (isNode) {\n        params = create$7();\n        const pargs = process.argv;\n        let currParamName = null;\n        /* istanbul ignore next */\n        for (let i = 0; i < pargs.length; i++) {\n          const parg = pargs[i];\n          if (parg[0] === '-') {\n            if (currParamName !== null) {\n              params.set(currParamName, '');\n            }\n            currParamName = parg;\n          } else {\n            if (currParamName !== null) {\n              params.set(currParamName, parg);\n              currParamName = null;\n            }\n          }\n        }\n        if (currParamName !== null) {\n          params.set(currParamName, '');\n        }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n      } else if (typeof location === 'object') {\n        params = create$7()\n        // eslint-disable-next-line no-undef\n        ;(location.search || '?').slice(1).split('&').forEach(kv => {\n          if (kv.length !== 0) {\n            const [key, value] = kv.split('=');\n            params.set(`--${fromCamelCase(key, '-')}`, value);\n            params.set(`-${fromCamelCase(key, '-')}`, value);\n          }\n        });\n      } else {\n        params = create$7();\n      }\n    }\n    return params\n  };\n\n  /**\n   * @param {string} name\n   * @return {boolean}\n   */\n  /* istanbul ignore next */\n  const hasParam = name => computeParams().has(name);\n\n  /**\n   * @param {string} name\n   * @param {string} defaultVal\n   * @return {string}\n   */\n  /* istanbul ignore next */\n  const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal;\n  // export const getArgs = name => computeParams() && args\n\n  /**\n   * @param {string} name\n   * @return {string|null}\n   */\n  /* istanbul ignore next */\n  const getVariable = name => isNode ? undefinedToNull(process.env[name.toUpperCase()]) : undefinedToNull(varStorage.getItem(name));\n\n  /**\n   * @param {string} name\n   * @return {boolean}\n   */\n  /* istanbul ignore next */\n  const hasConf = name => hasParam('--' + name) || getVariable(name) !== null;\n\n  /* istanbul ignore next */\n  const production = hasConf('production');\n\n  /**\n   * Utility module to work with EcmaScript Symbols.\n   *\n   * @module symbol\n   */\n\n  /**\n   * Return fresh symbol.\n   *\n   * @return {Symbol}\n   */\n  const create$6 = Symbol;\n\n  /**\n   * Working with value pairs.\n   *\n   * @module pair\n   */\n\n  /**\n   * @template L,R\n   */\n  class Pair {\n    /**\n     * @param {L} left\n     * @param {R} right\n     */\n    constructor (left, right) {\n      this.left = left;\n      this.right = right;\n    }\n  }\n\n  /**\n   * @template L,R\n   * @param {L} left\n   * @param {R} right\n   * @return {Pair<L,R>}\n   */\n  const create$5 = (left, right) => new Pair(left, right);\n\n  /**\n   * @template L,R\n   * @param {R} right\n   * @param {L} left\n   * @return {Pair<L,R>}\n   */\n  const createReversed = (right, left) => new Pair(left, right);\n\n  /**\n   * @template L,R\n   * @param {Array<Pair<L,R>>} arr\n   * @param {function(L, R):any} f\n   */\n  const forEach$1 = (arr, f) => arr.forEach(p => f(p.left, p.right));\n\n  /**\n   * @template L,R,X\n   * @param {Array<Pair<L,R>>} arr\n   * @param {function(L, R):X} f\n   * @return {Array<X>}\n   */\n  const map$2 = (arr, f) => arr.map(p => f(p.left, p.right));\n\n  /* eslint-env browser */\n\n  /* istanbul ignore next */\n  /**\n   * @type {Document}\n   */\n  const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {});\n\n  /**\n   * @param {string} name\n   * @return {HTMLElement}\n   */\n  /* istanbul ignore next */\n  const createElement = name => doc.createElement(name);\n\n  /**\n   * @return {DocumentFragment}\n   */\n  /* istanbul ignore next */\n  const createDocumentFragment = () => doc.createDocumentFragment();\n\n  /**\n   * @param {string} text\n   * @return {Text}\n   */\n  /* istanbul ignore next */\n  const createTextNode = text => doc.createTextNode(text);\n\n  /* istanbul ignore next */\n  /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null);\n\n  /**\n   * @param {Element} el\n   * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n   * @return {Element}\n   */\n  /* istanbul ignore next */\n  const setAttributes = (el, attrs) => {\n    forEach$1(attrs, (key, value) => {\n      if (value === false) {\n        el.removeAttribute(key);\n      } else if (value === true) {\n        el.setAttribute(key, '');\n      } else {\n        // @ts-ignore\n        el.setAttribute(key, value);\n      }\n    });\n    return el\n  };\n\n  /**\n   * @param {Array<Node>|HTMLCollection} children\n   * @return {DocumentFragment}\n   */\n  /* istanbul ignore next */\n  const fragment = children => {\n    const fragment = createDocumentFragment();\n    for (let i = 0; i < children.length; i++) {\n      appendChild(fragment, children[i]);\n    }\n    return fragment\n  };\n\n  /**\n   * @param {Element} parent\n   * @param {Array<Node>} nodes\n   * @return {Element}\n   */\n  /* istanbul ignore next */\n  const append = (parent, nodes) => {\n    appendChild(parent, fragment(nodes));\n    return parent\n  };\n\n  /**\n   * @param {EventTarget} el\n   * @param {string} name\n   * @param {EventListener} f\n   */\n  /* istanbul ignore next */\n  const addEventListener$1 = (el, name, f) => el.addEventListener(name, f);\n\n  /**\n   * @param {string} name\n   * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n   * @param {Array<Node>} children\n   * @return {Element}\n   */\n  /* istanbul ignore next */\n  const element = (name, attrs = [], children = []) =>\n    append(setAttributes(createElement(name), attrs), children);\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  /* istanbul ignore next */\n  const canvas = (width, height) => {\n    const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'));\n    c.height = height;\n    c.width = width;\n    return c\n  };\n\n  /**\n   * @param {string} t\n   * @return {Text}\n   */\n  /* istanbul ignore next */\n  const text = createTextNode;\n\n  /**\n   * @param {Map<string,string>} m\n   * @return {string}\n   */\n  /* istanbul ignore next */\n  const mapToStyleString = m => map$3(m, (value, key) => `${key}:${value};`).join('');\n\n  /**\n   * @param {Node} parent\n   * @param {Node} child\n   * @return {Node}\n   */\n  /* istanbul ignore next */\n  const appendChild = (parent, child) => parent.appendChild(child);\n\n  /**\n   * JSON utility functions.\n   *\n   * @module json\n   */\n\n  /**\n   * Transform JavaScript object to JSON.\n   *\n   * @param {any} object\n   * @return {string}\n   */\n  const stringify = JSON.stringify;\n\n  /* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n  /**\n   * Utility module to work with EcmaScript's event loop.\n   *\n   * @module eventloop\n   */\n\n  /**\n   * @type {Array<function>}\n   */\n  let queue$1 = [];\n\n  const _runQueue = () => {\n    for (let i = 0; i < queue$1.length; i++) {\n      queue$1[i]();\n    }\n    queue$1 = [];\n  };\n\n  /**\n   * @param {function():void} f\n   */\n  const enqueue$1 = f => {\n    queue$1.push(f);\n    if (queue$1.length === 1) {\n      setTimeout(_runQueue, 0);\n    }\n  };\n\n  /**\n   * @typedef {Object} TimeoutObject\n   * @property {function} TimeoutObject.destroy\n   */\n\n  /**\n   * @param {function(number):void} clearFunction\n   */\n  const createTimeoutClass = clearFunction => class TT {\n    /**\n     * @param {number} timeoutId\n     */\n    constructor (timeoutId) {\n      this._ = timeoutId;\n    }\n\n    destroy () {\n      clearFunction(this._);\n    }\n  };\n\n  const Timeout = createTimeoutClass(clearTimeout);\n\n  /**\n   * @param {number} timeout\n   * @param {function} callback\n   * @return {TimeoutObject}\n   */\n  const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout));\n\n  const Interval = createTimeoutClass(clearInterval);\n\n  /**\n   * @param {number} timeout\n   * @param {function} callback\n   * @return {TimeoutObject}\n   */\n  const interval = (timeout, callback) => new Interval(setInterval(callback, timeout));\n\n  /* istanbul ignore next */\n  const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg));\n\n  /* istanbul ignore next */\n  /**\n   * @param {function(number):void} cb\n   * @return {TimeoutObject}\n   */\n  const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb));\n\n  /* istanbul ignore next */\n  // @ts-ignore\n  const Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg));\n\n  /* istanbul ignore next */\n  /**\n   * Note: this is experimental and is probably only useful in browsers.\n   *\n   * @param {function} cb\n   * @return {TimeoutObject}\n   */\n  // @ts-ignore\n  const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb);\n\n  /**\n   * Common Math expressions.\n   *\n   * @module math\n   */\n\n  const floor = Math.floor;\n  const ceil = Math.ceil;\n  const abs = Math.abs;\n  const imul = Math.imul;\n  const round = Math.round;\n  const log10 = Math.log10;\n\n  /**\n   * @function\n   * @param {number} a\n   * @param {number} b\n   * @return {number} The sum of a and b\n   */\n  const add$1 = (a, b) => a + b;\n\n  /**\n   * @function\n   * @param {number} a\n   * @param {number} b\n   * @return {number} The smaller element of a and b\n   */\n  const min = (a, b) => a < b ? a : b;\n\n  /**\n   * @function\n   * @param {number} a\n   * @param {number} b\n   * @return {number} The bigger element of a and b\n   */\n  const max = (a, b) => a > b ? a : b;\n\n  const isNaN$1 = Number.isNaN;\n  /**\n   * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n   *\n   * @param {number} exp\n   * @return {number}\n   */\n  const exp10 = exp => Math.pow(10, exp);\n\n  /**\n   * @param {number} n\n   * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n   */\n  const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0;\n\n  /**\n   * Utility module to convert metric values.\n   *\n   * @module metric\n   */\n\n  const prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n  const prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y'];\n\n  /**\n   * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n   *\n   * @param {number} n\n   * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n   * @return {{n:number,prefix:string}}\n   */\n  const prefix = (n, baseMultiplier = 0) => {\n    const nPow = n === 0 ? 0 : log10(n);\n    let mult = 0;\n    while (nPow < mult * 3 && baseMultiplier > -8) {\n      baseMultiplier--;\n      mult--;\n    }\n    while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n      baseMultiplier++;\n      mult++;\n    }\n    const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier];\n    return {\n      n: round((mult > 0 ? n / exp10(mult * 3) : n * exp10(mult * -3)) * 1e12) / 1e12,\n      prefix\n    }\n  };\n\n  /**\n   * Utility module to work with time.\n   *\n   * @module time\n   */\n\n  /**\n   * Return current time.\n   *\n   * @return {Date}\n   */\n  const getDate = () => new Date();\n\n  /**\n   * Return current unix time.\n   *\n   * @return {number}\n   */\n  const getUnixTime = Date.now;\n\n  /**\n   * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n   *\n   * @param {number} d duration in milliseconds\n   * @return {string} humanized approximation of time\n   */\n  const humanizeDuration = d => {\n    if (d < 60000) {\n      const p = prefix(d, -1);\n      return round(p.n * 100) / 100 + p.prefix + 's'\n    }\n    d = floor(d / 1000);\n    const seconds = d % 60;\n    const minutes = floor(d / 60) % 60;\n    const hours = floor(d / 3600) % 24;\n    const days = floor(d / 86400);\n    if (days > 0) {\n      return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n    }\n    if (hours > 0) {\n      /* istanbul ignore next */\n      return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n    }\n    return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n  };\n\n  /**\n   * Utility module to work with Arrays.\n   *\n   * @module array\n   */\n\n  /**\n   * Return the last element of an array. The element must exist\n   *\n   * @template L\n   * @param {Array<L>} arr\n   * @return {L}\n   */\n  const last = arr => arr[arr.length - 1];\n\n  /**\n   * Append elements from src to dest\n   *\n   * @template M\n   * @param {Array<M>} dest\n   * @param {Array<M>} src\n   */\n  const appendTo = (dest, src) => {\n    for (let i = 0; i < src.length; i++) {\n      dest.push(src[i]);\n    }\n  };\n\n  /**\n   * True iff condition holds on every element in the Array.\n   *\n   * @function\n   * @template ITEM\n   *\n   * @param {Array<ITEM>} arr\n   * @param {function(ITEM, number, Array<ITEM>):boolean} f\n   * @return {boolean}\n   */\n  const every$1 = (arr, f) => arr.every(f);\n\n  /**\n   * @template ELEM\n   *\n   * @param {Array<ELEM>} a\n   * @param {Array<ELEM>} b\n   * @return {boolean}\n   */\n  const equalFlat$1 = (a, b) => a.length === b.length && every$1(a, (item, index) => item === b[index]);\n\n  /**\n   * @template ELEM\n   * @param {Array<Array<ELEM>>} arr\n   * @return {Array<ELEM>}\n   */\n  const flatten = arr => arr.reduce((acc, val) => acc.concat(val), []);\n\n  /**\n   * Utility functions for working with EcmaScript objects.\n   *\n   * @module object\n   */\n\n  /**\n   * @return {Object<string,any>} obj\n   */\n  const create$4 = () => Object.create(null);\n\n  /**\n   * Object.assign\n   */\n  const assign = Object.assign;\n\n  /**\n   * @param {Object<string,any>} obj\n   */\n  const keys = Object.keys;\n\n  /**\n   * @param {Object<string,any>} obj\n   * @param {function(any,string):any} f\n   */\n  const forEach = (obj, f) => {\n    for (const key in obj) {\n      f(obj[key], key);\n    }\n  };\n\n  /**\n   * @template R\n   * @param {Object<string,any>} obj\n   * @param {function(any,string):R} f\n   * @return {Array<R>}\n   */\n  const map$1 = (obj, f) => {\n    const results = [];\n    for (const key in obj) {\n      results.push(f(obj[key], key));\n    }\n    return results\n  };\n\n  /**\n   * @param {Object<string,any>} obj\n   * @return {number}\n   */\n  const length$1 = obj => keys(obj).length;\n\n  /**\n   * @param {Object<string,any>} obj\n   * @param {function(any,string):boolean} f\n   * @return {boolean}\n   */\n  const some = (obj, f) => {\n    for (const key in obj) {\n      if (f(obj[key], key)) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @param {Object<string,any>} obj\n   * @param {function(any,string):boolean} f\n   * @return {boolean}\n   */\n  const every = (obj, f) => {\n    for (const key in obj) {\n      if (!f(obj[key], key)) {\n        return false\n      }\n    }\n    return true\n  };\n\n  /**\n   * Calls `Object.prototype.hasOwnProperty`.\n   *\n   * @param {any} obj\n   * @param {string|symbol} key\n   * @return {boolean}\n   */\n  const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);\n\n  /**\n   * @param {Object<string,any>} a\n   * @param {Object<string,any>} b\n   * @return {boolean}\n   */\n  const equalFlat = (a, b) => a === b || (length$1(a) === length$1(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val));\n\n  /**\n   * Common functions and function call helpers.\n   *\n   * @module function\n   */\n\n  /**\n   * @template T\n   *\n   * @param {T} a\n   * @param {T} b\n   * @return {boolean}\n   */\n  const equalityStrict = (a, b) => a === b;\n\n  /**\n   * @template T\n   *\n   * @param {Array<T>|object} a\n   * @param {Array<T>|object} b\n   * @return {boolean}\n   */\n  const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && equalFlat$1(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && equalFlat(a, b))));\n\n  /**\n   * @param {any} a\n   * @param {any} b\n   * @return {boolean}\n   */\n  const equalityDeep = (a, b) => {\n    if (a == null || b == null) {\n      return equalityStrict(a, b)\n    }\n    if (a.constructor !== b.constructor) {\n      return false\n    }\n    if (a === b) {\n      return true\n    }\n    switch (a.constructor) {\n      case ArrayBuffer:\n        a = new Uint8Array(a);\n        b = new Uint8Array(b);\n      // eslint-disable-next-line no-fallthrough\n      case Uint8Array: {\n        if (a.byteLength !== b.byteLength) {\n          return false\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false\n          }\n        }\n        break\n      }\n      case Set: {\n        if (a.size !== b.size) {\n          return false\n        }\n        for (const value of a) {\n          if (!b.has(value)) {\n            return false\n          }\n        }\n        break\n      }\n      case Map: {\n        if (a.size !== b.size) {\n          return false\n        }\n        for (const key of a.keys()) {\n          if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n            return false\n          }\n        }\n        break\n      }\n      case Object:\n        if (length$1(a) !== length$1(b)) {\n          return false\n        }\n        for (const key in a) {\n          if (!hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n            return false\n          }\n        }\n        break\n      case Array:\n        if (a.length !== b.length) {\n          return false\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (!equalityDeep(a[i], b[i])) {\n            return false\n          }\n        }\n        break\n      default:\n        return false\n    }\n    return true\n  };\n\n  /**\n   * Isomorphic logging module with support for colors!\n   *\n   * @module logging\n   */\n\n  const BOLD = create$6();\n  const UNBOLD = create$6();\n  const BLUE = create$6();\n  const GREY = create$6();\n  const GREEN = create$6();\n  const RED = create$6();\n  const PURPLE = create$6();\n  const ORANGE = create$6();\n  const UNCOLOR = create$6();\n\n  /**\n   * @type {Object<Symbol,pair.Pair<string,string>>}\n   */\n  const _browserStyleMap = {\n    [BOLD]: create$5('font-weight', 'bold'),\n    [UNBOLD]: create$5('font-weight', 'normal'),\n    [BLUE]: create$5('color', 'blue'),\n    [GREEN]: create$5('color', 'green'),\n    [GREY]: create$5('color', 'grey'),\n    [RED]: create$5('color', 'red'),\n    [PURPLE]: create$5('color', 'purple'),\n    [ORANGE]: create$5('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n    [UNCOLOR]: create$5('color', 'black')\n  };\n\n  const _nodeStyleMap = {\n    [BOLD]: '\\u001b[1m',\n    [UNBOLD]: '\\u001b[2m',\n    [BLUE]: '\\x1b[34m',\n    [GREEN]: '\\x1b[32m',\n    [GREY]: '\\u001b[37m',\n    [RED]: '\\x1b[31m',\n    [PURPLE]: '\\x1b[35m',\n    [ORANGE]: '\\x1b[38;5;208m',\n    [UNCOLOR]: '\\x1b[0m'\n  };\n\n  /* istanbul ignore next */\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @return {Array<string|object|number>}\n   */\n  const computeBrowserLoggingArgs = args => {\n    const strBuilder = [];\n    const styles = [];\n    const currentStyle = create$7();\n    /**\n     * @type {Array<string|Object|number>}\n     */\n    let logArgs = [];\n    // try with formatting until we find something unsupported\n    let i = 0;\n\n    for (; i < args.length; i++) {\n      const arg = args[i];\n      // @ts-ignore\n      const style = _browserStyleMap[arg];\n      if (style !== undefined) {\n        currentStyle.set(style.left, style.right);\n      } else {\n        if (arg.constructor === String || arg.constructor === Number) {\n          const style = mapToStyleString(currentStyle);\n          if (i > 0 || style.length > 0) {\n            strBuilder.push('%c' + arg);\n            styles.push(style);\n          } else {\n            strBuilder.push(arg);\n          }\n        } else {\n          break\n        }\n      }\n    }\n\n    if (i > 0) {\n      // create logArgs with what we have so far\n      logArgs = styles;\n      logArgs.unshift(strBuilder.join(''));\n    }\n    // append the rest\n    for (; i < args.length; i++) {\n      const arg = args[i];\n      if (!(arg instanceof Symbol)) {\n        logArgs.push(arg);\n      }\n    }\n    return logArgs\n  };\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @return {Array<string|object|number>}\n   */\n  const computeNodeLoggingArgs = args => {\n    const strBuilder = [];\n    const logArgs = [];\n\n    // try with formatting until we find something unsupported\n    let i = 0;\n\n    for (; i < args.length; i++) {\n      const arg = args[i];\n      // @ts-ignore\n      const style = _nodeStyleMap[arg];\n      if (style !== undefined) {\n        strBuilder.push(style);\n      } else {\n        if (arg.constructor === String || arg.constructor === Number) {\n          strBuilder.push(arg);\n        } else {\n          break\n        }\n      }\n    }\n    if (i > 0) {\n      // create logArgs with what we have so far\n      strBuilder.push('\\x1b[0m');\n      logArgs.push(strBuilder.join(''));\n    }\n    // append the rest\n    for (; i < args.length; i++) {\n      const arg = args[i];\n      /* istanbul ignore else */\n      if (!(arg instanceof Symbol)) {\n        logArgs.push(arg);\n      }\n    }\n    return logArgs\n  };\n\n  /* istanbul ignore next */\n  const computeLoggingArgs = isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs;\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  const print = (...args) => {\n    console.log(...computeLoggingArgs(args));\n    /* istanbul ignore next */\n    vconsoles.forEach(vc => vc.print(args));\n  };\n\n  /* istanbul ignore next */\n  /**\n   * @param {Error} err\n   */\n  const printError = err => {\n    console.error(err);\n    vconsoles.forEach(vc => vc.printError(err));\n  };\n\n  /* istanbul ignore next */\n  /**\n   * @param {string} url image location\n   * @param {number} height height of the image in pixel\n   */\n  const printImg = (url, height) => {\n    if (isBrowser) {\n      console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`);\n      // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n    }\n    vconsoles.forEach(vc => vc.printImg(url, height));\n  };\n\n  /* istanbul ignore next */\n  /**\n   * @param {string} base64\n   * @param {number} height\n   */\n  const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height);\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  const group$1 = (...args) => {\n    console.group(...computeLoggingArgs(args));\n    /* istanbul ignore next */\n    vconsoles.forEach(vc => vc.group(args));\n  };\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  const groupCollapsed = (...args) => {\n    console.groupCollapsed(...computeLoggingArgs(args));\n    /* istanbul ignore next */\n    vconsoles.forEach(vc => vc.groupCollapsed(args));\n  };\n\n  const groupEnd = () => {\n    console.groupEnd();\n    /* istanbul ignore next */\n    vconsoles.forEach(vc => vc.groupEnd());\n  };\n\n  /* istanbul ignore next */\n  /**\n   * @param {HTMLCanvasElement} canvas\n   * @param {number} height\n   */\n  const printCanvas$1 = (canvas, height) => printImg(canvas.toDataURL(), height);\n\n  const vconsoles = new Set();\n\n  /* istanbul ignore next */\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @return {Array<Element>}\n   */\n  const _computeLineSpans = args => {\n    const spans = [];\n    const currentStyle = new Map();\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for (; i < args.length; i++) {\n      const arg = args[i];\n      // @ts-ignore\n      const style = _browserStyleMap[arg];\n      if (style !== undefined) {\n        currentStyle.set(style.left, style.right);\n      } else {\n        if (arg.constructor === String || arg.constructor === Number) {\n          // @ts-ignore\n          const span = element('span', [create$5('style', mapToStyleString(currentStyle))], [text(arg)]);\n          if (span.innerHTML === '') {\n            span.innerHTML = '&nbsp;';\n          }\n          spans.push(span);\n        } else {\n          break\n        }\n      }\n    }\n    // append the rest\n    for (; i < args.length; i++) {\n      let content = args[i];\n      if (!(content instanceof Symbol)) {\n        if (content.constructor !== String && content.constructor !== Number) {\n          content = ' ' + stringify(content) + ' ';\n        }\n        spans.push(element('span', [], [text(/** @type {string} */ (content))]));\n      }\n    }\n    return spans\n  };\n\n  const lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;';\n\n  /* istanbul ignore next */\n  class VConsole {\n    /**\n     * @param {Element} dom\n     */\n    constructor (dom) {\n      this.dom = dom;\n      /**\n       * @type {Element}\n       */\n      this.ccontainer = this.dom;\n      this.depth = 0;\n      vconsoles.add(this);\n    }\n\n    /**\n     * @param {Array<string|Symbol|Object|number>} args\n     * @param {boolean} collapsed\n     */\n    group (args, collapsed = false) {\n      enqueue$1(() => {\n        const triangleDown = element('span', [create$5('hidden', collapsed), create$5('style', 'color:grey;font-size:120%;')], [text('▼')]);\n        const triangleRight = element('span', [create$5('hidden', !collapsed), create$5('style', 'color:grey;font-size:125%;')], [text('▶')]);\n        const content = element('div', [create$5('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, text(' ')].concat(_computeLineSpans(args)));\n        const nextContainer = element('div', [create$5('hidden', collapsed)]);\n        const nextLine = element('div', [], [content, nextContainer]);\n        append(this.ccontainer, [nextLine]);\n        this.ccontainer = nextContainer;\n        this.depth++;\n        // when header is clicked, collapse/uncollapse container\n        addEventListener$1(content, 'click', event => {\n          nextContainer.toggleAttribute('hidden');\n          triangleDown.toggleAttribute('hidden');\n          triangleRight.toggleAttribute('hidden');\n        });\n      });\n    }\n\n    /**\n     * @param {Array<string|Symbol|Object|number>} args\n     */\n    groupCollapsed (args) {\n      this.group(args, true);\n    }\n\n    groupEnd () {\n      enqueue$1(() => {\n        if (this.depth > 0) {\n          this.depth--;\n          // @ts-ignore\n          this.ccontainer = this.ccontainer.parentElement.parentElement;\n        }\n      });\n    }\n\n    /**\n     * @param {Array<string|Symbol|Object|number>} args\n     */\n    print (args) {\n      enqueue$1(() => {\n        append(this.ccontainer, [element('div', [create$5('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))]);\n      });\n    }\n\n    /**\n     * @param {Error} err\n     */\n    printError (err) {\n      this.print([RED, BOLD, err.toString()]);\n    }\n\n    /**\n     * @param {string} url\n     * @param {number} height\n     */\n    printImg (url, height) {\n      enqueue$1(() => {\n        append(this.ccontainer, [element('img', [create$5('src', url), create$5('height', `${round(height * 1.5)}px`)])]);\n      });\n    }\n\n    /**\n     * @param {Node} node\n     */\n    printDom (node) {\n      enqueue$1(() => {\n        append(this.ccontainer, [node]);\n      });\n    }\n\n    destroy () {\n      enqueue$1(() => {\n        vconsoles.delete(this);\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * @param {Element} dom\n   */\n  const createVConsole = dom => new VConsole(dom);\n\n  /**\n   * Efficient diffs.\n   *\n   * @module diff\n   */\n\n  /**\n   * A SimpleDiff describes a change on a String.\n   *\n   * ```js\n   * console.log(a) // the old value\n   * console.log(b) // the updated value\n   * // Apply changes of diff (pseudocode)\n   * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n   * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n   * a === b // values match\n   * ```\n   *\n   * @typedef {Object} SimpleDiff\n   * @property {Number} index The index where changes were applied\n   * @property {Number} remove The number of characters to delete starting\n   *                                  at `index`.\n   * @property {T} insert The new text to insert at `index` after applying\n   *                           `delete`\n   *\n   * @template T\n   */\n\n  /**\n   * Create a diff between two strings. This diff implementation is highly\n   * efficient, but not very sophisticated.\n   *\n   * @function\n   *\n   * @param {string} a The old version of the string\n   * @param {string} b The updated version of the string\n   * @return {SimpleDiff<string>} The diff description.\n   */\n  const simpleDiffString = (a, b) => {\n    let left = 0; // number of same characters counting from left\n    let right = 0; // number of same characters counting from right\n    while (left < a.length && left < b.length && a[left] === b[left]) {\n      left++;\n    }\n    if (left !== a.length || left !== b.length) {\n      // Only check right if a !== b\n      while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\n        right++;\n      }\n    }\n    return {\n      index: left,\n      remove: a.length - left - right,\n      insert: b.slice(left, b.length - right)\n    }\n  };\n\n  /**\n   * @todo Remove in favor of simpleDiffString\n   * @deprecated\n   */\n  const simpleDiff = simpleDiffString;\n\n  /**\n   * Create a diff between two arrays. This diff implementation is highly\n   * efficient, but not very sophisticated.\n   *\n   * Note: This is basically the same function as above. Another function was created so that the runtime\n   * can better optimize these function calls.\n   *\n   * @function\n   * @template T\n   *\n   * @param {Array<T>} a The old version of the array\n   * @param {Array<T>} b The updated version of the array\n   * @param {function(T, T):boolean} [compare]\n   * @return {SimpleDiff<Array<T>>} The diff description.\n   */\n  const simpleDiffArray = (a, b, compare = equalityStrict) => {\n    let left = 0; // number of same characters counting from left\n    let right = 0; // number of same characters counting from right\n    while (left < a.length && left < b.length && compare(a[left], b[left])) {\n      left++;\n    }\n    if (left !== a.length || left !== b.length) {\n      // Only check right if a !== b\n      while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\n        right++;\n      }\n    }\n    return {\n      index: left,\n      remove: a.length - left - right,\n      insert: b.slice(left, b.length - right)\n    }\n  };\n\n  /* eslint-env browser */\n  const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null;\n\n  const isoCrypto = typeof crypto === 'undefined' ? null : crypto;\n\n  /**\n   * @type {function(number):ArrayBuffer}\n   */\n  const cryptoRandomBuffer = isoCrypto !== null\n    ? len => {\n      // browser\n      const buf = new ArrayBuffer(len);\n      const arr = new Uint8Array(buf);\n      isoCrypto.getRandomValues(arr);\n      return buf\n    }\n    : len => {\n      // polyfill\n      const buf = new ArrayBuffer(len);\n      const arr = new Uint8Array(buf);\n      for (let i = 0; i < len; i++) {\n        arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0);\n      }\n      return buf\n    };\n\n  /* istanbul ignore next */\n  const uint32$1 = () => new Uint32Array(cryptoRandomBuffer(4))[0];\n\n  // @ts-ignore\n  const uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n  const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n    (c ^ uint32$1() & 15 >> c / 4).toString(16)\n  );\n\n  /* eslint-env browser */\n\n  /**\n   * Binary data constants.\n   *\n   * @module binary\n   */\n\n  /**\n   * n-th bit activated.\n   *\n   * @type {number}\n   */\n  const BIT1 = 1;\n  const BIT2 = 2;\n  const BIT3 = 4;\n  const BIT4 = 8;\n  const BIT5 = 16;\n  const BIT6 = 32;\n  const BIT7 = 64;\n  const BIT8 = 128;\n  const BIT9 = 256;\n  const BIT10 = 512;\n  const BIT11 = 1024;\n  const BIT12 = 2048;\n  const BIT13 = 4096;\n  const BIT14 = 8192;\n  const BIT15 = 16384;\n  const BIT16 = 32768;\n  const BIT17 = 65536;\n  const BIT18 = 1 << 17;\n  const BIT19 = 1 << 18;\n  const BIT20 = 1 << 19;\n  const BIT21 = 1 << 20;\n  const BIT22 = 1 << 21;\n  const BIT23 = 1 << 22;\n  const BIT24 = 1 << 23;\n  const BIT25 = 1 << 24;\n  const BIT26 = 1 << 25;\n  const BIT27 = 1 << 26;\n  const BIT28 = 1 << 27;\n  const BIT29 = 1 << 28;\n  const BIT30 = 1 << 29;\n  const BIT31 = 1 << 30;\n  const BIT32 = 1 << 31;\n\n  /**\n   * First n bits activated.\n   *\n   * @type {number}\n   */\n  const BITS0 = 0;\n  const BITS1 = 1;\n  const BITS2 = 3;\n  const BITS3 = 7;\n  const BITS4 = 15;\n  const BITS5 = 31;\n  const BITS6 = 63;\n  const BITS7 = 127;\n  const BITS8 = 255;\n  const BITS9 = 511;\n  const BITS10 = 1023;\n  const BITS11 = 2047;\n  const BITS12 = 4095;\n  const BITS13 = 8191;\n  const BITS14 = 16383;\n  const BITS15 = 32767;\n  const BITS16 = 65535;\n  const BITS17 = BIT18 - 1;\n  const BITS18 = BIT19 - 1;\n  const BITS19 = BIT20 - 1;\n  const BITS20 = BIT21 - 1;\n  const BITS21 = BIT22 - 1;\n  const BITS22 = BIT23 - 1;\n  const BITS23 = BIT24 - 1;\n  const BITS24 = BIT25 - 1;\n  const BITS25 = BIT26 - 1;\n  const BITS26 = BIT27 - 1;\n  const BITS27 = BIT28 - 1;\n  const BITS28 = BIT29 - 1;\n  const BITS29 = BIT30 - 1;\n  const BITS30 = BIT31 - 1;\n  /**\n   * @type {number}\n   */\n  const BITS31 = 0x7FFFFFFF;\n  /**\n   * @type {number}\n   */\n  const BITS32 = 0xFFFFFFFF;\n\n  var binary$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BIT1: BIT1,\n    BIT2: BIT2,\n    BIT3: BIT3,\n    BIT4: BIT4,\n    BIT5: BIT5,\n    BIT6: BIT6,\n    BIT7: BIT7,\n    BIT8: BIT8,\n    BIT9: BIT9,\n    BIT10: BIT10,\n    BIT11: BIT11,\n    BIT12: BIT12,\n    BIT13: BIT13,\n    BIT14: BIT14,\n    BIT15: BIT15,\n    BIT16: BIT16,\n    BIT17: BIT17,\n    BIT18: BIT18,\n    BIT19: BIT19,\n    BIT20: BIT20,\n    BIT21: BIT21,\n    BIT22: BIT22,\n    BIT23: BIT23,\n    BIT24: BIT24,\n    BIT25: BIT25,\n    BIT26: BIT26,\n    BIT27: BIT27,\n    BIT28: BIT28,\n    BIT29: BIT29,\n    BIT30: BIT30,\n    BIT31: BIT31,\n    BIT32: BIT32,\n    BITS0: BITS0,\n    BITS1: BITS1,\n    BITS2: BITS2,\n    BITS3: BITS3,\n    BITS4: BITS4,\n    BITS5: BITS5,\n    BITS6: BITS6,\n    BITS7: BITS7,\n    BITS8: BITS8,\n    BITS9: BITS9,\n    BITS10: BITS10,\n    BITS11: BITS11,\n    BITS12: BITS12,\n    BITS13: BITS13,\n    BITS14: BITS14,\n    BITS15: BITS15,\n    BITS16: BITS16,\n    BITS17: BITS17,\n    BITS18: BITS18,\n    BITS19: BITS19,\n    BITS20: BITS20,\n    BITS21: BITS21,\n    BITS22: BITS22,\n    BITS23: BITS23,\n    BITS24: BITS24,\n    BITS25: BITS25,\n    BITS26: BITS26,\n    BITS27: BITS27,\n    BITS28: BITS28,\n    BITS29: BITS29,\n    BITS30: BITS30,\n    BITS31: BITS31,\n    BITS32: BITS32\n  });\n\n  /**\n   * @module prng\n   */\n\n  /**\n   * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\n   */\n  class Xorshift32 {\n    /**\n     * @param {number} seed Unsigned 32 bit number\n     */\n    constructor (seed) {\n      this.seed = seed;\n      /**\n       * @type {number}\n       */\n      this._state = seed;\n    }\n\n    /**\n     * Generate a random signed integer.\n     *\n     * @return {Number} A 32 bit signed integer.\n     */\n    next () {\n      let x = this._state;\n      x ^= x << 13;\n      x ^= x >> 17;\n      x ^= x << 5;\n      this._state = x;\n      return (x >>> 0) / (BITS32 + 1)\n    }\n  }\n\n  /**\n   * @module prng\n   */\n\n  /**\n   * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\n   *\n   * This implementation follows the idea of the original xoroshiro128plus implementation,\n   * but is optimized for the JavaScript runtime. I.e.\n   * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\n   * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\n   * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\n   *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\n   *   first 32bit addition is not carried over to the last 32bit.\n   *\n   * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\n   */\n  class Xoroshiro128plus {\n    /**\n     * @param {number} seed Unsigned 32 bit number\n     */\n    constructor (seed) {\n      this.seed = seed;\n      // This is a variant of Xoroshiro128plus to fill the initial state\n      const xorshift32 = new Xorshift32(seed);\n      this.state = new Uint32Array(4);\n      for (let i = 0; i < 4; i++) {\n        this.state[i] = xorshift32.next() * BITS32;\n      }\n      this._fresh = true;\n    }\n\n    /**\n     * @return {number} Float/Double in [0,1)\n     */\n    next () {\n      const state = this.state;\n      if (this._fresh) {\n        this._fresh = false;\n        return ((state[0] + state[2]) >>> 0) / (BITS32 + 1)\n      } else {\n        this._fresh = true;\n        const s0 = state[0];\n        const s1 = state[1];\n        const s2 = state[2] ^ s0;\n        const s3 = state[3] ^ s1;\n        // function js_rotl (x, k) {\n        //   k = k - 32\n        //   const x1 = x[0]\n        //   const x2 = x[1]\n        //   x[0] = x2 << k | x1 >>> (32 - k)\n        //   x[1] = x1 << k | x2 >>> (32 - k)\n        // }\n        // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\n        state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18);\n        state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14);\n        // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\n        state[2] = s3 << 4 | s2 >>> 28;\n        state[3] = s2 << 4 | s3 >>> 28;\n        return (((state[1] + state[3]) >>> 0) / (BITS32 + 1))\n      }\n    }\n  }\n\n  /*\n  // Reference implementation\n  // Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\n  // By David Blackman and Sebastiano Vigna\n  // Who published the reference implementation under Public Domain (CC0)\n\n  #include <stdint.h>\n  #include <stdio.h>\n\n  uint64_t s[2];\n\n  static inline uint64_t rotl(const uint64_t x, int k) {\n      return (x << k) | (x >> (64 - k));\n  }\n\n  uint64_t next(void) {\n      const uint64_t s0 = s[0];\n      uint64_t s1 = s[1];\n      s1 ^= s0;\n      s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\n      s[1] = rotl(s1, 36); // c\n      return (s[0] + s[1]) & 0xFFFFFFFF;\n  }\n\n  int main(void)\n  {\n      int i;\n      s[0] = 1111 | (1337ul << 32);\n      s[1] = 1234 | (9999ul << 32);\n\n      printf(\"1000 outputs of genrand_int31()\\n\");\n      for (i=0; i<100; i++) {\n          printf(\"%10lu \", i);\n          printf(\"%10lu \", next());\n          printf(\"- %10lu \", s[0] >> 32);\n          printf(\"%10lu \", (s[0] << 32) >> 32);\n          printf(\"%10lu \", s[1] >> 32);\n          printf(\"%10lu \", (s[1] << 32) >> 32);\n          printf(\"\\n\");\n          // if (i%5==4) printf(\"\\n\");\n      }\n      return 0;\n  }\n  */\n\n  /**\n   * Utility helpers for working with numbers.\n   *\n   * @module number\n   */\n\n  const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;\n  const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;\n\n  const LOWEST_INT32 = 1 << 31;\n  /**\n   * @type {number}\n   */\n  const HIGHEST_INT32 = BITS31;\n\n  /**\n   * @module number\n   */\n\n  /* istanbul ignore next */\n  const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && floor(num) === num);\n  const isNaN = Number.isNaN;\n\n  /**\n   * Efficient schema-less binary encoding with support for variable length encoding.\n   *\n   * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n   *\n   * Encodes numbers in little-endian order (least to most significant byte order)\n   * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n   * which is also used in Protocol Buffers.\n   *\n   * ```js\n   * // encoding step\n   * const encoder = new encoding.createEncoder()\n   * encoding.writeVarUint(encoder, 256)\n   * encoding.writeVarString(encoder, 'Hello world!')\n   * const buf = encoding.toUint8Array(encoder)\n   * ```\n   *\n   * ```js\n   * // decoding step\n   * const decoder = new decoding.createDecoder(buf)\n   * decoding.readVarUint(decoder) // => 256\n   * decoding.readVarString(decoder) // => 'Hello world!'\n   * decoding.hasContent(decoder) // => false - all data is read\n   * ```\n   *\n   * @module encoding\n   */\n\n  /**\n   * A BinaryEncoder handles the encoding to an Uint8Array.\n   */\n  class Encoder {\n    constructor () {\n      this.cpos = 0;\n      this.cbuf = new Uint8Array(100);\n      /**\n       * @type {Array<Uint8Array>}\n       */\n      this.bufs = [];\n    }\n  }\n\n  /**\n   * @function\n   * @return {Encoder}\n   */\n  const createEncoder = () => new Encoder();\n\n  /**\n   * The current length of the encoded data.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @return {number}\n   */\n  const length = encoder => {\n    let len = encoder.cpos;\n    for (let i = 0; i < encoder.bufs.length; i++) {\n      len += encoder.bufs[i].length;\n    }\n    return len\n  };\n\n  /**\n   * Transform to Uint8Array.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @return {Uint8Array} The created ArrayBuffer.\n   */\n  const toUint8Array = encoder => {\n    const uint8arr = new Uint8Array(length(encoder));\n    let curPos = 0;\n    for (let i = 0; i < encoder.bufs.length; i++) {\n      const d = encoder.bufs[i];\n      uint8arr.set(d, curPos);\n      curPos += d.length;\n    }\n    uint8arr.set(createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos);\n    return uint8arr\n  };\n\n  /**\n   * Verify that it is possible to write `len` bytes wtihout checking. If\n   * necessary, a new Buffer with the required length is attached.\n   *\n   * @param {Encoder} encoder\n   * @param {number} len\n   */\n  const verifyLen = (encoder, len) => {\n    const bufferLen = encoder.cbuf.length;\n    if (bufferLen - encoder.cpos < len) {\n      encoder.bufs.push(createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos));\n      encoder.cbuf = new Uint8Array(max(bufferLen, len) * 2);\n      encoder.cpos = 0;\n    }\n  };\n\n  /**\n   * Write one byte to the encoder.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} num The byte that is to be encoded.\n   */\n  const write = (encoder, num) => {\n    const bufferLen = encoder.cbuf.length;\n    if (encoder.cpos === bufferLen) {\n      encoder.bufs.push(encoder.cbuf);\n      encoder.cbuf = new Uint8Array(bufferLen * 2);\n      encoder.cpos = 0;\n    }\n    encoder.cbuf[encoder.cpos++] = num;\n  };\n\n  /**\n   * Write one byte at a specific position.\n   * Position must already be written (i.e. encoder.length > pos)\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} pos Position to which to write data\n   * @param {number} num Unsigned 8-bit integer\n   */\n  const set = (encoder, pos, num) => {\n    let buffer = null;\n    // iterate all buffers and adjust position\n    for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n      const b = encoder.bufs[i];\n      if (pos < b.length) {\n        buffer = b; // found buffer\n      } else {\n        pos -= b.length;\n      }\n    }\n    if (buffer === null) {\n      // use current buffer\n      buffer = encoder.cbuf;\n    }\n    buffer[pos] = num;\n  };\n\n  /**\n   * Write one byte as an unsigned integer.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} num The number that is to be encoded.\n   */\n  const writeUint8 = write;\n\n  /**\n   * Write one byte as an unsigned Integer at a specific location.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} pos The location where the data will be written.\n   * @param {number} num The number that is to be encoded.\n   */\n  const setUint8 = set;\n\n  /**\n   * Write two bytes as an unsigned integer.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} num The number that is to be encoded.\n   */\n  const writeUint16 = (encoder, num) => {\n    write(encoder, num & BITS8);\n    write(encoder, (num >>> 8) & BITS8);\n  };\n  /**\n   * Write two bytes as an unsigned integer at a specific location.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} pos The location where the data will be written.\n   * @param {number} num The number that is to be encoded.\n   */\n  const setUint16 = (encoder, pos, num) => {\n    set(encoder, pos, num & BITS8);\n    set(encoder, pos + 1, (num >>> 8) & BITS8);\n  };\n\n  /**\n   * Write two bytes as an unsigned integer\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} num The number that is to be encoded.\n   */\n  const writeUint32 = (encoder, num) => {\n    for (let i = 0; i < 4; i++) {\n      write(encoder, num & BITS8);\n      num >>>= 8;\n    }\n  };\n\n  /**\n   * Write two bytes as an unsigned integer in big endian order.\n   * (most significant byte first)\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} num The number that is to be encoded.\n   */\n  const writeUint32BigEndian = (encoder, num) => {\n    for (let i = 3; i >= 0; i--) {\n      write(encoder, (num >>> (8 * i)) & BITS8);\n    }\n  };\n\n  /**\n   * Write two bytes as an unsigned integer at a specific location.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} pos The location where the data will be written.\n   * @param {number} num The number that is to be encoded.\n   */\n  const setUint32 = (encoder, pos, num) => {\n    for (let i = 0; i < 4; i++) {\n      set(encoder, pos + i, num & BITS8);\n      num >>>= 8;\n    }\n  };\n\n  /**\n   * Write a variable length unsigned integer.\n   *\n   * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} num The number that is to be encoded.\n   */\n  const writeVarUint = (encoder, num) => {\n    while (num > BITS7) {\n      write(encoder, BIT8 | (BITS7 & num));\n      num >>>= 7;\n    }\n    write(encoder, BITS7 & num);\n  };\n\n  /**\n   * Write a variable length integer.\n   *\n   * Encodes integers in the range from [-2147483648, -2147483647].\n   *\n   * We don't use zig-zag encoding because we want to keep the option open\n   * to use the same function for BigInt and 53bit integers (doubles).\n   *\n   * We use the 7th bit instead for signaling that this is a negative number.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {number} num The number that is to be encoded.\n   */\n  const writeVarInt = (encoder, num) => {\n    const isNegative = isNegativeZero(num);\n    if (isNegative) {\n      num = -num;\n    }\n    //             |- whether to continue reading         |- whether is negative     |- number\n    write(encoder, (num > BITS6 ? BIT8 : 0) | (isNegative ? BIT7 : 0) | (BITS6 & num));\n    num >>>= 6;\n    // We don't need to consider the case of num === 0 so we can use a different\n    // pattern here than above.\n    while (num > 0) {\n      write(encoder, (num > BITS7 ? BIT8 : 0) | (BITS7 & num));\n      num >>>= 7;\n    }\n  };\n\n  /**\n   * Write a variable length string.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {String} str The string that is to be encoded.\n   */\n  const writeVarString = (encoder, str) => {\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    writeVarUint(encoder, len);\n    for (let i = 0; i < len; i++) {\n      write(encoder, /** @type {number} */ (encodedString.codePointAt(i)));\n    }\n  };\n\n  /**\n   * Write the content of another Encoder.\n   *\n   * @TODO: can be improved!\n   *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n   *                Encoders start with a rather big initial buffer.\n   *\n   * @function\n   * @param {Encoder} encoder The enUint8Arr\n   * @param {Encoder} append The BinaryEncoder to be written.\n   */\n  const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append));\n\n  /**\n   * Append fixed-length Uint8Array to the encoder.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {Uint8Array} uint8Array\n   */\n  const writeUint8Array = (encoder, uint8Array) => {\n    const bufferLen = encoder.cbuf.length;\n    const cpos = encoder.cpos;\n    const leftCopyLen = min(bufferLen - cpos, uint8Array.length);\n    const rightCopyLen = uint8Array.length - leftCopyLen;\n    encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos);\n    encoder.cpos += leftCopyLen;\n    if (rightCopyLen > 0) {\n      // Still something to write, write right half..\n      // Append new buffer\n      encoder.bufs.push(encoder.cbuf);\n      // must have at least size of remaining buffer\n      encoder.cbuf = new Uint8Array(max(bufferLen * 2, rightCopyLen));\n      // copy array\n      encoder.cbuf.set(uint8Array.subarray(leftCopyLen));\n      encoder.cpos = rightCopyLen;\n    }\n  };\n\n  /**\n   * Append an Uint8Array to Encoder.\n   *\n   * @function\n   * @param {Encoder} encoder\n   * @param {Uint8Array} uint8Array\n   */\n  const writeVarUint8Array = (encoder, uint8Array) => {\n    writeVarUint(encoder, uint8Array.byteLength);\n    writeUint8Array(encoder, uint8Array);\n  };\n\n  /**\n   * Create an DataView of the next `len` bytes. Use it to write data after\n   * calling this function.\n   *\n   * ```js\n   * // write float32 using DataView\n   * const dv = writeOnDataView(encoder, 4)\n   * dv.setFloat32(0, 1.1)\n   * // read float32 using DataView\n   * const dv = readFromDataView(encoder, 4)\n   * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n   * ```\n   *\n   * @param {Encoder} encoder\n   * @param {number} len\n   * @return {DataView}\n   */\n  const writeOnDataView = (encoder, len) => {\n    verifyLen(encoder, len);\n    const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len);\n    encoder.cpos += len;\n    return dview\n  };\n\n  /**\n   * @param {Encoder} encoder\n   * @param {number} num\n   */\n  const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false);\n\n  /**\n   * @param {Encoder} encoder\n   * @param {number} num\n   */\n  const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false);\n\n  /**\n   * @param {Encoder} encoder\n   * @param {bigint} num\n   */\n  const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false);\n\n  const floatTestBed = new DataView(new ArrayBuffer(4));\n  /**\n   * Check if a number can be encoded as a 32 bit float.\n   *\n   * @param {number} num\n   * @return {boolean}\n   */\n  const isFloat32 = num => {\n    floatTestBed.setFloat32(0, num);\n    return floatTestBed.getFloat32(0) === num\n  };\n\n  /**\n   * Encode data with efficient binary format.\n   *\n   * Differences to JSON:\n   * • Transforms data to a binary format (not to a string)\n   * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n   * • Numbers are efficiently encoded either as a variable length integer, as a\n   *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n   *\n   * Encoding table:\n   *\n   * | Data Type           | Prefix   | Encoding Method    | Comment |\n   * | ------------------- | -------- | ------------------ | ------- |\n   * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n   * | null                | 126      |                    | |\n   * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n   * | float32             | 124      | writeFloat32       | |\n   * | float64             | 123      | writeFloat64       | |\n   * | bigint              | 122      | writeBigInt64      | |\n   * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n   * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n   * | string              | 119      | writeVarString     | |\n   * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n   * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n   * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n   *\n   * Reasons for the decreasing prefix:\n   * We need the first bit for extendability (later we may want to encode the\n   * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n   * [0-30]   the beginning of the data range is used for custom purposes\n   *          (defined by the function that uses this library)\n   * [31-127] the end of the data range is used for data encoding by\n   *          lib0/encoding.js\n   *\n   * @param {Encoder} encoder\n   * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n   */\n  const writeAny = (encoder, data) => {\n    switch (typeof data) {\n      case 'string':\n        // TYPE 119: STRING\n        write(encoder, 119);\n        writeVarString(encoder, data);\n        break\n      case 'number':\n        if (isInteger(data) && data <= BITS31) {\n          // TYPE 125: INTEGER\n          write(encoder, 125);\n          writeVarInt(encoder, data);\n        } else if (isFloat32(data)) {\n          // TYPE 124: FLOAT32\n          write(encoder, 124);\n          writeFloat32(encoder, data);\n        } else {\n          // TYPE 123: FLOAT64\n          write(encoder, 123);\n          writeFloat64(encoder, data);\n        }\n        break\n      case 'bigint':\n        // TYPE 122: BigInt\n        write(encoder, 122);\n        writeBigInt64(encoder, data);\n        break\n      case 'object':\n        if (data === null) {\n          // TYPE 126: null\n          write(encoder, 126);\n        } else if (data instanceof Array) {\n          // TYPE 117: Array\n          write(encoder, 117);\n          writeVarUint(encoder, data.length);\n          for (let i = 0; i < data.length; i++) {\n            writeAny(encoder, data[i]);\n          }\n        } else if (data instanceof Uint8Array) {\n          // TYPE 116: ArrayBuffer\n          write(encoder, 116);\n          writeVarUint8Array(encoder, data);\n        } else {\n          // TYPE 118: Object\n          write(encoder, 118);\n          const keys = Object.keys(data);\n          writeVarUint(encoder, keys.length);\n          for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            writeVarString(encoder, key);\n            writeAny(encoder, data[key]);\n          }\n        }\n        break\n      case 'boolean':\n        // TYPE 120/121: boolean (true/false)\n        write(encoder, data ? 120 : 121);\n        break\n      default:\n        // TYPE 127: undefined\n        write(encoder, 127);\n    }\n  };\n\n  /**\n   * Now come a few stateful encoder that have their own classes.\n   */\n\n  /**\n   * Basic Run Length Encoder - a basic compression implementation.\n   *\n   * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n   *\n   * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n   *\n   * @note T must not be null!\n   *\n   * @template T\n   */\n  class RleEncoder extends Encoder {\n    /**\n     * @param {function(Encoder, T):void} writer\n     */\n    constructor (writer) {\n      super();\n      /**\n       * The writer\n       */\n      this.w = writer;\n      /**\n       * Current state\n       * @type {T|null}\n       */\n      this.s = null;\n      this.count = 0;\n    }\n\n    /**\n     * @param {T} v\n     */\n    write (v) {\n      if (this.s === v) {\n        this.count++;\n      } else {\n        if (this.count > 0) {\n          // flush counter, unless this is the first value (count = 0)\n          writeVarUint(this, this.count - 1); // since count is always > 0, we can decrement by one. non-standard encoding ftw\n        }\n        this.count = 1;\n        // write first value\n        this.w(this, v);\n        this.s = v;\n      }\n    }\n  }\n\n  /**\n   * Basic diff decoder using variable length encoding.\n   *\n   * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n   */\n  class IntDiffEncoder extends Encoder {\n    /**\n     * @param {number} start\n     */\n    constructor (start) {\n      super();\n      /**\n       * Current state\n       * @type {number}\n       */\n      this.s = start;\n    }\n\n    /**\n     * @param {number} v\n     */\n    write (v) {\n      writeVarInt(this, v - this.s);\n      this.s = v;\n    }\n  }\n\n  /**\n   * A combination of IntDiffEncoder and RleEncoder.\n   *\n   * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n   *\n   * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n   */\n  class RleIntDiffEncoder extends Encoder {\n    /**\n     * @param {number} start\n     */\n    constructor (start) {\n      super();\n      /**\n       * Current state\n       * @type {number}\n       */\n      this.s = start;\n      this.count = 0;\n    }\n\n    /**\n     * @param {number} v\n     */\n    write (v) {\n      if (this.s === v && this.count > 0) {\n        this.count++;\n      } else {\n        if (this.count > 0) {\n          // flush counter, unless this is the first value (count = 0)\n          writeVarUint(this, this.count - 1); // since count is always > 0, we can decrement by one. non-standard encoding ftw\n        }\n        this.count = 1;\n        // write first value\n        writeVarInt(this, v - this.s);\n        this.s = v;\n      }\n    }\n  }\n\n  /**\n   * @param {UintOptRleEncoder} encoder\n   */\n  const flushUintOptRleEncoder = encoder => {\n    /* istanbul ignore else */\n    if (encoder.count > 0) {\n      // flush counter, unless this is the first value (count = 0)\n      // case 1: just a single value. set sign to positive\n      // case 2: write several values. set sign to negative to indicate that there is a length coming\n      writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s);\n      if (encoder.count > 1) {\n        writeVarUint(encoder.encoder, encoder.count - 2); // since count is always > 1, we can decrement by one. non-standard encoding ftw\n      }\n    }\n  };\n\n  /**\n   * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n   *\n   * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n   * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n   *\n   * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n   */\n  class UintOptRleEncoder {\n    constructor () {\n      this.encoder = new Encoder();\n      /**\n       * @type {number}\n       */\n      this.s = 0;\n      this.count = 0;\n    }\n\n    /**\n     * @param {number} v\n     */\n    write (v) {\n      if (this.s === v) {\n        this.count++;\n      } else {\n        flushUintOptRleEncoder(this);\n        this.count = 1;\n        this.s = v;\n      }\n    }\n\n    toUint8Array () {\n      flushUintOptRleEncoder(this);\n      return toUint8Array(this.encoder)\n    }\n  }\n\n  /**\n   * @param {IntDiffOptRleEncoder} encoder\n   */\n  const flushIntDiffOptRleEncoder = encoder => {\n    if (encoder.count > 0) {\n      //          31 bit making up the diff | wether to write the counter\n      const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1);\n      // flush counter, unless this is the first value (count = 0)\n      // case 1: just a single value. set first bit to positive\n      // case 2: write several values. set first bit to negative to indicate that there is a length coming\n      writeVarInt(encoder.encoder, encodedDiff);\n      if (encoder.count > 1) {\n        writeVarUint(encoder.encoder, encoder.count - 2); // since count is always > 1, we can decrement by one. non-standard encoding ftw\n      }\n    }\n  };\n\n  /**\n   * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n   *\n   * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n   * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n   *\n   * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n   *\n   * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n   * * 1 bit that denotes whether the next value is a count (LSB)\n   * * 1 bit that denotes whether this value is negative (MSB - 1)\n   * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n   *\n   * Therefore, only five bits remain to encode diff ranges.\n   *\n   * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n   */\n  class IntDiffOptRleEncoder {\n    constructor () {\n      this.encoder = new Encoder();\n      /**\n       * @type {number}\n       */\n      this.s = 0;\n      this.count = 0;\n      this.diff = 0;\n    }\n\n    /**\n     * @param {number} v\n     */\n    write (v) {\n      if (this.diff === v - this.s) {\n        this.s = v;\n        this.count++;\n      } else {\n        flushIntDiffOptRleEncoder(this);\n        this.count = 1;\n        this.diff = v - this.s;\n        this.s = v;\n      }\n    }\n\n    toUint8Array () {\n      flushIntDiffOptRleEncoder(this);\n      return toUint8Array(this.encoder)\n    }\n  }\n\n  /**\n   * Optimized String Encoder.\n   *\n   * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n   * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n   *\n   * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n   *\n   * The lengths are encoded using a UintOptRleEncoder.\n   */\n  class StringEncoder {\n    constructor () {\n      /**\n       * @type {Array<string>}\n       */\n      this.sarr = [];\n      this.s = '';\n      this.lensE = new UintOptRleEncoder();\n    }\n\n    /**\n     * @param {string} string\n     */\n    write (string) {\n      this.s += string;\n      if (this.s.length > 19) {\n        this.sarr.push(this.s);\n        this.s = '';\n      }\n      this.lensE.write(string.length);\n    }\n\n    toUint8Array () {\n      const encoder = new Encoder();\n      this.sarr.push(this.s);\n      this.s = '';\n      writeVarString(encoder, this.sarr.join(''));\n      writeUint8Array(encoder, this.lensE.toUint8Array());\n      return toUint8Array(encoder)\n    }\n  }\n\n  /**\n   * Efficient schema-less binary decoding with support for variable length encoding.\n   *\n   * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n   *\n   * Encodes numbers in little-endian order (least to most significant byte order)\n   * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n   * which is also used in Protocol Buffers.\n   *\n   * ```js\n   * // encoding step\n   * const encoder = new encoding.createEncoder()\n   * encoding.writeVarUint(encoder, 256)\n   * encoding.writeVarString(encoder, 'Hello world!')\n   * const buf = encoding.toUint8Array(encoder)\n   * ```\n   *\n   * ```js\n   * // decoding step\n   * const decoder = new decoding.createDecoder(buf)\n   * decoding.readVarUint(decoder) // => 256\n   * decoding.readVarString(decoder) // => 'Hello world!'\n   * decoding.hasContent(decoder) // => false - all data is read\n   * ```\n   *\n   * @module decoding\n   */\n\n  /**\n   * A Decoder handles the decoding of an Uint8Array.\n   */\n  class Decoder {\n    /**\n     * @param {Uint8Array} uint8Array Binary data to decode\n     */\n    constructor (uint8Array) {\n      /**\n       * Decoding target.\n       *\n       * @type {Uint8Array}\n       */\n      this.arr = uint8Array;\n      /**\n       * Current decoding position.\n       *\n       * @type {number}\n       */\n      this.pos = 0;\n    }\n  }\n\n  /**\n   * @function\n   * @param {Uint8Array} uint8Array\n   * @return {Decoder}\n   */\n  const createDecoder = uint8Array => new Decoder(uint8Array);\n\n  /**\n   * @function\n   * @param {Decoder} decoder\n   * @return {boolean}\n   */\n  const hasContent = decoder => decoder.pos !== decoder.arr.length;\n\n  /**\n   * Clone a decoder instance.\n   * Optionally set a new position parameter.\n   *\n   * @function\n   * @param {Decoder} decoder The decoder instance\n   * @param {number} [newPos] Defaults to current position\n   * @return {Decoder} A clone of `decoder`\n   */\n  const clone = (decoder, newPos = decoder.pos) => {\n    const _decoder = createDecoder(decoder.arr);\n    _decoder.pos = newPos;\n    return _decoder\n  };\n\n  /**\n   * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n   *\n   * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n   *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n   *\n   * @function\n   * @param {Decoder} decoder The decoder instance\n   * @param {number} len The length of bytes to read\n   * @return {Uint8Array}\n   */\n  const readUint8Array = (decoder, len) => {\n    const view = createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len);\n    decoder.pos += len;\n    return view\n  };\n\n  /**\n   * Read variable length Uint8Array.\n   *\n   * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n   *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {Uint8Array}\n   */\n  const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder));\n\n  /**\n   * Read the rest of the content as an ArrayBuffer\n   * @function\n   * @param {Decoder} decoder\n   * @return {Uint8Array}\n   */\n  const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos);\n\n  /**\n   * Skip one byte, jump to the next position.\n   * @function\n   * @param {Decoder} decoder The decoder instance\n   * @return {number} The next position\n   */\n  const skip8 = decoder => decoder.pos++;\n\n  /**\n   * Read one byte as unsigned integer.\n   * @function\n   * @param {Decoder} decoder The decoder instance\n   * @return {number} Unsigned 8-bit integer\n   */\n  const readUint8 = decoder => decoder.arr[decoder.pos++];\n\n  /**\n   * Read 2 bytes as unsigned integer.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.\n   */\n  const readUint16 = decoder => {\n    const uint =\n      decoder.arr[decoder.pos] +\n      (decoder.arr[decoder.pos + 1] << 8);\n    decoder.pos += 2;\n    return uint\n  };\n\n  /**\n   * Read 4 bytes as unsigned integer.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.\n   */\n  const readUint32 = decoder => {\n    const uint =\n      (decoder.arr[decoder.pos] +\n      (decoder.arr[decoder.pos + 1] << 8) +\n      (decoder.arr[decoder.pos + 2] << 16) +\n      (decoder.arr[decoder.pos + 3] << 24)) >>> 0;\n    decoder.pos += 4;\n    return uint\n  };\n\n  /**\n   * Read 4 bytes as unsigned integer in big endian order.\n   * (most significant byte first)\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.\n   */\n  const readUint32BigEndian = decoder => {\n    const uint =\n      (decoder.arr[decoder.pos + 3] +\n      (decoder.arr[decoder.pos + 2] << 8) +\n      (decoder.arr[decoder.pos + 1] << 16) +\n      (decoder.arr[decoder.pos] << 24)) >>> 0;\n    decoder.pos += 4;\n    return uint\n  };\n\n  /**\n   * Look ahead without incrementing the position\n   * to the next byte and read it as unsigned integer.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.\n   */\n  const peekUint8 = decoder => decoder.arr[decoder.pos];\n\n  /**\n   * Look ahead without incrementing the position\n   * to the next byte and read it as unsigned integer.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.\n   */\n  const peekUint16 = decoder =>\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8);\n\n  /**\n   * Look ahead without incrementing the position\n   * to the next byte and read it as unsigned integer.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.\n   */\n  const peekUint32 = decoder => (\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)\n  ) >>> 0;\n\n  /**\n   * Read unsigned integer (32bit) with variable length.\n   * 1/8th of the storage is used as encoding overhead.\n   *  * numbers < 2^7 is stored in one bytlength\n   *  * numbers < 2^14 is stored in two bylength\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.length\n   */\n  const readVarUint = decoder => {\n    let num = 0;\n    let len = 0;\n    while (true) {\n      const r = decoder.arr[decoder.pos++];\n      num = num | ((r & BITS7) << len);\n      len += 7;\n      if (r < BIT8) {\n        return num >>> 0 // return unsigned number!\n      }\n      /* istanbul ignore if */\n      if (len > 35) {\n        throw new Error('Integer out of range!')\n      }\n    }\n  };\n\n  /**\n   * Read signed integer (32bit) with variable length.\n   * 1/8th of the storage is used as encoding overhead.\n   *  * numbers < 2^7 is stored in one bytlength\n   *  * numbers < 2^14 is stored in two bylength\n   * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number} An unsigned integer.length\n   */\n  const readVarInt = decoder => {\n    let r = decoder.arr[decoder.pos++];\n    let num = r & BITS6;\n    let len = 6;\n    const sign = (r & BIT7) > 0 ? -1 : 1;\n    if ((r & BIT8) === 0) {\n      // don't continue reading\n      return sign * num\n    }\n    while (true) {\n      r = decoder.arr[decoder.pos++];\n      num = num | ((r & BITS7) << len);\n      len += 7;\n      if (r < BIT8) {\n        return sign * (num >>> 0)\n      }\n      /* istanbul ignore if */\n      if (len > 41) {\n        throw new Error('Integer out of range!')\n      }\n    }\n  };\n\n  /**\n   * Look ahead and read varUint without incrementing position\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number}\n   */\n  const peekVarUint = decoder => {\n    const pos = decoder.pos;\n    const s = readVarUint(decoder);\n    decoder.pos = pos;\n    return s\n  };\n\n  /**\n   * Look ahead and read varUint without incrementing position\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {number}\n   */\n  const peekVarInt = decoder => {\n    const pos = decoder.pos;\n    const s = readVarInt(decoder);\n    decoder.pos = pos;\n    return s\n  };\n\n  /**\n   * Read string of variable length\n   * * varUint is used to store the length of the string\n   *\n   * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n   * when String.fromCodePoint is fed with all characters as arguments.\n   * But most environments have a maximum number of arguments per functions.\n   * For effiency reasons we apply a maximum of 10000 characters at once.\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {String} The read String.\n   */\n  const readVarString = decoder => {\n    let remainingLen = readVarUint(decoder);\n    if (remainingLen === 0) {\n      return ''\n    } else {\n      let encodedString = String.fromCodePoint(readUint8(decoder)); // remember to decrease remainingLen\n      if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n        while (remainingLen--) {\n          encodedString += String.fromCodePoint(readUint8(decoder));\n        }\n      } else {\n        while (remainingLen > 0) {\n          const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n          // this is dangerous, we create a fresh array view from the existing buffer\n          const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen);\n          decoder.pos += nextLen;\n          // Starting with ES5.1 we can supply a generic array-like object as arguments\n          encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes));\n          remainingLen -= nextLen;\n        }\n      }\n      return decodeURIComponent(escape(encodedString))\n    }\n  };\n\n  /**\n   * Look ahead and read varString without incrementing position\n   *\n   * @function\n   * @param {Decoder} decoder\n   * @return {string}\n   */\n  const peekVarString = decoder => {\n    const pos = decoder.pos;\n    const s = readVarString(decoder);\n    decoder.pos = pos;\n    return s\n  };\n\n  /**\n   * @param {Decoder} decoder\n   * @param {number} len\n   * @return {DataView}\n   */\n  const readFromDataView = (decoder, len) => {\n    const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len);\n    decoder.pos += len;\n    return dv\n  };\n\n  /**\n   * @param {Decoder} decoder\n   */\n  const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false);\n\n  /**\n   * @param {Decoder} decoder\n   */\n  const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false);\n\n  /**\n   * @param {Decoder} decoder\n   */\n  const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false);\n\n  /**\n   * @type {Array<function(Decoder):any>}\n   */\n  const readAnyLookupTable = [\n    decoder => undefined, // CASE 127: undefined\n    decoder => null, // CASE 126: null\n    readVarInt, // CASE 125: integer\n    readFloat32, // CASE 124: float32\n    readFloat64, // CASE 123: float64\n    readBigInt64, // CASE 122: bigint\n    decoder => false, // CASE 121: boolean (false)\n    decoder => true, // CASE 120: boolean (true)\n    readVarString, // CASE 119: string\n    decoder => { // CASE 118: object<string,any>\n      const len = readVarUint(decoder);\n      /**\n       * @type {Object<string,any>}\n       */\n      const obj = {};\n      for (let i = 0; i < len; i++) {\n        const key = readVarString(decoder);\n        obj[key] = readAny(decoder);\n      }\n      return obj\n    },\n    decoder => { // CASE 117: array<any>\n      const len = readVarUint(decoder);\n      const arr = [];\n      for (let i = 0; i < len; i++) {\n        arr.push(readAny(decoder));\n      }\n      return arr\n    },\n    readVarUint8Array // CASE 116: Uint8Array\n  ];\n\n  /**\n   * @param {Decoder} decoder\n   */\n  const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder);\n\n  /**\n   * T must not be null.\n   *\n   * @template T\n   */\n  class RleDecoder extends Decoder {\n    /**\n     * @param {Uint8Array} uint8Array\n     * @param {function(Decoder):T} reader\n     */\n    constructor (uint8Array, reader) {\n      super(uint8Array);\n      /**\n       * The reader\n       */\n      this.reader = reader;\n      /**\n       * Current state\n       * @type {T|null}\n       */\n      this.s = null;\n      this.count = 0;\n    }\n\n    read () {\n      if (this.count === 0) {\n        this.s = this.reader(this);\n        if (hasContent(this)) {\n          this.count = readVarUint(this) + 1; // see encoder implementation for the reason why this is incremented\n        } else {\n          this.count = -1; // read the current value forever\n        }\n      }\n      this.count--;\n      return /** @type {T} */ (this.s)\n    }\n  }\n\n  class IntDiffDecoder extends Decoder {\n    /**\n     * @param {Uint8Array} uint8Array\n     * @param {number} start\n     */\n    constructor (uint8Array, start) {\n      super(uint8Array);\n      /**\n       * Current state\n       * @type {number}\n       */\n      this.s = start;\n    }\n\n    /**\n     * @return {number}\n     */\n    read () {\n      this.s += readVarInt(this);\n      return this.s\n    }\n  }\n\n  class RleIntDiffDecoder extends Decoder {\n    /**\n     * @param {Uint8Array} uint8Array\n     * @param {number} start\n     */\n    constructor (uint8Array, start) {\n      super(uint8Array);\n      /**\n       * Current state\n       * @type {number}\n       */\n      this.s = start;\n      this.count = 0;\n    }\n\n    /**\n     * @return {number}\n     */\n    read () {\n      if (this.count === 0) {\n        this.s += readVarInt(this);\n        if (hasContent(this)) {\n          this.count = readVarUint(this) + 1; // see encoder implementation for the reason why this is incremented\n        } else {\n          this.count = -1; // read the current value forever\n        }\n      }\n      this.count--;\n      return /** @type {number} */ (this.s)\n    }\n  }\n\n  class UintOptRleDecoder extends Decoder {\n    /**\n     * @param {Uint8Array} uint8Array\n     */\n    constructor (uint8Array) {\n      super(uint8Array);\n      /**\n       * @type {number}\n       */\n      this.s = 0;\n      this.count = 0;\n    }\n\n    read () {\n      if (this.count === 0) {\n        this.s = readVarInt(this);\n        // if the sign is negative, we read the count too, otherwise count is 1\n        const isNegative = isNegativeZero(this.s);\n        this.count = 1;\n        if (isNegative) {\n          this.s = -this.s;\n          this.count = readVarUint(this) + 2;\n        }\n      }\n      this.count--;\n      return /** @type {number} */ (this.s)\n    }\n  }\n\n  class IntDiffOptRleDecoder extends Decoder {\n    /**\n     * @param {Uint8Array} uint8Array\n     */\n    constructor (uint8Array) {\n      super(uint8Array);\n      /**\n       * @type {number}\n       */\n      this.s = 0;\n      this.count = 0;\n      this.diff = 0;\n    }\n\n    /**\n     * @return {number}\n     */\n    read () {\n      if (this.count === 0) {\n        const diff = readVarInt(this);\n        // if the first bit is set, we read more data\n        const hasCount = diff & 1;\n        this.diff = diff >> 1;\n        this.count = 1;\n        if (hasCount) {\n          this.count = readVarUint(this) + 2;\n        }\n      }\n      this.s += this.diff;\n      this.count--;\n      return this.s\n    }\n  }\n\n  class StringDecoder {\n    /**\n     * @param {Uint8Array} uint8Array\n     */\n    constructor (uint8Array) {\n      this.decoder = new UintOptRleDecoder(uint8Array);\n      this.str = readVarString(this.decoder);\n      /**\n       * @type {number}\n       */\n      this.spos = 0;\n    }\n\n    /**\n     * @return {string}\n     */\n    read () {\n      const end = this.spos + this.decoder.read();\n      const res = this.str.slice(this.spos, end);\n      this.spos = end;\n      return res\n    }\n  }\n\n  /**\n   * Utility functions to work with buffers (Uint8Array).\n   *\n   * @module buffer\n   */\n\n  /**\n   * @param {number} len\n   */\n  const createUint8ArrayFromLen = len => new Uint8Array(len);\n\n  /**\n   * Create Uint8Array with initial content from buffer\n   *\n   * @param {ArrayBuffer} buffer\n   * @param {number} byteOffset\n   * @param {number} length\n   */\n  const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length);\n\n  /**\n   * Create Uint8Array with initial content from buffer\n   *\n   * @param {ArrayBuffer} buffer\n   */\n  const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer);\n\n  /* istanbul ignore next */\n  /**\n   * @param {Uint8Array} bytes\n   * @return {string}\n   */\n  const toBase64Browser = bytes => {\n    let s = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n      s += fromCharCode(bytes[i]);\n    }\n    // eslint-disable-next-line no-undef\n    return btoa(s)\n  };\n\n  /**\n   * @param {Uint8Array} bytes\n   * @return {string}\n   */\n  const toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64');\n\n  /* istanbul ignore next */\n  /**\n   * @param {string} s\n   * @return {Uint8Array}\n   */\n  const fromBase64Browser = s => {\n    // eslint-disable-next-line no-undef\n    const a = atob(s);\n    const bytes = createUint8ArrayFromLen(a.length);\n    for (let i = 0; i < a.length; i++) {\n      bytes[i] = a.charCodeAt(i);\n    }\n    return bytes\n  };\n\n  /**\n   * @param {string} s\n   */\n  const fromBase64Node = s => {\n    const buf = Buffer.from(s, 'base64');\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n  };\n\n  /* istanbul ignore next */\n  const toBase64 = isBrowser ? toBase64Browser : toBase64Node;\n\n  /* istanbul ignore next */\n  const fromBase64 = isBrowser ? fromBase64Browser : fromBase64Node;\n\n  /**\n   * Copy the content of an Uint8Array view to a new ArrayBuffer.\n   *\n   * @param {Uint8Array} uint8Array\n   * @return {Uint8Array}\n   */\n  const copyUint8Array = uint8Array => {\n    const newBuf = createUint8ArrayFromLen(uint8Array.byteLength);\n    newBuf.set(uint8Array);\n    return newBuf\n  };\n\n  /**\n   * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n   * See encoding.writeAny for more information.\n   *\n   * @param {any} data\n   * @return {Uint8Array}\n   */\n  const encodeAny = data => {\n    const encoder = createEncoder();\n    writeAny(encoder, data);\n    return toUint8Array(encoder)\n  };\n\n  /**\n   * Decode an any-encoded value.\n   *\n   * @param {Uint8Array} buf\n   * @return {any}\n   */\n  const decodeAny = buf => readAny(createDecoder(buf));\n\n  /**\n   * Fast Pseudo Random Number Generators.\n   *\n   * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\n   * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\n   *\n   * @module prng\n   */\n\n  /**\n   * Description of the function\n   *  @callback generatorNext\n   *  @return {number} A 32bit integer\n   */\n\n  /**\n   * A random type generator.\n   *\n   * @typedef {Object} PRNG\n   * @property {generatorNext} next Generate new number\n   */\n\n  const DefaultPRNG = Xoroshiro128plus;\n\n  /**\n   * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\n   * This is the fastest full-period generator passing BigCrush without systematic failures.\n   * But there are more PRNGs available in ./PRNG/.\n   *\n   * @param {number} seed A positive 32bit integer. Do not use negative numbers.\n   * @return {PRNG}\n   */\n  const create$3 = seed => new DefaultPRNG(seed);\n\n  /**\n   * Generates a single random bool.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @return {Boolean} A random boolean\n   */\n  const bool = gen => (gen.next() >= 0.5);\n\n  /**\n   * Generates a random integer with 53 bit resolution.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @param {Number} min The lower bound of the allowed return values (inclusive).\n   * @param {Number} max The upper bound of the allowed return values (inclusive).\n   * @return {Number} A random integer on [min, max]\n   */\n  const int53 = (gen, min, max) => floor(gen.next() * (max + 1 - min) + min);\n\n  /**\n   * Generates a random integer with 53 bit resolution.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @param {Number} min The lower bound of the allowed return values (inclusive).\n   * @param {Number} max The upper bound of the allowed return values (inclusive).\n   * @return {Number} A random integer on [min, max]\n   */\n  const uint53 = (gen, min, max) => abs(int53(gen, min, max));\n\n  /**\n   * Generates a random integer with 32 bit resolution.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @param {Number} min The lower bound of the allowed return values (inclusive).\n   * @param {Number} max The upper bound of the allowed return values (inclusive).\n   * @return {Number} A random integer on [min, max]\n   */\n  const int32 = (gen, min, max) => floor(gen.next() * (max + 1 - min) + min);\n\n  /**\n   * Generates a random integer with 53 bit resolution.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @param {Number} min The lower bound of the allowed return values (inclusive).\n   * @param {Number} max The upper bound of the allowed return values (inclusive).\n   * @return {Number} A random integer on [min, max]\n   */\n  const uint32 = (gen, min, max) => int32(gen, min, max) >>> 0;\n\n  /**\n   * @deprecated\n   * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\n   * openaring on smaller ranges.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @param {Number} min The lower bound of the allowed return values (inclusive).\n   * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\n   * @return {Number} A random integer on [min, max]\n   */\n  const int31 = (gen, min, max) => int32(gen, min, max);\n\n  /**\n   * Generates a random real on [0, 1) with 53 bit resolution.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @return {Number} A random real number on [0, 1).\n   */\n  const real53 = gen => gen.next(); // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\n\n  /**\n   * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\n   *\n   * @param {PRNG} gen A random number generator.\n   * @return {string}\n   *\n   * (Space)!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\n   */\n  const char = gen => fromCharCode(int31(gen, 32, 126));\n\n  /**\n   * @param {PRNG} gen\n   * @return {string} A single letter (a-z)\n   */\n  const letter = gen => fromCharCode(int31(gen, 97, 122));\n\n  /**\n   * @param {PRNG} gen\n   * @param {number} [minLen=0]\n   * @param {number} [maxLen=20]\n   * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\n   */\n  const word = (gen, minLen = 0, maxLen = 20) => {\n    const len = int31(gen, minLen, maxLen);\n    let str = '';\n    for (let i = 0; i < len; i++) {\n      str += letter(gen);\n    }\n    return str\n  };\n\n  /**\n   * TODO: this function produces invalid runes. Does not cover all of utf16!!\n   *\n   * @param {PRNG} gen\n   * @return {string}\n   */\n  const utf16Rune = gen => {\n    const codepoint = int31(gen, 0, 256);\n    return fromCodePoint(codepoint)\n  };\n\n  /**\n   * @param {PRNG} gen\n   * @param {number} [maxlen = 20]\n   */\n  const utf16String = (gen, maxlen = 20) => {\n    const len = int31(gen, 0, maxlen);\n    let str = '';\n    for (let i = 0; i < len; i++) {\n      str += utf16Rune(gen);\n    }\n    return str\n  };\n\n  /**\n   * Returns one element of a given array.\n   *\n   * @param {PRNG} gen A random number generator.\n   * @param {Array<T>} array Non empty Array of possible values.\n   * @return {T} One of the values of the supplied Array.\n   * @template T\n   */\n  const oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)];\n\n  /**\n   * @param {PRNG} gen\n   * @param {number} len\n   * @return {Uint8Array}\n   */\n  const uint8Array = (gen, len) => {\n    const buf = createUint8ArrayFromLen(len);\n    for (let i = 0; i < buf.length; i++) {\n      buf[i] = int32(gen, 0, BITS8);\n    }\n    return buf\n  };\n\n  /**\n   * @param {PRNG} gen\n   * @param {number} len\n   * @return {Uint32Array}\n   */\n  const uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer);\n\n  /**\n   * Utility helpers for generating statistics.\n   *\n   * @module statistics\n   */\n\n  /**\n   * @param {Array<number>} arr Array of values\n   * @return {number} Returns null if the array is empty\n   */\n  const median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[floor((arr.length - 1) / 2)] + arr[ceil((arr.length - 1) / 2)]) / 2);\n\n  /**\n   * @param {Array<number>} arr\n   * @return {number}\n   */\n  const average = arr => arr.reduce(add$1, 0) / arr.length;\n\n  /**\n   * Utility helpers to work with promises.\n   *\n   * @module promise\n   */\n\n  /**\n   * @template T\n   * @callback PromiseResolve\n   * @param {T|PromiseLike<T>} [result]\n   */\n\n  /**\n   * @template T\n   * @param {function(PromiseResolve<T>,function(Error):void):any} f\n   * @return {Promise<T>}\n   */\n  const create$2 = f => /** @type {Promise<T>} */ (new Promise(f));\n\n  /**\n   * @param {function(function():void,function(Error):void):void} f\n   * @return {Promise<void>}\n   */\n  const createEmpty = f => new Promise(f);\n\n  /**\n   * `Promise.all` wait for all promises in the array to resolve and return the result\n   * @template T\n   * @param {Array<Promise<T>>} arrp\n   * @return {Promise<Array<T>>}\n   */\n  const all = arrp => Promise.all(arrp);\n\n  /**\n   * @param {Error} [reason]\n   * @return {Promise<never>}\n   */\n  const reject = reason => Promise.reject(reason);\n\n  /**\n   * @template T\n   * @param {T|void} res\n   * @return {Promise<T|void>}\n   */\n  const resolve = res => Promise.resolve(res);\n\n  /**\n   * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n   *\n   * @param {number} timeout\n   * @param {function():boolean} check\n   * @param {number} [intervalResolution]\n   * @return {Promise<void>}\n   */\n  const until = (timeout, check, intervalResolution = 10) => create$2((resolve, reject) => {\n    const startTime = getUnixTime();\n    const hasTimeout = timeout > 0;\n    const untilInterval = () => {\n      if (check()) {\n        clearInterval(intervalHandle);\n        resolve();\n      } else if (hasTimeout) {\n        /* istanbul ignore else */\n        if (getUnixTime() - startTime > timeout) {\n          clearInterval(intervalHandle);\n          reject(new Error('Timeout'));\n        }\n      }\n    };\n    const intervalHandle = setInterval(untilInterval, intervalResolution);\n  });\n\n  /**\n   * @param {number} timeout\n   * @return {Promise<undefined>}\n   */\n  const wait = timeout => create$2((resolve, reject) => setTimeout(resolve, timeout));\n\n  /**\n   * Checks if an object is a promise using ducktyping.\n   *\n   * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n   * library has some insane environment where global Promise objects are overwritten.\n   *\n   * @param {any} p\n   * @return {boolean}\n   */\n  const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally);\n\n  /**\n   * Testing framework with support for generating tests.\n   *\n   * ```js\n   * // test.js template for creating a test executable\n   * import { runTests } from 'lib0/testing.js'\n   * import * as log from 'lib0/logging.js'\n   * import * as mod1 from './mod1.test.js'\n   * import * as mod2 from './mod2.test.js'\n\n   * import { isBrowser, isNode } from 'lib0/environment.js'\n   *\n   * if (isBrowser) {\n   *   // optional: if this is ran in the browser, attach a virtual console to the dom\n   *   log.createVConsole(document.body)\n   * }\n   *\n   * runTests({\n   *  mod1,\n   *  mod2,\n   * }).then(success => {\n   *   if (isNode) {\n   *     process.exit(success ? 0 : 1)\n   *   }\n   * })\n   * ```\n   *\n   * ```js\n   * // mod1.test.js\n   * /**\n   *  * runTests automatically tests all exported functions that start with \"test\".\n   *  * The name of the function should be in camelCase and is used for the logging output.\n   *  *\n   *  * @param {t.TestCase} tc\n   *  *\\/\n   * export const testMyFirstTest = tc => {\n   *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\n   * }\n   * ```\n   *\n   * Now you can simply run `node test.js` to run your test or run test.js in the browser.\n   *\n   * @module testing\n   */\n\n  const extensive = hasConf('extensive');\n\n  /* istanbul ignore next */\n  const envSeed = hasParam('--seed') ? Number.parseInt(getParam('--seed', '0')) : null;\n\n  class TestCase {\n    /**\n     * @param {string} moduleName\n     * @param {string} testName\n     */\n    constructor (moduleName, testName) {\n      /**\n       * @type {string}\n       */\n      this.moduleName = moduleName;\n      /**\n       * @type {string}\n       */\n      this.testName = testName;\n      this._seed = null;\n      this._prng = null;\n    }\n\n    resetSeed () {\n      this._seed = null;\n      this._prng = null;\n    }\n\n    /**\n     * @type {number}\n     */\n    /* istanbul ignore next */\n    get seed () {\n      /* istanbul ignore else */\n      if (this._seed === null) {\n        /* istanbul ignore next */\n        this._seed = envSeed === null ? uint32$1() : envSeed;\n      }\n      return this._seed\n    }\n\n    /**\n     * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\n     *\n     * @type {prng.PRNG}\n     */\n    get prng () {\n      /* istanbul ignore else */\n      if (this._prng === null) {\n        this._prng = create$3(this.seed);\n      }\n      return this._prng\n    }\n  }\n\n  const repetitionTime = Number(getParam('--repetition-time', '50'));\n  /* istanbul ignore next */\n  const testFilter = hasParam('--filter') ? getParam('--filter', '') : null;\n\n  /* istanbul ignore next */\n  const testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*');\n\n  const repeatTestRegex = /^(repeat|repeating)\\s/;\n\n  /**\n   * @param {string} moduleName\n   * @param {string} name\n   * @param {function(TestCase):void|Promise<any>} f\n   * @param {number} i\n   * @param {number} numberOfTests\n   */\n  const run = async (moduleName, name, f, i, numberOfTests) => {\n    const uncamelized = fromCamelCase(name.slice(4), ' ');\n    const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`);\n    /* istanbul ignore if */\n    if (filtered) {\n      return true\n    }\n    const tc = new TestCase(moduleName, name);\n    const repeat = repeatTestRegex.test(uncamelized);\n    const groupArgs = [GREY, `[${i + 1}/${numberOfTests}] `, PURPLE, `${moduleName}: `, BLUE, uncamelized];\n    /* istanbul ignore next */\n    if (testFilter === null) {\n      groupCollapsed(...groupArgs);\n    } else {\n      group$1(...groupArgs);\n    }\n    const times = [];\n    const start = performance.now();\n    let lastTime = start;\n    let err = null;\n    performance.mark(`${name}-start`);\n    do {\n      try {\n        const p = f(tc);\n        if (isPromise(p)) {\n          await p;\n        }\n      } catch (_err) {\n        err = _err;\n      }\n      const currTime = performance.now();\n      times.push(currTime - lastTime);\n      lastTime = currTime;\n      if (repeat && err === null && (lastTime - start) < repetitionTime) {\n        tc.resetSeed();\n      } else {\n        break\n      }\n    } while (err === null && (lastTime - start) < repetitionTime)\n    performance.mark(`${name}-end`);\n    /* istanbul ignore if */\n    if (err !== null && err.constructor !== SkipError) {\n      printError(err);\n    }\n    performance.measure(name, `${name}-start`, `${name}-end`);\n    groupEnd();\n    const duration = lastTime - start;\n    let success = true;\n    times.sort((a, b) => a - b);\n    /* istanbul ignore next */\n    const againMessage = isBrowser\n      ? `     - ${window.location.href}?filter=\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\n      : `\\nrepeat: npm run test -- --filter \"\\\\[${i + 1}/\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`;\n    const timeInfo = (repeat && err === null)\n      ? ` - ${times.length} repetitions in ${humanizeDuration(duration)} (best: ${humanizeDuration(times[0])}, worst: ${humanizeDuration(last(times))}, median: ${humanizeDuration(median(times))}, average: ${humanizeDuration(average(times))})`\n      : ` in ${humanizeDuration(duration)}`;\n    if (err !== null) {\n      /* istanbul ignore else */\n      if (err.constructor === SkipError) {\n        print(GREY, BOLD, 'Skipped: ', UNBOLD, uncamelized);\n      } else {\n        success = false;\n        print(RED, BOLD, 'Failure: ', UNBOLD, UNCOLOR, uncamelized, GREY, timeInfo, againMessage);\n      }\n    } else {\n      print(GREEN, BOLD, 'Success: ', UNBOLD, UNCOLOR, uncamelized, GREY, timeInfo, againMessage);\n    }\n    return success\n  };\n\n  /**\n   * Describe what you are currently testing. The message will be logged.\n   *\n   * ```js\n   * export const testMyFirstTest = tc => {\n   *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\n   * }\n   * ```\n   *\n   * @param {string} description\n   * @param {string} info\n   */\n  const describe = (description, info = '') => print(BLUE, description, ' ', GREY, info);\n\n  /**\n   * Describe the state of the current computation.\n   * ```js\n   * export const testMyFirstTest = tc => {\n   *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\n   * }\n   * ```\n   *\n   * @param {string} info\n   */\n  const info = info => describe('', info);\n\n  const printCanvas = printCanvas$1;\n\n  /**\n   * Group outputs in a collapsible category.\n   *\n   * ```js\n   * export const testMyFirstTest = tc => {\n   *   t.group('subtest 1', () => {\n   *     t.describe('this message is part of a collapsible section')\n   *   })\n   *   await t.groupAsync('subtest async 2', async () => {\n   *     await someaction()\n   *     t.describe('this message is part of a collapsible section')\n   *   })\n   * }\n   * ```\n   *\n   * @param {string} description\n   * @param {function(void):void} f\n   */\n  const group = (description, f) => {\n    group$1(BLUE, description);\n    try {\n      f();\n    } finally {\n      groupEnd();\n    }\n  };\n\n  /**\n   * Group outputs in a collapsible category.\n   *\n   * ```js\n   * export const testMyFirstTest = async tc => {\n   *   t.group('subtest 1', () => {\n   *     t.describe('this message is part of a collapsible section')\n   *   })\n   *   await t.groupAsync('subtest async 2', async () => {\n   *     await someaction()\n   *     t.describe('this message is part of a collapsible section')\n   *   })\n   * }\n   * ```\n   *\n   * @param {string} description\n   * @param {function(void):Promise<any>} f\n   */\n  const groupAsync = async (description, f) => {\n    group$1(BLUE, description);\n    try {\n      await f();\n    } finally {\n      groupEnd();\n    }\n  };\n\n  /**\n   * Measure the time that it takes to calculate something.\n   *\n   * ```js\n   * export const testMyFirstTest = async tc => {\n   *   t.measureTime('measurement', () => {\n   *     heavyCalculation()\n   *   })\n   *   await t.groupAsync('async measurement', async () => {\n   *     await heavyAsyncCalculation()\n   *   })\n   * }\n   * ```\n   *\n   * @param {string} message\n   * @param {function():void} f\n   * @return {number} Returns a promise that resolves the measured duration to apply f\n   */\n  const measureTime = (message, f) => {\n    let duration;\n    const start = performance.now();\n    try {\n      f();\n    } finally {\n      duration = performance.now() - start;\n      print(PURPLE, message, GREY, ` ${humanizeDuration(duration)}`);\n    }\n    return duration\n  };\n\n  /**\n   * Measure the time that it takes to calculate something.\n   *\n   * ```js\n   * export const testMyFirstTest = async tc => {\n   *   t.measureTimeAsync('measurement', async () => {\n   *     await heavyCalculation()\n   *   })\n   *   await t.groupAsync('async measurement', async () => {\n   *     await heavyAsyncCalculation()\n   *   })\n   * }\n   * ```\n   *\n   * @param {string} message\n   * @param {function():Promise<any>} f\n   * @return {Promise<number>} Returns a promise that resolves the measured duration to apply f\n   */\n  const measureTimeAsync = async (message, f) => {\n    let duration;\n    const start = performance.now();\n    try {\n      await f();\n    } finally {\n      duration = performance.now() - start;\n      print(PURPLE, message, GREY, ` ${humanizeDuration(duration)}`);\n    }\n    return duration\n  };\n\n  /**\n   * @template T\n   * @param {Array<T>} as\n   * @param {Array<T>} bs\n   * @param {string} [m]\n   * @return {boolean}\n   */\n  const compareArrays = (as, bs, m = 'Arrays match') => {\n    if (as.length !== bs.length) {\n      fail(m);\n    }\n    for (let i = 0; i < as.length; i++) {\n      if (as[i] !== bs[i]) {\n        fail(m);\n      }\n    }\n    return true\n  };\n\n  /**\n   * @param {string} a\n   * @param {string} b\n   * @param {string} [m]\n   * @throws {TestError} Throws if tests fails\n   */\n  const compareStrings = (a, b, m = 'Strings match') => {\n    if (a !== b) {\n      const diff = simpleDiff(a, b);\n      print(GREY, a.slice(0, diff.index), RED, a.slice(diff.index, diff.remove), GREEN, diff.insert, GREY, a.slice(diff.index + diff.remove));\n      fail(m);\n    }\n  };\n\n  /**\n   * @template K,V\n   * @param {Object<K,V>} a\n   * @param {Object<K,V>} b\n   * @param {string} [m]\n   * @throws {TestError} Throws if test fails\n   */\n  const compareObjects = (a, b, m = 'Objects match') => { equalFlat(a, b) || fail(m); };\n\n  /**\n   * @param {any} constructor\n   * @param {any} a\n   * @param {any} b\n   * @param {string} path\n   * @throws {TestError}\n   */\n  const compareValues = (constructor, a, b, path) => {\n    if (a !== b) {\n      fail(`Values ${stringify(a)} and ${stringify(b)} don't match (${path})`);\n    }\n    return true\n  };\n\n  /**\n   * @param {string?} message\n   * @param {string} reason\n   * @param {string} path\n   * @throws {TestError}\n   */\n  const _failMessage = (message, reason, path) => fail(\n    message === null\n      ? `${reason} ${path}`\n      : `${message} (${reason}) ${path}`\n  );\n\n  /**\n   * @param {any} a\n   * @param {any} b\n   * @param {string} path\n   * @param {string?} message\n   * @param {function(any,any,any,string,any):boolean} customCompare\n   */\n  const _compare = (a, b, path, message, customCompare) => {\n    // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\n    if (a == null || b == null) {\n      return compareValues(null, a, b, path)\n    }\n    if (a.constructor !== b.constructor) {\n      _failMessage(message, 'Constructors don\\'t match', path);\n    }\n    let success = true;\n    switch (a.constructor) {\n      case ArrayBuffer:\n        a = new Uint8Array(a);\n        b = new Uint8Array(b);\n      // eslint-disable-next-line no-fallthrough\n      case Uint8Array: {\n        if (a.byteLength !== b.byteLength) {\n          _failMessage(message, 'ArrayBuffer lengths match', path);\n        }\n        for (let i = 0; success && i < a.length; i++) {\n          success = success && a[i] === b[i];\n        }\n        break\n      }\n      case Set: {\n        if (a.size !== b.size) {\n          _failMessage(message, 'Sets have different number of attributes', path);\n        }\n        // @ts-ignore\n        a.forEach(value => {\n          if (!b.has(value)) {\n            _failMessage(message, `b.${path} does have ${value}`, path);\n          }\n        });\n        break\n      }\n      case Map: {\n        if (a.size !== b.size) {\n          _failMessage(message, 'Maps have different number of attributes', path);\n        }\n        // @ts-ignore\n        a.forEach((value, key) => {\n          if (!b.has(key)) {\n            _failMessage(message, `Property ${path}[\"${key}\"] does not exist on second argument`, path);\n          }\n          _compare(value, b.get(key), `${path}[\"${key}\"]`, message, customCompare);\n        });\n        break\n      }\n      case Object:\n        if (length$1(a) !== length$1(b)) {\n          _failMessage(message, 'Objects have a different number of attributes', path);\n        }\n        forEach(a, (value, key) => {\n          if (!hasProperty(b, key)) {\n            _failMessage(message, `Property ${path} does not exist on second argument`, path);\n          }\n          _compare(value, b[key], `${path}[\"${key}\"]`, message, customCompare);\n        });\n        break\n      case Array:\n        if (a.length !== b.length) {\n          _failMessage(message, 'Arrays have a different number of attributes', path);\n        }\n        // @ts-ignore\n        a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare));\n        break\n      /* istanbul ignore next */\n      default:\n        if (!customCompare(a.constructor, a, b, path, compareValues)) {\n          _failMessage(message, `Values ${stringify(a)} and ${stringify(b)} don't match`, path);\n        }\n    }\n    assert(success, message);\n    return true\n  };\n\n  /**\n   * @template T\n   * @param {T} a\n   * @param {T} b\n   * @param {string?} [message]\n   * @param {function(any,T,T,string,any):boolean} [customCompare]\n   */\n  const compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare);\n\n  /* istanbul ignore next */\n  /**\n   * @param {boolean} condition\n   * @param {string?} [message]\n   * @throws {TestError}\n   */\n  const assert = (condition, message = null) => condition || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`);\n\n  /**\n   * @param {function():void} f\n   * @throws {TestError}\n   */\n  const fails = f => {\n    let err = null;\n    try {\n      f();\n    } catch (_err) {\n      err = _err;\n      print(GREEN, '⇖ This Error was expected');\n    }\n    /* istanbul ignore if */\n    if (err === null) {\n      fail('Expected this to fail');\n    }\n  };\n\n  /**\n   * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\n   */\n  const runTests = async tests => {\n    const numberOfTests = map$1(tests, mod => map$1(mod, f => /* istanbul ignore next */ f ? 1 : 0).reduce(add$1, 0)).reduce(add$1, 0);\n    let successfulTests = 0;\n    let testnumber = 0;\n    const start = performance.now();\n    for (const modName in tests) {\n      const mod = tests[modName];\n      for (const fname in mod) {\n        const f = mod[fname];\n        /* istanbul ignore else */\n        if (f) {\n          const repeatEachTest = 1;\n          let success = true;\n          for (let i = 0; success && i < repeatEachTest; i++) {\n            success = await run(modName, fname, f, testnumber, numberOfTests);\n          }\n          testnumber++;\n          /* istanbul ignore else */\n          if (success) {\n            successfulTests++;\n          }\n        }\n      }\n    }\n    const end = performance.now();\n    print('');\n    const success = successfulTests === numberOfTests;\n    /* istanbul ignore next */\n    if (success) {\n      /* istanbul ignore next */\n      print(GREEN, BOLD, 'All tests successful!', GREY, UNBOLD, ` in ${humanizeDuration(end - start)}`);\n      /* istanbul ignore next */\n      printImgBase64(nyanCatImage, 50);\n    } else {\n      const failedTests = numberOfTests - successfulTests;\n      print(RED, BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`);\n    }\n    return success\n  };\n\n  class TestError extends Error {}\n\n  /**\n   * @param {string} reason\n   * @throws {TestError}\n   */\n  const fail = reason => {\n    print(RED, BOLD, 'X ', UNBOLD, reason);\n    throw new TestError('Test Failed')\n  };\n\n  class SkipError extends Error {}\n\n  /**\n   * @param {boolean} cond If true, this tests will be skipped\n   * @throws {SkipError}\n   */\n  const skip = (cond = true) => {\n    if (cond) {\n      throw new SkipError('skipping..')\n    }\n  };\n\n  // eslint-disable-next-line\n  const nyanCatImage = '';\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testAppend = tc => {\n    const arr = [1, 2, 3];\n    appendTo(arr, arr.slice());\n    compareArrays(arr, [1, 2, 3, 1, 2, 3]);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testflatten = tc => {\n    const arr = [[1, 2, 3], [4]];\n    compareArrays(flatten(arr), [1, 2, 3, 4]);\n  };\n\n  var array = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testAppend: testAppend,\n    testflatten: testflatten\n  });\n\n  const testLogging = () => {\n    print(BLUE, 'blue ');\n    print(BLUE, 'blue ', BOLD, 'blue,bold');\n    print(GREEN, RED, 'red ', 'red');\n    print(ORANGE, 'orange');\n    print(BOLD, 'bold ', UNBOLD, 'nobold');\n    print(GREEN, 'green ', UNCOLOR, 'nocolor');\n    print('expecting objects from now on!');\n    print({ 'my-object': 'isLogged' });\n    print(GREEN, 'green ', { 'my-object': 'isLogged' });\n    print(GREEN, 'green ', { 'my-object': 'isLogged' }, 'unformatted');\n    print(BLUE, BOLD, 'number', 1);\n    print(BLUE, BOLD, 'number', 1, {}, 's', 2);\n    print({}, 'dtrn');\n  };\n\n  var logging = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testLogging: testLogging\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testLowercaseTransformation = tc => {\n    compareStrings(fromCamelCase('ThisIsATest', ' '), 'this is a test');\n    compareStrings(fromCamelCase('Testing', ' '), 'testing');\n    compareStrings(fromCamelCase('testingThis', ' '), 'testing this');\n    compareStrings(fromCamelCase('testYAY', ' '), 'test y a y');\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatStringUtf8Encoding = tc => {\n    skip(!utf8TextDecoder);\n    const str = utf16String(tc.prng, 1000000);\n    let nativeResult, polyfilledResult;\n    measureTime('TextEncoder utf8 encoding', () => {\n      nativeResult = _encodeUtf8Native(str);\n    });\n    measureTime('Polyfilled utf8 encoding', () => {\n      polyfilledResult = _encodeUtf8Polyfill(str);\n    });\n    compare(nativeResult, polyfilledResult, 'Encoded utf8 buffers match');\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatStringUtf8Decoding = tc => {\n    skip(!utf8TextDecoder);\n    const buf = encodeUtf8(utf16String(tc.prng, 1000000));\n    let nativeResult, polyfilledResult;\n    measureTime('TextEncoder utf8 decoding', () => {\n      nativeResult = _decodeUtf8Native(buf);\n    });\n    measureTime('Polyfilled utf8 decoding', () => {\n      polyfilledResult = _decodeUtf8Polyfill(buf);\n    });\n    compare(nativeResult, polyfilledResult, 'Decoded utf8 buffers match');\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testBomEncodingDecoding = tc => {\n    const bomStr = '﻿bom';\n    assert(bomStr.length === 4);\n    const polyfilledResult = _decodeUtf8Polyfill(_encodeUtf8Polyfill(bomStr));\n    assert(polyfilledResult.length === 4);\n    assert(polyfilledResult === bomStr);\n    if (utf8TextDecoder) {\n      const nativeResult = _decodeUtf8Native(_encodeUtf8Native(bomStr));\n      assert(nativeResult === polyfilledResult);\n    }\n  };\n\n  var string = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testLowercaseTransformation: testLowercaseTransformation,\n    testRepeatStringUtf8Encoding: testRepeatStringUtf8Encoding,\n    testRepeatStringUtf8Decoding: testRepeatStringUtf8Decoding,\n    testBomEncodingDecoding: testBomEncodingDecoding\n  });\n\n  /* global BigInt */\n\n  /**\n   * @type {Array<function(prng.PRNG, number, boolean):any>}\n   */\n  let genAnyLookupTable = [\n    gen => BigInt(int53(gen, MIN_SAFE_INTEGER, MAX_SAFE_INTEGER)), // TYPE 122\n    gen => undefined, // TYPE 127\n    gen => null, // TYPE 126\n    gen => int53(gen, LOWEST_INT32, HIGHEST_INT32), // TYPE 125\n    gen => real53(gen), // TYPE 124 and 123\n    gen => true, // TYPE 121\n    gen => false, // TYPE 120\n    gen => utf16String(gen), // TYPE 119\n    (gen, depth, toJsonCompatible) => ({ val: genAny(gen, depth + 1, toJsonCompatible) }), // TYPE 118\n    (gen, depth, toJsonCompatible) => Array.from({ length: uint32(gen, 0, 20 - depth) }).map(() => genAny(gen, depth + 1, toJsonCompatible)), // TYPE 117\n    gen => uint8Array(gen, uint32(gen, 0, 50)) // TYPE 116\n  ];\n\n  const genAnyLookupTableJsonCompatible = genAnyLookupTable.slice(1);\n\n  if (typeof BigInt === 'undefined') {\n    genAnyLookupTable = genAnyLookupTable.slice(1);\n  }\n\n  /**\n   * @param {prng.PRNG} gen\n   * @param {number} _depth The current call-depth\n   */\n  const genAny = (gen, _depth = 0, toJsonCompatible = false) => oneOf(gen, toJsonCompatible ? genAnyLookupTableJsonCompatible : genAnyLookupTable)(gen, _depth, toJsonCompatible);\n\n  /**\n   * Check if binary encoding is compatible with golang binary encoding - binary.PutVarUint.\n   *\n   * Result: is compatible up to 32 bit: [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n   */\n  const testGolangBinaryEncodingCompatibility = () => {\n    const tests = [\n      { in: 0, out: [0] },\n      { in: 1, out: [1] },\n      { in: 128, out: [128, 1] },\n      { in: 200, out: [200, 1] },\n      { in: 32, out: [32] },\n      { in: 500, out: [244, 3] },\n      { in: 256, out: [128, 2] },\n      { in: 700, out: [188, 5] },\n      { in: 1024, out: [128, 8] },\n      { in: 1025, out: [129, 8] },\n      { in: 4048, out: [208, 31] },\n      { in: 5050, out: [186, 39] },\n      { in: 1000000, out: [192, 132, 61] },\n      { in: 34951959, out: [151, 166, 213, 16] },\n      { in: 2147483646, out: [254, 255, 255, 255, 7] },\n      { in: 2147483647, out: [255, 255, 255, 255, 7] },\n      { in: 2147483648, out: [128, 128, 128, 128, 8] },\n      { in: 2147483700, out: [180, 128, 128, 128, 8] },\n      { in: 4294967294, out: [254, 255, 255, 255, 15] },\n      { in: 4294967295, out: [255, 255, 255, 255, 15] }\n    ];\n    tests.forEach(test => {\n      const encoder = createEncoder();\n      writeVarUint(encoder, test.in);\n      const buffer = toUint8Array(encoder);\n      assert(buffer.byteLength === test.out.length);\n      assert(buffer.length > 0);\n      for (let j = 0; j < buffer.length; j++) {\n        assert(buffer[j] === test.out[j]);\n      }\n    });\n  };\n\n  /**\n   * @template T\n   * @param {string} testname\n   * @param {function(encoding.Encoder, T):void} write\n   * @param {function(decoding.Decoder):T} read\n   * @param {T} val\n   * @param {boolean} doLog\n   */\n  function test (testname, write, read, val, doLog = true) {\n    const encoder = createEncoder();\n    write(encoder, val);\n    const reader = createDecoder(toUint8Array(encoder));\n    const result = read(reader);\n    const utf8ByteLength$1 = utf8ByteLength(val + '');\n    const binaryByteLength = length(encoder);\n    if (doLog) {\n      describe(testname, ` utf8 encode: ${utf8ByteLength$1} bytes / binary encode: ${binaryByteLength} bytes`);\n    }\n    compare(val, result);\n    return {\n      utf8ByteLength: utf8ByteLength$1,\n      binaryByteLength\n    }\n  }\n\n  /**\n   * @param {string} s\n   */\n  const testVarString = s => {\n    const encoder = createEncoder();\n    writeVarString(encoder, s);\n    const decoder = createDecoder(toUint8Array(encoder));\n    const peeked = peekVarString(decoder);\n    const result = readVarString(decoder);\n    compareStrings(s, result);\n    compareStrings(s, peeked);\n  };\n\n  const testStringDecodingPerformance = () => {\n    // test if it is faster to read N single characters, or if it is faster to read N characters in one flush.\n    // to make the comparison meaningful, we read read N characters in an Array\n    const N = 2000000;\n    const durationSingleElements = measureTime('read / write single elements', () => {\n      const encoder = createEncoder();\n      measureTime('read / write single elements - write', () => {\n        for (let i = 0; i < N; i++) {\n          writeVarString(encoder, 'i');\n        }\n      });\n      const decoder = createDecoder(toUint8Array(encoder));\n      measureTime('read / write single elements - read', () => {\n        const arr = [];\n        for (let i = 0; i < N; i++) {\n          arr.push(readVarString(decoder));\n        }\n      });\n    });\n\n    const durationConcatElementsNative = measureTime('read / write concatenated string using native encoder/decoder', () => {\n      let stringbuf = new Uint8Array();\n      const encoderLengths = createEncoder();\n      measureTime('read / write concatenated string using native encoder/decoder - write', () => {\n        let s = '';\n        const sArr = [];\n        for (let i = 0; i < N; i++) {\n          s += 'i';\n          writeVarUint(encoderLengths, 1); // we write a single char.\n          if (i % 20 === 0) {\n            sArr.push(s);\n            s = '';\n          }\n        }\n        sArr.push(s);\n        stringbuf = encodeUtf8(sArr.join(''));\n      });\n      const decoderLengths = createDecoder(toUint8Array(encoderLengths));\n      measureTime('read / write concatenated string using native encoder/decoder - read', () => {\n        const arr = [];\n        const concatS = decodeUtf8(stringbuf);\n        for (let i = 0; i < N; i++) {\n          const len = readVarUint(decoderLengths);\n          arr.push(concatS.slice(i, len)); // push using slice\n        }\n      });\n    });\n    const durationConcatElements = measureTime('read / write concatenated string', () => {\n      let stringbuf = new Uint8Array();\n      const encoder = createEncoder();\n      const encoderLengths = createEncoder();\n      measureTime('read / write concatenated string - write', () => {\n        let s = '';\n        for (let i = 0; i < N; i++) {\n          s += 'i';\n          writeVarUint(encoderLengths, 1); // we write a single char.\n          if (i % 20 === 0) {\n            writeVarString(encoder, s);\n            s = '';\n          }\n        }\n        writeVarString(encoder, s);\n        stringbuf = toUint8Array(encoder);\n      });\n      const decoder = createDecoder(stringbuf);\n      const decoderLengths = createDecoder(toUint8Array(encoderLengths));\n      measureTime('read / write concatenated string - read', () => {\n        const arr = [];\n        const concatS = readVarString(decoder);\n        for (let i = 0; i < N; i++) {\n          const len = readVarUint(decoderLengths);\n          arr.push(concatS.slice(i, len)); // push using slice\n        }\n      });\n    });\n    assert(durationConcatElements < durationSingleElements, 'We expect that the second approach is faster. If this fails, our expectantion is not met in your javascript environment. Please report this issue.');\n    assert(durationConcatElements < durationConcatElementsNative * 1.3, 'We expect that the native approach is slower. If this fails, our expectantion is not met in your javascript environment. Please report this issue.');\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testAnyEncodeUnknowns = tc => {\n    const encoder = createEncoder();\n    // @ts-ignore\n    writeAny(encoder, Symbol('a'));\n    writeAny(encoder, undefined);\n    writeAny(encoder, () => {});\n    const decoder = createDecoder(toUint8Array(encoder));\n    assert(readAny(decoder) === undefined);\n    assert(readAny(decoder) === undefined);\n    assert(readAny(decoder) === undefined);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testAnyEncodeDate = tc => {\n    test('Encode current date', writeAny, readAny, new Date().getTime());\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testEncodeMax32bitUint = tc => {\n    test('max 32bit uint', writeVarUint, readVarUint, BITS32);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testVarUintEncoding = tc => {\n    test('varUint 1 byte', writeVarUint, readVarUint, 42);\n    test('varUint 2 bytes', writeVarUint, readVarUint, 1 << 9 | 3);\n    test('varUint 3 bytes', writeVarUint, readVarUint, 1 << 17 | 1 << 9 | 3);\n    test('varUint 4 bytes', writeVarUint, readVarUint, 1 << 25 | 1 << 17 | 1 << 9 | 3);\n    test('varUint of 2839012934', writeVarUint, readVarUint, 2839012934);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testVarIntEncoding = tc => {\n    test('varInt 1 byte', writeVarInt, readVarInt, -42);\n    test('varInt 2 bytes', writeVarInt, readVarInt, -(1 << 9 | 3));\n    test('varInt 3 bytes', writeVarInt, readVarInt, -(1 << 17 | 1 << 9 | 3));\n    test('varInt 4 bytes', writeVarInt, readVarInt, -(1 << 25 | 1 << 17 | 1 << 9 | 3));\n    test('varInt of -691529286', writeVarInt, readVarInt, -(691529286));\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatVarUintEncoding = tc => {\n    const n = int32(tc.prng, 0, (1 << 28) - 1);\n    test(`varUint of ${n}`, writeVarUint, readVarUint, n, false);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatVarIntEncoding = tc => {\n    const n = uint32(tc.prng, 0, BITS32);\n    test(`varInt of ${n}`, writeVarInt, readVarInt, n, false);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatAnyEncoding = tc => {\n    const n = genAny(tc.prng);\n    test('any encoding', writeAny, readAny, n, false);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatPeekVarUintEncoding = tc => {\n    const n = int32(tc.prng, 0, (1 << 28) - 1);\n    test(`varUint of ${n}`, writeVarUint, peekVarUint, n, false);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatPeekVarIntEncoding = tc => {\n    const n = uint32(tc.prng, 0, BITS32);\n    test(`varInt of ${n}`, writeVarInt, peekVarInt, n, false);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testAnyVsJsonEncoding = tc => {\n    const n = Array.from({ length: 5000 }).map(() => genAny(tc.prng, 5, true));\n    measureTime('lib0 any encoding', () => {\n      const encoder = createEncoder();\n      writeAny(encoder, n);\n      const buffer = toUint8Array(encoder);\n      info('buffer length is ' + buffer.length);\n      readAny(createDecoder(buffer));\n    });\n    measureTime('JSON.stringify encoding', () => {\n      const encoder = createEncoder();\n      writeVarString(encoder, JSON.stringify(n));\n      const buffer = toUint8Array(encoder);\n      info('buffer length is ' + buffer.length);\n      JSON.parse(readVarString(createDecoder(buffer)));\n    });\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testStringEncoding = tc => {\n    testVarString('hello');\n    testVarString('test!');\n    testVarString('☺☺☺');\n    testVarString('');\n    testVarString('1234');\n    testVarString('쾟');\n    testVarString('龟'); // surrogate length 3\n    testVarString('😝'); // surrogate length 4\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatStringEncoding = tc =>\n    testVarString(utf16String(tc.prng));\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testSetMethods = tc => {\n    const encoder = createEncoder();\n    writeUint8(encoder, 1);\n    writeUint16(encoder, 33);\n    writeUint32(encoder, 29329);\n    setUint8(encoder, 0, 8);\n    setUint16(encoder, 1, 16);\n    setUint32(encoder, 3, 32);\n    const buf = toUint8Array(encoder);\n    const decoder = createDecoder(buf);\n    assert(peekUint8(decoder) === 8);\n    readUint8(decoder);\n    assert(peekUint16(decoder) === 16);\n    readUint16(decoder);\n    assert(peekUint32(decoder) === 32);\n    readUint32(decoder);\n  };\n\n  const defLen = 1000;\n  const loops = 10000;\n\n  /**\n   * @param {any} a\n   * @param {any} b\n   * @return {boolean}\n   */\n  const strictComparison = (a, b) => a === b;\n\n  /**\n   * @typedef {Object} EncodingPair\n   * @property {function(decoding.Decoder):any} EncodingPair.read\n   * @property {function(encoding.Encoder,any):void} EncodingPair.write\n   * @property {function(prng.PRNG):any} EncodingPair.gen\n   * @property {function(any,any):boolean} EncodingPair.compare\n   * @property {string} name\n   */\n\n  /**\n   * @template T\n   * @type {Array<EncodingPair>}\n   */\n  const encodingPairs = [\n    { name: 'uint8Array', read: decoder => readUint8Array(decoder, defLen), write: writeUint8Array, gen: gen => uint8Array(gen, defLen), compare: compare },\n    { name: 'varUint8Array', read: readVarUint8Array, write: writeVarUint8Array, gen: gen => uint8Array(gen, uint32(gen, 0, defLen)), compare: compare },\n    { name: 'uint8', read: readUint8, write: writeUint8, gen: gen => uint32(gen, 0, BITS8), compare: strictComparison },\n    { name: 'uint16', read: readUint16, write: writeUint16, gen: gen => uint32(gen, 0, BITS16), compare: strictComparison },\n    { name: 'uint32', read: readUint32, write: writeUint32, gen: gen => uint32(gen, 0, BITS32), compare: strictComparison },\n    { name: 'uint32bigEndian', read: readUint32BigEndian, write: writeUint32BigEndian, gen: gen => uint32(gen, 0, BITS32), compare: strictComparison },\n    { name: 'varString', read: readVarString, write: writeVarString, gen: gen => utf16String(gen, uint32(gen, 0, defLen)), compare: strictComparison },\n    { name: 'varUint', read: readVarUint, write: writeVarUint, gen: gen => uint53(gen, 0, BITS32), compare: strictComparison },\n    { name: 'varInt', read: readVarInt, write: writeVarInt, gen: gen => int53(gen, LOWEST_INT32, HIGHEST_INT32), compare: strictComparison },\n    { name: 'Any', read: readAny, write: writeAny, gen: genAny, compare: compare }\n  ];\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatRandomWrites = tc => {\n    describe(`Writing ${loops} random values`, `defLen=${defLen}`);\n    const gen = tc.prng;\n    const ops = [];\n    const encoder = createEncoder();\n    for (let i = 0; i < 10000; i++) {\n      const pair = oneOf(gen, encodingPairs);\n      const val = pair.gen(gen);\n      pair.write(encoder, val);\n      ops.push({\n        compare: pair.compare,\n        read: pair.read,\n        val,\n        name: pair.name\n      });\n    }\n    const tailData = uint8Array(gen, int32(gen, 0, defLen));\n    writeUint8Array(encoder, tailData);\n    const buf = toUint8Array(encoder);\n    const decoder = createDecoder(buf);\n    assert(length(encoder) === buf.byteLength);\n    for (let i = 0; i < ops.length; i++) {\n      const o = ops[i];\n      const val = o.read(decoder);\n      assert(o.compare(val, o.val), o.name);\n    }\n    compare(tailData, readTailAsUint8Array(decoder));\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testWriteUint8ArrayOverflow = tc => {\n    const encoder = createEncoder();\n    const initialLen = encoder.cbuf.byteLength;\n    const buf = createUint8ArrayFromLen(initialLen * 4);\n    for (let i = 0; i < buf.length; i++) {\n      buf[i] = i;\n    }\n    writeUint8Array(encoder, buf);\n    write(encoder, 42);\n    const res = toUint8Array(encoder);\n    assert(res.length === initialLen * 4 + 1);\n    for (let i = 0; i < buf.length - 1; i++) {\n      assert(res[i] === (i % 256));\n    }\n    assert(res[initialLen * 4] === 42);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testSetOnOverflow = tc => {\n    const encoder = createEncoder();\n    const initialLen = encoder.cbuf.byteLength;\n    encoder.cpos = initialLen - 2;\n    writeUint32(encoder, BITS32);\n    const buf = toUint8Array(encoder);\n    assert(length(encoder) === initialLen + 2);\n    const decoder = createDecoder(buf);\n    const space = createUint8ArrayFromArrayBuffer(readUint8Array(decoder, initialLen - 2));\n    for (let i = 0; i < initialLen - 2; i++) {\n      assert(space[i] === 0);\n    }\n    assert(hasContent(decoder));\n    assert(BITS32 === readUint32(decoder));\n    assert(!hasContent(decoder));\n    setUint8(encoder, 5, BITS8);\n    setUint8(encoder, initialLen + 1, 7);\n    const buf2 = toUint8Array(encoder);\n    assert(buf2[5] === BITS8);\n    assert(buf[5] === 0, 'old buffer is not affected');\n    assert(buf2[initialLen + 1] === 7);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testCloneDecoder = tc => {\n    const encoder = createEncoder();\n    writeUint8(encoder, 12132);\n    writeVarUint(encoder, 329840128734);\n    writeVarString(encoder, 'dtrnuiaednudiaendturinaedt nduiaen dturinaed ');\n    const buf = toUint8Array(encoder);\n    const decoder = createDecoder(buf);\n    skip8(decoder);\n    const decoder2 = clone(decoder);\n    const payload1 = readTailAsUint8Array(decoder);\n    const payload2 = readTailAsUint8Array(decoder2);\n    compare(payload1, payload2);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testWriteBinaryEncoder = tc => {\n    const encoder = createEncoder();\n    writeUint16(encoder, 4);\n    const encoder2 = createEncoder();\n    writeVarUint(encoder2, 143095);\n    writeBinaryEncoder(encoder2, encoder);\n    const buf = toUint8Array(encoder2);\n    const decoder = createDecoder(buf);\n    assert(readVarUint(decoder) === 143095);\n    assert(readUint16(decoder) === 4);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testOverflowStringDecoding = tc => {\n    const gen = tc.prng;\n    const encoder = createEncoder();\n    let longStr = '';\n    while (longStr.length < 11000) {\n      longStr += utf16String(gen, 100000);\n    }\n    writeVarString(encoder, longStr);\n    const buf = toUint8Array(encoder);\n    const decoder = createDecoder(buf);\n    assert(longStr === readVarString(decoder));\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRleEncoder = tc => {\n    const N = 100;\n    const encoder = new RleEncoder(writeVarUint);\n    for (let i = 0; i < N; i++) {\n      encoder.write(i);\n      for (let j = 0; j < i; j++) { // write additional i times\n        encoder.write(i);\n      }\n    }\n    const decoder = new RleDecoder(toUint8Array(encoder), readVarUint);\n    for (let i = 0; i < N; i++) {\n      assert(i === decoder.read());\n      for (let j = 0; j < i; j++) { // read additional i times\n        assert(i === decoder.read());\n      }\n    }\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRleIntDiffEncoder = tc => {\n    const N = 100;\n    const encoder = new RleIntDiffEncoder(0);\n    for (let i = -N; i < N; i++) {\n      encoder.write(i);\n      for (let j = 0; j < i; j++) { // write additional i times\n        encoder.write(i);\n      }\n    }\n    const decoder = new RleIntDiffDecoder(toUint8Array(encoder), 0);\n    for (let i = -N; i < N; i++) {\n      assert(i === decoder.read());\n      for (let j = 0; j < i; j++) { // read additional i times\n        assert(i === decoder.read());\n      }\n    }\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testUintOptRleEncoder = tc => {\n    const N = 100;\n    const encoder = new UintOptRleEncoder();\n    for (let i = 0; i < N; i++) {\n      encoder.write(i);\n      for (let j = 0; j < i; j++) { // write additional i times\n        encoder.write(i);\n      }\n    }\n    const decoder = new UintOptRleDecoder(encoder.toUint8Array());\n    for (let i = 0; i < N; i++) {\n      assert(i === decoder.read());\n      for (let j = 0; j < i; j++) { // read additional i times\n        assert(i === decoder.read());\n      }\n    }\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testIntDiffRleEncoder = tc => {\n    const N = 100;\n    const encoder = new IntDiffOptRleEncoder();\n    for (let i = -N; i < N; i++) {\n      encoder.write(i);\n      for (let j = 0; j < i; j++) { // write additional i times\n        encoder.write(i);\n      }\n    }\n    const decoder = new IntDiffOptRleDecoder(encoder.toUint8Array());\n    for (let i = -N; i < N; i++) {\n      assert(i === decoder.read());\n      for (let j = 0; j < i; j++) { // read additional i times\n        assert(i === decoder.read());\n      }\n    }\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testIntEncoders = tc => {\n    const arrLen = 10000;\n    const gen = tc.prng;\n    /**\n     * @type {Array<number>}\n     */\n    const vals = [];\n    for (let i = 0; i < arrLen; i++) {\n      vals.push(int32(gen, -10, 10));\n    }\n    /**\n     * @type {Array<{ encoder: any, read: function(any):any }>}\n     */\n    const intEncoders = [\n      { encoder: new IntDiffOptRleEncoder(), read: encoder => new IntDiffOptRleDecoder(encoder.toUint8Array()) },\n      { encoder: new IntDiffEncoder(0), read: encoder => new IntDiffDecoder(toUint8Array(encoder), 0) },\n      { encoder: new IntDiffEncoder(42), read: encoder => new IntDiffDecoder(toUint8Array(encoder), 42) },\n      { encoder: new RleIntDiffEncoder(0), read: encoder => new RleIntDiffDecoder(toUint8Array(encoder), 0) }\n    ];\n    intEncoders.forEach(({ encoder, read }) => {\n      vals.forEach(v => encoder.write(v));\n      /**\n       * @type {Array<number>}\n       */\n      const readVals = [];\n      const dec = read(encoder);\n      for (let i = 0; i < arrLen; i++) {\n        readVals.push(dec.read());\n      }\n      compare(vals, readVals);\n    });\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testIntDiffEncoder = tc => {\n    const N = 100;\n    const encoder = new IntDiffEncoder(0);\n    for (let i = -N; i < N; i++) {\n      encoder.write(i);\n    }\n    const decoder = new IntDiffDecoder(toUint8Array(encoder), 0);\n    for (let i = -N; i < N; i++) {\n      assert(i === decoder.read());\n    }\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testStringDecoder = tc => {\n    const gen = tc.prng;\n    const N = 1000;\n    const words = [];\n    for (let i = 0; i < N; i++) {\n      words.push(utf16String(gen));\n      if (i % 100 === 0) {\n        const char$1 = char(gen).slice(0, 1);\n        words.push(char$1);\n        words.push(char$1);\n      }\n      if (i % 107 === 0) {\n        words.push(word(gen, 3000, 8000));\n      }\n    }\n    const encoder = new StringEncoder();\n    for (let i = 0; i < words.length; i++) {\n      encoder.write(words[i]);\n    }\n    const decoder = new StringDecoder(encoder.toUint8Array());\n    for (let i = 0; i < words.length; i++) {\n      assert(decoder.read() === words[i]);\n    }\n  };\n\n  var encoding = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testGolangBinaryEncodingCompatibility: testGolangBinaryEncodingCompatibility,\n    testStringDecodingPerformance: testStringDecodingPerformance,\n    testAnyEncodeUnknowns: testAnyEncodeUnknowns,\n    testAnyEncodeDate: testAnyEncodeDate,\n    testEncodeMax32bitUint: testEncodeMax32bitUint,\n    testVarUintEncoding: testVarUintEncoding,\n    testVarIntEncoding: testVarIntEncoding,\n    testRepeatVarUintEncoding: testRepeatVarUintEncoding,\n    testRepeatVarIntEncoding: testRepeatVarIntEncoding,\n    testRepeatAnyEncoding: testRepeatAnyEncoding,\n    testRepeatPeekVarUintEncoding: testRepeatPeekVarUintEncoding,\n    testRepeatPeekVarIntEncoding: testRepeatPeekVarIntEncoding,\n    testAnyVsJsonEncoding: testAnyVsJsonEncoding,\n    testStringEncoding: testStringEncoding,\n    testRepeatStringEncoding: testRepeatStringEncoding,\n    testSetMethods: testSetMethods,\n    testRepeatRandomWrites: testRepeatRandomWrites,\n    testWriteUint8ArrayOverflow: testWriteUint8ArrayOverflow,\n    testSetOnOverflow: testSetOnOverflow,\n    testCloneDecoder: testCloneDecoder,\n    testWriteBinaryEncoder: testWriteBinaryEncoder,\n    testOverflowStringDecoding: testOverflowStringDecoding,\n    testRleEncoder: testRleEncoder,\n    testRleIntDiffEncoder: testRleIntDiffEncoder,\n    testUintOptRleEncoder: testUintOptRleEncoder,\n    testIntDiffRleEncoder: testIntDiffRleEncoder,\n    testIntEncoders: testIntEncoders,\n    testIntDiffEncoder: testIntDiffEncoder,\n    testStringDecoder: testStringDecoder\n  });\n\n  /**\n   * @param {string} a\n   * @param {string} b\n   * @param {{index: number,remove:number,insert:string}} expected\n   */\n  function runDiffTest (a, b, expected) {\n    const result = simpleDiffString(a, b);\n    compare(result, expected);\n    const arrResult = simpleDiffArray(a.split(''), b.split(''));\n    compare(arrResult, assign({}, result, { insert: result.insert.split('') }));\n  }\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testDiffing = tc => {\n    runDiffTest('abc', 'axc', { index: 1, remove: 1, insert: 'x' });\n    runDiffTest('bc', 'xc', { index: 0, remove: 1, insert: 'x' });\n    runDiffTest('ab', 'ax', { index: 1, remove: 1, insert: 'x' });\n    runDiffTest('b', 'x', { index: 0, remove: 1, insert: 'x' });\n    runDiffTest('', 'abc', { index: 0, remove: 0, insert: 'abc' });\n    runDiffTest('abc', 'xyz', { index: 0, remove: 3, insert: 'xyz' });\n    runDiffTest('axz', 'au', { index: 1, remove: 2, insert: 'u' });\n    runDiffTest('ax', 'axy', { index: 2, remove: 0, insert: 'y' });\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatDiffing = tc => {\n    const a = word(tc.prng);\n    const b = word(tc.prng);\n    const change = simpleDiffString(a, b);\n    const recomposed = `${a.slice(0, change.index)}${change.insert}${a.slice(change.index + change.remove)}`;\n    compareStrings(recomposed, b);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testArrayDiffing = tc => {\n    const a = [[1, 2], { x: 'x' }];\n    const b = [[1, 2], { x: 'x' }];\n    compare(simpleDiffArray(a, b, equalityFlat), { index: 2, remove: 0, insert: [] });\n    compare(simpleDiffArray(a, b, equalityStrict), { index: 0, remove: 2, insert: b });\n    compare(simpleDiffArray([{ x: 'y' }, []], a, equalityFlat), { index: 0, remove: 2, insert: b });\n  };\n\n  var diff = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testDiffing: testDiffing,\n    testRepeatDiffing: testRepeatDiffing,\n    testArrayDiffing: testArrayDiffing\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testComparing = tc => {\n    compare({}, {});\n    compare({ a: 4 }, { a: 4 }, 'simple compare (object)');\n    compare([1, 2], [1, 2], 'simple compare (array)');\n    compare({ a: [1, 2] }, { a: [1, 2] }, 'simple compare nested');\n    compare(new Set(['3', 1234]), new Set(['3', 1234]), 'compare Sets');\n    const map1 = create$7();\n    map1.set(1, 2);\n    map1.set('x', {});\n    map1.set(98, 'tst');\n    const map2 = new Map();\n    map2.set(1, 2);\n    map2.set('x', {});\n    map2.set(98, 'tst');\n    compare(map1, map2, 'compare Maps');\n\n    describe('The following errors are expected!');\n    fails(() => {\n      compare({ a: 4 }, { b: 5 }, 'childs are not equal');\n    });\n    fails(() => {\n      compare({ a: 4 }, { a: 5 }, 'childs are not equal');\n    });\n    fails(() => {\n      compare({ a: 4 }, null, 'childs are not equal');\n    });\n    fails(() => {\n      // @ts-ignore\n      compare({ a: 4 }, [4], 'childs have different types');\n    });\n    fails(() => {\n      compare({ a: 4 }, { a: 4, b: 5 }, 'childs have different length (object)');\n    });\n    fails(() => {\n      compare([1], [1, 2]); // childs have different length (array) -- no message\n    });\n    fails(() => {\n      compare(createUint8ArrayFromLen(1), createUint8ArrayFromLen(2), 'Uint8Arrays have different length');\n    });\n    fails(() => {\n      compare(createUint8ArrayFromLen(1).buffer, createUint8ArrayFromLen(2).buffer, 'ArrayBuffer have different length');\n    });\n    fails(() => {\n      compareStrings('str1', 'str2', 'Strings comparison can fail');\n    });\n    compareArrays([], [], 'Comparing empty arrays');\n    fails(() => {\n      compareArrays([1], [1, 2], 'Compare arrays with different length');\n    });\n    fails(() => {\n      compareArrays([1], [2]); // Compare different arrays -- no message\n    });\n    compareObjects({ x: 1 }, { x: 1 }, 'comparing objects');\n    fails(() => {\n      compareObjects({}, { x: 1 }, 'compareObjects can fail');\n    });\n    fails(() => {\n      compareObjects({ x: 3 }, { x: 1 }); // Compare different objects -- no message\n    });\n    fails(() => {\n      compare({ x: undefined }, { y: 1 }, 'compare correctly handles undefined');\n    });\n    fails(() => {\n      compareObjects({ x: undefined }, { y: 1 }, 'compare correctly handles undefined');\n    });\n    describe('Map fails');\n    fails(() => {\n      const m1 = new Map();\n      m1.set(1, 2);\n      const m2 = new Map();\n      m2.set(1, 3);\n      compare(m1, m2); // childs have different length (array) -- no message\n    });\n    fails(() => {\n      const m1 = new Map();\n      m1.set(2, 2);\n      const m2 = new Map();\n      m2.set(1, 2);\n      compare(m1, m2); // childs have different length (array) -- no message\n    });\n    fails(() => {\n      const m1 = new Map();\n      m1.set(1, 2);\n      const m2 = new Map();\n      compare(m1, m2); // childs have different length (array) -- no message\n    });\n    describe('Set fails');\n    fails(() => {\n      compare(new Set([1]), new Set([1, 2])); // childs have different length (array) -- no message\n    });\n    fails(() => {\n      compare(new Set([1]), new Set([2])); // childs have different length (array) -- no message\n    });\n  };\n\n  const testFailing = () => {\n    fails(() => {\n      fail('This fail is expected');\n    });\n  };\n\n  const testSkipping = () => {\n    skip(false);\n    assert(true);\n    skip();\n    /* istanbul ignore next */\n    fail('should have skipped');\n  };\n\n  const testAsync = async () => {\n    await measureTimeAsync('time', () => create$2(r => setTimeout(r)));\n    await groupAsync('some description', () => wait(1));\n  };\n\n  const testRepeatRepetition = () => {\n    const arr = [];\n    const n = 100;\n    for (let i = 1; i <= n; i++) {\n      arr.push(i);\n    }\n    assert(arr.reduce(add$1, 0) === (n + 1) * n / 2);\n  };\n\n  var testing = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testComparing: testComparing,\n    testFailing: testFailing,\n    testSkipping: testSkipping,\n    testAsync: testAsync,\n    testRepeatRepetition: testRepeatRepetition\n  });\n\n  /**\n   * Error helpers.\n   *\n   * @module error\n   */\n\n  /**\n   * @param {string} s\n   * @return {Error}\n   */\n  /* istanbul ignore next */\n  const create$1 = s => new Error(s);\n\n  /* eslint-env browser */\n\n  /**\n   * IDB Request to Promise transformer\n   *\n   * @param {IDBRequest} request\n   * @return {Promise<any>}\n   */\n  /* istanbul ignore next */\n  const rtop = request => create$2((resolve, reject) => {\n    /* istanbul ignore next */\n    // @ts-ignore\n    request.onerror = event => reject(new Error(event.target.error));\n    /* istanbul ignore next */\n    // @ts-ignore\n    request.onblocked = () => location.reload();\n    // @ts-ignore\n    request.onsuccess = event => resolve(event.target.result);\n  });\n\n  /**\n   * @param {string} name\n   * @param {function(IDBDatabase):any} initDB Called when the database is first created\n   * @return {Promise<IDBDatabase>}\n   */\n  /* istanbul ignore next */\n  const openDB = (name, initDB) => create$2((resolve, reject) => {\n    const request = indexedDB.open(name);\n    /**\n     * @param {any} event\n     */\n    request.onupgradeneeded = event => initDB(event.target.result);\n    /* istanbul ignore next */\n    /**\n     * @param {any} event\n     */\n    request.onerror = event => reject(create$1(event.target.error));\n    /* istanbul ignore next */\n    request.onblocked = () => location.reload();\n    /**\n     * @param {any} event\n     */\n    request.onsuccess = event => {\n      /**\n       * @type {IDBDatabase}\n       */\n      const db = event.target.result;\n      /* istanbul ignore next */\n      db.onversionchange = () => { db.close(); };\n      /* istanbul ignore if */\n      if (typeof addEventListener !== 'undefined') {\n        addEventListener('unload', () => db.close());\n      }\n      resolve(db);\n    };\n  });\n\n  /**\n   * @param {string} name\n   */\n  /* istanbul ignore next */\n  const deleteDB = name => rtop(indexedDB.deleteDatabase(name));\n\n  /**\n   * @param {IDBDatabase} db\n   * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\n   */\n  /* istanbul ignore next */\n  const createStores = (db, definitions) => definitions.forEach(d =>\n    // @ts-ignore\n    db.createObjectStore.apply(db, d)\n  );\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {String | number | ArrayBuffer | Date | Array<any> } key\n   * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\n   */\n  /* istanbul ignore next */\n  const get = (store, key) =>\n    rtop(store.get(key));\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\n   */\n  /* istanbul ignore next */\n  const del = (store, key) =>\n    rtop(store.delete(key));\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {String | number | ArrayBuffer | Date | boolean} item\n   * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\n   */\n  /* istanbul ignore next */\n  const put = (store, item, key) =>\n    rtop(store.put(item, key));\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {String | number | ArrayBuffer | Date | boolean}  item\n   * @param {String | number | ArrayBuffer | Date | Array<any>}  key\n   * @return {Promise<any>}\n   */\n  /* istanbul ignore next */\n  const add = (store, item, key) =>\n    rtop(store.add(item, key));\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {String | number | ArrayBuffer | Date}  item\n   * @return {Promise<number>} Returns the generated key\n   */\n  /* istanbul ignore next */\n  const addAutoKey = (store, item) =>\n    rtop(store.add(item));\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {IDBKeyRange} [range]\n   * @return {Promise<Array<any>>}\n   */\n  /* istanbul ignore next */\n  const getAll = (store, range) =>\n    rtop(store.getAll(range));\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {IDBKeyRange} [range]\n   * @return {Promise<Array<any>>}\n   */\n  /* istanbul ignore next */\n  const getAllKeys = (store, range) =>\n    rtop(store.getAllKeys(range));\n\n  /**\n   * @typedef KeyValuePair\n   * @type {Object}\n   * @property {any} k key\n   * @property {any} v Value\n   */\n\n  /**\n   * @param {IDBObjectStore} store\n   * @param {IDBKeyRange} [range]\n   * @return {Promise<Array<KeyValuePair>>}\n   */\n  /* istanbul ignore next */\n  const getAllKeysValues = (store, range) =>\n    // @ts-ignore\n    all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })));\n\n  /**\n   * @param {any} request\n   * @param {function(IDBCursorWithValue):void|boolean} f\n   * @return {Promise<void>}\n   */\n  /* istanbul ignore next */\n  const iterateOnRequest = (request, f) => create$2((resolve, reject) => {\n    /* istanbul ignore next */\n    request.onerror = reject;\n    /**\n     * @param {any} event\n     */\n    request.onsuccess = event => {\n      const cursor = event.target.result;\n      if (cursor === null || f(cursor) === false) {\n        return resolve()\n      }\n      cursor.continue();\n    };\n  });\n\n  /**\n   * Iterate on keys and values\n   * @param {IDBObjectStore} store\n   * @param {IDBKeyRange|null} keyrange\n   * @param {function(any,any):void|boolean} f Callback that receives (value, key)\n   * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n   */\n  /* istanbul ignore next */\n  const iterate = (store, keyrange, f, direction = 'next') =>\n    iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key));\n\n  /**\n   * Iterate on the keys (no values)\n   *\n   * @param {IDBObjectStore} store\n   * @param {IDBKeyRange|null} keyrange\n   * @param {function(any):void|boolean} f callback that receives the key\n   * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n   */\n  /* istanbul ignore next */\n  const iterateKeys = (store, keyrange, f, direction = 'next') =>\n    iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key));\n\n  /**\n   * Open store from transaction\n   * @param {IDBTransaction} t\n   * @param {String} store\n   * @returns {IDBObjectStore}\n   */\n  /* istanbul ignore next */\n  const getStore$1 = (t, store) => t.objectStore(store);\n\n  /**\n   * @param {any} lower\n   * @param {any} upper\n   * @param {boolean} lowerOpen\n   * @param {boolean} upperOpen\n   */\n  /* istanbul ignore next */\n  const createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);\n\n  /* istanbul ignore next */\n  /**\n   * @param {IDBDatabase} db\n   */\n  const initTestDB = db => createStores(db, [['test', { autoIncrement: true }]]);\n  const testDBName = 'idb-test';\n\n  /* istanbul ignore next */\n  /**\n   * @param {IDBDatabase} db\n   */\n  const createTransaction = db => db.transaction(['test'], 'readwrite');\n\n  /* istanbul ignore next */\n  /**\n   * @param {IDBTransaction} t\n   * @return {IDBObjectStore}\n   */\n  const getStore = t => getStore$1(t, 'test');\n\n  /* istanbul ignore next */\n  const testRetrieveElements = async () => {\n    skip(!isBrowser);\n    describe('create, then iterate some keys');\n    await deleteDB(testDBName);\n    const db = await openDB(testDBName, initTestDB);\n    const transaction = createTransaction(db);\n    const store = getStore(transaction);\n    await put(store, 0, ['t', 1]);\n    await put(store, 1, ['t', 2]);\n    const expectedKeys = [['t', 1], ['t', 2]];\n    const expectedVals = [0, 1];\n    const expectedKeysVals = [{ v: 0, k: ['t', 1] }, { v: 1, k: ['t', 2] }];\n    describe('idb.getAll');\n    const valsGetAll = await getAll(store);\n    compare(valsGetAll, expectedVals);\n    describe('idb.getAllKeys');\n    const valsGetAllKeys = await getAllKeys(store);\n    compare(valsGetAllKeys, expectedKeys);\n    describe('idb.getAllKeysVals');\n    const valsGetAllKeysVals = await getAllKeysValues(store);\n    compare(valsGetAllKeysVals, expectedKeysVals);\n\n    /**\n     * @param {string} desc\n     * @param {IDBKeyRange?} keyrange\n     */\n    const iterateTests = async (desc, keyrange) => {\n      describe(`idb.iterate (${desc})`);\n      /**\n       * @type {Array<{v:any,k:any}>}\n       */\n      const valsIterate = [];\n      await iterate(store, keyrange, (v, k) => {\n        valsIterate.push({ v, k });\n      });\n      compare(valsIterate, expectedKeysVals);\n      describe(`idb.iterateKeys (${desc})`);\n      /**\n       * @type {Array<any>}\n       */\n      const keysIterate = [];\n      await iterateKeys(store, keyrange, key => {\n        keysIterate.push(key);\n      });\n      compare(keysIterate, expectedKeys);\n    };\n    await iterateTests('range=null', null);\n    const range = createIDBKeyRangeBound(['t', 1], ['t', 2], false, false);\n    // adding more items that should not be touched by iteration with above range\n    await put(store, 2, ['t', 3]);\n    await put(store, 2, ['t', 0]);\n    await iterateTests('range!=null', range);\n\n    describe('idb.get');\n    const getV = await get(store, ['t', 1]);\n    assert(getV === 0);\n    describe('idb.del');\n    await del(store, ['t', 0]);\n    const getVDel = await get(store, ['t', 0]);\n    assert(getVDel === undefined);\n    describe('idb.add');\n    await add(store, 99, 42);\n    const idbVAdd = await get(store, 42);\n    assert(idbVAdd === 99);\n    describe('idb.addAutoKey');\n    const key = await addAutoKey(store, 1234);\n    const retrieved = await get(store, key);\n    assert(retrieved === 1234);\n  };\n\n  var indexeddb = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testRetrieveElements: testRetrieveElements\n  });\n\n  /**\n   * @module prng\n   */\n  const N = 624;\n  const M = 397;\n\n  /**\n   * @param {number} u\n   * @param {number} v\n   */\n  const twist = (u, v) => ((((u & 0x80000000) | (v & 0x7fffffff)) >>> 1) ^ ((v & 1) ? 0x9908b0df : 0));\n\n  /**\n   * @param {Uint32Array} state\n   */\n  const nextState = state => {\n    let p = 0;\n    let j;\n    for (j = N - M + 1; --j; p++) {\n      state[p] = state[p + M] ^ twist(state[p], state[p + 1]);\n    }\n    for (j = M; --j; p++) {\n      state[p] = state[p + M - N] ^ twist(state[p], state[p + 1]);\n    }\n    state[p] = state[p + M - N] ^ twist(state[p], state[0]);\n  };\n\n  /**\n   * This is a port of Shawn Cokus's implementation of the original Mersenne Twister algorithm (http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/MTARCOK/mt19937ar-cok.c).\n   * MT has a very high period of 2^19937. Though the authors of xorshift describe that a high period is not\n   * very relevant (http://vigna.di.unimi.it/xorshift/). It is four times slower than xoroshiro128plus and\n   * needs to recompute its state after generating 624 numbers.\n   *\n   * ```js\n   * const gen = new Mt19937(new Date().getTime())\n   * console.log(gen.next())\n   * ```\n   *\n   * @public\n   */\n  class Mt19937 {\n    /**\n     * @param {number} seed Unsigned 32 bit number\n     */\n    constructor (seed) {\n      this.seed = seed;\n      const state = new Uint32Array(N);\n      state[0] = seed;\n      for (let i = 1; i < N; i++) {\n        state[i] = (imul(1812433253, (state[i - 1] ^ (state[i - 1] >>> 30))) + i) & BITS32;\n      }\n      this._state = state;\n      this._i = 0;\n      nextState(this._state);\n    }\n\n    /**\n     * Generate a random signed integer.\n     *\n     * @return {Number} A 32 bit signed integer.\n     */\n    next () {\n      if (this._i === N) {\n        // need to compute a new state\n        nextState(this._state);\n        this._i = 0;\n      }\n      let y = this._state[this._i++];\n      y ^= (y >>> 11);\n      y ^= (y << 7) & 0x9d2c5680;\n      y ^= (y << 15) & 0xefc60000;\n      y ^= (y >>> 18);\n      return (y >>> 0) / (BITS32 + 1)\n    }\n  }\n\n  const genTestData = 5000;\n\n  /**\n   * @param {t.TestCase} tc\n   * @param {prng.PRNG} gen\n   */\n  const runGenTest = (tc, gen) => {\n    group('next - average distribution', () => {\n      let sum = 0;\n      for (let i = 0; i < genTestData; i++) {\n        const next = gen.next();\n        if (next >= 1) {\n          fail('unexpected prng result');\n        }\n        sum += next;\n      }\n      const avg = sum / genTestData;\n      assert(avg >= 0.45);\n      assert(avg <= 0.55);\n    });\n\n    group('bool - bool distribution is fair', () => {\n      let head = 0;\n      let tail = 0;\n      let b;\n      let i;\n\n      for (i = 0; i < genTestData; i++) {\n        b = bool(gen);\n        if (b) {\n          head++;\n        } else {\n          tail++;\n        }\n      }\n      info(`Generated ${head} heads and ${tail} tails.`);\n      assert(tail >= floor(genTestData * 0.45), 'Generated enough tails.');\n      assert(head >= floor(genTestData * 0.45), 'Generated enough heads.');\n    });\n    group('int31 - integers average correctly', () => {\n      let count = 0;\n      let i;\n\n      for (i = 0; i < genTestData; i++) {\n        count += uint32(gen, 0, 100);\n      }\n      const average = count / genTestData;\n      const expectedAverage = 100 / 2;\n      info(`Average is: ${average}. Expected average is ${expectedAverage}.`);\n      assert(abs(average - expectedAverage) <= 2, 'Expected average is at most 1 off.');\n    });\n\n    group('int32 - generates integer with 32 bits', () => {\n      let largest = 0;\n      let smallest = 0;\n      let i;\n      let newNum;\n      for (i = 0; i < genTestData; i++) {\n        newNum = int32(gen, -BITS31, BITS31);\n        if (newNum > largest) {\n          largest = newNum;\n        }\n        if (newNum < smallest) {\n          smallest = newNum;\n        }\n      }\n      assert(smallest < -1000, 'Smallest number is negative');\n      assert(largest > 1000, 'Largest number is positive');\n      info(`Largest number generated is ${largest} (0x${largest.toString(16)})`);\n      info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`);\n      assert((smallest & BIT32) !== 0, 'Largest number is 32 bits long'); // largest.. assuming we convert int to uint\n    });\n\n    group('uint32 - generates unsigned integer with 32 bits', () => {\n      let num = 0;\n      let i;\n      let newNum;\n      for (i = 0; i < genTestData; i++) {\n        newNum = uint32(gen, 0, BITS32);\n        if (newNum > num) {\n          num = newNum;\n        }\n      }\n      info(`Largest number generated is ${num} (0x${num.toString(16)})`);\n      assert((num & BIT32) !== 0, 'Largest number is 32 bits long.');\n    });\n\n    group('int53 - generates integer exceeding 32 bits', () => {\n      let largest = 0;\n      let smallest = 0;\n      let i;\n      let newNum;\n      for (i = 0; i < genTestData; i++) {\n        newNum = int53(gen, Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\n        if (newNum > largest) {\n          largest = newNum;\n        }\n        if (newNum < smallest) {\n          smallest = newNum;\n        }\n      }\n      assert(smallest < -1000, 'Smallest number is negative');\n      assert(largest > 1000, 'Largest number is positive');\n      info(`Largest number generated is ${largest}`);\n      info(`Smallest number generated is ${smallest}`);\n      assert(largest > (BITS32 >>> 0), 'Largest number exceeds BITS32');\n      assert(smallest < BITS32, 'Smallest Number is smaller than BITS32 (negative)');\n    });\n\n    group('uint53 - generates integer exceeding 32 bits', () => {\n      let largest = 0;\n      let smallest = 10000;\n      let i;\n      let newNum;\n      for (i = 0; i < genTestData; i++) {\n        newNum = uint53(gen, 0, Number.MAX_SAFE_INTEGER);\n        if (newNum > largest) {\n          largest = newNum;\n        }\n        /* istanbul ignore if */\n        if (newNum < smallest) {\n          smallest = newNum;\n        }\n      }\n      assert(smallest >= 0, 'Smallest number is not negative');\n      assert(largest > 1000, 'Largest number is positive');\n      info(`Largest number generated is ${largest}`);\n      info(`Smallest number generated is ${smallest}`);\n      assert(largest > (BITS32 >>> 0), 'Largest number exceeds BITS32');\n    });\n\n    group('int31 - generates integer with 31 bits', () => {\n      let num = 0;\n      let i;\n      let newNum;\n      for (i = 0; i < genTestData; i++) {\n        newNum = uint32(gen, 0, BITS31);\n        if (newNum > num) {\n          num = newNum;\n        }\n      }\n      info(`Largest number generated is ${num} (0x${num.toString(16)})`);\n      assert((num & BIT31) !== 0, 'Largest number is 31 bits long.');\n    });\n\n    group('real - has 53 bit resolution', () => {\n      let num = 0;\n      let i;\n      let newNum;\n      for (i = 0; i < genTestData; i++) {\n        newNum = real53(gen) * MAX_SAFE_INTEGER;\n        if (newNum > num) {\n          num = newNum;\n        }\n      }\n      info(`Largest number generated is ${num}.`);\n      assert((MAX_SAFE_INTEGER - num) / MAX_SAFE_INTEGER < 0.01, 'Largest number is close to MAX_SAFE_INTEGER (at most 1% off).');\n    });\n\n    group('char - generates all ascii characters', () => {\n      const charSet = new Set();\n      const chars = ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\"';\n      for (let i = chars.length - 1; i >= 0; i--) {\n        charSet.add(chars[i]);\n      }\n      for (let i = 0; i < genTestData; i++) {\n        const char$1 = char(gen);\n        charSet.delete(char$1);\n      }\n      info(`Charactes missing: ${charSet.size} - generating all of \"${chars}\"`);\n      assert(charSet.size === 0, 'Generated all documented characters.');\n    });\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testGeneratorXoroshiro128plus = tc => runGenTest(tc, new Xoroshiro128plus(tc.seed));\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testGeneratorXorshift32 = tc => {\n    skip(!production);\n    runGenTest(tc, new Xorshift32(tc.seed));\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testGeneratorMt19937 = tc => {\n    skip(!production);\n    runGenTest(tc, new Mt19937(tc.seed));\n  };\n\n  /* istanbul ignore next */\n  /**\n   * @param {prng.PRNG} gen\n   * @param {t.TestCase} tc\n   */\n  const printDistribution = (gen, tc) => {\n    const DIAMETER = genTestData / 50;\n    const canvas$1 = canvas(DIAMETER * 3, DIAMETER);\n    const ctx = canvas$1.getContext('2d');\n    if (ctx == null) {\n      return skip()\n    }\n    ctx.fillStyle = 'blue';\n    for (let i = 0; i < genTestData; i++) {\n      const x = int32(gen, 0, DIAMETER * 3);\n      const y = int32(gen, 0, DIAMETER);\n      ctx.fillRect(x, y, 1, 2);\n    }\n    printCanvas(canvas$1, DIAMETER);\n  };\n\n  /* istanbul ignore next */\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testNumberDistributions = tc => {\n    skip(!isBrowser);\n    group('Xoroshiro128plus', () => printDistribution(new Xoroshiro128plus(tc.seed), tc));\n    group('Xorshift32', () => printDistribution(new Xorshift32(tc.seed), tc));\n    group('MT19937', () => printDistribution(new Mt19937(tc.seed), tc));\n  };\n\n  var prng = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testGeneratorXoroshiro128plus: testGeneratorXoroshiro128plus,\n    testGeneratorXorshift32: testGeneratorXorshift32,\n    testGeneratorMt19937: testGeneratorMt19937,\n    testNumberDistributions: testNumberDistributions\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testMedian = tc => {\n    assert(isNaN$1(median([])), 'median([]) = NaN');\n    assert(median([1]) === 1, 'median([x]) = x');\n    assert(median([1, 2, 3]) === 2, 'median([a,b,c]) = b');\n    assert(median([1, 2, 3, 4]) === (2 + 3) / 2, 'median([a,b,c,d]) = (b+c)/2');\n    assert(median([1, 2, 3, 4, 5]) === 3, 'median([a,b,c,d,e]) = c');\n    assert(median([1, 2, 3, 4, 5, 6]) === (3 + 4) / 2, 'median([a,b,c,d,e,f]) = (c+d)/2');\n  };\n\n  var statistics = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testMedian: testMedian\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testBitx = tc => {\n    for (let i = 1; i <= 32; i++) {\n      // @ts-ignore\n      assert(binary$1[`BIT${i}`] === (1 << (i - 1)), `BIT${i}=${1 << (i - 1)}`);\n    }\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testBitsx = tc => {\n    assert(BITS0 === 0);\n    for (let i = 1; i < 32; i++) {\n      const expected = ((1 << i) - 1) >>> 0;\n      // @ts-ignore\n      const have = binary$1[`BITS${i}`];\n      assert(have === expected, `BITS${i}=${have}=${expected}`);\n    }\n    assert(BITS32 === 0xFFFFFFFF);\n  };\n\n  var binary = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testBitx: testBitx,\n    testBitsx: testBitsx\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testUint32 = tc => {\n    const iterations = 10000;\n    let largest = 0;\n    let smallest = HIGHEST_INT32;\n    let newNum = 0;\n    let lenSum = 0;\n    let ones = 0;\n    for (let i = 0; i < iterations; i++) {\n      newNum = uint32$1();\n      lenSum += newNum.toString().length;\n      ones += newNum.toString(2).split('').filter(x => x === '1').length;\n      if (newNum > largest) {\n        largest = newNum;\n      }\n      if (newNum < smallest) {\n        smallest = newNum;\n      }\n    }\n    info(`Largest number generated is ${largest} (0x${largest.toString(16)})`);\n    info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`);\n    info(`Average decimal length of number is ${lenSum / iterations}`);\n    info(`Average number of 1s in number is ${ones / iterations} (expecting ~16)`);\n    assert(((largest & BITS32) >>> 0) === largest, 'Largest number is 32 bits long.');\n    assert(((smallest & BITS32) >>> 0) === smallest, 'Smallest number is 32 bits long.');\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testUuidv4 = tc => {\n    info(`Generated a UUIDv4: ${uuidv4()}`);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testUuidv4Overlaps = tc => {\n    skip(!production);\n    const iterations = extensive ? 1000000 : 10000;\n    const uuids = new Set();\n    for (let i = 0; i < iterations; i++) {\n      const uuid = uuidv4();\n      if (uuids.has(uuid)) {\n        fail('uuid already exists');\n      } else {\n        uuids.add(uuid);\n      }\n      if (uuids.size % (iterations / 20) === 0) {\n        info(`${round(uuids.size * 100 / iterations)}% complete`);\n      }\n    }\n    assert(uuids.size === iterations);\n  };\n\n  var random = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testUint32: testUint32,\n    testUuidv4: testUuidv4,\n    testUuidv4Overlaps: testUuidv4Overlaps\n  });\n\n  /**\n   * @param {Promise<any>} p\n   * @param {number} min\n   * @param {number} max\n   */\n  const measureP = (p, min, max) => {\n    const start = getUnixTime();\n    return p.then(() => {\n      const duration = getUnixTime() - start;\n      assert(duration <= max, 'Expected promise to take less time');\n      assert(duration >= min, 'Expected promise to take more time');\n    })\n  };\n\n  /**\n   * @template T\n   * @param {Promise<T>} p\n   * @return {Promise<T>}\n   */\n  const failsP = p => create$2((resolve, reject) => p.then(() => reject(create$1('Promise should fail')), resolve));\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatPromise = async tc => {\n    assert(createEmpty(r => r()).constructor === Promise, 'p.create() creates a Promise');\n    assert(resolve().constructor === Promise, 'p.reject() creates a Promise');\n    const rejectedP = reject();\n    assert(rejectedP.constructor === Promise, 'p.reject() creates a Promise');\n    rejectedP.catch(() => {});\n    await createEmpty(r => r());\n    await failsP(reject());\n    await resolve();\n    await measureP(wait(10), 7, 1000);\n    await measureP(failsP(until(15, () => false)), 15, 1000);\n    const startTime = getUnixTime();\n    await measureP(until(0, () => (getUnixTime() - startTime) > 100), 100, 1000);\n    await all([wait(5), wait(10)]);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testispromise = tc => {\n    assert(isPromise(new Promise(() => {})));\n    assert(isPromise(create$2(() => {})));\n    const rej = reject();\n    assert(isPromise(rej));\n    rej.catch(() => {});\n    assert(isPromise(resolve()));\n    assert(isPromise({ then: () => {}, catch: () => {}, finally: () => {} }));\n    fails(() => {\n      assert(isPromise({ then: () => {}, catch: () => {} }));\n    });\n  };\n\n  var promise = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testRepeatPromise: testRepeatPromise,\n    testispromise: testispromise\n  });\n\n  class QueueNode {\n    constructor () {\n      /**\n       * @type {QueueNode|null}\n       */\n      this.next = null;\n    }\n  }\n\n  class Queue {\n    constructor () {\n      /**\n       * @type {QueueNode | null}\n       */\n      this.start = null;\n      /**\n       * @type {QueueNode | null}\n       */\n      this.end = null;\n    }\n  }\n\n  /**\n   * @note The queue implementation is experimental and unfinished.\n   * Don't use this in production yet.\n   *\n   * @return {Queue}\n   */\n  const create = () => new Queue();\n\n  /**\n   * @param {Queue} queue\n   */\n  const isEmpty = queue => queue.start === null;\n\n  /**\n   * @param {Queue} queue\n   * @param {QueueNode} n\n   */\n  const enqueue = (queue, n) => {\n    if (queue.end !== null) {\n      queue.end.next = n;\n      queue.end = n;\n    } else {\n      queue.end = n;\n      queue.start = n;\n    }\n  };\n\n  /**\n   * @param {Queue} queue\n   * @return {QueueNode | null}\n   */\n  const dequeue = queue => {\n    const n = queue.start;\n    if (n !== null) {\n      // @ts-ignore\n      queue.start = n.next;\n      return n\n    }\n    return null\n  };\n\n  class QueueItem extends QueueNode {\n    /**\n     * @param {number} v\n     */\n    constructor (v) {\n      super();\n      this.v = v;\n    }\n  }\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testEnqueueDequeue = tc => {\n    const N = 30;\n    /**\n     * @type {queue.Queue}\n     */\n    const q = create();\n    assert(isEmpty(q));\n    assert(dequeue(q) === null);\n    for (let i = 0; i < N; i++) {\n      enqueue(q, new QueueItem(i));\n      assert(!isEmpty(q));\n    }\n    for (let i = 0; i < N; i++) {\n      const item = /** @type {QueueItem} */ (dequeue(q));\n      assert(item !== null && item.v === i);\n    }\n    assert(dequeue(q) === null);\n  };\n\n  var queue = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testEnqueueDequeue: testEnqueueDequeue\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testMap = tc => {\n    const m = create$7();\n    m.set(1, 2);\n    m.set(2, 3);\n    assert(map$3(m, (value, key) => value * 2 + key).reduce(add$1) === 13);\n    let numberOfWrites = 0;\n    const createT = () => {\n      numberOfWrites++;\n      return {}\n    };\n    setIfUndefined(m, 3, createT);\n    setIfUndefined(m, 3, createT);\n    setIfUndefined(m, 3, createT);\n    compare(copy(m), m);\n    assert(numberOfWrites === 1);\n  };\n\n  var map = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testMap: testMap\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testEventloopOrder = tc => {\n    let currI = 0;\n    for (let i = 0; i < 10; i++) {\n      const bi = i;\n      enqueue$1(() => {\n        assert(currI++ === bi);\n      });\n    }\n    enqueue$1(() => {\n      assert(currI === 10);\n    });\n    assert(currI === 0);\n    return all([\n      createEmpty(resolve => enqueue$1(resolve)),\n      until(0, () => currI === 10)\n    ])\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testTimeout = async tc => {\n    let set = false;\n    const timeout$1 = timeout(0, () => {\n      set = true;\n    });\n    timeout$1.destroy();\n    await create$2(resolve => {\n      timeout(10, resolve);\n    });\n    assert(set === false);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testInterval = async tc => {\n    let set = false;\n    const timeout = interval(1, () => {\n      set = true;\n    });\n    timeout.destroy();\n    let i = 0;\n    interval(1, () => {\n      i++;\n    });\n    await until(0, () => i > 2);\n    assert(set === false);\n    assert(i > 1);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testAnimationFrame = async tc => {\n    let x = false;\n    animationFrame(() => { x = true; });\n    await until(0, () => x);\n    assert(x);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testIdleCallback = async tc => {\n    await create$2(resolve => {\n      idleCallback(resolve);\n    });\n  };\n\n  var eventloop = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testEventloopOrder: testEventloopOrder,\n    testTimeout: testTimeout,\n    testInterval: testInterval,\n    testAnimationFrame: testAnimationFrame,\n    testIdleCallback: testIdleCallback\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testTime = tc => {\n    const l = getDate().getTime();\n    const r = getUnixTime();\n    assert(abs(l - r) < 10, 'Times generated are roughly the same');\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testHumanDuration = tc => {\n    assert(humanizeDuration(10) === '10ms');\n    assert(humanizeDuration(0.1) === '100μs');\n    assert(humanizeDuration(61030) === '1min 1s');\n    assert(humanizeDuration(60030) === '1min');\n    assert(humanizeDuration(3600000) === '1h');\n    assert(humanizeDuration(3640000) === '1h 1min');\n    assert(humanizeDuration(3700000) === '1h 2min');\n    assert(humanizeDuration(60 * 60 * 1000 + 29000) === '1h');\n    assert(humanizeDuration(60 * 60 * 1000 + 31000) === '1h 1min');\n    assert(humanizeDuration(60 * 60 * 1000 + 31000 * 3) === '1h 2min');\n    assert(humanizeDuration(3600000 * 25) === '1d 1h');\n    assert(humanizeDuration(3600000 * 24.6) === '1d 1h');\n    assert(humanizeDuration(3600000 * 25.6) === '1d 2h');\n    assert(humanizeDuration(3600000 * 24 * 400) === '400d');\n    // test round\n    assert(humanizeDuration(6001) === '6s');\n  };\n\n  var time = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testTime: testTime,\n    testHumanDuration: testHumanDuration\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testPair = tc => {\n    const ps = [create$5(1, 2), create$5(3, 4), createReversed(6, 5)];\n    describe('Counting elements in pair list');\n    let countLeft = 0;\n    let countRight = 0;\n    forEach$1(ps, (left, right) => {\n      countLeft += left;\n      countRight += right;\n    });\n    assert(countLeft === 9);\n    assert(countRight === 12);\n    assert(countLeft === map$2(ps, left => left).reduce(add$1));\n    assert(countRight === map$2(ps, (left, right) => right).reduce(add$1));\n  };\n\n  var pair = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testPair: testPair\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testObject = tc => {\n    assert(create$4().constructor === undefined, 'object.create creates an empty object without constructor');\n    describe('object.equalFlat');\n    assert(equalFlat({}, {}), 'comparing equal objects');\n    assert(equalFlat({ x: 1 }, { x: 1 }), 'comparing equal objects');\n    assert(equalFlat({ x: 'dtrn' }, { x: 'dtrn' }), 'comparing equal objects');\n    assert(!equalFlat({ x: {} }, { x: {} }), 'flatEqual does not dive deep');\n    assert(equalFlat({ x: undefined }, { x: undefined }), 'flatEqual handles undefined');\n    assert(!equalFlat({ x: undefined }, { y: {} }), 'flatEqual handles undefined');\n    describe('object.every');\n    assert(every({ a: 1, b: 3 }, (v, k) => (v % 2) === 1 && k !== 'c'));\n    assert(!every({ a: 1, b: 3, c: 5 }, (v, k) => (v % 2) === 1 && k !== 'c'));\n    describe('object.some');\n    assert(some({ a: 1, b: 3 }, (v, k) => v === 3 && k === 'b'));\n    assert(!some({ a: 1, b: 5 }, (v, k) => v === 3));\n    assert(some({ a: 1, b: 5 }, () => true));\n    assert(!some({ a: 1, b: 5 }, (v, k) => false));\n    describe('object.forEach');\n    let forEachSum = 0;\n    forEach({ x: 1, y: 3 }, (v, k) => { forEachSum += v; });\n    assert(forEachSum === 4);\n    describe('object.map');\n    assert(map$1({ x: 1, z: 5 }, (v, k) => v).reduce(add$1) === 6);\n    describe('object.length');\n    assert(length$1({}) === 0);\n    assert(length$1({ x: 1 }) === 1);\n  };\n\n  var object = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testObject: testObject\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testMath = tc => {\n    describe('math.abs');\n    assert(abs(-1) === 1);\n    assert(abs(Number.MIN_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER);\n    assert(abs(Number.MAX_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER);\n    describe('math.add');\n    assert([1, 2, 3, 4, 5].reduce(add$1) === 15);\n    describe('math.ceil');\n    assert(ceil(1.5) === 2);\n    assert(ceil(-1.5) === -1);\n    describe('math.floor');\n    assert(floor(1.5) === 1);\n    assert(floor(-1.5) === -2);\n    describe('math.isNaN');\n    assert(isNaN$1(NaN));\n    // @ts-ignore\n    assert(!isNaN$1(null));\n    describe('math.max');\n    assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(max) === 3475);\n    describe('math.min');\n    assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(min) === 1);\n    describe('math.round');\n    assert(round(0.5) === 1);\n    assert(round(-0.5) === 0);\n  };\n\n  var math = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testMath: testMath\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testNumber = tc => {\n    describe('isNaN');\n    assert(isNaN(NaN));\n    assert(!isNaN(1 / 0));\n    // @ts-ignore\n    assert(isNaN('a' / 0));\n    assert(!isNaN(0));\n    describe('isInteger');\n    assert(!isInteger(1 / 0));\n    assert(!isInteger(NaN));\n    assert(isInteger(0));\n    assert(isInteger(-1));\n  };\n\n  var number = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testNumber: testNumber\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testRepeatBase64Encoding = tc => {\n    const gen = tc.prng;\n    const barr = uint8Array(gen, 100000);\n    const copied = copyUint8Array(barr);\n    const encoded = toBase64(barr);\n    assert(encoded.constructor === String);\n    const decoded = fromBase64(encoded);\n    assert(decoded.constructor === Uint8Array);\n    assert(decoded.byteLength === barr.byteLength);\n    for (let i = 0; i < barr.length; i++) {\n      assert(barr[i] === decoded[i]);\n    }\n    compare(copied, decoded);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testAnyEncoding = tc => {\n    const obj = { val: 1, arr: [1, 2], str: '409231dtrnä' };\n    const res = decodeAny(encodeAny(obj));\n    compare(obj, res);\n  };\n\n  var buffer = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testRepeatBase64Encoding: testRepeatBase64Encoding,\n    testAnyEncoding: testAnyEncoding\n  });\n\n  /**\n   * Efficient sort implementations.\n   *\n   * Note: These sort implementations were created to compare different sorting algorithms in JavaScript.\n   * Don't use them if you don't know what you are doing. Native Array.sort is almost always a better choice.\n   *\n   * @module sort\n   */\n\n  /**\n   * @template T\n   * @param {Array<T>} arr\n   * @param {number} lo\n   * @param {number} hi\n   * @param {function(T,T):number} compare\n   */\n  const _insertionSort = (arr, lo, hi, compare) => {\n    for (let i = lo + 1; i <= hi; i++) {\n      for (let j = i; j > 0 && compare(arr[j - 1], arr[j]) > 0; j--) {\n        const tmp = arr[j];\n        arr[j] = arr[j - 1];\n        arr[j - 1] = tmp;\n      }\n    }\n  };\n\n  /**\n   * @template T\n   * @param {Array<T>} arr\n   * @param {function(T,T):number} compare\n   * @return {void}\n   */\n  const insertionSort = (arr, compare) => {\n    _insertionSort(arr, 0, arr.length - 1, compare);\n  };\n\n  /**\n   * @template T\n   * @param {Array<T>} arr\n   * @param {number} lo\n   * @param {number} hi\n   * @param {function(T,T):number} compare\n   */\n  const _quickSort = (arr, lo, hi, compare) => {\n    if (hi - lo < 42) {\n      _insertionSort(arr, lo, hi, compare);\n    } else {\n      const pivot = arr[floor((lo + hi) / 2)];\n      let i = lo;\n      let j = hi;\n      while (true) {\n        while (compare(pivot, arr[i]) > 0) {\n          i++;\n        }\n        while (compare(arr[j], pivot) > 0) {\n          j--;\n        }\n        if (i >= j) {\n          break\n        }\n        // swap arr[i] with arr[j]\n        // and increment i and j\n        const arri = arr[i];\n        arr[i++] = arr[j];\n        arr[j--] = arri;\n      }\n      _quickSort(arr, lo, j, compare);\n      _quickSort(arr, j + 1, hi, compare);\n    }\n  };\n\n  /**\n   * This algorithm beats Array.prototype.sort in Chrome only with arrays with 10 million entries.\n   * In most cases [].sort will do just fine. Make sure to performance test your use-case before you\n   * integrate this algorithm.\n   *\n   * Note that Chrome's sort is now a stable algorithm (Timsort). Quicksort is not stable.\n   *\n   * @template T\n   * @param {Array<T>} arr\n   * @param {function(T,T):number} compare\n   * @return {void}\n   */\n  const quicksort = (arr, compare) => {\n    _quickSort(arr, 0, arr.length - 1, compare);\n  };\n\n  /**\n   * @template T\n   * @param {t.TestCase} tc\n   * @param {Array<T>} arr\n   * @param {function(T,T):number} compare\n   * @param {function(T):number} getVal\n   */\n  const runSortTest = (tc, arr, compare, getVal) => {\n    const arrSort = arr;\n    const arrQuicksort = arr.slice();\n    const arrInsertionsort = arr.slice();\n    measureTime('Array.constructor.sort', () => {\n      arrSort.sort(compare);\n    });\n    if (arrInsertionsort.length <= 10000) {\n      measureTime('Insertionsort', () => {\n        insertionSort(arrInsertionsort, compare);\n      });\n      compareArrays(arrSort, arrInsertionsort, 'compare Insertionsort with expected result');\n    }\n    measureTime('Quicksort', () => {\n      quicksort(arrQuicksort, compare);\n    });\n    // quickSort is not stable\n    compareArrays(arrSort.map(getVal), arrQuicksort.map(getVal), 'compare Quicksort with expected result');\n  };\n\n  /**\n   * @template T\n   * @param {t.TestCase} tc\n   * @param {function(number):Array<T>} createArray\n   * @param {function(T,T):number} compare 0 if equal, 1 if a<b, -1 otherwise\n   * @param {function(T):number} getVal\n   */\n  const createSortTest = (tc, createArray, compare, getVal) => {\n    describe('sort 10 elements');\n    runSortTest(tc, createArray(10), compare, getVal);\n    describe('sort 10 elements');\n    runSortTest(tc, createArray(10), compare, getVal);\n    describe('sort 10 elements');\n    runSortTest(tc, createArray(10), compare, getVal);\n    describe('sort 50 elements');\n    runSortTest(tc, createArray(50), compare, getVal);\n    describe('sort 100 elements');\n    runSortTest(tc, createArray(100), compare, getVal);\n    describe('sort 500 elements');\n    runSortTest(tc, createArray(500), compare, getVal);\n    describe('sort 1k elements');\n    runSortTest(tc, createArray(1000), compare, getVal);\n    describe('sort 10k elements');\n    runSortTest(tc, createArray(10000), compare, getVal);\n    describe('sort 100k elements');\n    runSortTest(tc, createArray(100000), compare, getVal);\n    if (extensive) {\n      describe('sort 1M elements');\n      runSortTest(tc, createArray(1000000), compare, getVal);\n      describe('sort 10M elements');\n      runSortTest(tc, createArray(10000000), compare, getVal);\n    }\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testSortUint16 = tc => {\n    skip(!production);\n    /**\n     * @param {number} i\n     * @return {number}\n     */\n    const getVal = i => i;\n    /**\n     * @param {number} a\n     * @param {number} b\n     * @return {number}\n     */\n    const compare = (a, b) => a - b;\n    /**\n     * @param {number} len\n     * @return {Array<number>}\n     */\n    const createArray = len => Array.from(new Uint16Array(uint8Array(tc.prng, len * 2)));\n    createSortTest(tc, createArray, compare, getVal);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testSortUint32 = tc => {\n    skip(!production);\n    /**\n     * @param {number} i\n     * @return {number}\n     */\n    const getVal = i => i;\n    /**\n     * @param {number} a\n     * @param {number} b\n     * @return {number}\n     */\n    const compare = (a, b) => a - b;\n    /**\n     * @param {number} len\n     * @return {Array<number>}\n     */\n    const createArray = len => Array.from(uint32Array(tc.prng, len));\n    createSortTest(tc, createArray, compare, getVal);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testSortObjectUint32 = tc => {\n    /**\n     * @param {{index:number}} obj\n     * @return {number}\n     */\n    const getVal = obj => obj.index;\n    /**\n     * @param {{index:number}} a\n     * @param {{index:number}} b\n     * @return {number}\n     */\n    const compare = (a, b) => a.index - b.index;\n    /**\n     * @param {number} len\n     * @return {Array<{index:number}>}\n     */\n    const createArray = len => Array.from(uint32Array(tc.prng, len)).map(index => ({ index }));\n    createSortTest(tc, createArray, compare, getVal);\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testListVsArrayPerformance = tc => {\n    /**\n     * @typedef {{ val: number }} Val\n     * @typedef {{ val: Val, next: item }|null} item\n     */\n    const len = 100000;\n    measureTime('array creation', () => {\n      /**\n       * @type {Array<Val>}\n       */\n      const array = new Array(len);\n      for (let i = 0; i < len; i++) {\n        array[i] = { val: i };\n      }\n    });\n    measureTime('list creation', () => {\n      /**\n       * @type {item}\n       */\n      const listStart = { val: { val: 0 }, next: null };\n      for (let i = 1, n = listStart; i < len; i++) {\n        const next = { val: { val: i }, next: null };\n        n.next = next;\n        n = next;\n      }\n    });\n  };\n\n  var sort = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testSortUint16: testSortUint16,\n    testSortUint32: testSortUint32,\n    testSortObjectUint32: testSortObjectUint32,\n    testListVsArrayPerformance: testListVsArrayPerformance\n  });\n\n  /**\n   * Utility module to work with urls.\n   *\n   * @module url\n   */\n\n  /**\n   * Parse query parameters from an url.\n   *\n   * @param {string} url\n   * @return {Object<string,string>}\n   */\n  const decodeQueryParams = url => {\n    /**\n     * @type {Object<string,string>}\n     */\n    const query = {};\n    const urlQuerySplit = url.split('?');\n    const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&');\n    for (var i = 0; i < pairs.length; i++) {\n      const item = pairs[i];\n      if (item.length > 0) {\n        const pair = item.split('=');\n        query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n      }\n    }\n    return query\n  };\n\n  /**\n   * @param {Object<string,string>} params\n   * @return {string}\n   */\n  const encodeQueryParams = params =>\n    map$1(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');\n\n  /**\n   * @param {Object<string,any>} params\n   */\n  const paramTest = params => {\n    const out = decodeQueryParams(encodeQueryParams(params));\n    compareObjects(params, out, 'Compare params');\n  };\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testUrlParamQuery = tc => {\n    paramTest({});\n    paramTest({ a: '4' });\n    paramTest({ a: 'dtrn', b: '0x0' });\n\n    compareObjects({ }, decodeQueryParams('http://localhost:8080/dtrn?'));\n    compareObjects({ a: 'ay' }, decodeQueryParams('http://localhost:8080/dtrn?a=ay'));\n    compareObjects({ a: '' }, decodeQueryParams('http://localhost:8080/dtrn?a='));\n    compareObjects({ a: '' }, decodeQueryParams('http://localhost:8080/dtrn?a'));\n    compareObjects({ a: 'ay' }, decodeQueryParams('http://localhost:8080/dtrn?a=ay&'));\n    compareObjects({ a: 'ay', b: 'bey' }, decodeQueryParams('http://localhost:8080/dtrn?a=ay&b=bey'));\n  };\n\n  var url = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testUrlParamQuery: testUrlParamQuery\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testMetricPrefix = tc => {\n    compare(prefix(0), { n: 0, prefix: '' });\n    compare(prefix(1, -1), { n: 1, prefix: 'm' });\n    compare(prefix(1.5), { n: 1.5, prefix: '' });\n    compare(prefix(100.5), { n: 100.5, prefix: '' });\n    compare(prefix(1000.5), { n: 1.0005, prefix: 'k' });\n    compare(prefix(0.3), { n: 300, prefix: 'm' });\n    compare(prefix(0.001), { n: 1, prefix: 'm' });\n    // up\n    compare(prefix(10000), { n: 10, prefix: 'k' });\n    compare(prefix(1e7), { n: 10, prefix: 'M' });\n    compare(prefix(1e11), { n: 100, prefix: 'G' });\n    compare(prefix(1e12 + 3), { n: (1e12 + 3) / 1e12, prefix: 'T' });\n    compare(prefix(1e15), { n: 1, prefix: 'P' });\n    compare(prefix(1e20), { n: 100, prefix: 'E' });\n    compare(prefix(1e22), { n: 10, prefix: 'Z' });\n    compare(prefix(1e24), { n: 1, prefix: 'Y' });\n    compare(prefix(1e28), { n: 10000, prefix: 'Y' });\n    // down\n    compare(prefix(0.01), { n: 10, prefix: 'm' });\n    compare(prefix(1e-4), { n: 100, prefix: 'μ' });\n    compare(prefix(1e-9), { n: 1, prefix: 'n' });\n    compare(prefix(1e-12), { n: 1, prefix: 'p' });\n    compare(prefix(1e-14), { n: 10, prefix: 'f' });\n    compare(prefix(1e-18), { n: 1, prefix: 'a' });\n    compare(prefix(1e-21), { n: 1, prefix: 'z' });\n    compare(prefix(1e-22), { n: 100, prefix: 'y' });\n    compare(prefix(1e-30), { n: 0.000001, prefix: 'y' });\n  };\n\n  var metric = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testMetricPrefix: testMetricPrefix\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testDeepEquality = tc => {\n    assert(equalityDeep(1, 1));\n    assert(!equalityDeep(1, 2));\n    assert(!equalityDeep(1, '1'));\n    assert(!equalityDeep(1, null));\n\n    const obj = { b: 5 };\n    const map1 = new Map();\n    const map2 = new Map();\n    const map3 = new Map();\n    const map4 = new Map();\n    map1.set('a', obj);\n    map2.set('a', { b: 5 });\n    map3.set('b', obj);\n    map4.set('a', obj);\n    map4.set('b', obj);\n\n    assert(equalityDeep({ a: 4 }, { a: 4 }));\n    assert(equalityDeep({ a: 4, obj: { b: 5 } }, { a: 4, obj }));\n    assert(!equalityDeep({ a: 4 }, { a: 4, obj }));\n    assert(equalityDeep({ a: [], obj }, { a: [], obj }));\n    assert(!equalityDeep({ a: [], obj }, { a: [], obj: undefined }));\n\n    assert(equalityDeep({}, {}));\n    assert(!equalityDeep({}, { a: 4 }));\n\n    assert(equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1]));\n    assert(!equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 2]));\n    assert(!equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1, 3]));\n    assert(equalityDeep([], []));\n    assert(!equalityDeep([1], []));\n\n    assert(equalityDeep(map1, map2));\n    assert(!equalityDeep(map1, map3));\n    assert(!equalityDeep(map1, map4));\n\n    const set1 = new Set([1]);\n    const set2 = new Set([true]);\n    const set3 = new Set([1, true]);\n    const set4 = new Set([true]);\n\n    assert(equalityDeep(set2, set4));\n    assert(!equalityDeep(set1, set2));\n    assert(!equalityDeep(set1, set3));\n    assert(!equalityDeep(set1, set4));\n    assert(!equalityDeep(set2, set3));\n    assert(equalityDeep(set2, set4));\n\n    const buf1 = Uint8Array.from([1, 2]);\n    const buf2 = Uint8Array.from([1, 3]);\n    const buf3 = Uint8Array.from([1, 2, 3]);\n    const buf4 = Uint8Array.from([1, 2]);\n\n    assert(!equalityDeep(buf1, buf2));\n    assert(!equalityDeep(buf2, buf3));\n    assert(!equalityDeep(buf3, buf4));\n    assert(equalityDeep(buf4, buf1));\n\n    assert(!equalityDeep(buf1.buffer, buf2.buffer));\n    assert(!equalityDeep(buf2.buffer, buf3.buffer));\n    assert(!equalityDeep(buf3.buffer, buf4.buffer));\n    assert(equalityDeep(buf4.buffer, buf1.buffer));\n\n    assert(!equalityDeep(buf1, buf4.buffer));\n  };\n\n  var func = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testDeepEquality: testDeepEquality\n  });\n\n  /**\n   * @param {t.TestCase} tc\n   */\n  const testStorageModule = tc => {\n    const s = varStorage;\n    /**\n     * @type {any}\n     */\n    let lastEvent = null;\n    onChange(event => {\n      lastEvent = event;\n    });\n    s.setItem('key', 'value');\n    assert(lastEvent === null);\n  };\n\n  var storage = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    testStorageModule: testStorageModule\n  });\n\n  /* istanbul ignore if */\n  if (isBrowser) {\n    createVConsole(document.body);\n  }\n\n  runTests({\n    array,\n    logging,\n    string,\n    encoding,\n    diff,\n    testing,\n    indexeddb,\n    prng,\n    statistics,\n    binary,\n    random,\n    promise,\n    queue,\n    map,\n    eventloop,\n    time,\n    pair,\n    object,\n    math,\n    number,\n    buffer,\n    sort,\n    url,\n    metric,\n    func,\n    storage\n  }).then(success => {\n    /* istanbul ignore next */\n    if (isNode) {\n      process.exit(success ? 0 : 1);\n    }\n  });\n\n}());\n///# sourceMappingURL=test.js.map\n","title":"$:/plugins/commons/yjs/lib0/dist/test.js","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/test.js.map":{"text":"{\"version\":3,\"file\":\"test.js\",\"sources\":[\"../map.js\",\"../string.js\",\"../conditions.js\",\"../storage.js\",\"../environment.js\",\"../symbol.js\",\"../pair.js\",\"../dom.js\",\"../json.js\",\"../eventloop.js\",\"../math.js\",\"../metric.js\",\"../time.js\",\"../array.js\",\"../object.js\",\"../function.js\",\"../logging.js\",\"../diff.js\",\"../node_modules/isomorphic.js/browser.mjs\",\"../random.js\",\"../binary.js\",\"../prng/Xorshift32.js\",\"../prng/Xoroshiro128plus.js\",\"../number.js\",\"../encoding.js\",\"../decoding.js\",\"../buffer.js\",\"../prng.js\",\"../statistics.js\",\"../promise.js\",\"../testing.js\",\"../array.test.js\",\"../logging.test.js\",\"../string.test.js\",\"../encoding.test.js\",\"../diff.test.js\",\"../testing.test.js\",\"../error.js\",\"../indexeddb.js\",\"../indexeddb.test.js\",\"../prng/Mt19937.js\",\"../prng.test.js\",\"../statistics.test.js\",\"../binary.test.js\",\"../random.test.js\",\"../promise.test.js\",\"../queue.js\",\"../queue.test.js\",\"../map.test.js\",\"../eventloop.test.js\",\"../time.test.js\",\"../pair.test.js\",\"../object.test.js\",\"../math.test.js\",\"../number.test.js\",\"../buffer.test.js\",\"../sort.js\",\"../sort.test.js\",\"../url.js\",\"../url.test.js\",\"../metric.test.js\",\"../function.test.js\",\"../storage.test.js\",\"../test.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with key-value stores.\\n *\\n * @module map\\n */\\n\\n/**\\n * Creates a new Map instance.\\n *\\n * @function\\n * @return {Map<any, any>}\\n *\\n * @function\\n */\\nexport const create = () => new Map()\\n\\n/**\\n * Copy a Map object into a fresh Map object.\\n *\\n * @function\\n * @template X,Y\\n * @param {Map<X,Y>} m\\n * @return {Map<X,Y>}\\n */\\nexport const copy = m => {\\n  const r = create()\\n  m.forEach((v, k) => { r.set(k, v) })\\n  return r\\n}\\n\\n/**\\n * Get map property. Create T if property is undefined and set T on map.\\n *\\n * ```js\\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\\n * listeners.add(listener)\\n * ```\\n *\\n * @function\\n * @template T,K\\n * @param {Map<K, T>} map\\n * @param {K} key\\n * @param {function():T} createT\\n * @return {T}\\n */\\nexport const setIfUndefined = (map, key, createT) => {\\n  let set = map.get(key)\\n  if (set === undefined) {\\n    map.set(key, set = createT())\\n  }\\n  return set\\n}\\n\\n/**\\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\\n *\\n * @function\\n * @template K\\n * @template V\\n * @template R\\n * @param {Map<K,V>} m\\n * @param {function(V,K):R} f\\n * @return {Array<R>}\\n */\\nexport const map = (m, f) => {\\n  const res = []\\n  for (const [key, value] of m) {\\n    res.push(f(value, key))\\n  }\\n  return res\\n}\\n\\n/**\\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\\n *\\n * @todo should rename to some - similarly to Array.some\\n *\\n * @function\\n * @template K\\n * @template V\\n * @param {Map<K,V>} m\\n * @param {function(V,K):boolean} f\\n * @return {boolean}\\n */\\nexport const any = (m, f) => {\\n  for (const [key, value] of m) {\\n    if (f(value, key)) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\n/**\\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\\n *\\n * @function\\n * @template K\\n * @template V\\n * @param {Map<K,V>} m\\n * @param {function(V,K):boolean} f\\n * @return {boolean}\\n */\\nexport const all = (m, f) => {\\n  for (const [key, value] of m) {\\n    if (!f(value, key)) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\",\"/**\\n * Utility module to work with strings.\\n *\\n * @module string\\n */\\n\\nexport const fromCharCode = String.fromCharCode\\nexport const fromCodePoint = String.fromCodePoint\\n\\n/**\\n * @param {string} s\\n * @return {string}\\n */\\nconst toLowerCase = s => s.toLowerCase()\\n\\nconst trimLeftRegex = /^\\\\s*/g\\n\\n/**\\n * @param {string} s\\n * @return {string}\\n */\\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\\n\\nconst fromCamelCaseRegex = /([A-Z])/g\\n\\n/**\\n * @param {string} s\\n * @param {string} separator\\n * @return {string}\\n */\\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\\n\\n/**\\n * Compute the utf8ByteLength\\n * @param {string} str\\n * @return {number}\\n */\\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\nexport const _encodeUtf8Polyfill = str => {\\n  const encodedString = unescape(encodeURIComponent(str))\\n  const len = encodedString.length\\n  const buf = new Uint8Array(len)\\n  for (let i = 0; i < len; i++) {\\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\\n  }\\n  return buf\\n}\\n\\n/* istanbul ignore next */\\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\\n\\n/**\\n * @param {string} str\\n * @return {Uint8Array}\\n */\\n/* istanbul ignore next */\\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\nexport const _decodeUtf8Polyfill = buf => {\\n  let remainingLen = buf.length\\n  let encodedString = ''\\n  let bufPos = 0\\n  while (remainingLen > 0) {\\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\\n    bufPos += nextLen\\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\\n    remainingLen -= nextLen\\n  }\\n  return decodeURIComponent(escape(encodedString))\\n}\\n\\n/* istanbul ignore next */\\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\\n\\n/* istanbul ignore next */\\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\\n  // Safari doesn't handle BOM correctly.\\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\\n  // Another issue is that from then on no BOM chars are recognized anymore\\n  /* istanbul ignore next */\\n  utf8TextDecoder = null\\n}\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\\n\\n/**\\n * @param {Uint8Array} buf\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\\n\",\"/**\\n * Often used conditions.\\n *\\n * @module conditions\\n */\\n\\n/**\\n * @template T\\n * @param {T|null|undefined} v\\n * @return {T|null}\\n */\\n/* istanbul ignore next */\\nexport const undefinedToNull = v => v === undefined ? null : v\\n\",\"/* global localStorage, addEventListener */\\n\\n/**\\n * Isomorphic variable storage.\\n *\\n * Uses LocalStorage in the browser and falls back to in-memory storage.\\n *\\n * @module storage\\n */\\n\\n/* istanbul ignore next */\\nclass VarStoragePolyfill {\\n  constructor () {\\n    this.map = new Map()\\n  }\\n\\n  /**\\n   * @param {string} key\\n   * @param {any} newValue\\n   */\\n  setItem (key, newValue) {\\n    this.map.set(key, newValue)\\n  }\\n\\n  /**\\n   * @param {string} key\\n   */\\n  getItem (key) {\\n    return this.map.get(key)\\n  }\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @type {any}\\n */\\nlet _localStorage = new VarStoragePolyfill()\\nlet usePolyfill = true\\n\\ntry {\\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\\n  /* istanbul ignore next */\\n  if (typeof localStorage !== 'undefined') {\\n    _localStorage = localStorage\\n    usePolyfill = false\\n  }\\n} catch (e) { }\\n\\n/* istanbul ignore next */\\n/**\\n * This is basically localStorage in browser, or a polyfill in nodejs\\n */\\nexport const varStorage = _localStorage\\n\\n/* istanbul ignore next */\\n/**\\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\\n *\\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\\n * @function\\n */\\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\\n\",\"/**\\n * Isomorphic module to work access the environment (query params, env variables).\\n *\\n * @module map\\n */\\n\\nimport * as map from './map.js'\\nimport * as string from './string.js'\\nimport * as conditions from './conditions.js'\\nimport * as storage from './storage.js'\\n\\n/* istanbul ignore next */\\n// @ts-ignore\\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\\\.js/.test(process.release.name)\\n/* istanbul ignore next */\\nexport const isBrowser = typeof window !== 'undefined' && !isNode\\n/* istanbul ignore next */\\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\\n\\n/**\\n * @type {Map<string,string>}\\n */\\nlet params\\nconst args = []\\n\\n/* istanbul ignore next */\\nconst computeParams = () => {\\n  if (params === undefined) {\\n    if (isNode) {\\n      params = map.create()\\n      const pargs = process.argv\\n      let currParamName = null\\n      /* istanbul ignore next */\\n      for (let i = 0; i < pargs.length; i++) {\\n        const parg = pargs[i]\\n        if (parg[0] === '-') {\\n          if (currParamName !== null) {\\n            params.set(currParamName, '')\\n          }\\n          currParamName = parg\\n        } else {\\n          if (currParamName !== null) {\\n            params.set(currParamName, parg)\\n            currParamName = null\\n          } else {\\n            args.push(parg)\\n          }\\n        }\\n      }\\n      if (currParamName !== null) {\\n        params.set(currParamName, '')\\n      }\\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\\n    } else if (typeof location === 'object') {\\n      params = map.create()\\n      // eslint-disable-next-line no-undef\\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\\n        if (kv.length !== 0) {\\n          const [key, value] = kv.split('=')\\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\\n        }\\n      })\\n    } else {\\n      params = map.create()\\n    }\\n  }\\n  return params\\n}\\n\\n/**\\n * @param {string} name\\n * @return {boolean}\\n */\\n/* istanbul ignore next */\\nexport const hasParam = name => computeParams().has(name)\\n\\n/**\\n * @param {string} name\\n * @param {string} defaultVal\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\\n// export const getArgs = name => computeParams() && args\\n\\n/**\\n * @param {string} name\\n * @return {string|null}\\n */\\n/* istanbul ignore next */\\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\\n\\n/**\\n * @param {string} name\\n * @return {string|null}\\n */\\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\\n\\n/**\\n * @param {string} name\\n * @return {boolean}\\n */\\n/* istanbul ignore next */\\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\\n\\n/* istanbul ignore next */\\nexport const production = hasConf('production')\\n\",\"/**\\n * Utility module to work with EcmaScript Symbols.\\n *\\n * @module symbol\\n */\\n\\n/**\\n * Return fresh symbol.\\n *\\n * @return {Symbol}\\n */\\nexport const create = Symbol\\n\\n/**\\n * @param {any} s\\n * @return {boolean}\\n */\\nexport const isSymbol = s => typeof s === 'symbol'\\n\",\"/**\\n * Working with value pairs.\\n *\\n * @module pair\\n */\\n\\n/**\\n * @template L,R\\n */\\nexport class Pair {\\n  /**\\n   * @param {L} left\\n   * @param {R} right\\n   */\\n  constructor (left, right) {\\n    this.left = left\\n    this.right = right\\n  }\\n}\\n\\n/**\\n * @template L,R\\n * @param {L} left\\n * @param {R} right\\n * @return {Pair<L,R>}\\n */\\nexport const create = (left, right) => new Pair(left, right)\\n\\n/**\\n * @template L,R\\n * @param {R} right\\n * @param {L} left\\n * @return {Pair<L,R>}\\n */\\nexport const createReversed = (right, left) => new Pair(left, right)\\n\\n/**\\n * @template L,R\\n * @param {Array<Pair<L,R>>} arr\\n * @param {function(L, R):any} f\\n */\\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\\n\\n/**\\n * @template L,R,X\\n * @param {Array<Pair<L,R>>} arr\\n * @param {function(L, R):X} f\\n * @return {Array<X>}\\n */\\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\\n\",\"/* eslint-env browser */\\n\\n/**\\n * Utility module to work with the DOM.\\n *\\n * @module dom\\n */\\n\\nimport * as pair from './pair.js'\\nimport * as map from './map.js'\\n\\n/* istanbul ignore next */\\n/**\\n * @type {Document}\\n */\\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\\n\\n/**\\n * @param {string} name\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const createElement = name => doc.createElement(name)\\n\\n/**\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const createDocumentFragment = () => doc.createDocumentFragment()\\n\\n/**\\n * @param {string} text\\n * @return {Text}\\n */\\n/* istanbul ignore next */\\nexport const createTextNode = text => doc.createTextNode(text)\\n\\n/* istanbul ignore next */\\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\\n\\n/**\\n * @param {HTMLElement} el\\n * @param {string} name\\n * @param {Object} opts\\n */\\n/* istanbul ignore next */\\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\\n\\n/**\\n * @param {Element} el\\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const setAttributes = (el, attrs) => {\\n  pair.forEach(attrs, (key, value) => {\\n    if (value === false) {\\n      el.removeAttribute(key)\\n    } else if (value === true) {\\n      el.setAttribute(key, '')\\n    } else {\\n      // @ts-ignore\\n      el.setAttribute(key, value)\\n    }\\n  })\\n  return el\\n}\\n\\n/**\\n * @param {Element} el\\n * @param {Map<string, string>} attrs Array of key-value pairs\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const setAttributesMap = (el, attrs) => {\\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\\n  return el\\n}\\n\\n/**\\n * @param {Array<Node>|HTMLCollection} children\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const fragment = children => {\\n  const fragment = createDocumentFragment()\\n  for (let i = 0; i < children.length; i++) {\\n    appendChild(fragment, children[i])\\n  }\\n  return fragment\\n}\\n\\n/**\\n * @param {Element} parent\\n * @param {Array<Node>} nodes\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const append = (parent, nodes) => {\\n  appendChild(parent, fragment(nodes))\\n  return parent\\n}\\n\\n/**\\n * @param {HTMLElement} el\\n */\\n/* istanbul ignore next */\\nexport const remove = el => el.remove()\\n\\n/**\\n * @param {EventTarget} el\\n * @param {string} name\\n * @param {EventListener} f\\n */\\n/* istanbul ignore next */\\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\\n\\n/**\\n * @param {EventTarget} el\\n * @param {string} name\\n * @param {EventListener} f\\n */\\n/* istanbul ignore next */\\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\\n\\n/**\\n * @param {Node} node\\n * @param {Array<pair.Pair<string,EventListener>>} listeners\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const addEventListeners = (node, listeners) => {\\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\\n  return node\\n}\\n\\n/**\\n * @param {Node} node\\n * @param {Array<pair.Pair<string,EventListener>>} listeners\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const removeEventListeners = (node, listeners) => {\\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\\n  return node\\n}\\n\\n/**\\n * @param {string} name\\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\\n * @param {Array<Node>} children\\n * @return {Element}\\n */\\n/* istanbul ignore next */\\nexport const element = (name, attrs = [], children = []) =>\\n  append(setAttributes(createElement(name), attrs), children)\\n\\n/**\\n * @param {number} width\\n * @param {number} height\\n */\\n/* istanbul ignore next */\\nexport const canvas = (width, height) => {\\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\\n  c.height = height\\n  c.width = width\\n  return c\\n}\\n\\n/**\\n * @param {string} t\\n * @return {Text}\\n */\\n/* istanbul ignore next */\\nexport const text = createTextNode\\n\\n/**\\n * @param {pair.Pair<string,string>} pair\\n */\\n/* istanbul ignore next */\\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\\n\\n/**\\n * @param {Array<pair.Pair<string,string>>} pairs\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\\n\\n/**\\n * @param {Map<string,string>} m\\n * @return {string}\\n */\\n/* istanbul ignore next */\\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\\n\\n/**\\n * @todo should always query on a dom element\\n *\\n * @param {HTMLElement|ShadowRoot} el\\n * @param {string} query\\n * @return {HTMLElement | null}\\n */\\n/* istanbul ignore next */\\nexport const querySelector = (el, query) => el.querySelector(query)\\n\\n/**\\n * @param {HTMLElement|ShadowRoot} el\\n * @param {string} query\\n * @return {NodeListOf<HTMLElement>}\\n */\\n/* istanbul ignore next */\\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\\n\\n/**\\n * @param {string} id\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\\n\\n/**\\n * @param {string} html\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\\n\\n/**\\n * @param {string} html\\n * @return {DocumentFragment}\\n */\\n/* istanbul ignore next */\\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\\n\\n/**\\n * @param {string} html\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\\n\\n/**\\n * @param {HTMLElement} oldEl\\n * @param {HTMLElement|DocumentFragment} newEl\\n */\\n/* istanbul ignore next */\\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\\n\\n/**\\n * @param {HTMLElement} parent\\n * @param {HTMLElement} el\\n * @param {Node|null} ref\\n * @return {HTMLElement}\\n */\\n/* istanbul ignore next */\\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\\n\\n/**\\n * @param {Node} parent\\n * @param {Node} child\\n * @return {Node}\\n */\\n/* istanbul ignore next */\\nexport const appendChild = (parent, child) => parent.appendChild(child)\\n\\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\\nexport const TEXT_NODE = doc.TEXT_NODE\\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\\nexport const COMMENT_NODE = doc.COMMENT_NODE\\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\\n\\n/**\\n * @param {any} node\\n * @param {number} type\\n */\\nexport const checkNodeType = (node, type) => node.nodeType === type\\n\\n/**\\n * @param {Node} parent\\n * @param {HTMLElement} child\\n */\\nexport const isParentOf = (parent, child) => {\\n  let p = child.parentNode\\n  while (p && p !== parent) {\\n    p = p.parentNode\\n  }\\n  return p === parent\\n}\\n\",\"/**\\n * JSON utility functions.\\n *\\n * @module json\\n */\\n\\n/**\\n * Transform JavaScript object to JSON.\\n *\\n * @param {any} object\\n * @return {string}\\n */\\nexport const stringify = JSON.stringify\\n\\n/**\\n * Parse JSON object.\\n *\\n * @param {string} json\\n * @return {any}\\n */\\nexport const parse = JSON.parse\\n\",\"/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\\n\\n/**\\n * Utility module to work with EcmaScript's event loop.\\n *\\n * @module eventloop\\n */\\n\\n/**\\n * @type {Array<function>}\\n */\\nlet queue = []\\n\\nconst _runQueue = () => {\\n  for (let i = 0; i < queue.length; i++) {\\n    queue[i]()\\n  }\\n  queue = []\\n}\\n\\n/**\\n * @param {function():void} f\\n */\\nexport const enqueue = f => {\\n  queue.push(f)\\n  if (queue.length === 1) {\\n    setTimeout(_runQueue, 0)\\n  }\\n}\\n\\n/**\\n * @typedef {Object} TimeoutObject\\n * @property {function} TimeoutObject.destroy\\n */\\n\\n/**\\n * @param {function(number):void} clearFunction\\n */\\nconst createTimeoutClass = clearFunction => class TT {\\n  /**\\n   * @param {number} timeoutId\\n   */\\n  constructor (timeoutId) {\\n    this._ = timeoutId\\n  }\\n\\n  destroy () {\\n    clearFunction(this._)\\n  }\\n}\\n\\nconst Timeout = createTimeoutClass(clearTimeout)\\n\\n/**\\n * @param {number} timeout\\n * @param {function} callback\\n * @return {TimeoutObject}\\n */\\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\\n\\nconst Interval = createTimeoutClass(clearInterval)\\n\\n/**\\n * @param {number} timeout\\n * @param {function} callback\\n * @return {TimeoutObject}\\n */\\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\\n\\n/* istanbul ignore next */\\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\\n\\n/* istanbul ignore next */\\n/**\\n * @param {function(number):void} cb\\n * @return {TimeoutObject}\\n */\\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\\n\\n/* istanbul ignore next */\\n// @ts-ignore\\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\\n\\n/* istanbul ignore next */\\n/**\\n * Note: this is experimental and is probably only useful in browsers.\\n *\\n * @param {function} cb\\n * @return {TimeoutObject}\\n */\\n// @ts-ignore\\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\\n\\n/**\\n * @param {number} timeout Timeout of the debounce action\\n * @return {function(function():void):void}\\n */\\nexport const createDebouncer = timeout => {\\n  let timer = -1\\n  return f => {\\n    clearTimeout(timer)\\n    if (f) {\\n      timer = /** @type {any} */ (setTimeout(f, timeout))\\n    }\\n  }\\n}\\n\",\"/**\\n * Common Math expressions.\\n *\\n * @module math\\n */\\n\\nexport const floor = Math.floor\\nexport const ceil = Math.ceil\\nexport const abs = Math.abs\\nexport const imul = Math.imul\\nexport const round = Math.round\\nexport const log10 = Math.log10\\nexport const log2 = Math.log2\\nexport const log = Math.log\\nexport const sqrt = Math.sqrt\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The sum of a and b\\n */\\nexport const add = (a, b) => a + b\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The smaller element of a and b\\n */\\nexport const min = (a, b) => a < b ? a : b\\n\\n/**\\n * @function\\n * @param {number} a\\n * @param {number} b\\n * @return {number} The bigger element of a and b\\n */\\nexport const max = (a, b) => a > b ? a : b\\n\\nexport const isNaN = Number.isNaN\\n\\nexport const pow = Math.pow\\n/**\\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\\n *\\n * @param {number} exp\\n * @return {number}\\n */\\nexport const exp10 = exp => Math.pow(10, exp)\\n\\nexport const sign = Math.sign\\n\\n/**\\n * @param {number} n\\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\\n */\\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\\n\",\"/**\\n * Utility module to convert metric values.\\n *\\n * @module metric\\n */\\n\\nimport * as math from './math.js'\\n\\nexport const yotta = 1e24\\nexport const zetta = 1e21\\nexport const exa = 1e18\\nexport const peta = 1e15\\nexport const tera = 1e12\\nexport const giga = 1e9\\nexport const mega = 1e6\\nexport const kilo = 1e3\\nexport const hecto = 1e2\\nexport const deca = 10\\nexport const deci = 0.1\\nexport const centi = 0.01\\nexport const milli = 1e-3\\nexport const micro = 1e-6\\nexport const nano = 1e-9\\nexport const pico = 1e-12\\nexport const femto = 1e-15\\nexport const atto = 1e-18\\nexport const zepto = 1e-21\\nexport const yocto = 1e-24\\n\\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\\n\\n/**\\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\\n *\\n * @param {number} n\\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\\n * @return {{n:number,prefix:string}}\\n */\\nexport const prefix = (n, baseMultiplier = 0) => {\\n  const nPow = n === 0 ? 0 : math.log10(n)\\n  let mult = 0\\n  while (nPow < mult * 3 && baseMultiplier > -8) {\\n    baseMultiplier--\\n    mult--\\n  }\\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\\n    baseMultiplier++\\n    mult++\\n  }\\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\\n  return {\\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\\n    prefix\\n  }\\n}\\n\",\"/**\\n * Utility module to work with time.\\n *\\n * @module time\\n */\\n\\nimport * as metric from './metric.js'\\nimport * as math from './math.js'\\n\\n/**\\n * Return current time.\\n *\\n * @return {Date}\\n */\\nexport const getDate = () => new Date()\\n\\n/**\\n * Return current unix time.\\n *\\n * @return {number}\\n */\\nexport const getUnixTime = Date.now\\n\\n/**\\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\\n *\\n * @param {number} d duration in milliseconds\\n * @return {string} humanized approximation of time\\n */\\nexport const humanizeDuration = d => {\\n  if (d < 60000) {\\n    const p = metric.prefix(d, -1)\\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\\n  }\\n  d = math.floor(d / 1000)\\n  const seconds = d % 60\\n  const minutes = math.floor(d / 60) % 60\\n  const hours = math.floor(d / 3600) % 24\\n  const days = math.floor(d / 86400)\\n  if (days > 0) {\\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\\n  }\\n  if (hours > 0) {\\n    /* istanbul ignore next */\\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\\n  }\\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\\n}\\n\",\"/**\\n * Utility module to work with Arrays.\\n *\\n * @module array\\n */\\n\\n/**\\n * Return the last element of an array. The element must exist\\n *\\n * @template L\\n * @param {Array<L>} arr\\n * @return {L}\\n */\\nexport const last = arr => arr[arr.length - 1]\\n\\n/**\\n * @template C\\n * @return {Array<C>}\\n */\\nexport const create = () => /** @type {Array<C>} */ ([])\\n\\n/**\\n * @template D\\n * @param {Array<D>} a\\n * @return {Array<D>}\\n */\\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\\n\\n/**\\n * Append elements from src to dest\\n *\\n * @template M\\n * @param {Array<M>} dest\\n * @param {Array<M>} src\\n */\\nexport const appendTo = (dest, src) => {\\n  for (let i = 0; i < src.length; i++) {\\n    dest.push(src[i])\\n  }\\n}\\n\\n/**\\n * Transforms something array-like to an actual Array.\\n *\\n * @function\\n * @template T\\n * @param {ArrayLike<T>|Iterable<T>} arraylike\\n * @return {T}\\n */\\nexport const from = Array.from\\n\\n/**\\n * True iff condition holds on every element in the Array.\\n *\\n * @function\\n * @template ITEM\\n *\\n * @param {Array<ITEM>} arr\\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\\n * @return {boolean}\\n */\\nexport const every = (arr, f) => arr.every(f)\\n\\n/**\\n * True iff condition holds on some element in the Array.\\n *\\n * @function\\n * @template S\\n * @param {Array<S>} arr\\n * @param {function(S, number, Array<S>):boolean} f\\n * @return {boolean}\\n */\\nexport const some = (arr, f) => arr.some(f)\\n\\n/**\\n * @template ELEM\\n *\\n * @param {Array<ELEM>} a\\n * @param {Array<ELEM>} b\\n * @return {boolean}\\n */\\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\\n\\n/**\\n * @template ELEM\\n * @param {Array<Array<ELEM>>} arr\\n * @return {Array<ELEM>}\\n */\\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\\n\",\"/**\\n * Utility functions for working with EcmaScript objects.\\n *\\n * @module object\\n */\\n\\n/**\\n * @return {Object<string,any>} obj\\n */\\nexport const create = () => Object.create(null)\\n\\n/**\\n * Object.assign\\n */\\nexport const assign = Object.assign\\n\\n/**\\n * @param {Object<string,any>} obj\\n */\\nexport const keys = Object.keys\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):any} f\\n */\\nexport const forEach = (obj, f) => {\\n  for (const key in obj) {\\n    f(obj[key], key)\\n  }\\n}\\n\\n/**\\n * @template R\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):R} f\\n * @return {Array<R>}\\n */\\nexport const map = (obj, f) => {\\n  const results = []\\n  for (const key in obj) {\\n    results.push(f(obj[key], key))\\n  }\\n  return results\\n}\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @return {number}\\n */\\nexport const length = obj => keys(obj).length\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):boolean} f\\n * @return {boolean}\\n */\\nexport const some = (obj, f) => {\\n  for (const key in obj) {\\n    if (f(obj[key], key)) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\n/**\\n * @param {Object<string,any>} obj\\n * @param {function(any,string):boolean} f\\n * @return {boolean}\\n */\\nexport const every = (obj, f) => {\\n  for (const key in obj) {\\n    if (!f(obj[key], key)) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\\n/**\\n * Calls `Object.prototype.hasOwnProperty`.\\n *\\n * @param {any} obj\\n * @param {string|symbol} key\\n * @return {boolean}\\n */\\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\\n\\n/**\\n * @param {Object<string,any>} a\\n * @param {Object<string,any>} b\\n * @return {boolean}\\n */\\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\\n\",\"/**\\n * Common functions and function call helpers.\\n *\\n * @module function\\n */\\n\\nimport * as array from './array.js'\\nimport * as object from './object.js'\\n\\n/**\\n * Calls all functions in `fs` with args. Only throws after all functions were called.\\n *\\n * @param {Array<function>} fs\\n * @param {Array<any>} args\\n */\\nexport const callAll = (fs, args, i = 0) => {\\n  try {\\n    for (; i < fs.length; i++) {\\n      fs[i](...args)\\n    }\\n  } finally {\\n    if (i < fs.length) {\\n      callAll(fs, args, i + 1)\\n    }\\n  }\\n}\\n\\nexport const nop = () => {}\\n\\n/**\\n * @template T\\n * @param {function():T} f\\n * @return {T}\\n */\\nexport const apply = f => f()\\n\\n/**\\n * @template A\\n *\\n * @param {A} a\\n * @return {A}\\n */\\nexport const id = a => a\\n\\n/**\\n * @template T\\n *\\n * @param {T} a\\n * @param {T} b\\n * @return {boolean}\\n */\\nexport const equalityStrict = (a, b) => a === b\\n\\n/**\\n * @template T\\n *\\n * @param {Array<T>|object} a\\n * @param {Array<T>|object} b\\n * @return {boolean}\\n */\\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @return {boolean}\\n */\\nexport const equalityDeep = (a, b) => {\\n  if (a == null || b == null) {\\n    return equalityStrict(a, b)\\n  }\\n  if (a.constructor !== b.constructor) {\\n    return false\\n  }\\n  if (a === b) {\\n    return true\\n  }\\n  switch (a.constructor) {\\n    case ArrayBuffer:\\n      a = new Uint8Array(a)\\n      b = new Uint8Array(b)\\n    // eslint-disable-next-line no-fallthrough\\n    case Uint8Array: {\\n      if (a.byteLength !== b.byteLength) {\\n        return false\\n      }\\n      for (let i = 0; i < a.length; i++) {\\n        if (a[i] !== b[i]) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Set: {\\n      if (a.size !== b.size) {\\n        return false\\n      }\\n      for (const value of a) {\\n        if (!b.has(value)) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Map: {\\n      if (a.size !== b.size) {\\n        return false\\n      }\\n      for (const key of a.keys()) {\\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\\n          return false\\n        }\\n      }\\n      break\\n    }\\n    case Object:\\n      if (object.length(a) !== object.length(b)) {\\n        return false\\n      }\\n      for (const key in a) {\\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\\n          return false\\n        }\\n      }\\n      break\\n    case Array:\\n      if (a.length !== b.length) {\\n        return false\\n      }\\n      for (let i = 0; i < a.length; i++) {\\n        if (!equalityDeep(a[i], b[i])) {\\n          return false\\n        }\\n      }\\n      break\\n    default:\\n      return false\\n  }\\n  return true\\n}\\n\",\"/**\\n * Isomorphic logging module with support for colors!\\n *\\n * @module logging\\n */\\n\\nimport * as env from './environment.js'\\nimport * as symbol from './symbol.js'\\nimport * as pair from './pair.js'\\nimport * as dom from './dom.js'\\nimport * as json from './json.js'\\nimport * as map from './map.js'\\nimport * as eventloop from './eventloop.js'\\nimport * as math from './math.js'\\nimport * as time from './time.js'\\nimport * as func from './function.js'\\n\\nexport const BOLD = symbol.create()\\nexport const UNBOLD = symbol.create()\\nexport const BLUE = symbol.create()\\nexport const GREY = symbol.create()\\nexport const GREEN = symbol.create()\\nexport const RED = symbol.create()\\nexport const PURPLE = symbol.create()\\nexport const ORANGE = symbol.create()\\nexport const UNCOLOR = symbol.create()\\n\\n/**\\n * @type {Object<Symbol,pair.Pair<string,string>>}\\n */\\nconst _browserStyleMap = {\\n  [BOLD]: pair.create('font-weight', 'bold'),\\n  [UNBOLD]: pair.create('font-weight', 'normal'),\\n  [BLUE]: pair.create('color', 'blue'),\\n  [GREEN]: pair.create('color', 'green'),\\n  [GREY]: pair.create('color', 'grey'),\\n  [RED]: pair.create('color', 'red'),\\n  [PURPLE]: pair.create('color', 'purple'),\\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\\n  [UNCOLOR]: pair.create('color', 'black')\\n}\\n\\nconst _nodeStyleMap = {\\n  [BOLD]: '\\\\u001b[1m',\\n  [UNBOLD]: '\\\\u001b[2m',\\n  [BLUE]: '\\\\x1b[34m',\\n  [GREEN]: '\\\\x1b[32m',\\n  [GREY]: '\\\\u001b[37m',\\n  [RED]: '\\\\x1b[31m',\\n  [PURPLE]: '\\\\x1b[35m',\\n  [ORANGE]: '\\\\x1b[38;5;208m',\\n  [UNCOLOR]: '\\\\x1b[0m'\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<string|object|number>}\\n */\\nconst computeBrowserLoggingArgs = args => {\\n  const strBuilder = []\\n  const styles = []\\n  const currentStyle = map.create()\\n  /**\\n   * @type {Array<string|Object|number>}\\n   */\\n  let logArgs = []\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _browserStyleMap[arg]\\n    if (style !== undefined) {\\n      currentStyle.set(style.left, style.right)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        const style = dom.mapToStyleString(currentStyle)\\n        if (i > 0 || style.length > 0) {\\n          strBuilder.push('%c' + arg)\\n          styles.push(style)\\n        } else {\\n          strBuilder.push(arg)\\n        }\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n\\n  if (i > 0) {\\n    // create logArgs with what we have so far\\n    logArgs = styles\\n    logArgs.unshift(strBuilder.join(''))\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    if (!(arg instanceof Symbol)) {\\n      logArgs.push(arg)\\n    }\\n  }\\n  return logArgs\\n}\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<string|object|number>}\\n */\\nconst computeNodeLoggingArgs = args => {\\n  const strBuilder = []\\n  const logArgs = []\\n\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _nodeStyleMap[arg]\\n    if (style !== undefined) {\\n      strBuilder.push(style)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        strBuilder.push(arg)\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n  if (i > 0) {\\n    // create logArgs with what we have so far\\n    strBuilder.push('\\\\x1b[0m')\\n    logArgs.push(strBuilder.join(''))\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    /* istanbul ignore else */\\n    if (!(arg instanceof Symbol)) {\\n      logArgs.push(arg)\\n    }\\n  }\\n  return logArgs\\n}\\n\\n/* istanbul ignore next */\\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const print = (...args) => {\\n  console.log(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.print(args))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const warn = (...args) => {\\n  console.warn(...computeLoggingArgs(args))\\n  args.unshift(ORANGE)\\n  vconsoles.forEach(vc => vc.print(args))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Error} err\\n */\\nexport const printError = err => {\\n  console.error(err)\\n  vconsoles.forEach(vc => vc.printError(err))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} url image location\\n * @param {number} height height of the image in pixel\\n */\\nexport const printImg = (url, height) => {\\n  if (env.isBrowser) {\\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\\n  }\\n  vconsoles.forEach(vc => vc.printImg(url, height))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} base64\\n * @param {number} height\\n */\\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const group = (...args) => {\\n  console.group(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.group(args))\\n}\\n\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n */\\nexport const groupCollapsed = (...args) => {\\n  console.groupCollapsed(...computeLoggingArgs(args))\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\\n}\\n\\nexport const groupEnd = () => {\\n  console.groupEnd()\\n  /* istanbul ignore next */\\n  vconsoles.forEach(vc => vc.groupEnd())\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {function():Node} createNode\\n */\\nexport const printDom = createNode =>\\n  vconsoles.forEach(vc => vc.printDom(createNode()))\\n\\n/* istanbul ignore next */\\n/**\\n * @param {HTMLCanvasElement} canvas\\n * @param {number} height\\n */\\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\\n\\nexport const vconsoles = new Set()\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Array<string|Symbol|Object|number>} args\\n * @return {Array<Element>}\\n */\\nconst _computeLineSpans = args => {\\n  const spans = []\\n  const currentStyle = new Map()\\n  // try with formatting until we find something unsupported\\n  let i = 0\\n  for (; i < args.length; i++) {\\n    const arg = args[i]\\n    // @ts-ignore\\n    const style = _browserStyleMap[arg]\\n    if (style !== undefined) {\\n      currentStyle.set(style.left, style.right)\\n    } else {\\n      if (arg.constructor === String || arg.constructor === Number) {\\n        // @ts-ignore\\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\\n        if (span.innerHTML === '') {\\n          span.innerHTML = '&nbsp;'\\n        }\\n        spans.push(span)\\n      } else {\\n        break\\n      }\\n    }\\n  }\\n  // append the rest\\n  for (; i < args.length; i++) {\\n    let content = args[i]\\n    if (!(content instanceof Symbol)) {\\n      if (content.constructor !== String && content.constructor !== Number) {\\n        content = ' ' + json.stringify(content) + ' '\\n      }\\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\\n    }\\n  }\\n  return spans\\n}\\n\\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\\n\\n/* istanbul ignore next */\\nexport class VConsole {\\n  /**\\n   * @param {Element} dom\\n   */\\n  constructor (dom) {\\n    this.dom = dom\\n    /**\\n     * @type {Element}\\n     */\\n    this.ccontainer = this.dom\\n    this.depth = 0\\n    vconsoles.add(this)\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   * @param {boolean} collapsed\\n   */\\n  group (args, collapsed = false) {\\n    eventloop.enqueue(() => {\\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\\n      const nextLine = dom.element('div', [], [content, nextContainer])\\n      dom.append(this.ccontainer, [nextLine])\\n      this.ccontainer = nextContainer\\n      this.depth++\\n      // when header is clicked, collapse/uncollapse container\\n      dom.addEventListener(content, 'click', event => {\\n        nextContainer.toggleAttribute('hidden')\\n        triangleDown.toggleAttribute('hidden')\\n        triangleRight.toggleAttribute('hidden')\\n      })\\n    })\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   */\\n  groupCollapsed (args) {\\n    this.group(args, true)\\n  }\\n\\n  groupEnd () {\\n    eventloop.enqueue(() => {\\n      if (this.depth > 0) {\\n        this.depth--\\n        // @ts-ignore\\n        this.ccontainer = this.ccontainer.parentElement.parentElement\\n      }\\n    })\\n  }\\n\\n  /**\\n   * @param {Array<string|Symbol|Object|number>} args\\n   */\\n  print (args) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\\n    })\\n  }\\n\\n  /**\\n   * @param {Error} err\\n   */\\n  printError (err) {\\n    this.print([RED, BOLD, err.toString()])\\n  }\\n\\n  /**\\n   * @param {string} url\\n   * @param {number} height\\n   */\\n  printImg (url, height) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\\n    })\\n  }\\n\\n  /**\\n   * @param {Node} node\\n   */\\n  printDom (node) {\\n    eventloop.enqueue(() => {\\n      dom.append(this.ccontainer, [node])\\n    })\\n  }\\n\\n  destroy () {\\n    eventloop.enqueue(() => {\\n      vconsoles.delete(this)\\n    })\\n  }\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Element} dom\\n */\\nexport const createVConsole = dom => new VConsole(dom)\\n\\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\\nlet nextColor = 0\\nlet lastLoggingTime = time.getUnixTime()\\n\\n/**\\n * @param {string} moduleName\\n * @return {function(...any):void}\\n */\\nexport const createModuleLogger = moduleName => {\\n  const color = loggingColors[nextColor]\\n  const debugRegexVar = env.getVariable('log')\\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\\n  nextColor = (nextColor + 1) % loggingColors.length\\n  moduleName += ': '\\n\\n  return !doLogging ? func.nop : (...args) => {\\n    const timeNow = time.getUnixTime()\\n    const timeDiff = timeNow - lastLoggingTime\\n    lastLoggingTime = timeNow\\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\\n  }\\n}\\n\",\"/**\\n * Efficient diffs.\\n *\\n * @module diff\\n */\\n\\nimport { equalityStrict } from './function.js'\\n\\n/**\\n * A SimpleDiff describes a change on a String.\\n *\\n * ```js\\n * console.log(a) // the old value\\n * console.log(b) // the updated value\\n * // Apply changes of diff (pseudocode)\\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\\n * a === b // values match\\n * ```\\n *\\n * @typedef {Object} SimpleDiff\\n * @property {Number} index The index where changes were applied\\n * @property {Number} remove The number of characters to delete starting\\n *                                  at `index`.\\n * @property {T} insert The new text to insert at `index` after applying\\n *                           `delete`\\n *\\n * @template T\\n */\\n\\n/**\\n * Create a diff between two strings. This diff implementation is highly\\n * efficient, but not very sophisticated.\\n *\\n * @function\\n *\\n * @param {string} a The old version of the string\\n * @param {string} b The updated version of the string\\n * @return {SimpleDiff<string>} The diff description.\\n */\\nexport const simpleDiffString = (a, b) => {\\n  let left = 0 // number of same characters counting from left\\n  let right = 0 // number of same characters counting from right\\n  while (left < a.length && left < b.length && a[left] === b[left]) {\\n    left++\\n  }\\n  if (left !== a.length || left !== b.length) {\\n    // Only check right if a !== b\\n    while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\\n      right++\\n    }\\n  }\\n  return {\\n    index: left,\\n    remove: a.length - left - right,\\n    insert: b.slice(left, b.length - right)\\n  }\\n}\\n\\n/**\\n * @todo Remove in favor of simpleDiffString\\n * @deprecated\\n */\\nexport const simpleDiff = simpleDiffString\\n\\n/**\\n * Create a diff between two arrays. This diff implementation is highly\\n * efficient, but not very sophisticated.\\n *\\n * Note: This is basically the same function as above. Another function was created so that the runtime\\n * can better optimize these function calls.\\n *\\n * @function\\n * @template T\\n *\\n * @param {Array<T>} a The old version of the array\\n * @param {Array<T>} b The updated version of the array\\n * @param {function(T, T):boolean} [compare]\\n * @return {SimpleDiff<Array<T>>} The diff description.\\n */\\nexport const simpleDiffArray = (a, b, compare = equalityStrict) => {\\n  let left = 0 // number of same characters counting from left\\n  let right = 0 // number of same characters counting from right\\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\\n    left++\\n  }\\n  if (left !== a.length || left !== b.length) {\\n    // Only check right if a !== b\\n    while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\\n      right++\\n    }\\n  }\\n  return {\\n    index: left,\\n    remove: a.length - left - right,\\n    insert: b.slice(left, b.length - right)\\n  }\\n}\\n\",\"/* eslint-env browser */\\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\\n\\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\\n\\n/**\\n * @type {function(number):ArrayBuffer}\\n */\\nexport const cryptoRandomBuffer = isoCrypto !== null\\n  ? len => {\\n    // browser\\n    const buf = new ArrayBuffer(len)\\n    const arr = new Uint8Array(buf)\\n    isoCrypto.getRandomValues(arr)\\n    return buf\\n  }\\n  : len => {\\n    // polyfill\\n    const buf = new ArrayBuffer(len)\\n    const arr = new Uint8Array(buf)\\n    for (let i = 0; i < len; i++) {\\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\\n    }\\n    return buf\\n  }\\n\",\"\\n/**\\n * Isomorphic module for true random numbers / buffers / uuids.\\n *\\n * Attention: falls back to Math.random if the browser does not support crypto.\\n *\\n * @module random\\n */\\n\\nimport * as math from './math.js'\\nimport { cryptoRandomBuffer } from './isomorphic.js'\\n\\nexport const rand = Math.random\\n\\n/* istanbul ignore next */\\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @return {T}\\n */\\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\\n\\n// @ts-ignore\\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\\n  (c ^ uint32() & 15 >> c / 4).toString(16)\\n)\\n\",\"/* eslint-env browser */\\n\\n/**\\n * Binary data constants.\\n *\\n * @module binary\\n */\\n\\n/**\\n * n-th bit activated.\\n *\\n * @type {number}\\n */\\nexport const BIT1 = 1\\nexport const BIT2 = 2\\nexport const BIT3 = 4\\nexport const BIT4 = 8\\nexport const BIT5 = 16\\nexport const BIT6 = 32\\nexport const BIT7 = 64\\nexport const BIT8 = 128\\nexport const BIT9 = 256\\nexport const BIT10 = 512\\nexport const BIT11 = 1024\\nexport const BIT12 = 2048\\nexport const BIT13 = 4096\\nexport const BIT14 = 8192\\nexport const BIT15 = 16384\\nexport const BIT16 = 32768\\nexport const BIT17 = 65536\\nexport const BIT18 = 1 << 17\\nexport const BIT19 = 1 << 18\\nexport const BIT20 = 1 << 19\\nexport const BIT21 = 1 << 20\\nexport const BIT22 = 1 << 21\\nexport const BIT23 = 1 << 22\\nexport const BIT24 = 1 << 23\\nexport const BIT25 = 1 << 24\\nexport const BIT26 = 1 << 25\\nexport const BIT27 = 1 << 26\\nexport const BIT28 = 1 << 27\\nexport const BIT29 = 1 << 28\\nexport const BIT30 = 1 << 29\\nexport const BIT31 = 1 << 30\\nexport const BIT32 = 1 << 31\\n\\n/**\\n * First n bits activated.\\n *\\n * @type {number}\\n */\\nexport const BITS0 = 0\\nexport const BITS1 = 1\\nexport const BITS2 = 3\\nexport const BITS3 = 7\\nexport const BITS4 = 15\\nexport const BITS5 = 31\\nexport const BITS6 = 63\\nexport const BITS7 = 127\\nexport const BITS8 = 255\\nexport const BITS9 = 511\\nexport const BITS10 = 1023\\nexport const BITS11 = 2047\\nexport const BITS12 = 4095\\nexport const BITS13 = 8191\\nexport const BITS14 = 16383\\nexport const BITS15 = 32767\\nexport const BITS16 = 65535\\nexport const BITS17 = BIT18 - 1\\nexport const BITS18 = BIT19 - 1\\nexport const BITS19 = BIT20 - 1\\nexport const BITS20 = BIT21 - 1\\nexport const BITS21 = BIT22 - 1\\nexport const BITS22 = BIT23 - 1\\nexport const BITS23 = BIT24 - 1\\nexport const BITS24 = BIT25 - 1\\nexport const BITS25 = BIT26 - 1\\nexport const BITS26 = BIT27 - 1\\nexport const BITS27 = BIT28 - 1\\nexport const BITS28 = BIT29 - 1\\nexport const BITS29 = BIT30 - 1\\nexport const BITS30 = BIT31 - 1\\n/**\\n * @type {number}\\n */\\nexport const BITS31 = 0x7FFFFFFF\\n/**\\n * @type {number}\\n */\\nexport const BITS32 = 0xFFFFFFFF\\n\",\"/**\\n * @module prng\\n */\\n\\nimport * as binary from '../binary.js'\\n\\n/**\\n * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\\n */\\nexport class Xorshift32 {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    /**\\n     * @type {number}\\n     */\\n    this._state = seed\\n  }\\n\\n  /**\\n   * Generate a random signed integer.\\n   *\\n   * @return {Number} A 32 bit signed integer.\\n   */\\n  next () {\\n    let x = this._state\\n    x ^= x << 13\\n    x ^= x >> 17\\n    x ^= x << 5\\n    this._state = x\\n    return (x >>> 0) / (binary.BITS32 + 1)\\n  }\\n}\\n\",\"/**\\n * @module prng\\n */\\n\\nimport { Xorshift32 } from './Xorshift32.js'\\nimport * as binary from '../binary.js'\\n\\n/**\\n * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\\n *\\n * This implementation follows the idea of the original xoroshiro128plus implementation,\\n * but is optimized for the JavaScript runtime. I.e.\\n * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\\n * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\\n * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\\n *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\\n *   first 32bit addition is not carried over to the last 32bit.\\n *\\n * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\\n */\\nexport class Xoroshiro128plus {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    // This is a variant of Xoroshiro128plus to fill the initial state\\n    const xorshift32 = new Xorshift32(seed)\\n    this.state = new Uint32Array(4)\\n    for (let i = 0; i < 4; i++) {\\n      this.state[i] = xorshift32.next() * binary.BITS32\\n    }\\n    this._fresh = true\\n  }\\n\\n  /**\\n   * @return {number} Float/Double in [0,1)\\n   */\\n  next () {\\n    const state = this.state\\n    if (this._fresh) {\\n      this._fresh = false\\n      return ((state[0] + state[2]) >>> 0) / (binary.BITS32 + 1)\\n    } else {\\n      this._fresh = true\\n      const s0 = state[0]\\n      const s1 = state[1]\\n      const s2 = state[2] ^ s0\\n      const s3 = state[3] ^ s1\\n      // function js_rotl (x, k) {\\n      //   k = k - 32\\n      //   const x1 = x[0]\\n      //   const x2 = x[1]\\n      //   x[0] = x2 << k | x1 >>> (32 - k)\\n      //   x[1] = x1 << k | x2 >>> (32 - k)\\n      // }\\n      // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\\n      state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18)\\n      state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14)\\n      // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\\n      state[2] = s3 << 4 | s2 >>> 28\\n      state[3] = s2 << 4 | s3 >>> 28\\n      return (((state[1] + state[3]) >>> 0) / (binary.BITS32 + 1))\\n    }\\n  }\\n}\\n\\n/*\\n// Reference implementation\\n// Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\\n// By David Blackman and Sebastiano Vigna\\n// Who published the reference implementation under Public Domain (CC0)\\n\\n#include <stdint.h>\\n#include <stdio.h>\\n\\nuint64_t s[2];\\n\\nstatic inline uint64_t rotl(const uint64_t x, int k) {\\n    return (x << k) | (x >> (64 - k));\\n}\\n\\nuint64_t next(void) {\\n    const uint64_t s0 = s[0];\\n    uint64_t s1 = s[1];\\n    s1 ^= s0;\\n    s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\\n    s[1] = rotl(s1, 36); // c\\n    return (s[0] + s[1]) & 0xFFFFFFFF;\\n}\\n\\nint main(void)\\n{\\n    int i;\\n    s[0] = 1111 | (1337ul << 32);\\n    s[1] = 1234 | (9999ul << 32);\\n\\n    printf(\\\"1000 outputs of genrand_int31()\\\\n\\\");\\n    for (i=0; i<100; i++) {\\n        printf(\\\"%10lu \\\", i);\\n        printf(\\\"%10lu \\\", next());\\n        printf(\\\"- %10lu \\\", s[0] >> 32);\\n        printf(\\\"%10lu \\\", (s[0] << 32) >> 32);\\n        printf(\\\"%10lu \\\", s[1] >> 32);\\n        printf(\\\"%10lu \\\", (s[1] << 32) >> 32);\\n        printf(\\\"\\\\n\\\");\\n        // if (i%5==4) printf(\\\"\\\\n\\\");\\n    }\\n    return 0;\\n}\\n*/\\n\",\"/**\\n * Utility helpers for working with numbers.\\n *\\n * @module number\\n */\\n\\nimport * as math from './math.js'\\nimport * as binary from './binary.js'\\n\\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\\n\\nexport const LOWEST_INT32 = 1 << 31\\n/**\\n * @type {number}\\n */\\nexport const HIGHEST_INT32 = binary.BITS31\\n\\n/**\\n * @module number\\n */\\n\\n/* istanbul ignore next */\\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\\nexport const isNaN = Number.isNaN\\n\",\"/**\\n * Efficient schema-less binary encoding with support for variable length encoding.\\n *\\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\\n *\\n * Encodes numbers in little-endian order (least to most significant byte order)\\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\\n * which is also used in Protocol Buffers.\\n *\\n * ```js\\n * // encoding step\\n * const encoder = new encoding.createEncoder()\\n * encoding.writeVarUint(encoder, 256)\\n * encoding.writeVarString(encoder, 'Hello world!')\\n * const buf = encoding.toUint8Array(encoder)\\n * ```\\n *\\n * ```js\\n * // decoding step\\n * const decoder = new decoding.createDecoder(buf)\\n * decoding.readVarUint(decoder) // => 256\\n * decoding.readVarString(decoder) // => 'Hello world!'\\n * decoding.hasContent(decoder) // => false - all data is read\\n * ```\\n *\\n * @module encoding\\n */\\n\\nimport * as buffer from './buffer.js'\\nimport * as math from './math.js'\\nimport * as number from './number.js'\\nimport * as binary from './binary.js'\\n\\n/**\\n * A BinaryEncoder handles the encoding to an Uint8Array.\\n */\\nexport class Encoder {\\n  constructor () {\\n    this.cpos = 0\\n    this.cbuf = new Uint8Array(100)\\n    /**\\n     * @type {Array<Uint8Array>}\\n     */\\n    this.bufs = []\\n  }\\n}\\n\\n/**\\n * @function\\n * @return {Encoder}\\n */\\nexport const createEncoder = () => new Encoder()\\n\\n/**\\n * The current length of the encoded data.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @return {number}\\n */\\nexport const length = encoder => {\\n  let len = encoder.cpos\\n  for (let i = 0; i < encoder.bufs.length; i++) {\\n    len += encoder.bufs[i].length\\n  }\\n  return len\\n}\\n\\n/**\\n * Transform to Uint8Array.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @return {Uint8Array} The created ArrayBuffer.\\n */\\nexport const toUint8Array = encoder => {\\n  const uint8arr = new Uint8Array(length(encoder))\\n  let curPos = 0\\n  for (let i = 0; i < encoder.bufs.length; i++) {\\n    const d = encoder.bufs[i]\\n    uint8arr.set(d, curPos)\\n    curPos += d.length\\n  }\\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\\n  return uint8arr\\n}\\n\\n/**\\n * Verify that it is possible to write `len` bytes wtihout checking. If\\n * necessary, a new Buffer with the required length is attached.\\n *\\n * @param {Encoder} encoder\\n * @param {number} len\\n */\\nconst verifyLen = (encoder, len) => {\\n  const bufferLen = encoder.cbuf.length\\n  if (bufferLen - encoder.cpos < len) {\\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\\n    encoder.cpos = 0\\n  }\\n}\\n\\n/**\\n * Write one byte to the encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The byte that is to be encoded.\\n */\\nexport const write = (encoder, num) => {\\n  const bufferLen = encoder.cbuf.length\\n  if (encoder.cpos === bufferLen) {\\n    encoder.bufs.push(encoder.cbuf)\\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\\n    encoder.cpos = 0\\n  }\\n  encoder.cbuf[encoder.cpos++] = num\\n}\\n\\n/**\\n * Write one byte at a specific position.\\n * Position must already be written (i.e. encoder.length > pos)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos Position to which to write data\\n * @param {number} num Unsigned 8-bit integer\\n */\\nexport const set = (encoder, pos, num) => {\\n  let buffer = null\\n  // iterate all buffers and adjust position\\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\\n    const b = encoder.bufs[i]\\n    if (pos < b.length) {\\n      buffer = b // found buffer\\n    } else {\\n      pos -= b.length\\n    }\\n  }\\n  if (buffer === null) {\\n    // use current buffer\\n    buffer = encoder.cbuf\\n  }\\n  buffer[pos] = num\\n}\\n\\n/**\\n * Write one byte as an unsigned integer.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint8 = write\\n\\n/**\\n * Write one byte as an unsigned Integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint8 = set\\n\\n/**\\n * Write two bytes as an unsigned integer.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint16 = (encoder, num) => {\\n  write(encoder, num & binary.BITS8)\\n  write(encoder, (num >>> 8) & binary.BITS8)\\n}\\n/**\\n * Write two bytes as an unsigned integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint16 = (encoder, pos, num) => {\\n  set(encoder, pos, num & binary.BITS8)\\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint32 = (encoder, num) => {\\n  for (let i = 0; i < 4; i++) {\\n    write(encoder, num & binary.BITS8)\\n    num >>>= 8\\n  }\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeUint32BigEndian = (encoder, num) => {\\n  for (let i = 3; i >= 0; i--) {\\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\\n  }\\n}\\n\\n/**\\n * Write two bytes as an unsigned integer at a specific location.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} pos The location where the data will be written.\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const setUint32 = (encoder, pos, num) => {\\n  for (let i = 0; i < 4; i++) {\\n    set(encoder, pos + i, num & binary.BITS8)\\n    num >>>= 8\\n  }\\n}\\n\\n/**\\n * Write a variable length unsigned integer.\\n *\\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeVarUint = (encoder, num) => {\\n  while (num > binary.BITS7) {\\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\\n    num >>>= 7\\n  }\\n  write(encoder, binary.BITS7 & num)\\n}\\n\\n/**\\n * Write a variable length integer.\\n *\\n * Encodes integers in the range from [-2147483648, -2147483647].\\n *\\n * We don't use zig-zag encoding because we want to keep the option open\\n * to use the same function for BigInt and 53bit integers (doubles).\\n *\\n * We use the 7th bit instead for signaling that this is a negative number.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {number} num The number that is to be encoded.\\n */\\nexport const writeVarInt = (encoder, num) => {\\n  const isNegative = math.isNegativeZero(num)\\n  if (isNegative) {\\n    num = -num\\n  }\\n  //             |- whether to continue reading         |- whether is negative     |- number\\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\\n  num >>>= 6\\n  // We don't need to consider the case of num === 0 so we can use a different\\n  // pattern here than above.\\n  while (num > 0) {\\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\\n    num >>>= 7\\n  }\\n}\\n\\n/**\\n * Write a variable length string.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {String} str The string that is to be encoded.\\n */\\nexport const writeVarString = (encoder, str) => {\\n  const encodedString = unescape(encodeURIComponent(str))\\n  const len = encodedString.length\\n  writeVarUint(encoder, len)\\n  for (let i = 0; i < len; i++) {\\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\\n  }\\n}\\n\\n/**\\n * Write the content of another Encoder.\\n *\\n * @TODO: can be improved!\\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\\n *                Encoders start with a rather big initial buffer.\\n *\\n * @function\\n * @param {Encoder} encoder The enUint8Arr\\n * @param {Encoder} append The BinaryEncoder to be written.\\n */\\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\\n\\n/**\\n * Append fixed-length Uint8Array to the encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {Uint8Array} uint8Array\\n */\\nexport const writeUint8Array = (encoder, uint8Array) => {\\n  const bufferLen = encoder.cbuf.length\\n  const cpos = encoder.cpos\\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\\n  const rightCopyLen = uint8Array.length - leftCopyLen\\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\\n  encoder.cpos += leftCopyLen\\n  if (rightCopyLen > 0) {\\n    // Still something to write, write right half..\\n    // Append new buffer\\n    encoder.bufs.push(encoder.cbuf)\\n    // must have at least size of remaining buffer\\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\\n    // copy array\\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\\n    encoder.cpos = rightCopyLen\\n  }\\n}\\n\\n/**\\n * Append an Uint8Array to Encoder.\\n *\\n * @function\\n * @param {Encoder} encoder\\n * @param {Uint8Array} uint8Array\\n */\\nexport const writeVarUint8Array = (encoder, uint8Array) => {\\n  writeVarUint(encoder, uint8Array.byteLength)\\n  writeUint8Array(encoder, uint8Array)\\n}\\n\\n/**\\n * Create an DataView of the next `len` bytes. Use it to write data after\\n * calling this function.\\n *\\n * ```js\\n * // write float32 using DataView\\n * const dv = writeOnDataView(encoder, 4)\\n * dv.setFloat32(0, 1.1)\\n * // read float32 using DataView\\n * const dv = readFromDataView(encoder, 4)\\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\\n * ```\\n *\\n * @param {Encoder} encoder\\n * @param {number} len\\n * @return {DataView}\\n */\\nexport const writeOnDataView = (encoder, len) => {\\n  verifyLen(encoder, len)\\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\\n  encoder.cpos += len\\n  return dview\\n}\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {number} num\\n */\\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {number} num\\n */\\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {bigint} num\\n */\\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\\n\\n/**\\n * @param {Encoder} encoder\\n * @param {bigint} num\\n */\\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\\n\\nconst floatTestBed = new DataView(new ArrayBuffer(4))\\n/**\\n * Check if a number can be encoded as a 32 bit float.\\n *\\n * @param {number} num\\n * @return {boolean}\\n */\\nconst isFloat32 = num => {\\n  floatTestBed.setFloat32(0, num)\\n  return floatTestBed.getFloat32(0) === num\\n}\\n\\n/**\\n * Encode data with efficient binary format.\\n *\\n * Differences to JSON:\\n * • Transforms data to a binary format (not to a string)\\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\\n * • Numbers are efficiently encoded either as a variable length integer, as a\\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\\n *\\n * Encoding table:\\n *\\n * | Data Type           | Prefix   | Encoding Method    | Comment |\\n * | ------------------- | -------- | ------------------ | ------- |\\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\\n * | null                | 126      |                    | |\\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\\n * | float32             | 124      | writeFloat32       | |\\n * | float64             | 123      | writeFloat64       | |\\n * | bigint              | 122      | writeBigInt64      | |\\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\\n * | string              | 119      | writeVarString     | |\\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\\n *\\n * Reasons for the decreasing prefix:\\n * We need the first bit for extendability (later we may want to encode the\\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\\n * [0-30]   the beginning of the data range is used for custom purposes\\n *          (defined by the function that uses this library)\\n * [31-127] the end of the data range is used for data encoding by\\n *          lib0/encoding.js\\n *\\n * @param {Encoder} encoder\\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\\n */\\nexport const writeAny = (encoder, data) => {\\n  switch (typeof data) {\\n    case 'string':\\n      // TYPE 119: STRING\\n      write(encoder, 119)\\n      writeVarString(encoder, data)\\n      break\\n    case 'number':\\n      if (number.isInteger(data) && data <= binary.BITS31) {\\n        // TYPE 125: INTEGER\\n        write(encoder, 125)\\n        writeVarInt(encoder, data)\\n      } else if (isFloat32(data)) {\\n        // TYPE 124: FLOAT32\\n        write(encoder, 124)\\n        writeFloat32(encoder, data)\\n      } else {\\n        // TYPE 123: FLOAT64\\n        write(encoder, 123)\\n        writeFloat64(encoder, data)\\n      }\\n      break\\n    case 'bigint':\\n      // TYPE 122: BigInt\\n      write(encoder, 122)\\n      writeBigInt64(encoder, data)\\n      break\\n    case 'object':\\n      if (data === null) {\\n        // TYPE 126: null\\n        write(encoder, 126)\\n      } else if (data instanceof Array) {\\n        // TYPE 117: Array\\n        write(encoder, 117)\\n        writeVarUint(encoder, data.length)\\n        for (let i = 0; i < data.length; i++) {\\n          writeAny(encoder, data[i])\\n        }\\n      } else if (data instanceof Uint8Array) {\\n        // TYPE 116: ArrayBuffer\\n        write(encoder, 116)\\n        writeVarUint8Array(encoder, data)\\n      } else {\\n        // TYPE 118: Object\\n        write(encoder, 118)\\n        const keys = Object.keys(data)\\n        writeVarUint(encoder, keys.length)\\n        for (let i = 0; i < keys.length; i++) {\\n          const key = keys[i]\\n          writeVarString(encoder, key)\\n          writeAny(encoder, data[key])\\n        }\\n      }\\n      break\\n    case 'boolean':\\n      // TYPE 120/121: boolean (true/false)\\n      write(encoder, data ? 120 : 121)\\n      break\\n    default:\\n      // TYPE 127: undefined\\n      write(encoder, 127)\\n  }\\n}\\n\\n/**\\n * Now come a few stateful encoder that have their own classes.\\n */\\n\\n/**\\n * Basic Run Length Encoder - a basic compression implementation.\\n *\\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\\n *\\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\\n *\\n * @note T must not be null!\\n *\\n * @template T\\n */\\nexport class RleEncoder extends Encoder {\\n  /**\\n   * @param {function(Encoder, T):void} writer\\n   */\\n  constructor (writer) {\\n    super()\\n    /**\\n     * The writer\\n     */\\n    this.w = writer\\n    /**\\n     * Current state\\n     * @type {T|null}\\n     */\\n    this.s = null\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {T} v\\n   */\\n  write (v) {\\n    if (this.s === v) {\\n      this.count++\\n    } else {\\n      if (this.count > 0) {\\n        // flush counter, unless this is the first value (count = 0)\\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\\n      }\\n      this.count = 1\\n      // write first value\\n      this.w(this, v)\\n      this.s = v\\n    }\\n  }\\n}\\n\\n/**\\n * Basic diff decoder using variable length encoding.\\n *\\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\\n */\\nexport class IntDiffEncoder extends Encoder {\\n  /**\\n   * @param {number} start\\n   */\\n  constructor (start) {\\n    super()\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    writeVarInt(this, v - this.s)\\n    this.s = v\\n  }\\n}\\n\\n/**\\n * A combination of IntDiffEncoder and RleEncoder.\\n *\\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\\n *\\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\\n */\\nexport class RleIntDiffEncoder extends Encoder {\\n  /**\\n   * @param {number} start\\n   */\\n  constructor (start) {\\n    super()\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s === v && this.count > 0) {\\n      this.count++\\n    } else {\\n      if (this.count > 0) {\\n        // flush counter, unless this is the first value (count = 0)\\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\\n      }\\n      this.count = 1\\n      // write first value\\n      writeVarInt(this, v - this.s)\\n      this.s = v\\n    }\\n  }\\n}\\n\\n/**\\n * @param {UintOptRleEncoder} encoder\\n */\\nconst flushUintOptRleEncoder = encoder => {\\n  /* istanbul ignore else */\\n  if (encoder.count > 0) {\\n    // flush counter, unless this is the first value (count = 0)\\n    // case 1: just a single value. set sign to positive\\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\\n    if (encoder.count > 1) {\\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\\n    }\\n  }\\n}\\n\\n/**\\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\\n *\\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\\n *\\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\\n */\\nexport class UintOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s === v) {\\n      this.count++\\n    } else {\\n      flushUintOptRleEncoder(this)\\n      this.count = 1\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushUintOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * Increasing Uint Optimized RLE Encoder\\n *\\n * The RLE encoder counts the number of same occurences of the same value.\\n * The IncUintOptRle encoder counts if the value increases.\\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\\n * as [1, 3, 5].\\n */\\nexport class IncUintOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.s + this.count === v) {\\n      this.count++\\n    } else {\\n      flushUintOptRleEncoder(this)\\n      this.count = 1\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushUintOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * @param {IntDiffOptRleEncoder} encoder\\n */\\nconst flushIntDiffOptRleEncoder = encoder => {\\n  if (encoder.count > 0) {\\n    //          31 bit making up the diff | wether to write the counter\\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\\n    // flush counter, unless this is the first value (count = 0)\\n    // case 1: just a single value. set first bit to positive\\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\\n    writeVarInt(encoder.encoder, encodedDiff)\\n    if (encoder.count > 1) {\\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\\n    }\\n  }\\n}\\n\\n/**\\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\\n *\\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\\n *\\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\\n *\\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\\n * * 1 bit that denotes whether the next value is a count (LSB)\\n * * 1 bit that denotes whether this value is negative (MSB - 1)\\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\\n *\\n * Therefore, only five bits remain to encode diff ranges.\\n *\\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\\n */\\nexport class IntDiffOptRleEncoder {\\n  constructor () {\\n    this.encoder = new Encoder()\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n    this.diff = 0\\n  }\\n\\n  /**\\n   * @param {number} v\\n   */\\n  write (v) {\\n    if (this.diff === v - this.s) {\\n      this.s = v\\n      this.count++\\n    } else {\\n      flushIntDiffOptRleEncoder(this)\\n      this.count = 1\\n      this.diff = v - this.s\\n      this.s = v\\n    }\\n  }\\n\\n  toUint8Array () {\\n    flushIntDiffOptRleEncoder(this)\\n    return toUint8Array(this.encoder)\\n  }\\n}\\n\\n/**\\n * Optimized String Encoder.\\n *\\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\\n *\\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\\n *\\n * The lengths are encoded using a UintOptRleEncoder.\\n */\\nexport class StringEncoder {\\n  constructor () {\\n    /**\\n     * @type {Array<string>}\\n     */\\n    this.sarr = []\\n    this.s = ''\\n    this.lensE = new UintOptRleEncoder()\\n  }\\n\\n  /**\\n   * @param {string} string\\n   */\\n  write (string) {\\n    this.s += string\\n    if (this.s.length > 19) {\\n      this.sarr.push(this.s)\\n      this.s = ''\\n    }\\n    this.lensE.write(string.length)\\n  }\\n\\n  toUint8Array () {\\n    const encoder = new Encoder()\\n    this.sarr.push(this.s)\\n    this.s = ''\\n    writeVarString(encoder, this.sarr.join(''))\\n    writeUint8Array(encoder, this.lensE.toUint8Array())\\n    return toUint8Array(encoder)\\n  }\\n}\\n\",\"/**\\n * Efficient schema-less binary decoding with support for variable length encoding.\\n *\\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\\n *\\n * Encodes numbers in little-endian order (least to most significant byte order)\\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\\n * which is also used in Protocol Buffers.\\n *\\n * ```js\\n * // encoding step\\n * const encoder = new encoding.createEncoder()\\n * encoding.writeVarUint(encoder, 256)\\n * encoding.writeVarString(encoder, 'Hello world!')\\n * const buf = encoding.toUint8Array(encoder)\\n * ```\\n *\\n * ```js\\n * // decoding step\\n * const decoder = new decoding.createDecoder(buf)\\n * decoding.readVarUint(decoder) // => 256\\n * decoding.readVarString(decoder) // => 'Hello world!'\\n * decoding.hasContent(decoder) // => false - all data is read\\n * ```\\n *\\n * @module decoding\\n */\\n\\nimport * as buffer from './buffer.js'\\nimport * as binary from './binary.js'\\nimport * as math from './math.js'\\n\\n/**\\n * A Decoder handles the decoding of an Uint8Array.\\n */\\nexport class Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array Binary data to decode\\n   */\\n  constructor (uint8Array) {\\n    /**\\n     * Decoding target.\\n     *\\n     * @type {Uint8Array}\\n     */\\n    this.arr = uint8Array\\n    /**\\n     * Current decoding position.\\n     *\\n     * @type {number}\\n     */\\n    this.pos = 0\\n  }\\n}\\n\\n/**\\n * @function\\n * @param {Uint8Array} uint8Array\\n * @return {Decoder}\\n */\\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\\n\\n/**\\n * @function\\n * @param {Decoder} decoder\\n * @return {boolean}\\n */\\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\\n\\n/**\\n * Clone a decoder instance.\\n * Optionally set a new position parameter.\\n *\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @param {number} [newPos] Defaults to current position\\n * @return {Decoder} A clone of `decoder`\\n */\\nexport const clone = (decoder, newPos = decoder.pos) => {\\n  const _decoder = createDecoder(decoder.arr)\\n  _decoder.pos = newPos\\n  return _decoder\\n}\\n\\n/**\\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\\n *\\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\\n *\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @param {number} len The length of bytes to read\\n * @return {Uint8Array}\\n */\\nexport const readUint8Array = (decoder, len) => {\\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\\n  decoder.pos += len\\n  return view\\n}\\n\\n/**\\n * Read variable length Uint8Array.\\n *\\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {Uint8Array}\\n */\\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\\n\\n/**\\n * Read the rest of the content as an ArrayBuffer\\n * @function\\n * @param {Decoder} decoder\\n * @return {Uint8Array}\\n */\\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\\n\\n/**\\n * Skip one byte, jump to the next position.\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @return {number} The next position\\n */\\nexport const skip8 = decoder => decoder.pos++\\n\\n/**\\n * Read one byte as unsigned integer.\\n * @function\\n * @param {Decoder} decoder The decoder instance\\n * @return {number} Unsigned 8-bit integer\\n */\\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\\n\\n/**\\n * Read 2 bytes as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint16 = decoder => {\\n  const uint =\\n    decoder.arr[decoder.pos] +\\n    (decoder.arr[decoder.pos + 1] << 8)\\n  decoder.pos += 2\\n  return uint\\n}\\n\\n/**\\n * Read 4 bytes as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint32 = decoder => {\\n  const uint =\\n    (decoder.arr[decoder.pos] +\\n    (decoder.arr[decoder.pos + 1] << 8) +\\n    (decoder.arr[decoder.pos + 2] << 16) +\\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\\n  decoder.pos += 4\\n  return uint\\n}\\n\\n/**\\n * Read 4 bytes as unsigned integer in big endian order.\\n * (most significant byte first)\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const readUint32BigEndian = decoder => {\\n  const uint =\\n    (decoder.arr[decoder.pos + 3] +\\n    (decoder.arr[decoder.pos + 2] << 8) +\\n    (decoder.arr[decoder.pos + 1] << 16) +\\n    (decoder.arr[decoder.pos] << 24)) >>> 0\\n  decoder.pos += 4\\n  return uint\\n}\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint16 = decoder =>\\n  decoder.arr[decoder.pos] +\\n  (decoder.arr[decoder.pos + 1] << 8)\\n\\n/**\\n * Look ahead without incrementing the position\\n * to the next byte and read it as unsigned integer.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.\\n */\\nexport const peekUint32 = decoder => (\\n  decoder.arr[decoder.pos] +\\n  (decoder.arr[decoder.pos + 1] << 8) +\\n  (decoder.arr[decoder.pos + 2] << 16) +\\n  (decoder.arr[decoder.pos + 3] << 24)\\n) >>> 0\\n\\n/**\\n * Read unsigned integer (32bit) with variable length.\\n * 1/8th of the storage is used as encoding overhead.\\n *  * numbers < 2^7 is stored in one bytlength\\n *  * numbers < 2^14 is stored in two bylength\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.length\\n */\\nexport const readVarUint = decoder => {\\n  let num = 0\\n  let len = 0\\n  while (true) {\\n    const r = decoder.arr[decoder.pos++]\\n    num = num | ((r & binary.BITS7) << len)\\n    len += 7\\n    if (r < binary.BIT8) {\\n      return num >>> 0 // return unsigned number!\\n    }\\n    /* istanbul ignore if */\\n    if (len > 35) {\\n      throw new Error('Integer out of range!')\\n    }\\n  }\\n}\\n\\n/**\\n * Read signed integer (32bit) with variable length.\\n * 1/8th of the storage is used as encoding overhead.\\n *  * numbers < 2^7 is stored in one bytlength\\n *  * numbers < 2^14 is stored in two bylength\\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number} An unsigned integer.length\\n */\\nexport const readVarInt = decoder => {\\n  let r = decoder.arr[decoder.pos++]\\n  let num = r & binary.BITS6\\n  let len = 6\\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\\n  if ((r & binary.BIT8) === 0) {\\n    // don't continue reading\\n    return sign * num\\n  }\\n  while (true) {\\n    r = decoder.arr[decoder.pos++]\\n    num = num | ((r & binary.BITS7) << len)\\n    len += 7\\n    if (r < binary.BIT8) {\\n      return sign * (num >>> 0)\\n    }\\n    /* istanbul ignore if */\\n    if (len > 41) {\\n      throw new Error('Integer out of range!')\\n    }\\n  }\\n}\\n\\n/**\\n * Look ahead and read varUint without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number}\\n */\\nexport const peekVarUint = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarUint(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * Look ahead and read varUint without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {number}\\n */\\nexport const peekVarInt = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarInt(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * Read string of variable length\\n * * varUint is used to store the length of the string\\n *\\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\\n * when String.fromCodePoint is fed with all characters as arguments.\\n * But most environments have a maximum number of arguments per functions.\\n * For effiency reasons we apply a maximum of 10000 characters at once.\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {String} The read String.\\n */\\nexport const readVarString = decoder => {\\n  let remainingLen = readVarUint(decoder)\\n  if (remainingLen === 0) {\\n    return ''\\n  } else {\\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\\n      while (remainingLen--) {\\n        encodedString += String.fromCodePoint(readUint8(decoder))\\n      }\\n    } else {\\n      while (remainingLen > 0) {\\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\\n        // this is dangerous, we create a fresh array view from the existing buffer\\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\\n        decoder.pos += nextLen\\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\\n        remainingLen -= nextLen\\n      }\\n    }\\n    return decodeURIComponent(escape(encodedString))\\n  }\\n}\\n\\n/**\\n * Look ahead and read varString without incrementing position\\n *\\n * @function\\n * @param {Decoder} decoder\\n * @return {string}\\n */\\nexport const peekVarString = decoder => {\\n  const pos = decoder.pos\\n  const s = readVarString(decoder)\\n  decoder.pos = pos\\n  return s\\n}\\n\\n/**\\n * @param {Decoder} decoder\\n * @param {number} len\\n * @return {DataView}\\n */\\nexport const readFromDataView = (decoder, len) => {\\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\\n  decoder.pos += len\\n  return dv\\n}\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\\n\\n/**\\n * @type {Array<function(Decoder):any>}\\n */\\nconst readAnyLookupTable = [\\n  decoder => undefined, // CASE 127: undefined\\n  decoder => null, // CASE 126: null\\n  readVarInt, // CASE 125: integer\\n  readFloat32, // CASE 124: float32\\n  readFloat64, // CASE 123: float64\\n  readBigInt64, // CASE 122: bigint\\n  decoder => false, // CASE 121: boolean (false)\\n  decoder => true, // CASE 120: boolean (true)\\n  readVarString, // CASE 119: string\\n  decoder => { // CASE 118: object<string,any>\\n    const len = readVarUint(decoder)\\n    /**\\n     * @type {Object<string,any>}\\n     */\\n    const obj = {}\\n    for (let i = 0; i < len; i++) {\\n      const key = readVarString(decoder)\\n      obj[key] = readAny(decoder)\\n    }\\n    return obj\\n  },\\n  decoder => { // CASE 117: array<any>\\n    const len = readVarUint(decoder)\\n    const arr = []\\n    for (let i = 0; i < len; i++) {\\n      arr.push(readAny(decoder))\\n    }\\n    return arr\\n  },\\n  readVarUint8Array // CASE 116: Uint8Array\\n]\\n\\n/**\\n * @param {Decoder} decoder\\n */\\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\\n\\n/**\\n * T must not be null.\\n *\\n * @template T\\n */\\nexport class RleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {function(Decoder):T} reader\\n   */\\n  constructor (uint8Array, reader) {\\n    super(uint8Array)\\n    /**\\n     * The reader\\n     */\\n    this.reader = reader\\n    /**\\n     * Current state\\n     * @type {T|null}\\n     */\\n    this.s = null\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = this.reader(this)\\n      if (hasContent(this)) {\\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\\n      } else {\\n        this.count = -1 // read the current value forever\\n      }\\n    }\\n    this.count--\\n    return /** @type {T} */ (this.s)\\n  }\\n}\\n\\nexport class IntDiffDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {number} start\\n   */\\n  constructor (uint8Array, start) {\\n    super(uint8Array)\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    this.s += readVarInt(this)\\n    return this.s\\n  }\\n}\\n\\nexport class RleIntDiffDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   * @param {number} start\\n   */\\n  constructor (uint8Array, start) {\\n    super(uint8Array)\\n    /**\\n     * Current state\\n     * @type {number}\\n     */\\n    this.s = start\\n    this.count = 0\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    if (this.count === 0) {\\n      this.s += readVarInt(this)\\n      if (hasContent(this)) {\\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\\n      } else {\\n        this.count = -1 // read the current value forever\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s)\\n  }\\n}\\n\\nexport class UintOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = readVarInt(this)\\n      // if the sign is negative, we read the count too, otherwise count is 1\\n      const isNegative = math.isNegativeZero(this.s)\\n      this.count = 1\\n      if (isNegative) {\\n        this.s = -this.s\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s)\\n  }\\n}\\n\\nexport class IncUintOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n  }\\n\\n  read () {\\n    if (this.count === 0) {\\n      this.s = readVarInt(this)\\n      // if the sign is negative, we read the count too, otherwise count is 1\\n      const isNegative = math.isNegativeZero(this.s)\\n      this.count = 1\\n      if (isNegative) {\\n        this.s = -this.s\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.count--\\n    return /** @type {number} */ (this.s++)\\n  }\\n}\\n\\nexport class IntDiffOptRleDecoder extends Decoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    super(uint8Array)\\n    /**\\n     * @type {number}\\n     */\\n    this.s = 0\\n    this.count = 0\\n    this.diff = 0\\n  }\\n\\n  /**\\n   * @return {number}\\n   */\\n  read () {\\n    if (this.count === 0) {\\n      const diff = readVarInt(this)\\n      // if the first bit is set, we read more data\\n      const hasCount = diff & 1\\n      this.diff = diff >> 1\\n      this.count = 1\\n      if (hasCount) {\\n        this.count = readVarUint(this) + 2\\n      }\\n    }\\n    this.s += this.diff\\n    this.count--\\n    return this.s\\n  }\\n}\\n\\nexport class StringDecoder {\\n  /**\\n   * @param {Uint8Array} uint8Array\\n   */\\n  constructor (uint8Array) {\\n    this.decoder = new UintOptRleDecoder(uint8Array)\\n    this.str = readVarString(this.decoder)\\n    /**\\n     * @type {number}\\n     */\\n    this.spos = 0\\n  }\\n\\n  /**\\n   * @return {string}\\n   */\\n  read () {\\n    const end = this.spos + this.decoder.read()\\n    const res = this.str.slice(this.spos, end)\\n    this.spos = end\\n    return res\\n  }\\n}\\n\",\"/**\\n * Utility functions to work with buffers (Uint8Array).\\n *\\n * @module buffer\\n */\\n\\nimport * as string from './string.js'\\nimport * as env from './environment.js'\\nimport * as encoding from './encoding.js'\\nimport * as decoding from './decoding.js'\\n\\n/**\\n * @param {number} len\\n */\\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\\n\\n/**\\n * Create Uint8Array with initial content from buffer\\n *\\n * @param {ArrayBuffer} buffer\\n * @param {number} byteOffset\\n * @param {number} length\\n */\\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\\n\\n/**\\n * Create Uint8Array with initial content from buffer\\n *\\n * @param {ArrayBuffer} buffer\\n */\\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\\n\\n/* istanbul ignore next */\\n/**\\n * @param {Uint8Array} bytes\\n * @return {string}\\n */\\nconst toBase64Browser = bytes => {\\n  let s = ''\\n  for (let i = 0; i < bytes.byteLength; i++) {\\n    s += string.fromCharCode(bytes[i])\\n  }\\n  // eslint-disable-next-line no-undef\\n  return btoa(s)\\n}\\n\\n/**\\n * @param {Uint8Array} bytes\\n * @return {string}\\n */\\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\\n\\n/* istanbul ignore next */\\n/**\\n * @param {string} s\\n * @return {Uint8Array}\\n */\\nconst fromBase64Browser = s => {\\n  // eslint-disable-next-line no-undef\\n  const a = atob(s)\\n  const bytes = createUint8ArrayFromLen(a.length)\\n  for (let i = 0; i < a.length; i++) {\\n    bytes[i] = a.charCodeAt(i)\\n  }\\n  return bytes\\n}\\n\\n/**\\n * @param {string} s\\n */\\nconst fromBase64Node = s => {\\n  const buf = Buffer.from(s, 'base64')\\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\\n}\\n\\n/* istanbul ignore next */\\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\\n\\n/* istanbul ignore next */\\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\\n\\n/**\\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\\n *\\n * @param {Uint8Array} uint8Array\\n * @return {Uint8Array}\\n */\\nexport const copyUint8Array = uint8Array => {\\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\\n  newBuf.set(uint8Array)\\n  return newBuf\\n}\\n\\n/**\\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\\n * See encoding.writeAny for more information.\\n *\\n * @param {any} data\\n * @return {Uint8Array}\\n */\\nexport const encodeAny = data => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeAny(encoder, data)\\n  return encoding.toUint8Array(encoder)\\n}\\n\\n/**\\n * Decode an any-encoded value.\\n *\\n * @param {Uint8Array} buf\\n * @return {any}\\n */\\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\\n\",\"/**\\n * Fast Pseudo Random Number Generators.\\n *\\n * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\\n * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\\n *\\n * @module prng\\n */\\n\\nimport * as binary from './binary.js'\\nimport { fromCharCode, fromCodePoint } from './string.js'\\nimport * as math from './math.js'\\nimport { Xoroshiro128plus } from './prng/Xoroshiro128plus.js'\\nimport * as buffer from './buffer.js'\\n\\n/**\\n * Description of the function\\n *  @callback generatorNext\\n *  @return {number} A 32bit integer\\n */\\n\\n/**\\n * A random type generator.\\n *\\n * @typedef {Object} PRNG\\n * @property {generatorNext} next Generate new number\\n */\\n\\nexport const DefaultPRNG = Xoroshiro128plus\\n\\n/**\\n * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\\n * This is the fastest full-period generator passing BigCrush without systematic failures.\\n * But there are more PRNGs available in ./PRNG/.\\n *\\n * @param {number} seed A positive 32bit integer. Do not use negative numbers.\\n * @return {PRNG}\\n */\\nexport const create = seed => new DefaultPRNG(seed)\\n\\n/**\\n * Generates a single random bool.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {Boolean} A random boolean\\n */\\nexport const bool = gen => (gen.next() >= 0.5)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int53 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const uint53 = (gen, min, max) => math.abs(int53(gen, min, max))\\n\\n/**\\n * Generates a random integer with 32 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int32 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\\n\\n/**\\n * Generates a random integer with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive).\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const uint32 = (gen, min, max) => int32(gen, min, max) >>> 0\\n\\n/**\\n * @deprecated\\n * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\\n * openaring on smaller ranges.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Number} min The lower bound of the allowed return values (inclusive).\\n * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\\n * @return {Number} A random integer on [min, max]\\n */\\nexport const int31 = (gen, min, max) => int32(gen, min, max)\\n\\n/**\\n * Generates a random real on [0, 1) with 53 bit resolution.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {Number} A random real number on [0, 1).\\n */\\nexport const real53 = gen => gen.next() // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\\n\\n/**\\n * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\\n *\\n * @param {PRNG} gen A random number generator.\\n * @return {string}\\n *\\n * (Space)!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\\n */\\nexport const char = gen => fromCharCode(int31(gen, 32, 126))\\n\\n/**\\n * @param {PRNG} gen\\n * @return {string} A single letter (a-z)\\n */\\nexport const letter = gen => fromCharCode(int31(gen, 97, 122))\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} [minLen=0]\\n * @param {number} [maxLen=20]\\n * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\\n */\\nexport const word = (gen, minLen = 0, maxLen = 20) => {\\n  const len = int31(gen, minLen, maxLen)\\n  let str = ''\\n  for (let i = 0; i < len; i++) {\\n    str += letter(gen)\\n  }\\n  return str\\n}\\n\\n/**\\n * TODO: this function produces invalid runes. Does not cover all of utf16!!\\n *\\n * @param {PRNG} gen\\n * @return {string}\\n */\\nexport const utf16Rune = gen => {\\n  const codepoint = int31(gen, 0, 256)\\n  return fromCodePoint(codepoint)\\n}\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} [maxlen = 20]\\n */\\nexport const utf16String = (gen, maxlen = 20) => {\\n  const len = int31(gen, 0, maxlen)\\n  let str = ''\\n  for (let i = 0; i < len; i++) {\\n    str += utf16Rune(gen)\\n  }\\n  return str\\n}\\n\\n/**\\n * Returns one element of a given array.\\n *\\n * @param {PRNG} gen A random number generator.\\n * @param {Array<T>} array Non empty Array of possible values.\\n * @return {T} One of the values of the supplied Array.\\n * @template T\\n */\\nexport const oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)]\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint8Array}\\n */\\nexport const uint8Array = (gen, len) => {\\n  const buf = buffer.createUint8ArrayFromLen(len)\\n  for (let i = 0; i < buf.length; i++) {\\n    buf[i] = int32(gen, 0, binary.BITS8)\\n  }\\n  return buf\\n}\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint16Array}\\n */\\nexport const uint16Array = (gen, len) => new Uint16Array(uint8Array(gen, len * 2).buffer)\\n\\n/**\\n * @param {PRNG} gen\\n * @param {number} len\\n * @return {Uint32Array}\\n */\\nexport const uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer)\\n\",\"/**\\n * Utility helpers for generating statistics.\\n *\\n * @module statistics\\n */\\n\\nimport * as math from './math.js'\\n\\n/**\\n * @param {Array<number>} arr Array of values\\n * @return {number} Returns null if the array is empty\\n */\\nexport const median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[math.floor((arr.length - 1) / 2)] + arr[math.ceil((arr.length - 1) / 2)]) / 2)\\n\\n/**\\n * @param {Array<number>} arr\\n * @return {number}\\n */\\nexport const average = arr => arr.reduce(math.add, 0) / arr.length\\n\",\"/**\\n * Utility helpers to work with promises.\\n *\\n * @module promise\\n */\\n\\nimport * as time from './time.js'\\n\\n/**\\n * @template T\\n * @callback PromiseResolve\\n * @param {T|PromiseLike<T>} [result]\\n */\\n\\n/**\\n * @template T\\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\\n * @return {Promise<T>}\\n */\\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\\n\\n/**\\n * @param {function(function():void,function(Error):void):void} f\\n * @return {Promise<void>}\\n */\\nexport const createEmpty = f => new Promise(f)\\n\\n/**\\n * `Promise.all` wait for all promises in the array to resolve and return the result\\n * @template T\\n * @param {Array<Promise<T>>} arrp\\n * @return {Promise<Array<T>>}\\n */\\nexport const all = arrp => Promise.all(arrp)\\n\\n/**\\n * @param {Error} [reason]\\n * @return {Promise<never>}\\n */\\nexport const reject = reason => Promise.reject(reason)\\n\\n/**\\n * @template T\\n * @param {T|void} res\\n * @return {Promise<T|void>}\\n */\\nexport const resolve = res => Promise.resolve(res)\\n\\n/**\\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\\n *\\n * @param {number} timeout\\n * @param {function():boolean} check\\n * @param {number} [intervalResolution]\\n * @return {Promise<void>}\\n */\\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\\n  const startTime = time.getUnixTime()\\n  const hasTimeout = timeout > 0\\n  const untilInterval = () => {\\n    if (check()) {\\n      clearInterval(intervalHandle)\\n      resolve()\\n    } else if (hasTimeout) {\\n      /* istanbul ignore else */\\n      if (time.getUnixTime() - startTime > timeout) {\\n        clearInterval(intervalHandle)\\n        reject(new Error('Timeout'))\\n      }\\n    }\\n  }\\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\\n})\\n\\n/**\\n * @param {number} timeout\\n * @return {Promise<undefined>}\\n */\\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\\n\\n/**\\n * Checks if an object is a promise using ducktyping.\\n *\\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\\n * library has some insane environment where global Promise objects are overwritten.\\n *\\n * @param {any} p\\n * @return {boolean}\\n */\\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\\n\",\"/**\\n * Testing framework with support for generating tests.\\n *\\n * ```js\\n * // test.js template for creating a test executable\\n * import { runTests } from 'lib0/testing.js'\\n * import * as log from 'lib0/logging.js'\\n * import * as mod1 from './mod1.test.js'\\n * import * as mod2 from './mod2.test.js'\\n\\n * import { isBrowser, isNode } from 'lib0/environment.js'\\n *\\n * if (isBrowser) {\\n *   // optional: if this is ran in the browser, attach a virtual console to the dom\\n *   log.createVConsole(document.body)\\n * }\\n *\\n * runTests({\\n *  mod1,\\n *  mod2,\\n * }).then(success => {\\n *   if (isNode) {\\n *     process.exit(success ? 0 : 1)\\n *   }\\n * })\\n * ```\\n *\\n * ```js\\n * // mod1.test.js\\n * /**\\n *  * runTests automatically tests all exported functions that start with \\\"test\\\".\\n *  * The name of the function should be in camelCase and is used for the logging output.\\n *  *\\n *  * @param {t.TestCase} tc\\n *  *\\\\/\\n * export const testMyFirstTest = tc => {\\n *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\\n * }\\n * ```\\n *\\n * Now you can simply run `node test.js` to run your test or run test.js in the browser.\\n *\\n * @module testing\\n */\\n\\nimport * as log from './logging.js'\\nimport { simpleDiff } from './diff.js'\\nimport * as object from './object.js'\\nimport * as string from './string.js'\\nimport * as math from './math.js'\\nimport * as random from './random.js'\\nimport * as prng from './prng.js'\\nimport * as statistics from './statistics.js'\\nimport * as array from './array.js'\\nimport * as env from './environment.js'\\nimport * as json from './json.js'\\nimport * as time from './time.js'\\nimport * as promise from './promise.js'\\n\\nimport { performance } from './isomorphic.js'\\n\\nexport { production } from './environment.js'\\n\\nexport const extensive = env.hasConf('extensive')\\n\\n/* istanbul ignore next */\\nexport const envSeed = env.hasParam('--seed') ? Number.parseInt(env.getParam('--seed', '0')) : null\\n\\nexport class TestCase {\\n  /**\\n   * @param {string} moduleName\\n   * @param {string} testName\\n   */\\n  constructor (moduleName, testName) {\\n    /**\\n     * @type {string}\\n     */\\n    this.moduleName = moduleName\\n    /**\\n     * @type {string}\\n     */\\n    this.testName = testName\\n    this._seed = null\\n    this._prng = null\\n  }\\n\\n  resetSeed () {\\n    this._seed = null\\n    this._prng = null\\n  }\\n\\n  /**\\n   * @type {number}\\n   */\\n  /* istanbul ignore next */\\n  get seed () {\\n    /* istanbul ignore else */\\n    if (this._seed === null) {\\n      /* istanbul ignore next */\\n      this._seed = envSeed === null ? random.uint32() : envSeed\\n    }\\n    return this._seed\\n  }\\n\\n  /**\\n   * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\\n   *\\n   * @type {prng.PRNG}\\n   */\\n  get prng () {\\n    /* istanbul ignore else */\\n    if (this._prng === null) {\\n      this._prng = prng.create(this.seed)\\n    }\\n    return this._prng\\n  }\\n}\\n\\nexport const repetitionTime = Number(env.getParam('--repetition-time', '50'))\\n/* istanbul ignore next */\\nconst testFilter = env.hasParam('--filter') ? env.getParam('--filter', '') : null\\n\\n/* istanbul ignore next */\\nconst testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*')\\n\\nconst repeatTestRegex = /^(repeat|repeating)\\\\s/\\n\\n/**\\n * @param {string} moduleName\\n * @param {string} name\\n * @param {function(TestCase):void|Promise<any>} f\\n * @param {number} i\\n * @param {number} numberOfTests\\n */\\nexport const run = async (moduleName, name, f, i, numberOfTests) => {\\n  const uncamelized = string.fromCamelCase(name.slice(4), ' ')\\n  const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`)\\n  /* istanbul ignore if */\\n  if (filtered) {\\n    return true\\n  }\\n  const tc = new TestCase(moduleName, name)\\n  const repeat = repeatTestRegex.test(uncamelized)\\n  const groupArgs = [log.GREY, `[${i + 1}/${numberOfTests}] `, log.PURPLE, `${moduleName}: `, log.BLUE, uncamelized]\\n  /* istanbul ignore next */\\n  if (testFilter === null) {\\n    log.groupCollapsed(...groupArgs)\\n  } else {\\n    log.group(...groupArgs)\\n  }\\n  const times = []\\n  const start = performance.now()\\n  let lastTime = start\\n  let err = null\\n  performance.mark(`${name}-start`)\\n  do {\\n    try {\\n      const p = f(tc)\\n      if (promise.isPromise(p)) {\\n        await p\\n      }\\n    } catch (_err) {\\n      err = _err\\n    }\\n    const currTime = performance.now()\\n    times.push(currTime - lastTime)\\n    lastTime = currTime\\n    if (repeat && err === null && (lastTime - start) < repetitionTime) {\\n      tc.resetSeed()\\n    } else {\\n      break\\n    }\\n  } while (err === null && (lastTime - start) < repetitionTime)\\n  performance.mark(`${name}-end`)\\n  /* istanbul ignore if */\\n  if (err !== null && err.constructor !== SkipError) {\\n    log.printError(err)\\n  }\\n  performance.measure(name, `${name}-start`, `${name}-end`)\\n  log.groupEnd()\\n  const duration = lastTime - start\\n  let success = true\\n  times.sort((a, b) => a - b)\\n  /* istanbul ignore next */\\n  const againMessage = env.isBrowser\\n    ? `     - ${window.location.href}?filter=\\\\\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\\n    : `\\\\nrepeat: npm run test -- --filter \\\"\\\\\\\\[${i + 1}/\\\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`\\n  const timeInfo = (repeat && err === null)\\n    ? ` - ${times.length} repetitions in ${time.humanizeDuration(duration)} (best: ${time.humanizeDuration(times[0])}, worst: ${time.humanizeDuration(array.last(times))}, median: ${time.humanizeDuration(statistics.median(times))}, average: ${time.humanizeDuration(statistics.average(times))})`\\n    : ` in ${time.humanizeDuration(duration)}`\\n  if (err !== null) {\\n    /* istanbul ignore else */\\n    if (err.constructor === SkipError) {\\n      log.print(log.GREY, log.BOLD, 'Skipped: ', log.UNBOLD, uncamelized)\\n    } else {\\n      success = false\\n      log.print(log.RED, log.BOLD, 'Failure: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\\n    }\\n  } else {\\n    log.print(log.GREEN, log.BOLD, 'Success: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\\n  }\\n  return success\\n}\\n\\n/**\\n * Describe what you are currently testing. The message will be logged.\\n *\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {string} info\\n */\\nexport const describe = (description, info = '') => log.print(log.BLUE, description, ' ', log.GREY, info)\\n\\n/**\\n * Describe the state of the current computation.\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\\n * }\\n * ```\\n *\\n * @param {string} info\\n */\\nexport const info = info => describe('', info)\\n\\nexport const printDom = log.printDom\\n\\nexport const printCanvas = log.printCanvas\\n\\n/**\\n * Group outputs in a collapsible category.\\n *\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.group('subtest 1', () => {\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n *   await t.groupAsync('subtest async 2', async () => {\\n *     await someaction()\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {function(void):void} f\\n */\\nexport const group = (description, f) => {\\n  log.group(log.BLUE, description)\\n  try {\\n    f()\\n  } finally {\\n    log.groupEnd()\\n  }\\n}\\n\\n/**\\n * Group outputs in a collapsible category.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.group('subtest 1', () => {\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n *   await t.groupAsync('subtest async 2', async () => {\\n *     await someaction()\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {function(void):Promise<any>} f\\n */\\nexport const groupAsync = async (description, f) => {\\n  log.group(log.BLUE, description)\\n  try {\\n    await f()\\n  } finally {\\n    log.groupEnd()\\n  }\\n}\\n\\n/**\\n * Measure the time that it takes to calculate something.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.measureTime('measurement', () => {\\n *     heavyCalculation()\\n *   })\\n *   await t.groupAsync('async measurement', async () => {\\n *     await heavyAsyncCalculation()\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} message\\n * @param {function():void} f\\n * @return {number} Returns a promise that resolves the measured duration to apply f\\n */\\nexport const measureTime = (message, f) => {\\n  let duration\\n  const start = performance.now()\\n  try {\\n    f()\\n  } finally {\\n    duration = performance.now() - start\\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\\n  }\\n  return duration\\n}\\n\\n/**\\n * Measure the time that it takes to calculate something.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.measureTimeAsync('measurement', async () => {\\n *     await heavyCalculation()\\n *   })\\n *   await t.groupAsync('async measurement', async () => {\\n *     await heavyAsyncCalculation()\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} message\\n * @param {function():Promise<any>} f\\n * @return {Promise<number>} Returns a promise that resolves the measured duration to apply f\\n */\\nexport const measureTimeAsync = async (message, f) => {\\n  let duration\\n  const start = performance.now()\\n  try {\\n    await f()\\n  } finally {\\n    duration = performance.now() - start\\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\\n  }\\n  return duration\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} as\\n * @param {Array<T>} bs\\n * @param {string} [m]\\n * @return {boolean}\\n */\\nexport const compareArrays = (as, bs, m = 'Arrays match') => {\\n  if (as.length !== bs.length) {\\n    fail(m)\\n  }\\n  for (let i = 0; i < as.length; i++) {\\n    if (as[i] !== bs[i]) {\\n      fail(m)\\n    }\\n  }\\n  return true\\n}\\n\\n/**\\n * @param {string} a\\n * @param {string} b\\n * @param {string} [m]\\n * @throws {TestError} Throws if tests fails\\n */\\nexport const compareStrings = (a, b, m = 'Strings match') => {\\n  if (a !== b) {\\n    const diff = simpleDiff(a, b)\\n    log.print(log.GREY, a.slice(0, diff.index), log.RED, a.slice(diff.index, diff.remove), log.GREEN, diff.insert, log.GREY, a.slice(diff.index + diff.remove))\\n    fail(m)\\n  }\\n}\\n\\n/**\\n * @template K,V\\n * @param {Object<K,V>} a\\n * @param {Object<K,V>} b\\n * @param {string} [m]\\n * @throws {TestError} Throws if test fails\\n */\\nexport const compareObjects = (a, b, m = 'Objects match') => { object.equalFlat(a, b) || fail(m) }\\n\\n/**\\n * @param {any} constructor\\n * @param {any} a\\n * @param {any} b\\n * @param {string} path\\n * @throws {TestError}\\n */\\nconst compareValues = (constructor, a, b, path) => {\\n  if (a !== b) {\\n    fail(`Values ${json.stringify(a)} and ${json.stringify(b)} don't match (${path})`)\\n  }\\n  return true\\n}\\n\\n/**\\n * @param {string?} message\\n * @param {string} reason\\n * @param {string} path\\n * @throws {TestError}\\n */\\nconst _failMessage = (message, reason, path) => fail(\\n  message === null\\n    ? `${reason} ${path}`\\n    : `${message} (${reason}) ${path}`\\n)\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @param {string} path\\n * @param {string?} message\\n * @param {function(any,any,any,string,any):boolean} customCompare\\n */\\nconst _compare = (a, b, path, message, customCompare) => {\\n  // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\\n  if (a == null || b == null) {\\n    return compareValues(null, a, b, path)\\n  }\\n  if (a.constructor !== b.constructor) {\\n    _failMessage(message, 'Constructors don\\\\'t match', path)\\n  }\\n  let success = true\\n  switch (a.constructor) {\\n    case ArrayBuffer:\\n      a = new Uint8Array(a)\\n      b = new Uint8Array(b)\\n    // eslint-disable-next-line no-fallthrough\\n    case Uint8Array: {\\n      if (a.byteLength !== b.byteLength) {\\n        _failMessage(message, 'ArrayBuffer lengths match', path)\\n      }\\n      for (let i = 0; success && i < a.length; i++) {\\n        success = success && a[i] === b[i]\\n      }\\n      break\\n    }\\n    case Set: {\\n      if (a.size !== b.size) {\\n        _failMessage(message, 'Sets have different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach(value => {\\n        if (!b.has(value)) {\\n          _failMessage(message, `b.${path} does have ${value}`, path)\\n        }\\n      })\\n      break\\n    }\\n    case Map: {\\n      if (a.size !== b.size) {\\n        _failMessage(message, 'Maps have different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach((value, key) => {\\n        if (!b.has(key)) {\\n          _failMessage(message, `Property ${path}[\\\"${key}\\\"] does not exist on second argument`, path)\\n        }\\n        _compare(value, b.get(key), `${path}[\\\"${key}\\\"]`, message, customCompare)\\n      })\\n      break\\n    }\\n    case Object:\\n      if (object.length(a) !== object.length(b)) {\\n        _failMessage(message, 'Objects have a different number of attributes', path)\\n      }\\n      object.forEach(a, (value, key) => {\\n        if (!object.hasProperty(b, key)) {\\n          _failMessage(message, `Property ${path} does not exist on second argument`, path)\\n        }\\n        _compare(value, b[key], `${path}[\\\"${key}\\\"]`, message, customCompare)\\n      })\\n      break\\n    case Array:\\n      if (a.length !== b.length) {\\n        _failMessage(message, 'Arrays have a different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare))\\n      break\\n    /* istanbul ignore next */\\n    default:\\n      if (!customCompare(a.constructor, a, b, path, compareValues)) {\\n        _failMessage(message, `Values ${json.stringify(a)} and ${json.stringify(b)} don't match`, path)\\n      }\\n  }\\n  assert(success, message)\\n  return true\\n}\\n\\n/**\\n * @template T\\n * @param {T} a\\n * @param {T} b\\n * @param {string?} [message]\\n * @param {function(any,T,T,string,any):boolean} [customCompare]\\n */\\nexport const compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare)\\n\\n/* istanbul ignore next */\\n/**\\n * @param {boolean} condition\\n * @param {string?} [message]\\n * @throws {TestError}\\n */\\nexport const assert = (condition, message = null) => condition || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`)\\n\\n/**\\n * @param {function():void} f\\n * @throws {TestError}\\n */\\nexport const fails = f => {\\n  let err = null\\n  try {\\n    f()\\n  } catch (_err) {\\n    err = _err\\n    log.print(log.GREEN, '⇖ This Error was expected')\\n  }\\n  /* istanbul ignore if */\\n  if (err === null) {\\n    fail('Expected this to fail')\\n  }\\n}\\n\\n/**\\n * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\\n */\\nexport const runTests = async tests => {\\n  const numberOfTests = object.map(tests, mod => object.map(mod, f => /* istanbul ignore next */ f ? 1 : 0).reduce(math.add, 0)).reduce(math.add, 0)\\n  let successfulTests = 0\\n  let testnumber = 0\\n  const start = performance.now()\\n  for (const modName in tests) {\\n    const mod = tests[modName]\\n    for (const fname in mod) {\\n      const f = mod[fname]\\n      /* istanbul ignore else */\\n      if (f) {\\n        const repeatEachTest = 1\\n        let success = true\\n        for (let i = 0; success && i < repeatEachTest; i++) {\\n          success = await run(modName, fname, f, testnumber, numberOfTests)\\n        }\\n        testnumber++\\n        /* istanbul ignore else */\\n        if (success) {\\n          successfulTests++\\n        }\\n      }\\n    }\\n  }\\n  const end = performance.now()\\n  log.print('')\\n  const success = successfulTests === numberOfTests\\n  /* istanbul ignore next */\\n  if (success) {\\n    /* istanbul ignore next */\\n    log.print(log.GREEN, log.BOLD, 'All tests successful!', log.GREY, log.UNBOLD, ` in ${time.humanizeDuration(end - start)}`)\\n    /* istanbul ignore next */\\n    log.printImgBase64(nyanCatImage, 50)\\n  } else {\\n    const failedTests = numberOfTests - successfulTests\\n    log.print(log.RED, log.BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`)\\n  }\\n  return success\\n}\\n\\nclass TestError extends Error {}\\n\\n/**\\n * @param {string} reason\\n * @throws {TestError}\\n */\\nexport const fail = reason => {\\n  log.print(log.RED, log.BOLD, 'X ', log.UNBOLD, reason)\\n  throw new TestError('Test Failed')\\n}\\n\\nclass SkipError extends Error {}\\n\\n/**\\n * @param {boolean} cond If true, this tests will be skipped\\n * @throws {SkipError}\\n */\\nexport const skip = (cond = true) => {\\n  if (cond) {\\n    throw new SkipError('skipping..')\\n  }\\n}\\n\\n// eslint-disable-next-line\\nconst nyanCatImage = ''\\n\",\"\\nimport * as array from './array.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAppend = tc => {\\n  const arr = [1, 2, 3]\\n  array.appendTo(arr, arr.slice())\\n  t.compareArrays(arr, [1, 2, 3, 1, 2, 3])\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testflatten = tc => {\\n  const arr = [[1, 2, 3], [4]]\\n  t.compareArrays(array.flatten(arr), [1, 2, 3, 4])\\n}\\n\",\"\\nimport * as log from './logging.js'\\n\\nexport const testLogging = () => {\\n  log.print(log.BLUE, 'blue ')\\n  log.print(log.BLUE, 'blue ', log.BOLD, 'blue,bold')\\n  log.print(log.GREEN, log.RED, 'red ', 'red')\\n  log.print(log.ORANGE, 'orange')\\n  log.print(log.BOLD, 'bold ', log.UNBOLD, 'nobold')\\n  log.print(log.GREEN, 'green ', log.UNCOLOR, 'nocolor')\\n  log.print('expecting objects from now on!')\\n  log.print({ 'my-object': 'isLogged' })\\n  log.print(log.GREEN, 'green ', { 'my-object': 'isLogged' })\\n  log.print(log.GREEN, 'green ', { 'my-object': 'isLogged' }, 'unformatted')\\n  log.print(log.BLUE, log.BOLD, 'number', 1)\\n  log.print(log.BLUE, log.BOLD, 'number', 1, {}, 's', 2)\\n  log.print({}, 'dtrn')\\n}\\n\",\"import * as prng from './prng.js'\\nimport * as string from './string.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testLowercaseTransformation = tc => {\\n  t.compareStrings(string.fromCamelCase('ThisIsATest', ' '), 'this is a test')\\n  t.compareStrings(string.fromCamelCase('Testing', ' '), 'testing')\\n  t.compareStrings(string.fromCamelCase('testingThis', ' '), 'testing this')\\n  t.compareStrings(string.fromCamelCase('testYAY', ' '), 'test y a y')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatStringUtf8Encoding = tc => {\\n  t.skip(!string.utf8TextDecoder)\\n  const str = prng.utf16String(tc.prng, 1000000)\\n  let nativeResult, polyfilledResult\\n  t.measureTime('TextEncoder utf8 encoding', () => {\\n    nativeResult = string._encodeUtf8Native(str)\\n  })\\n  t.measureTime('Polyfilled utf8 encoding', () => {\\n    polyfilledResult = string._encodeUtf8Polyfill(str)\\n  })\\n  t.compare(nativeResult, polyfilledResult, 'Encoded utf8 buffers match')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatStringUtf8Decoding = tc => {\\n  t.skip(!string.utf8TextDecoder)\\n  const buf = string.encodeUtf8(prng.utf16String(tc.prng, 1000000))\\n  let nativeResult, polyfilledResult\\n  t.measureTime('TextEncoder utf8 decoding', () => {\\n    nativeResult = string._decodeUtf8Native(buf)\\n  })\\n  t.measureTime('Polyfilled utf8 decoding', () => {\\n    polyfilledResult = string._decodeUtf8Polyfill(buf)\\n  })\\n  t.compare(nativeResult, polyfilledResult, 'Decoded utf8 buffers match')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testBomEncodingDecoding = tc => {\\n  const bomStr = '﻿bom'\\n  t.assert(bomStr.length === 4)\\n  const polyfilledResult = string._decodeUtf8Polyfill(string._encodeUtf8Polyfill(bomStr))\\n  t.assert(polyfilledResult.length === 4)\\n  t.assert(polyfilledResult === bomStr)\\n  if (string.utf8TextDecoder) {\\n    const nativeResult = string._decodeUtf8Native(string._encodeUtf8Native(bomStr))\\n    t.assert(nativeResult === polyfilledResult)\\n  }\\n}\\n\",\"/* global BigInt */\\nimport * as encoding from './encoding.js'\\nimport * as decoding from './decoding.js'\\nimport * as prng from './prng.js'\\nimport * as t from './testing.js'\\nimport * as string from './string.js'\\nimport * as binary from './binary.js'\\nimport * as buffer from './buffer.js'\\nimport * as number from './number.js'\\n\\n/**\\n * @type {Array<function(prng.PRNG, number, boolean):any>}\\n */\\nlet genAnyLookupTable = [\\n  gen => BigInt(prng.int53(gen, number.MIN_SAFE_INTEGER, number.MAX_SAFE_INTEGER)), // TYPE 122\\n  gen => undefined, // TYPE 127\\n  gen => null, // TYPE 126\\n  gen => prng.int53(gen, number.LOWEST_INT32, number.HIGHEST_INT32), // TYPE 125\\n  gen => prng.real53(gen), // TYPE 124 and 123\\n  gen => true, // TYPE 121\\n  gen => false, // TYPE 120\\n  gen => prng.utf16String(gen), // TYPE 119\\n  (gen, depth, toJsonCompatible) => ({ val: genAny(gen, depth + 1, toJsonCompatible) }), // TYPE 118\\n  (gen, depth, toJsonCompatible) => Array.from({ length: prng.uint32(gen, 0, 20 - depth) }).map(() => genAny(gen, depth + 1, toJsonCompatible)), // TYPE 117\\n  gen => prng.uint8Array(gen, prng.uint32(gen, 0, 50)) // TYPE 116\\n]\\n\\nconst genAnyLookupTableJsonCompatible = genAnyLookupTable.slice(1)\\n\\nif (typeof BigInt === 'undefined') {\\n  genAnyLookupTable = genAnyLookupTable.slice(1)\\n}\\n\\n/**\\n * @param {prng.PRNG} gen\\n * @param {number} _depth The current call-depth\\n */\\nconst genAny = (gen, _depth = 0, toJsonCompatible = false) => prng.oneOf(gen, toJsonCompatible ? genAnyLookupTableJsonCompatible : genAnyLookupTable)(gen, _depth, toJsonCompatible)\\n\\n/**\\n * Check if binary encoding is compatible with golang binary encoding - binary.PutVarUint.\\n *\\n * Result: is compatible up to 32 bit: [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\\n */\\nexport const testGolangBinaryEncodingCompatibility = () => {\\n  const tests = [\\n    { in: 0, out: [0] },\\n    { in: 1, out: [1] },\\n    { in: 128, out: [128, 1] },\\n    { in: 200, out: [200, 1] },\\n    { in: 32, out: [32] },\\n    { in: 500, out: [244, 3] },\\n    { in: 256, out: [128, 2] },\\n    { in: 700, out: [188, 5] },\\n    { in: 1024, out: [128, 8] },\\n    { in: 1025, out: [129, 8] },\\n    { in: 4048, out: [208, 31] },\\n    { in: 5050, out: [186, 39] },\\n    { in: 1000000, out: [192, 132, 61] },\\n    { in: 34951959, out: [151, 166, 213, 16] },\\n    { in: 2147483646, out: [254, 255, 255, 255, 7] },\\n    { in: 2147483647, out: [255, 255, 255, 255, 7] },\\n    { in: 2147483648, out: [128, 128, 128, 128, 8] },\\n    { in: 2147483700, out: [180, 128, 128, 128, 8] },\\n    { in: 4294967294, out: [254, 255, 255, 255, 15] },\\n    { in: 4294967295, out: [255, 255, 255, 255, 15] }\\n  ]\\n  tests.forEach(test => {\\n    const encoder = encoding.createEncoder()\\n    encoding.writeVarUint(encoder, test.in)\\n    const buffer = encoding.toUint8Array(encoder)\\n    t.assert(buffer.byteLength === test.out.length)\\n    t.assert(buffer.length > 0)\\n    for (let j = 0; j < buffer.length; j++) {\\n      t.assert(buffer[j] === test.out[j])\\n    }\\n  })\\n}\\n\\n/**\\n * @template T\\n * @param {string} testname\\n * @param {function(encoding.Encoder, T):void} write\\n * @param {function(decoding.Decoder):T} read\\n * @param {T} val\\n * @param {boolean} doLog\\n */\\nfunction test (testname, write, read, val, doLog = true) {\\n  const encoder = encoding.createEncoder()\\n  write(encoder, val)\\n  const reader = decoding.createDecoder(encoding.toUint8Array(encoder))\\n  const result = read(reader)\\n  const utf8ByteLength = string.utf8ByteLength(val + '')\\n  const binaryByteLength = encoding.length(encoder)\\n  if (doLog) {\\n    t.describe(testname, ` utf8 encode: ${utf8ByteLength} bytes / binary encode: ${binaryByteLength} bytes`)\\n  }\\n  t.compare(val, result)\\n  return {\\n    utf8ByteLength,\\n    binaryByteLength\\n  }\\n}\\n\\n/**\\n * @param {string} s\\n */\\nconst testVarString = s => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeVarString(encoder, s)\\n  const decoder = decoding.createDecoder(encoding.toUint8Array(encoder))\\n  const peeked = decoding.peekVarString(decoder)\\n  const result = decoding.readVarString(decoder)\\n  t.compareStrings(s, result)\\n  t.compareStrings(s, peeked)\\n}\\n\\nexport const testStringDecodingPerformance = () => {\\n  // test if it is faster to read N single characters, or if it is faster to read N characters in one flush.\\n  // to make the comparison meaningful, we read read N characters in an Array\\n  const N = 2000000\\n  const durationSingleElements = t.measureTime('read / write single elements', () => {\\n    const encoder = encoding.createEncoder()\\n    t.measureTime('read / write single elements - write', () => {\\n      for (let i = 0; i < N; i++) {\\n        encoding.writeVarString(encoder, 'i')\\n      }\\n    })\\n    const decoder = decoding.createDecoder(encoding.toUint8Array(encoder))\\n    t.measureTime('read / write single elements - read', () => {\\n      const arr = []\\n      for (let i = 0; i < N; i++) {\\n        arr.push(decoding.readVarString(decoder))\\n      }\\n    })\\n  })\\n\\n  const durationConcatElementsNative = t.measureTime('read / write concatenated string using native encoder/decoder', () => {\\n    let stringbuf = new Uint8Array()\\n    const encoderLengths = encoding.createEncoder()\\n    t.measureTime('read / write concatenated string using native encoder/decoder - write', () => {\\n      let s = ''\\n      const sArr = []\\n      for (let i = 0; i < N; i++) {\\n        s += 'i'\\n        encoding.writeVarUint(encoderLengths, 1) // we write a single char.\\n        if (i % 20 === 0) {\\n          sArr.push(s)\\n          s = ''\\n        }\\n      }\\n      sArr.push(s)\\n      stringbuf = string.encodeUtf8(sArr.join(''))\\n    })\\n    const decoderLengths = decoding.createDecoder(encoding.toUint8Array(encoderLengths))\\n    t.measureTime('read / write concatenated string using native encoder/decoder - read', () => {\\n      const arr = []\\n      const concatS = string.decodeUtf8(stringbuf)\\n      for (let i = 0; i < N; i++) {\\n        const len = decoding.readVarUint(decoderLengths)\\n        arr.push(concatS.slice(i, len)) // push using slice\\n      }\\n    })\\n  })\\n  const durationConcatElements = t.measureTime('read / write concatenated string', () => {\\n    let stringbuf = new Uint8Array()\\n    const encoder = encoding.createEncoder()\\n    const encoderLengths = encoding.createEncoder()\\n    t.measureTime('read / write concatenated string - write', () => {\\n      let s = ''\\n      for (let i = 0; i < N; i++) {\\n        s += 'i'\\n        encoding.writeVarUint(encoderLengths, 1) // we write a single char.\\n        if (i % 20 === 0) {\\n          encoding.writeVarString(encoder, s)\\n          s = ''\\n        }\\n      }\\n      encoding.writeVarString(encoder, s)\\n      stringbuf = encoding.toUint8Array(encoder)\\n    })\\n    const decoder = decoding.createDecoder(stringbuf)\\n    const decoderLengths = decoding.createDecoder(encoding.toUint8Array(encoderLengths))\\n    t.measureTime('read / write concatenated string - read', () => {\\n      const arr = []\\n      const concatS = decoding.readVarString(decoder)\\n      for (let i = 0; i < N; i++) {\\n        const len = decoding.readVarUint(decoderLengths)\\n        arr.push(concatS.slice(i, len)) // push using slice\\n      }\\n    })\\n  })\\n  t.assert(durationConcatElements < durationSingleElements, 'We expect that the second approach is faster. If this fails, our expectantion is not met in your javascript environment. Please report this issue.')\\n  t.assert(durationConcatElements < durationConcatElementsNative * 1.3, 'We expect that the native approach is slower. If this fails, our expectantion is not met in your javascript environment. Please report this issue.')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyEncodeUnknowns = tc => {\\n  const encoder = encoding.createEncoder()\\n  // @ts-ignore\\n  encoding.writeAny(encoder, Symbol('a'))\\n  encoding.writeAny(encoder, undefined)\\n  encoding.writeAny(encoder, () => {})\\n  const decoder = decoding.createDecoder(encoding.toUint8Array(encoder))\\n  t.assert(decoding.readAny(decoder) === undefined)\\n  t.assert(decoding.readAny(decoder) === undefined)\\n  t.assert(decoding.readAny(decoder) === undefined)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyEncodeDate = tc => {\\n  test('Encode current date', encoding.writeAny, decoding.readAny, new Date().getTime())\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testEncodeMax32bitUint = tc => {\\n  test('max 32bit uint', encoding.writeVarUint, decoding.readVarUint, binary.BITS32)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testVarUintEncoding = tc => {\\n  test('varUint 1 byte', encoding.writeVarUint, decoding.readVarUint, 42)\\n  test('varUint 2 bytes', encoding.writeVarUint, decoding.readVarUint, 1 << 9 | 3)\\n  test('varUint 3 bytes', encoding.writeVarUint, decoding.readVarUint, 1 << 17 | 1 << 9 | 3)\\n  test('varUint 4 bytes', encoding.writeVarUint, decoding.readVarUint, 1 << 25 | 1 << 17 | 1 << 9 | 3)\\n  test('varUint of 2839012934', encoding.writeVarUint, decoding.readVarUint, 2839012934)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testVarIntEncoding = tc => {\\n  test('varInt 1 byte', encoding.writeVarInt, decoding.readVarInt, -42)\\n  test('varInt 2 bytes', encoding.writeVarInt, decoding.readVarInt, -(1 << 9 | 3))\\n  test('varInt 3 bytes', encoding.writeVarInt, decoding.readVarInt, -(1 << 17 | 1 << 9 | 3))\\n  test('varInt 4 bytes', encoding.writeVarInt, decoding.readVarInt, -(1 << 25 | 1 << 17 | 1 << 9 | 3))\\n  test('varInt of -691529286', encoding.writeVarInt, decoding.readVarInt, -(691529286))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatVarUintEncoding = tc => {\\n  const n = prng.int32(tc.prng, 0, (1 << 28) - 1)\\n  test(`varUint of ${n}`, encoding.writeVarUint, decoding.readVarUint, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatVarIntEncoding = tc => {\\n  const n = prng.uint32(tc.prng, 0, binary.BITS32)\\n  test(`varInt of ${n}`, encoding.writeVarInt, decoding.readVarInt, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatAnyEncoding = tc => {\\n  const n = genAny(tc.prng)\\n  test('any encoding', encoding.writeAny, decoding.readAny, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatPeekVarUintEncoding = tc => {\\n  const n = prng.int32(tc.prng, 0, (1 << 28) - 1)\\n  test(`varUint of ${n}`, encoding.writeVarUint, decoding.peekVarUint, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatPeekVarIntEncoding = tc => {\\n  const n = prng.uint32(tc.prng, 0, binary.BITS32)\\n  test(`varInt of ${n}`, encoding.writeVarInt, decoding.peekVarInt, n, false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyVsJsonEncoding = tc => {\\n  const n = Array.from({ length: 5000 }).map(() => genAny(tc.prng, 5, true))\\n  t.measureTime('lib0 any encoding', () => {\\n    const encoder = encoding.createEncoder()\\n    encoding.writeAny(encoder, n)\\n    const buffer = encoding.toUint8Array(encoder)\\n    t.info('buffer length is ' + buffer.length)\\n    decoding.readAny(decoding.createDecoder(buffer))\\n  })\\n  t.measureTime('JSON.stringify encoding', () => {\\n    const encoder = encoding.createEncoder()\\n    encoding.writeVarString(encoder, JSON.stringify(n))\\n    const buffer = encoding.toUint8Array(encoder)\\n    t.info('buffer length is ' + buffer.length)\\n    JSON.parse(decoding.readVarString(decoding.createDecoder(buffer)))\\n  })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testStringEncoding = tc => {\\n  testVarString('hello')\\n  testVarString('test!')\\n  testVarString('☺☺☺')\\n  testVarString('')\\n  testVarString('1234')\\n  testVarString('쾟')\\n  testVarString('龟') // surrogate length 3\\n  testVarString('😝') // surrogate length 4\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatStringEncoding = tc =>\\n  testVarString(prng.utf16String(tc.prng))\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSetMethods = tc => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeUint8(encoder, 1)\\n  encoding.writeUint16(encoder, 33)\\n  encoding.writeUint32(encoder, 29329)\\n  encoding.setUint8(encoder, 0, 8)\\n  encoding.setUint16(encoder, 1, 16)\\n  encoding.setUint32(encoder, 3, 32)\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(decoding.peekUint8(decoder) === 8)\\n  decoding.readUint8(decoder)\\n  t.assert(decoding.peekUint16(decoder) === 16)\\n  decoding.readUint16(decoder)\\n  t.assert(decoding.peekUint32(decoder) === 32)\\n  decoding.readUint32(decoder)\\n}\\n\\nconst defLen = 1000\\nconst loops = 10000\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @return {boolean}\\n */\\nconst strictComparison = (a, b) => a === b\\n\\n/**\\n * @typedef {Object} EncodingPair\\n * @property {function(decoding.Decoder):any} EncodingPair.read\\n * @property {function(encoding.Encoder,any):void} EncodingPair.write\\n * @property {function(prng.PRNG):any} EncodingPair.gen\\n * @property {function(any,any):boolean} EncodingPair.compare\\n * @property {string} name\\n */\\n\\n/**\\n * @template T\\n * @type {Array<EncodingPair>}\\n */\\nconst encodingPairs = [\\n  { name: 'uint8Array', read: decoder => decoding.readUint8Array(decoder, defLen), write: encoding.writeUint8Array, gen: gen => prng.uint8Array(gen, defLen), compare: t.compare },\\n  { name: 'varUint8Array', read: decoding.readVarUint8Array, write: encoding.writeVarUint8Array, gen: gen => prng.uint8Array(gen, prng.uint32(gen, 0, defLen)), compare: t.compare },\\n  { name: 'uint8', read: decoding.readUint8, write: encoding.writeUint8, gen: gen => prng.uint32(gen, 0, binary.BITS8), compare: strictComparison },\\n  { name: 'uint16', read: decoding.readUint16, write: encoding.writeUint16, gen: gen => prng.uint32(gen, 0, binary.BITS16), compare: strictComparison },\\n  { name: 'uint32', read: decoding.readUint32, write: encoding.writeUint32, gen: gen => prng.uint32(gen, 0, binary.BITS32), compare: strictComparison },\\n  { name: 'uint32bigEndian', read: decoding.readUint32BigEndian, write: encoding.writeUint32BigEndian, gen: gen => prng.uint32(gen, 0, binary.BITS32), compare: strictComparison },\\n  { name: 'varString', read: decoding.readVarString, write: encoding.writeVarString, gen: gen => prng.utf16String(gen, prng.uint32(gen, 0, defLen)), compare: strictComparison },\\n  { name: 'varUint', read: decoding.readVarUint, write: encoding.writeVarUint, gen: gen => prng.uint53(gen, 0, binary.BITS32), compare: strictComparison },\\n  { name: 'varInt', read: decoding.readVarInt, write: encoding.writeVarInt, gen: gen => prng.int53(gen, number.LOWEST_INT32, number.HIGHEST_INT32), compare: strictComparison },\\n  { name: 'Any', read: decoding.readAny, write: encoding.writeAny, gen: genAny, compare: t.compare }\\n]\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatRandomWrites = tc => {\\n  t.describe(`Writing ${loops} random values`, `defLen=${defLen}`)\\n  const gen = tc.prng\\n  const ops = []\\n  const encoder = encoding.createEncoder()\\n  for (let i = 0; i < 10000; i++) {\\n    const pair = prng.oneOf(gen, encodingPairs)\\n    const val = pair.gen(gen)\\n    pair.write(encoder, val)\\n    ops.push({\\n      compare: pair.compare,\\n      read: pair.read,\\n      val,\\n      name: pair.name\\n    })\\n  }\\n  const tailData = prng.uint8Array(gen, prng.int32(gen, 0, defLen))\\n  encoding.writeUint8Array(encoder, tailData)\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(encoding.length(encoder) === buf.byteLength)\\n  for (let i = 0; i < ops.length; i++) {\\n    const o = ops[i]\\n    const val = o.read(decoder)\\n    t.assert(o.compare(val, o.val), o.name)\\n  }\\n  t.compare(tailData, decoding.readTailAsUint8Array(decoder))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testWriteUint8ArrayOverflow = tc => {\\n  const encoder = encoding.createEncoder()\\n  const initialLen = encoder.cbuf.byteLength\\n  const buf = buffer.createUint8ArrayFromLen(initialLen * 4)\\n  for (let i = 0; i < buf.length; i++) {\\n    buf[i] = i\\n  }\\n  encoding.writeUint8Array(encoder, buf)\\n  encoding.write(encoder, 42)\\n  const res = encoding.toUint8Array(encoder)\\n  t.assert(res.length === initialLen * 4 + 1)\\n  for (let i = 0; i < buf.length - 1; i++) {\\n    t.assert(res[i] === (i % 256))\\n  }\\n  t.assert(res[initialLen * 4] === 42)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSetOnOverflow = tc => {\\n  const encoder = encoding.createEncoder()\\n  const initialLen = encoder.cbuf.byteLength\\n  encoder.cpos = initialLen - 2\\n  encoding.writeUint32(encoder, binary.BITS32)\\n  const buf = encoding.toUint8Array(encoder)\\n  t.assert(encoding.length(encoder) === initialLen + 2)\\n  const decoder = decoding.createDecoder(buf)\\n  const space = buffer.createUint8ArrayFromArrayBuffer(decoding.readUint8Array(decoder, initialLen - 2))\\n  for (let i = 0; i < initialLen - 2; i++) {\\n    t.assert(space[i] === 0)\\n  }\\n  t.assert(decoding.hasContent(decoder))\\n  t.assert(binary.BITS32 === decoding.readUint32(decoder))\\n  t.assert(!decoding.hasContent(decoder))\\n  encoding.setUint8(encoder, 5, binary.BITS8)\\n  encoding.setUint8(encoder, initialLen + 1, 7)\\n  const buf2 = encoding.toUint8Array(encoder)\\n  t.assert(buf2[5] === binary.BITS8)\\n  t.assert(buf[5] === 0, 'old buffer is not affected')\\n  t.assert(buf2[initialLen + 1] === 7)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testCloneDecoder = tc => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeUint8(encoder, 12132)\\n  encoding.writeVarUint(encoder, 329840128734)\\n  encoding.writeVarString(encoder, 'dtrnuiaednudiaendturinaedt nduiaen dturinaed ')\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  decoding.skip8(decoder)\\n  const decoder2 = decoding.clone(decoder)\\n  const payload1 = decoding.readTailAsUint8Array(decoder)\\n  const payload2 = decoding.readTailAsUint8Array(decoder2)\\n  t.compare(payload1, payload2)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testWriteBinaryEncoder = tc => {\\n  const encoder = encoding.createEncoder()\\n  encoding.writeUint16(encoder, 4)\\n  const encoder2 = encoding.createEncoder()\\n  encoding.writeVarUint(encoder2, 143095)\\n  encoding.writeBinaryEncoder(encoder2, encoder)\\n  const buf = encoding.toUint8Array(encoder2)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(decoding.readVarUint(decoder) === 143095)\\n  t.assert(decoding.readUint16(decoder) === 4)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testOverflowStringDecoding = tc => {\\n  const gen = tc.prng\\n  const encoder = encoding.createEncoder()\\n  let longStr = ''\\n  while (longStr.length < 11000) {\\n    longStr += prng.utf16String(gen, 100000)\\n  }\\n  encoding.writeVarString(encoder, longStr)\\n  const buf = encoding.toUint8Array(encoder)\\n  const decoder = decoding.createDecoder(buf)\\n  t.assert(longStr === decoding.readVarString(decoder))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRleEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.RleEncoder(encoding.writeVarUint)\\n  for (let i = 0; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.RleDecoder(encoding.toUint8Array(encoder), decoding.readVarUint)\\n  for (let i = 0; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRleIntDiffEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.RleIntDiffEncoder(0)\\n  for (let i = -N; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.RleIntDiffDecoder(encoding.toUint8Array(encoder), 0)\\n  for (let i = -N; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUintOptRleEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.UintOptRleEncoder()\\n  for (let i = 0; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.UintOptRleDecoder(encoder.toUint8Array())\\n  for (let i = 0; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIntDiffRleEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.IntDiffOptRleEncoder()\\n  for (let i = -N; i < N; i++) {\\n    encoder.write(i)\\n    for (let j = 0; j < i; j++) { // write additional i times\\n      encoder.write(i)\\n    }\\n  }\\n  const decoder = new decoding.IntDiffOptRleDecoder(encoder.toUint8Array())\\n  for (let i = -N; i < N; i++) {\\n    t.assert(i === decoder.read())\\n    for (let j = 0; j < i; j++) { // read additional i times\\n      t.assert(i === decoder.read())\\n    }\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIntEncoders = tc => {\\n  const arrLen = 10000\\n  const gen = tc.prng\\n  /**\\n   * @type {Array<number>}\\n   */\\n  const vals = []\\n  for (let i = 0; i < arrLen; i++) {\\n    vals.push(prng.int32(gen, -10, 10))\\n  }\\n  /**\\n   * @type {Array<{ encoder: any, read: function(any):any }>}\\n   */\\n  const intEncoders = [\\n    { encoder: new encoding.IntDiffOptRleEncoder(), read: encoder => new decoding.IntDiffOptRleDecoder(encoder.toUint8Array()) },\\n    { encoder: new encoding.IntDiffEncoder(0), read: encoder => new decoding.IntDiffDecoder(encoding.toUint8Array(encoder), 0) },\\n    { encoder: new encoding.IntDiffEncoder(42), read: encoder => new decoding.IntDiffDecoder(encoding.toUint8Array(encoder), 42) },\\n    { encoder: new encoding.RleIntDiffEncoder(0), read: encoder => new decoding.RleIntDiffDecoder(encoding.toUint8Array(encoder), 0) }\\n  ]\\n  intEncoders.forEach(({ encoder, read }) => {\\n    vals.forEach(v => encoder.write(v))\\n    /**\\n     * @type {Array<number>}\\n     */\\n    const readVals = []\\n    const dec = read(encoder)\\n    for (let i = 0; i < arrLen; i++) {\\n      readVals.push(dec.read())\\n    }\\n    t.compare(vals, readVals)\\n  })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIntDiffEncoder = tc => {\\n  const N = 100\\n  const encoder = new encoding.IntDiffEncoder(0)\\n  for (let i = -N; i < N; i++) {\\n    encoder.write(i)\\n  }\\n  const decoder = new decoding.IntDiffDecoder(encoding.toUint8Array(encoder), 0)\\n  for (let i = -N; i < N; i++) {\\n    t.assert(i === decoder.read())\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testStringDecoder = tc => {\\n  const gen = tc.prng\\n  const N = 1000\\n  const words = []\\n  for (let i = 0; i < N; i++) {\\n    words.push(prng.utf16String(gen))\\n    if (i % 100 === 0) {\\n      const char = prng.char(gen).slice(0, 1)\\n      words.push(char)\\n      words.push(char)\\n    }\\n    if (i % 107 === 0) {\\n      words.push(prng.word(gen, 3000, 8000))\\n    }\\n  }\\n  const encoder = new encoding.StringEncoder()\\n  for (let i = 0; i < words.length; i++) {\\n    encoder.write(words[i])\\n  }\\n  const decoder = new decoding.StringDecoder(encoder.toUint8Array())\\n  for (let i = 0; i < words.length; i++) {\\n    t.assert(decoder.read() === words[i])\\n  }\\n}\\n\",\"import { simpleDiffString, simpleDiffArray } from './diff.js'\\nimport * as prng from './prng.js'\\nimport * as f from './function.js'\\nimport * as t from './testing.js'\\nimport * as object from './object.js'\\n\\n/**\\n * @param {string} a\\n * @param {string} b\\n * @param {{index: number,remove:number,insert:string}} expected\\n */\\nfunction runDiffTest (a, b, expected) {\\n  const result = simpleDiffString(a, b)\\n  t.compare(result, expected)\\n  const arrResult = simpleDiffArray(a.split(''), b.split(''))\\n  t.compare(arrResult, object.assign({}, result, { insert: result.insert.split('') }))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testDiffing = tc => {\\n  runDiffTest('abc', 'axc', { index: 1, remove: 1, insert: 'x' })\\n  runDiffTest('bc', 'xc', { index: 0, remove: 1, insert: 'x' })\\n  runDiffTest('ab', 'ax', { index: 1, remove: 1, insert: 'x' })\\n  runDiffTest('b', 'x', { index: 0, remove: 1, insert: 'x' })\\n  runDiffTest('', 'abc', { index: 0, remove: 0, insert: 'abc' })\\n  runDiffTest('abc', 'xyz', { index: 0, remove: 3, insert: 'xyz' })\\n  runDiffTest('axz', 'au', { index: 1, remove: 2, insert: 'u' })\\n  runDiffTest('ax', 'axy', { index: 2, remove: 0, insert: 'y' })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatDiffing = tc => {\\n  const a = prng.word(tc.prng)\\n  const b = prng.word(tc.prng)\\n  const change = simpleDiffString(a, b)\\n  const recomposed = `${a.slice(0, change.index)}${change.insert}${a.slice(change.index + change.remove)}`\\n  t.compareStrings(recomposed, b)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testArrayDiffing = tc => {\\n  const a = [[1, 2], { x: 'x' }]\\n  const b = [[1, 2], { x: 'x' }]\\n  t.compare(simpleDiffArray(a, b, f.equalityFlat), { index: 2, remove: 0, insert: [] })\\n  t.compare(simpleDiffArray(a, b, f.equalityStrict), { index: 0, remove: 2, insert: b })\\n  t.compare(simpleDiffArray([{ x: 'y' }, []], a, f.equalityFlat), { index: 0, remove: 2, insert: b })\\n}\\n\",\"import * as t from './testing.js'\\nimport * as math from './math.js'\\nimport * as buffer from './buffer.js'\\nimport * as map from './map.js'\\nimport * as promise from './promise.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testComparing = tc => {\\n  t.compare({}, {})\\n  t.compare({ a: 4 }, { a: 4 }, 'simple compare (object)')\\n  t.compare([1, 2], [1, 2], 'simple compare (array)')\\n  t.compare({ a: [1, 2] }, { a: [1, 2] }, 'simple compare nested')\\n  t.compare(new Set(['3', 1234]), new Set(['3', 1234]), 'compare Sets')\\n  const map1 = map.create()\\n  map1.set(1, 2)\\n  map1.set('x', {})\\n  map1.set(98, 'tst')\\n  const map2 = new Map()\\n  map2.set(1, 2)\\n  map2.set('x', {})\\n  map2.set(98, 'tst')\\n  t.compare(map1, map2, 'compare Maps')\\n\\n  t.describe('The following errors are expected!')\\n  t.fails(() => {\\n    t.compare({ a: 4 }, { b: 5 }, 'childs are not equal')\\n  })\\n  t.fails(() => {\\n    t.compare({ a: 4 }, { a: 5 }, 'childs are not equal')\\n  })\\n  t.fails(() => {\\n    t.compare({ a: 4 }, null, 'childs are not equal')\\n  })\\n  t.fails(() => {\\n    // @ts-ignore\\n    t.compare({ a: 4 }, [4], 'childs have different types')\\n  })\\n  t.fails(() => {\\n    t.compare({ a: 4 }, { a: 4, b: 5 }, 'childs have different length (object)')\\n  })\\n  t.fails(() => {\\n    t.compare([1], [1, 2]) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    t.compare(buffer.createUint8ArrayFromLen(1), buffer.createUint8ArrayFromLen(2), 'Uint8Arrays have different length')\\n  })\\n  t.fails(() => {\\n    t.compare(buffer.createUint8ArrayFromLen(1).buffer, buffer.createUint8ArrayFromLen(2).buffer, 'ArrayBuffer have different length')\\n  })\\n  t.fails(() => {\\n    t.compareStrings('str1', 'str2', 'Strings comparison can fail')\\n  })\\n  t.compareArrays([], [], 'Comparing empty arrays')\\n  t.fails(() => {\\n    t.compareArrays([1], [1, 2], 'Compare arrays with different length')\\n  })\\n  t.fails(() => {\\n    t.compareArrays([1], [2]) // Compare different arrays -- no message\\n  })\\n  t.compareObjects({ x: 1 }, { x: 1 }, 'comparing objects')\\n  t.fails(() => {\\n    t.compareObjects({}, { x: 1 }, 'compareObjects can fail')\\n  })\\n  t.fails(() => {\\n    t.compareObjects({ x: 3 }, { x: 1 }) // Compare different objects -- no message\\n  })\\n  t.fails(() => {\\n    t.compare({ x: undefined }, { y: 1 }, 'compare correctly handles undefined')\\n  })\\n  t.fails(() => {\\n    t.compareObjects({ x: undefined }, { y: 1 }, 'compare correctly handles undefined')\\n  })\\n  t.describe('Map fails')\\n  t.fails(() => {\\n    const m1 = new Map()\\n    m1.set(1, 2)\\n    const m2 = new Map()\\n    m2.set(1, 3)\\n    t.compare(m1, m2) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    const m1 = new Map()\\n    m1.set(2, 2)\\n    const m2 = new Map()\\n    m2.set(1, 2)\\n    t.compare(m1, m2) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    const m1 = new Map()\\n    m1.set(1, 2)\\n    const m2 = new Map()\\n    t.compare(m1, m2) // childs have different length (array) -- no message\\n  })\\n  t.describe('Set fails')\\n  t.fails(() => {\\n    t.compare(new Set([1]), new Set([1, 2])) // childs have different length (array) -- no message\\n  })\\n  t.fails(() => {\\n    t.compare(new Set([1]), new Set([2])) // childs have different length (array) -- no message\\n  })\\n}\\n\\nexport const testFailing = () => {\\n  t.fails(() => {\\n    t.fail('This fail is expected')\\n  })\\n}\\n\\nexport const testSkipping = () => {\\n  t.skip(false)\\n  t.assert(true)\\n  t.skip()\\n  /* istanbul ignore next */\\n  t.fail('should have skipped')\\n}\\n\\nexport const testAsync = async () => {\\n  await t.measureTimeAsync('time', () => promise.create(r => setTimeout(r)))\\n  await t.groupAsync('some description', () => promise.wait(1))\\n}\\n\\nexport const testRepeatRepetition = () => {\\n  const arr = []\\n  const n = 100\\n  for (let i = 1; i <= n; i++) {\\n    arr.push(i)\\n  }\\n  t.assert(arr.reduce(math.add, 0) === (n + 1) * n / 2)\\n}\\n\",\"/**\\n * Error helpers.\\n *\\n * @module error\\n */\\n\\n/**\\n * @param {string} s\\n * @return {Error}\\n */\\n/* istanbul ignore next */\\nexport const create = s => new Error(s)\\n\\n/**\\n * @throws {Error}\\n * @return {never}\\n */\\n/* istanbul ignore next */\\nexport const methodUnimplemented = () => {\\n  throw create('Method unimplemented')\\n}\\n\\n/**\\n * @throws {Error}\\n * @return {never}\\n */\\n/* istanbul ignore next */\\nexport const unexpectedCase = () => {\\n  throw create('Unexpected case')\\n}\\n\",\"/* eslint-env browser */\\n\\n/**\\n * Helpers to work with IndexedDB.\\n *\\n * @module idb\\n */\\n\\nimport * as promise from './promise.js'\\nimport * as error from './error.js'\\n\\n/**\\n * IDB Request to Promise transformer\\n *\\n * @param {IDBRequest} request\\n * @return {Promise<any>}\\n */\\n/* istanbul ignore next */\\nexport const rtop = request => promise.create((resolve, reject) => {\\n  /* istanbul ignore next */\\n  // @ts-ignore\\n  request.onerror = event => reject(new Error(event.target.error))\\n  /* istanbul ignore next */\\n  // @ts-ignore\\n  request.onblocked = () => location.reload()\\n  // @ts-ignore\\n  request.onsuccess = event => resolve(event.target.result)\\n})\\n\\n/**\\n * @param {string} name\\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\\n * @return {Promise<IDBDatabase>}\\n */\\n/* istanbul ignore next */\\nexport const openDB = (name, initDB) => promise.create((resolve, reject) => {\\n  const request = indexedDB.open(name)\\n  /**\\n   * @param {any} event\\n   */\\n  request.onupgradeneeded = event => initDB(event.target.result)\\n  /* istanbul ignore next */\\n  /**\\n   * @param {any} event\\n   */\\n  request.onerror = event => reject(error.create(event.target.error))\\n  /* istanbul ignore next */\\n  request.onblocked = () => location.reload()\\n  /**\\n   * @param {any} event\\n   */\\n  request.onsuccess = event => {\\n    /**\\n     * @type {IDBDatabase}\\n     */\\n    const db = event.target.result\\n    /* istanbul ignore next */\\n    db.onversionchange = () => { db.close() }\\n    /* istanbul ignore if */\\n    if (typeof addEventListener !== 'undefined') {\\n      addEventListener('unload', () => db.close())\\n    }\\n    resolve(db)\\n  }\\n})\\n\\n/**\\n * @param {string} name\\n */\\n/* istanbul ignore next */\\nexport const deleteDB = name => rtop(indexedDB.deleteDatabase(name))\\n\\n/**\\n * @param {IDBDatabase} db\\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\\n */\\n/* istanbul ignore next */\\nexport const createStores = (db, definitions) => definitions.forEach(d =>\\n  // @ts-ignore\\n  db.createObjectStore.apply(db, d)\\n)\\n\\n/**\\n * @param {IDBDatabase} db\\n * @param {Array<string>} stores\\n * @param {\\\"readwrite\\\"|\\\"readonly\\\"} [access]\\n * @return {Array<IDBObjectStore>}\\n */\\nexport const transact = (db, stores, access = 'readwrite') => {\\n  const transaction = db.transaction(stores, access)\\n  return stores.map(store => getStore(transaction, store))\\n}\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<number>}\\n */\\n/* istanbul ignore next */\\nexport const count = (store, range) =>\\n  rtop(store.count(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const get = (store, key) =>\\n  rtop(store.get(key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\\n */\\n/* istanbul ignore next */\\nexport const del = (store, key) =>\\n  rtop(store.delete(key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | boolean} item\\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\\n */\\n/* istanbul ignore next */\\nexport const put = (store, item, key) =>\\n  rtop(store.put(item, key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date | boolean}  item\\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\\n * @return {Promise<any>}\\n */\\n/* istanbul ignore next */\\nexport const add = (store, item, key) =>\\n  rtop(store.add(item, key))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {String | number | ArrayBuffer | Date}  item\\n * @return {Promise<number>} Returns the generated key\\n */\\n/* istanbul ignore next */\\nexport const addAutoKey = (store, item) =>\\n  rtop(store.add(item))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const getAll = (store, range) =>\\n  rtop(store.getAll(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<any>>}\\n */\\n/* istanbul ignore next */\\nexport const getAllKeys = (store, range) =>\\n  rtop(store.getAllKeys(range))\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} query\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n * @return {Promise<any>}\\n */\\nexport const queryFirst = (store, query, direction) => {\\n  /**\\n   * @type {any}\\n   */\\n  let first = null\\n  return iterateKeys(store, query, key => {\\n    first = key\\n    return false\\n  }, direction).then(() => first)\\n}\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @return {Promise<any>}\\n */\\nexport const getLastKey = store => queryFirst(store, null, 'prev')\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @return {Promise<any>}\\n */\\nexport const getFirstKey = store => queryFirst(store, null, 'prev')\\n\\n/**\\n * @typedef KeyValuePair\\n * @type {Object}\\n * @property {any} k key\\n * @property {any} v Value\\n */\\n\\n/**\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange} [range]\\n * @return {Promise<Array<KeyValuePair>>}\\n */\\n/* istanbul ignore next */\\nexport const getAllKeysValues = (store, range) =>\\n  // @ts-ignore\\n  promise.all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })))\\n\\n/**\\n * @param {any} request\\n * @param {function(IDBCursorWithValue):void|boolean} f\\n * @return {Promise<void>}\\n */\\n/* istanbul ignore next */\\nconst iterateOnRequest = (request, f) => promise.create((resolve, reject) => {\\n  /* istanbul ignore next */\\n  request.onerror = reject\\n  /**\\n   * @param {any} event\\n   */\\n  request.onsuccess = event => {\\n    const cursor = event.target.result\\n    if (cursor === null || f(cursor) === false) {\\n      return resolve()\\n    }\\n    cursor.continue()\\n  }\\n})\\n\\n/**\\n * Iterate on keys and values\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} keyrange\\n * @param {function(any,any):void|boolean} f Callback that receives (value, key)\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n */\\n/* istanbul ignore next */\\nexport const iterate = (store, keyrange, f, direction = 'next') =>\\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key))\\n\\n/**\\n * Iterate on the keys (no values)\\n *\\n * @param {IDBObjectStore} store\\n * @param {IDBKeyRange|null} keyrange\\n * @param {function(any):void|boolean} f callback that receives the key\\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\\n */\\n/* istanbul ignore next */\\nexport const iterateKeys = (store, keyrange, f, direction = 'next') =>\\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key))\\n\\n/**\\n * Open store from transaction\\n * @param {IDBTransaction} t\\n * @param {String} store\\n * @returns {IDBObjectStore}\\n */\\n/* istanbul ignore next */\\nexport const getStore = (t, store) => t.objectStore(store)\\n\\n/**\\n * @param {any} lower\\n * @param {any} upper\\n * @param {boolean} lowerOpen\\n * @param {boolean} upperOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\\n\\n/**\\n * @param {any} upper\\n * @param {boolean} upperOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeUpperBound = (upper, upperOpen) => IDBKeyRange.upperBound(upper, upperOpen)\\n\\n/**\\n * @param {any} lower\\n * @param {boolean} lowerOpen\\n */\\n/* istanbul ignore next */\\nexport const createIDBKeyRangeLowerBound = (lower, lowerOpen) => IDBKeyRange.lowerBound(lower, lowerOpen)\\n\",\"import * as t from './testing.js'\\nimport * as idb from './indexeddb.js'\\nimport { isBrowser } from './environment.js'\\n\\n/* istanbul ignore next */\\n/**\\n * @param {IDBDatabase} db\\n */\\nconst initTestDB = db => idb.createStores(db, [['test', { autoIncrement: true }]])\\nconst testDBName = 'idb-test'\\n\\n/* istanbul ignore next */\\n/**\\n * @param {IDBDatabase} db\\n */\\nconst createTransaction = db => db.transaction(['test'], 'readwrite')\\n\\n/* istanbul ignore next */\\n/**\\n * @param {IDBTransaction} t\\n * @return {IDBObjectStore}\\n */\\nconst getStore = t => idb.getStore(t, 'test')\\n\\n/* istanbul ignore next */\\nexport const testRetrieveElements = async () => {\\n  t.skip(!isBrowser)\\n  t.describe('create, then iterate some keys')\\n  await idb.deleteDB(testDBName)\\n  const db = await idb.openDB(testDBName, initTestDB)\\n  const transaction = createTransaction(db)\\n  const store = getStore(transaction)\\n  await idb.put(store, 0, ['t', 1])\\n  await idb.put(store, 1, ['t', 2])\\n  const expectedKeys = [['t', 1], ['t', 2]]\\n  const expectedVals = [0, 1]\\n  const expectedKeysVals = [{ v: 0, k: ['t', 1] }, { v: 1, k: ['t', 2] }]\\n  t.describe('idb.getAll')\\n  const valsGetAll = await idb.getAll(store)\\n  t.compare(valsGetAll, expectedVals)\\n  t.describe('idb.getAllKeys')\\n  const valsGetAllKeys = await idb.getAllKeys(store)\\n  t.compare(valsGetAllKeys, expectedKeys)\\n  t.describe('idb.getAllKeysVals')\\n  const valsGetAllKeysVals = await idb.getAllKeysValues(store)\\n  t.compare(valsGetAllKeysVals, expectedKeysVals)\\n\\n  /**\\n   * @param {string} desc\\n   * @param {IDBKeyRange?} keyrange\\n   */\\n  const iterateTests = async (desc, keyrange) => {\\n    t.describe(`idb.iterate (${desc})`)\\n    /**\\n     * @type {Array<{v:any,k:any}>}\\n     */\\n    const valsIterate = []\\n    await idb.iterate(store, keyrange, (v, k) => {\\n      valsIterate.push({ v, k })\\n    })\\n    t.compare(valsIterate, expectedKeysVals)\\n    t.describe(`idb.iterateKeys (${desc})`)\\n    /**\\n     * @type {Array<any>}\\n     */\\n    const keysIterate = []\\n    await idb.iterateKeys(store, keyrange, key => {\\n      keysIterate.push(key)\\n    })\\n    t.compare(keysIterate, expectedKeys)\\n  }\\n  await iterateTests('range=null', null)\\n  const range = idb.createIDBKeyRangeBound(['t', 1], ['t', 2], false, false)\\n  // adding more items that should not be touched by iteration with above range\\n  await idb.put(store, 2, ['t', 3])\\n  await idb.put(store, 2, ['t', 0])\\n  await iterateTests('range!=null', range)\\n\\n  t.describe('idb.get')\\n  const getV = await idb.get(store, ['t', 1])\\n  t.assert(getV === 0)\\n  t.describe('idb.del')\\n  await idb.del(store, ['t', 0])\\n  const getVDel = await idb.get(store, ['t', 0])\\n  t.assert(getVDel === undefined)\\n  t.describe('idb.add')\\n  await idb.add(store, 99, 42)\\n  const idbVAdd = await idb.get(store, 42)\\n  t.assert(idbVAdd === 99)\\n  t.describe('idb.addAutoKey')\\n  const key = await idb.addAutoKey(store, 1234)\\n  const retrieved = await idb.get(store, key)\\n  t.assert(retrieved === 1234)\\n}\\n\",\"import * as binary from '../binary.js'\\nimport * as math from '../math.js'\\n\\n/**\\n * @module prng\\n */\\nconst N = 624\\nconst M = 397\\n\\n/**\\n * @param {number} u\\n * @param {number} v\\n */\\nconst twist = (u, v) => ((((u & 0x80000000) | (v & 0x7fffffff)) >>> 1) ^ ((v & 1) ? 0x9908b0df : 0))\\n\\n/**\\n * @param {Uint32Array} state\\n */\\nconst nextState = state => {\\n  let p = 0\\n  let j\\n  for (j = N - M + 1; --j; p++) {\\n    state[p] = state[p + M] ^ twist(state[p], state[p + 1])\\n  }\\n  for (j = M; --j; p++) {\\n    state[p] = state[p + M - N] ^ twist(state[p], state[p + 1])\\n  }\\n  state[p] = state[p + M - N] ^ twist(state[p], state[0])\\n}\\n\\n/**\\n * This is a port of Shawn Cokus's implementation of the original Mersenne Twister algorithm (http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/MTARCOK/mt19937ar-cok.c).\\n * MT has a very high period of 2^19937. Though the authors of xorshift describe that a high period is not\\n * very relevant (http://vigna.di.unimi.it/xorshift/). It is four times slower than xoroshiro128plus and\\n * needs to recompute its state after generating 624 numbers.\\n *\\n * ```js\\n * const gen = new Mt19937(new Date().getTime())\\n * console.log(gen.next())\\n * ```\\n *\\n * @public\\n */\\nexport class Mt19937 {\\n  /**\\n   * @param {number} seed Unsigned 32 bit number\\n   */\\n  constructor (seed) {\\n    this.seed = seed\\n    const state = new Uint32Array(N)\\n    state[0] = seed\\n    for (let i = 1; i < N; i++) {\\n      state[i] = (math.imul(1812433253, (state[i - 1] ^ (state[i - 1] >>> 30))) + i) & binary.BITS32\\n    }\\n    this._state = state\\n    this._i = 0\\n    nextState(this._state)\\n  }\\n\\n  /**\\n   * Generate a random signed integer.\\n   *\\n   * @return {Number} A 32 bit signed integer.\\n   */\\n  next () {\\n    if (this._i === N) {\\n      // need to compute a new state\\n      nextState(this._state)\\n      this._i = 0\\n    }\\n    let y = this._state[this._i++]\\n    y ^= (y >>> 11)\\n    y ^= (y << 7) & 0x9d2c5680\\n    y ^= (y << 15) & 0xefc60000\\n    y ^= (y >>> 18)\\n    return (y >>> 0) / (binary.BITS32 + 1)\\n  }\\n}\\n\",\"\\nimport { Xoroshiro128plus } from './prng/Xoroshiro128plus.js'\\nimport * as prng from './prng.js'\\nimport { MAX_SAFE_INTEGER } from './number.js'\\nimport * as binary from './binary.js'\\nimport * as t from './testing.js'\\nimport { Xorshift32 } from './prng/Xorshift32.js'\\nimport { Mt19937 } from './prng/Mt19937.js'\\nimport * as dom from './dom.js'\\nimport { isBrowser, production } from './environment.js'\\nimport * as math from './math.js'\\n\\nconst genTestData = 5000\\n\\n/**\\n * @param {t.TestCase} tc\\n * @param {prng.PRNG} gen\\n */\\nconst runGenTest = (tc, gen) => {\\n  t.group('next - average distribution', () => {\\n    let sum = 0\\n    for (let i = 0; i < genTestData; i++) {\\n      const next = gen.next()\\n      if (next >= 1) {\\n        t.fail('unexpected prng result')\\n      }\\n      sum += next\\n    }\\n    const avg = sum / genTestData\\n    t.assert(avg >= 0.45)\\n    t.assert(avg <= 0.55)\\n  })\\n\\n  t.group('bool - bool distribution is fair', () => {\\n    let head = 0\\n    let tail = 0\\n    let b\\n    let i\\n\\n    for (i = 0; i < genTestData; i++) {\\n      b = prng.bool(gen)\\n      if (b) {\\n        head++\\n      } else {\\n        tail++\\n      }\\n    }\\n    t.info(`Generated ${head} heads and ${tail} tails.`)\\n    t.assert(tail >= math.floor(genTestData * 0.45), 'Generated enough tails.')\\n    t.assert(head >= math.floor(genTestData * 0.45), 'Generated enough heads.')\\n  })\\n  t.group('int31 - integers average correctly', () => {\\n    let count = 0\\n    let i\\n\\n    for (i = 0; i < genTestData; i++) {\\n      count += prng.uint32(gen, 0, 100)\\n    }\\n    const average = count / genTestData\\n    const expectedAverage = 100 / 2\\n    t.info(`Average is: ${average}. Expected average is ${expectedAverage}.`)\\n    t.assert(math.abs(average - expectedAverage) <= 2, 'Expected average is at most 1 off.')\\n  })\\n\\n  t.group('int32 - generates integer with 32 bits', () => {\\n    let largest = 0\\n    let smallest = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.int32(gen, -binary.BITS31, binary.BITS31)\\n      if (newNum > largest) {\\n        largest = newNum\\n      }\\n      if (newNum < smallest) {\\n        smallest = newNum\\n      }\\n    }\\n    t.assert(smallest < -1000, 'Smallest number is negative')\\n    t.assert(largest > 1000, 'Largest number is positive')\\n    t.info(`Largest number generated is ${largest} (0x${largest.toString(16)})`)\\n    t.info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`)\\n    t.assert((smallest & binary.BIT32) !== 0, 'Largest number is 32 bits long') // largest.. assuming we convert int to uint\\n  })\\n\\n  t.group('uint32 - generates unsigned integer with 32 bits', () => {\\n    let num = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.uint32(gen, 0, binary.BITS32)\\n      if (newNum > num) {\\n        num = newNum\\n      }\\n    }\\n    t.info(`Largest number generated is ${num} (0x${num.toString(16)})`)\\n    t.assert((num & binary.BIT32) !== 0, 'Largest number is 32 bits long.')\\n  })\\n\\n  t.group('int53 - generates integer exceeding 32 bits', () => {\\n    let largest = 0\\n    let smallest = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.int53(gen, Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)\\n      if (newNum > largest) {\\n        largest = newNum\\n      }\\n      if (newNum < smallest) {\\n        smallest = newNum\\n      }\\n    }\\n    t.assert(smallest < -1000, 'Smallest number is negative')\\n    t.assert(largest > 1000, 'Largest number is positive')\\n    t.info(`Largest number generated is ${largest}`)\\n    t.info(`Smallest number generated is ${smallest}`)\\n    t.assert(largest > (binary.BITS32 >>> 0), 'Largest number exceeds BITS32')\\n    t.assert(smallest < binary.BITS32, 'Smallest Number is smaller than BITS32 (negative)')\\n  })\\n\\n  t.group('uint53 - generates integer exceeding 32 bits', () => {\\n    let largest = 0\\n    let smallest = 10000\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.uint53(gen, 0, Number.MAX_SAFE_INTEGER)\\n      if (newNum > largest) {\\n        largest = newNum\\n      }\\n      /* istanbul ignore if */\\n      if (newNum < smallest) {\\n        smallest = newNum\\n      }\\n    }\\n    t.assert(smallest >= 0, 'Smallest number is not negative')\\n    t.assert(largest > 1000, 'Largest number is positive')\\n    t.info(`Largest number generated is ${largest}`)\\n    t.info(`Smallest number generated is ${smallest}`)\\n    t.assert(largest > (binary.BITS32 >>> 0), 'Largest number exceeds BITS32')\\n  })\\n\\n  t.group('int31 - generates integer with 31 bits', () => {\\n    let num = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.uint32(gen, 0, binary.BITS31)\\n      if (newNum > num) {\\n        num = newNum\\n      }\\n    }\\n    t.info(`Largest number generated is ${num} (0x${num.toString(16)})`)\\n    t.assert((num & binary.BIT31) !== 0, 'Largest number is 31 bits long.')\\n  })\\n\\n  t.group('real - has 53 bit resolution', () => {\\n    let num = 0\\n    let i\\n    let newNum\\n    for (i = 0; i < genTestData; i++) {\\n      newNum = prng.real53(gen) * MAX_SAFE_INTEGER\\n      if (newNum > num) {\\n        num = newNum\\n      }\\n    }\\n    t.info(`Largest number generated is ${num}.`)\\n    t.assert((MAX_SAFE_INTEGER - num) / MAX_SAFE_INTEGER < 0.01, 'Largest number is close to MAX_SAFE_INTEGER (at most 1% off).')\\n  })\\n\\n  t.group('char - generates all ascii characters', () => {\\n    const charSet = new Set()\\n    const chars = ' !\\\"#$%&\\\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\\\"'\\n    for (let i = chars.length - 1; i >= 0; i--) {\\n      charSet.add(chars[i])\\n    }\\n    for (let i = 0; i < genTestData; i++) {\\n      const char = prng.char(gen)\\n      charSet.delete(char)\\n    }\\n    t.info(`Charactes missing: ${charSet.size} - generating all of \\\"${chars}\\\"`)\\n    t.assert(charSet.size === 0, 'Generated all documented characters.')\\n  })\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testGeneratorXoroshiro128plus = tc => runGenTest(tc, new Xoroshiro128plus(tc.seed))\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testGeneratorXorshift32 = tc => {\\n  t.skip(!production)\\n  runGenTest(tc, new Xorshift32(tc.seed))\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testGeneratorMt19937 = tc => {\\n  t.skip(!production)\\n  runGenTest(tc, new Mt19937(tc.seed))\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {prng.PRNG} gen\\n * @param {t.TestCase} tc\\n */\\nconst printDistribution = (gen, tc) => {\\n  const DIAMETER = genTestData / 50\\n  const canvas = dom.canvas(DIAMETER * 3, DIAMETER)\\n  const ctx = canvas.getContext('2d')\\n  if (ctx == null) {\\n    return t.skip()\\n  }\\n  ctx.fillStyle = 'blue'\\n  for (let i = 0; i < genTestData; i++) {\\n    const x = prng.int32(gen, 0, DIAMETER * 3)\\n    const y = prng.int32(gen, 0, DIAMETER)\\n    ctx.fillRect(x, y, 1, 2)\\n  }\\n  t.printCanvas(canvas, DIAMETER)\\n}\\n\\n/* istanbul ignore next */\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testNumberDistributions = tc => {\\n  t.skip(!isBrowser)\\n  t.group('Xoroshiro128plus', () => printDistribution(new Xoroshiro128plus(tc.seed), tc))\\n  t.group('Xorshift32', () => printDistribution(new Xorshift32(tc.seed), tc))\\n  t.group('MT19937', () => printDistribution(new Mt19937(tc.seed), tc))\\n}\\n\",\"import * as statistics from './statistics.js'\\nimport * as t from './testing.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMedian = tc => {\\n  t.assert(math.isNaN(statistics.median([])), 'median([]) = NaN')\\n  t.assert(statistics.median([1]) === 1, 'median([x]) = x')\\n  t.assert(statistics.median([1, 2, 3]) === 2, 'median([a,b,c]) = b')\\n  t.assert(statistics.median([1, 2, 3, 4]) === (2 + 3) / 2, 'median([a,b,c,d]) = (b+c)/2')\\n  t.assert(statistics.median([1, 2, 3, 4, 5]) === 3, 'median([a,b,c,d,e]) = c')\\n  t.assert(statistics.median([1, 2, 3, 4, 5, 6]) === (3 + 4) / 2, 'median([a,b,c,d,e,f]) = (c+d)/2')\\n}\\n\",\"\\nimport * as binary from './binary.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testBitx = tc => {\\n  for (let i = 1; i <= 32; i++) {\\n    // @ts-ignore\\n    t.assert(binary[`BIT${i}`] === (1 << (i - 1)), `BIT${i}=${1 << (i - 1)}`)\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testBitsx = tc => {\\n  t.assert(binary.BITS0 === 0)\\n  for (let i = 1; i < 32; i++) {\\n    const expected = ((1 << i) - 1) >>> 0\\n    // @ts-ignore\\n    const have = binary[`BITS${i}`]\\n    t.assert(have === expected, `BITS${i}=${have}=${expected}`)\\n  }\\n  t.assert(binary.BITS32 === 0xFFFFFFFF)\\n}\\n\",\"import * as random from './random.js'\\nimport * as t from './testing.js'\\nimport * as binary from './binary.js'\\nimport * as math from './math.js'\\nimport * as number from './number.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUint32 = tc => {\\n  const iterations = 10000\\n  let largest = 0\\n  let smallest = number.HIGHEST_INT32\\n  let newNum = 0\\n  let lenSum = 0\\n  let ones = 0\\n  for (let i = 0; i < iterations; i++) {\\n    newNum = random.uint32()\\n    lenSum += newNum.toString().length\\n    ones += newNum.toString(2).split('').filter(x => x === '1').length\\n    if (newNum > largest) {\\n      largest = newNum\\n    }\\n    if (newNum < smallest) {\\n      smallest = newNum\\n    }\\n  }\\n  t.info(`Largest number generated is ${largest} (0x${largest.toString(16)})`)\\n  t.info(`Smallest number generated is ${smallest} (0x${smallest.toString(16)})`)\\n  t.info(`Average decimal length of number is ${lenSum / iterations}`)\\n  t.info(`Average number of 1s in number is ${ones / iterations} (expecting ~16)`)\\n  t.assert(((largest & binary.BITS32) >>> 0) === largest, 'Largest number is 32 bits long.')\\n  t.assert(((smallest & binary.BITS32) >>> 0) === smallest, 'Smallest number is 32 bits long.')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUuidv4 = tc => {\\n  t.info(`Generated a UUIDv4: ${random.uuidv4()}`)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUuidv4Overlaps = tc => {\\n  t.skip(!t.production)\\n  const iterations = t.extensive ? 1000000 : 10000\\n  const uuids = new Set()\\n  for (let i = 0; i < iterations; i++) {\\n    const uuid = random.uuidv4()\\n    if (uuids.has(uuid)) {\\n      t.fail('uuid already exists')\\n    } else {\\n      uuids.add(uuid)\\n    }\\n    if (uuids.size % (iterations / 20) === 0) {\\n      t.info(`${math.round(uuids.size * 100 / iterations)}% complete`)\\n    }\\n  }\\n  t.assert(uuids.size === iterations)\\n}\\n\",\"import * as promise from './promise.js'\\nimport * as t from './testing.js'\\nimport * as time from './time.js'\\nimport * as error from './error.js'\\n\\n/**\\n * @param {Promise<any>} p\\n * @param {number} min\\n * @param {number} max\\n */\\nconst measureP = (p, min, max) => {\\n  const start = time.getUnixTime()\\n  return p.then(() => {\\n    const duration = time.getUnixTime() - start\\n    t.assert(duration <= max, 'Expected promise to take less time')\\n    t.assert(duration >= min, 'Expected promise to take more time')\\n  })\\n}\\n\\n/**\\n * @template T\\n * @param {Promise<T>} p\\n * @return {Promise<T>}\\n */\\nconst failsP = p => promise.create((resolve, reject) => p.then(() => reject(error.create('Promise should fail')), resolve))\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatPromise = async tc => {\\n  t.assert(promise.createEmpty(r => r()).constructor === Promise, 'p.create() creates a Promise')\\n  t.assert(promise.resolve().constructor === Promise, 'p.reject() creates a Promise')\\n  const rejectedP = promise.reject()\\n  t.assert(rejectedP.constructor === Promise, 'p.reject() creates a Promise')\\n  rejectedP.catch(() => {})\\n  await promise.createEmpty(r => r())\\n  await failsP(promise.reject())\\n  await promise.resolve()\\n  await measureP(promise.wait(10), 7, 1000)\\n  await measureP(failsP(promise.until(15, () => false)), 15, 1000)\\n  const startTime = time.getUnixTime()\\n  await measureP(promise.until(0, () => (time.getUnixTime() - startTime) > 100), 100, 1000)\\n  await promise.all([promise.wait(5), promise.wait(10)])\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testispromise = tc => {\\n  t.assert(promise.isPromise(new Promise(() => {})))\\n  t.assert(promise.isPromise(promise.create(() => {})))\\n  const rej = promise.reject()\\n  t.assert(promise.isPromise(rej))\\n  rej.catch(() => {})\\n  t.assert(promise.isPromise(promise.resolve()))\\n  t.assert(promise.isPromise({ then: () => {}, catch: () => {}, finally: () => {} }))\\n  t.fails(() => {\\n    t.assert(promise.isPromise({ then: () => {}, catch: () => {} }))\\n  })\\n}\\n\",\"\\nexport class QueueNode {\\n  constructor () {\\n    /**\\n     * @type {QueueNode|null}\\n     */\\n    this.next = null\\n  }\\n}\\n\\nexport class Queue {\\n  constructor () {\\n    /**\\n     * @type {QueueNode | null}\\n     */\\n    this.start = null\\n    /**\\n     * @type {QueueNode | null}\\n     */\\n    this.end = null\\n  }\\n}\\n\\n/**\\n * @note The queue implementation is experimental and unfinished.\\n * Don't use this in production yet.\\n *\\n * @return {Queue}\\n */\\nexport const create = () => new Queue()\\n\\n/**\\n * @param {Queue} queue\\n */\\nexport const isEmpty = queue => queue.start === null\\n\\n/**\\n * @param {Queue} queue\\n * @param {QueueNode} n\\n */\\nexport const enqueue = (queue, n) => {\\n  if (queue.end !== null) {\\n    queue.end.next = n\\n    queue.end = n\\n  } else {\\n    queue.end = n\\n    queue.start = n\\n  }\\n}\\n\\n/**\\n * @param {Queue} queue\\n * @return {QueueNode | null}\\n */\\nexport const dequeue = queue => {\\n  const n = queue.start\\n  if (n !== null) {\\n    // @ts-ignore\\n    queue.start = n.next\\n    return n\\n  }\\n  return null\\n}\\n\",\"import * as t from './testing.js'\\nimport * as queue from './queue.js'\\n\\nclass QueueItem extends queue.QueueNode {\\n  /**\\n   * @param {number} v\\n   */\\n  constructor (v) {\\n    super()\\n    this.v = v\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testEnqueueDequeue = tc => {\\n  const N = 30\\n  /**\\n   * @type {queue.Queue}\\n   */\\n  const q = queue.create()\\n  t.assert(queue.isEmpty(q))\\n  t.assert(queue.dequeue(q) === null)\\n  for (let i = 0; i < N; i++) {\\n    queue.enqueue(q, new QueueItem(i))\\n    t.assert(!queue.isEmpty(q))\\n  }\\n  for (let i = 0; i < N; i++) {\\n    const item = /** @type {QueueItem} */ (queue.dequeue(q))\\n    t.assert(item !== null && item.v === i)\\n  }\\n  t.assert(queue.dequeue(q) === null)\\n}\\n\",\"import * as map from './map.js'\\nimport * as math from './math.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMap = tc => {\\n  const m = map.create()\\n  m.set(1, 2)\\n  m.set(2, 3)\\n  t.assert(map.map(m, (value, key) => value * 2 + key).reduce(math.add) === 13)\\n  let numberOfWrites = 0\\n  const createT = () => {\\n    numberOfWrites++\\n    return {}\\n  }\\n  map.setIfUndefined(m, 3, createT)\\n  map.setIfUndefined(m, 3, createT)\\n  map.setIfUndefined(m, 3, createT)\\n  t.compare(map.copy(m), m)\\n  t.assert(numberOfWrites === 1)\\n}\\n\",\"import * as eventloop from './eventloop.js'\\nimport * as t from './testing.js'\\nimport * as promise from './promise.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testEventloopOrder = tc => {\\n  let currI = 0\\n  for (let i = 0; i < 10; i++) {\\n    const bi = i\\n    eventloop.enqueue(() => {\\n      t.assert(currI++ === bi)\\n    })\\n  }\\n  eventloop.enqueue(() => {\\n    t.assert(currI === 10)\\n  })\\n  t.assert(currI === 0)\\n  return promise.all([\\n    promise.createEmpty(resolve => eventloop.enqueue(resolve)),\\n    promise.until(0, () => currI === 10)\\n  ])\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testTimeout = async tc => {\\n  let set = false\\n  const timeout = eventloop.timeout(0, () => {\\n    set = true\\n  })\\n  timeout.destroy()\\n  await promise.create(resolve => {\\n    eventloop.timeout(10, resolve)\\n  })\\n  t.assert(set === false)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testInterval = async tc => {\\n  let set = false\\n  const timeout = eventloop.interval(1, () => {\\n    set = true\\n  })\\n  timeout.destroy()\\n  let i = 0\\n  eventloop.interval(1, () => {\\n    i++\\n  })\\n  await promise.until(0, () => i > 2)\\n  t.assert(set === false)\\n  t.assert(i > 1)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnimationFrame = async tc => {\\n  let x = false\\n  eventloop.animationFrame(() => { x = true })\\n  await promise.until(0, () => x)\\n  t.assert(x)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testIdleCallback = async tc => {\\n  await promise.create(resolve => {\\n    eventloop.idleCallback(resolve)\\n  })\\n}\\n\",\"import * as time from './time.js'\\nimport * as t from './testing.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testTime = tc => {\\n  const l = time.getDate().getTime()\\n  const r = time.getUnixTime()\\n  t.assert(math.abs(l - r) < 10, 'Times generated are roughly the same')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testHumanDuration = tc => {\\n  t.assert(time.humanizeDuration(10) === '10ms')\\n  t.assert(time.humanizeDuration(0.1) === '100μs')\\n  t.assert(time.humanizeDuration(61030) === '1min 1s')\\n  t.assert(time.humanizeDuration(60030) === '1min')\\n  t.assert(time.humanizeDuration(3600000) === '1h')\\n  t.assert(time.humanizeDuration(3640000) === '1h 1min')\\n  t.assert(time.humanizeDuration(3700000) === '1h 2min')\\n  t.assert(time.humanizeDuration(60 * 60 * 1000 + 29000) === '1h')\\n  t.assert(time.humanizeDuration(60 * 60 * 1000 + 31000) === '1h 1min')\\n  t.assert(time.humanizeDuration(60 * 60 * 1000 + 31000 * 3) === '1h 2min')\\n  t.assert(time.humanizeDuration(3600000 * 25) === '1d 1h')\\n  t.assert(time.humanizeDuration(3600000 * 24.6) === '1d 1h')\\n  t.assert(time.humanizeDuration(3600000 * 25.6) === '1d 2h')\\n  t.assert(time.humanizeDuration(3600000 * 24 * 400) === '400d')\\n  // test round\\n  t.assert(time.humanizeDuration(6001) === '6s')\\n}\\n\",\"import * as t from './testing.js'\\nimport * as pair from './pair.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testPair = tc => {\\n  const ps = [pair.create(1, 2), pair.create(3, 4), pair.createReversed(6, 5)]\\n  t.describe('Counting elements in pair list')\\n  let countLeft = 0\\n  let countRight = 0\\n  pair.forEach(ps, (left, right) => {\\n    countLeft += left\\n    countRight += right\\n  })\\n  t.assert(countLeft === 9)\\n  t.assert(countRight === 12)\\n  t.assert(countLeft === pair.map(ps, left => left).reduce(math.add))\\n  t.assert(countRight === pair.map(ps, (left, right) => right).reduce(math.add))\\n}\\n\",\"import * as t from './testing.js'\\nimport * as object from './object.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testObject = tc => {\\n  t.assert(object.create().constructor === undefined, 'object.create creates an empty object without constructor')\\n  t.describe('object.equalFlat')\\n  t.assert(object.equalFlat({}, {}), 'comparing equal objects')\\n  t.assert(object.equalFlat({ x: 1 }, { x: 1 }), 'comparing equal objects')\\n  t.assert(object.equalFlat({ x: 'dtrn' }, { x: 'dtrn' }), 'comparing equal objects')\\n  t.assert(!object.equalFlat({ x: {} }, { x: {} }), 'flatEqual does not dive deep')\\n  t.assert(object.equalFlat({ x: undefined }, { x: undefined }), 'flatEqual handles undefined')\\n  t.assert(!object.equalFlat({ x: undefined }, { y: {} }), 'flatEqual handles undefined')\\n  t.describe('object.every')\\n  t.assert(object.every({ a: 1, b: 3 }, (v, k) => (v % 2) === 1 && k !== 'c'))\\n  t.assert(!object.every({ a: 1, b: 3, c: 5 }, (v, k) => (v % 2) === 1 && k !== 'c'))\\n  t.describe('object.some')\\n  t.assert(object.some({ a: 1, b: 3 }, (v, k) => v === 3 && k === 'b'))\\n  t.assert(!object.some({ a: 1, b: 5 }, (v, k) => v === 3))\\n  t.assert(object.some({ a: 1, b: 5 }, () => true))\\n  t.assert(!object.some({ a: 1, b: 5 }, (v, k) => false))\\n  t.describe('object.forEach')\\n  let forEachSum = 0\\n  object.forEach({ x: 1, y: 3 }, (v, k) => { forEachSum += v })\\n  t.assert(forEachSum === 4)\\n  t.describe('object.map')\\n  t.assert(object.map({ x: 1, z: 5 }, (v, k) => v).reduce(math.add) === 6)\\n  t.describe('object.length')\\n  t.assert(object.length({}) === 0)\\n  t.assert(object.length({ x: 1 }) === 1)\\n}\\n\",\"import * as t from './testing.js'\\nimport * as math from './math.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMath = tc => {\\n  t.describe('math.abs')\\n  t.assert(math.abs(-1) === 1)\\n  t.assert(math.abs(Number.MIN_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER)\\n  t.assert(math.abs(Number.MAX_SAFE_INTEGER) === Number.MAX_SAFE_INTEGER)\\n  t.describe('math.add')\\n  t.assert([1, 2, 3, 4, 5].reduce(math.add) === 15)\\n  t.describe('math.ceil')\\n  t.assert(math.ceil(1.5) === 2)\\n  t.assert(math.ceil(-1.5) === -1)\\n  t.describe('math.floor')\\n  t.assert(math.floor(1.5) === 1)\\n  t.assert(math.floor(-1.5) === -2)\\n  t.describe('math.isNaN')\\n  t.assert(math.isNaN(NaN))\\n  // @ts-ignore\\n  t.assert(!math.isNaN(null))\\n  t.describe('math.max')\\n  t.assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(math.max) === 3475)\\n  t.describe('math.min')\\n  t.assert([1, 3, 65, 1, 314, 25, 3475, 2, 1].reduce(math.min) === 1)\\n  t.describe('math.round')\\n  t.assert(math.round(0.5) === 1)\\n  t.assert(math.round(-0.5) === 0)\\n}\\n\",\"import * as t from './testing.js'\\nimport * as number from './number.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testNumber = tc => {\\n  t.describe('isNaN')\\n  t.assert(number.isNaN(NaN))\\n  t.assert(!number.isNaN(1 / 0))\\n  // @ts-ignore\\n  t.assert(number.isNaN('a' / 0))\\n  t.assert(!number.isNaN(0))\\n  t.describe('isInteger')\\n  t.assert(!number.isInteger(1 / 0))\\n  t.assert(!number.isInteger(NaN))\\n  t.assert(number.isInteger(0))\\n  t.assert(number.isInteger(-1))\\n}\\n\",\"import * as t from './testing.js'\\nimport * as buffer from './buffer.js'\\nimport * as prng from './prng.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testRepeatBase64Encoding = tc => {\\n  const gen = tc.prng\\n  const barr = prng.uint8Array(gen, 100000)\\n  const copied = buffer.copyUint8Array(barr)\\n  const encoded = buffer.toBase64(barr)\\n  t.assert(encoded.constructor === String)\\n  const decoded = buffer.fromBase64(encoded)\\n  t.assert(decoded.constructor === Uint8Array)\\n  t.assert(decoded.byteLength === barr.byteLength)\\n  for (let i = 0; i < barr.length; i++) {\\n    t.assert(barr[i] === decoded[i])\\n  }\\n  t.compare(copied, decoded)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testAnyEncoding = tc => {\\n  const obj = { val: 1, arr: [1, 2], str: '409231dtrnä' }\\n  const res = buffer.decodeAny(buffer.encodeAny(obj))\\n  t.compare(obj, res)\\n}\\n\",\"/**\\n * Efficient sort implementations.\\n *\\n * Note: These sort implementations were created to compare different sorting algorithms in JavaScript.\\n * Don't use them if you don't know what you are doing. Native Array.sort is almost always a better choice.\\n *\\n * @module sort\\n */\\n\\nimport * as math from './math.js'\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {number} lo\\n * @param {number} hi\\n * @param {function(T,T):number} compare\\n */\\nexport const _insertionSort = (arr, lo, hi, compare) => {\\n  for (let i = lo + 1; i <= hi; i++) {\\n    for (let j = i; j > 0 && compare(arr[j - 1], arr[j]) > 0; j--) {\\n      const tmp = arr[j]\\n      arr[j] = arr[j - 1]\\n      arr[j - 1] = tmp\\n    }\\n  }\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @return {void}\\n */\\nexport const insertionSort = (arr, compare) => {\\n  _insertionSort(arr, 0, arr.length - 1, compare)\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} arr\\n * @param {number} lo\\n * @param {number} hi\\n * @param {function(T,T):number} compare\\n */\\nconst _quickSort = (arr, lo, hi, compare) => {\\n  if (hi - lo < 42) {\\n    _insertionSort(arr, lo, hi, compare)\\n  } else {\\n    const pivot = arr[math.floor((lo + hi) / 2)]\\n    let i = lo\\n    let j = hi\\n    while (true) {\\n      while (compare(pivot, arr[i]) > 0) {\\n        i++\\n      }\\n      while (compare(arr[j], pivot) > 0) {\\n        j--\\n      }\\n      if (i >= j) {\\n        break\\n      }\\n      // swap arr[i] with arr[j]\\n      // and increment i and j\\n      const arri = arr[i]\\n      arr[i++] = arr[j]\\n      arr[j--] = arri\\n    }\\n    _quickSort(arr, lo, j, compare)\\n    _quickSort(arr, j + 1, hi, compare)\\n  }\\n}\\n\\n/**\\n * This algorithm beats Array.prototype.sort in Chrome only with arrays with 10 million entries.\\n * In most cases [].sort will do just fine. Make sure to performance test your use-case before you\\n * integrate this algorithm.\\n *\\n * Note that Chrome's sort is now a stable algorithm (Timsort). Quicksort is not stable.\\n *\\n * @template T\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @return {void}\\n */\\nexport const quicksort = (arr, compare) => {\\n  _quickSort(arr, 0, arr.length - 1, compare)\\n}\\n\",\"import * as prng from './prng.js'\\nimport * as t from './testing.js'\\nimport * as sort from './sort.js'\\n\\n/**\\n * @template T\\n * @param {t.TestCase} tc\\n * @param {Array<T>} arr\\n * @param {function(T,T):number} compare\\n * @param {function(T):number} getVal\\n */\\nconst runSortTest = (tc, arr, compare, getVal) => {\\n  const arrSort = arr\\n  const arrQuicksort = arr.slice()\\n  const arrInsertionsort = arr.slice()\\n  t.measureTime('Array.constructor.sort', () => {\\n    arrSort.sort(compare)\\n  })\\n  if (arrInsertionsort.length <= 10000) {\\n    t.measureTime('Insertionsort', () => {\\n      sort.insertionSort(arrInsertionsort, compare)\\n    })\\n    t.compareArrays(arrSort, arrInsertionsort, 'compare Insertionsort with expected result')\\n  }\\n  t.measureTime('Quicksort', () => {\\n    sort.quicksort(arrQuicksort, compare)\\n  })\\n  // quickSort is not stable\\n  t.compareArrays(arrSort.map(getVal), arrQuicksort.map(getVal), 'compare Quicksort with expected result')\\n}\\n\\n/**\\n * @template T\\n * @param {t.TestCase} tc\\n * @param {function(number):Array<T>} createArray\\n * @param {function(T,T):number} compare 0 if equal, 1 if a<b, -1 otherwise\\n * @param {function(T):number} getVal\\n */\\nconst createSortTest = (tc, createArray, compare, getVal) => {\\n  t.describe('sort 10 elements')\\n  runSortTest(tc, createArray(10), compare, getVal)\\n  t.describe('sort 10 elements')\\n  runSortTest(tc, createArray(10), compare, getVal)\\n  t.describe('sort 10 elements')\\n  runSortTest(tc, createArray(10), compare, getVal)\\n  t.describe('sort 50 elements')\\n  runSortTest(tc, createArray(50), compare, getVal)\\n  t.describe('sort 100 elements')\\n  runSortTest(tc, createArray(100), compare, getVal)\\n  t.describe('sort 500 elements')\\n  runSortTest(tc, createArray(500), compare, getVal)\\n  t.describe('sort 1k elements')\\n  runSortTest(tc, createArray(1000), compare, getVal)\\n  t.describe('sort 10k elements')\\n  runSortTest(tc, createArray(10000), compare, getVal)\\n  t.describe('sort 100k elements')\\n  runSortTest(tc, createArray(100000), compare, getVal)\\n  if (t.extensive) {\\n    t.describe('sort 1M elements')\\n    runSortTest(tc, createArray(1000000), compare, getVal)\\n    t.describe('sort 10M elements')\\n    runSortTest(tc, createArray(10000000), compare, getVal)\\n  }\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSortUint16 = tc => {\\n  t.skip(!t.production)\\n  /**\\n   * @param {number} i\\n   * @return {number}\\n   */\\n  const getVal = i => i\\n  /**\\n   * @param {number} a\\n   * @param {number} b\\n   * @return {number}\\n   */\\n  const compare = (a, b) => a - b\\n  /**\\n   * @param {number} len\\n   * @return {Array<number>}\\n   */\\n  const createArray = len => Array.from(new Uint16Array(prng.uint8Array(tc.prng, len * 2)))\\n  createSortTest(tc, createArray, compare, getVal)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSortUint32 = tc => {\\n  t.skip(!t.production)\\n  /**\\n   * @param {number} i\\n   * @return {number}\\n   */\\n  const getVal = i => i\\n  /**\\n   * @param {number} a\\n   * @param {number} b\\n   * @return {number}\\n   */\\n  const compare = (a, b) => a - b\\n  /**\\n   * @param {number} len\\n   * @return {Array<number>}\\n   */\\n  const createArray = len => Array.from(prng.uint32Array(tc.prng, len))\\n  createSortTest(tc, createArray, compare, getVal)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testSortObjectUint32 = tc => {\\n  /**\\n   * @param {{index:number}} obj\\n   * @return {number}\\n   */\\n  const getVal = obj => obj.index\\n  /**\\n   * @param {{index:number}} a\\n   * @param {{index:number}} b\\n   * @return {number}\\n   */\\n  const compare = (a, b) => a.index - b.index\\n  /**\\n   * @param {number} len\\n   * @return {Array<{index:number}>}\\n   */\\n  const createArray = len => Array.from(prng.uint32Array(tc.prng, len)).map(index => ({ index }))\\n  createSortTest(tc, createArray, compare, getVal)\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testListVsArrayPerformance = tc => {\\n  /**\\n   * @typedef {{ val: number }} Val\\n   * @typedef {{ val: Val, next: item }|null} item\\n   */\\n  const len = 100000\\n  t.measureTime('array creation', () => {\\n    /**\\n     * @type {Array<Val>}\\n     */\\n    const array = new Array(len)\\n    for (let i = 0; i < len; i++) {\\n      array[i] = { val: i }\\n    }\\n  })\\n  t.measureTime('list creation', () => {\\n    /**\\n     * @type {item}\\n     */\\n    const listStart = { val: { val: 0 }, next: null }\\n    for (let i = 1, n = listStart; i < len; i++) {\\n      const next = { val: { val: i }, next: null }\\n      n.next = next\\n      n = next\\n    }\\n  })\\n}\\n\",\"/**\\n * Utility module to work with urls.\\n *\\n * @module url\\n */\\n\\nimport * as object from './object.js'\\n\\n/**\\n * Parse query parameters from an url.\\n *\\n * @param {string} url\\n * @return {Object<string,string>}\\n */\\nexport const decodeQueryParams = url => {\\n  /**\\n   * @type {Object<string,string>}\\n   */\\n  const query = {}\\n  const urlQuerySplit = url.split('?')\\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\\n  for (var i = 0; i < pairs.length; i++) {\\n    const item = pairs[i]\\n    if (item.length > 0) {\\n      const pair = item.split('=')\\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\\n    }\\n  }\\n  return query\\n}\\n\\n/**\\n * @param {Object<string,string>} params\\n * @return {string}\\n */\\nexport const encodeQueryParams = params =>\\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\\n\",\"import * as t from './testing.js'\\nimport * as url from './url.js'\\n\\n/**\\n * @param {Object<string,any>} params\\n */\\nconst paramTest = params => {\\n  const out = url.decodeQueryParams(url.encodeQueryParams(params))\\n  t.compareObjects(params, out, 'Compare params')\\n}\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testUrlParamQuery = tc => {\\n  paramTest({})\\n  paramTest({ a: '4' })\\n  paramTest({ a: 'dtrn', b: '0x0' })\\n\\n  t.compareObjects({ }, url.decodeQueryParams('http://localhost:8080/dtrn?'))\\n  t.compareObjects({ a: 'ay' }, url.decodeQueryParams('http://localhost:8080/dtrn?a=ay'))\\n  t.compareObjects({ a: '' }, url.decodeQueryParams('http://localhost:8080/dtrn?a='))\\n  t.compareObjects({ a: '' }, url.decodeQueryParams('http://localhost:8080/dtrn?a'))\\n  t.compareObjects({ a: 'ay' }, url.decodeQueryParams('http://localhost:8080/dtrn?a=ay&'))\\n  t.compareObjects({ a: 'ay', b: 'bey' }, url.decodeQueryParams('http://localhost:8080/dtrn?a=ay&b=bey'))\\n}\\n\",\"import * as t from './testing.js'\\nimport * as metric from './metric.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testMetricPrefix = tc => {\\n  t.compare(metric.prefix(0), { n: 0, prefix: '' })\\n  t.compare(metric.prefix(1, -1), { n: 1, prefix: 'm' })\\n  t.compare(metric.prefix(1.5), { n: 1.5, prefix: '' })\\n  t.compare(metric.prefix(100.5), { n: 100.5, prefix: '' })\\n  t.compare(metric.prefix(1000.5), { n: 1.0005, prefix: 'k' })\\n  t.compare(metric.prefix(0.3), { n: 300, prefix: 'm' })\\n  t.compare(metric.prefix(0.001), { n: 1, prefix: 'm' })\\n  // up\\n  t.compare(metric.prefix(10000), { n: 10, prefix: 'k' })\\n  t.compare(metric.prefix(1e7), { n: 10, prefix: 'M' })\\n  t.compare(metric.prefix(1e11), { n: 100, prefix: 'G' })\\n  t.compare(metric.prefix(1e12 + 3), { n: (1e12 + 3) / 1e12, prefix: 'T' })\\n  t.compare(metric.prefix(1e15), { n: 1, prefix: 'P' })\\n  t.compare(metric.prefix(1e20), { n: 100, prefix: 'E' })\\n  t.compare(metric.prefix(1e22), { n: 10, prefix: 'Z' })\\n  t.compare(metric.prefix(1e24), { n: 1, prefix: 'Y' })\\n  t.compare(metric.prefix(1e28), { n: 10000, prefix: 'Y' })\\n  // down\\n  t.compare(metric.prefix(0.01), { n: 10, prefix: 'm' })\\n  t.compare(metric.prefix(1e-4), { n: 100, prefix: 'μ' })\\n  t.compare(metric.prefix(1e-9), { n: 1, prefix: 'n' })\\n  t.compare(metric.prefix(1e-12), { n: 1, prefix: 'p' })\\n  t.compare(metric.prefix(1e-14), { n: 10, prefix: 'f' })\\n  t.compare(metric.prefix(1e-18), { n: 1, prefix: 'a' })\\n  t.compare(metric.prefix(1e-21), { n: 1, prefix: 'z' })\\n  t.compare(metric.prefix(1e-22), { n: 100, prefix: 'y' })\\n  t.compare(metric.prefix(1e-30), { n: 0.000001, prefix: 'y' })\\n}\\n\",\"import * as f from './function.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testDeepEquality = tc => {\\n  t.assert(f.equalityDeep(1, 1))\\n  t.assert(!f.equalityDeep(1, 2))\\n  t.assert(!f.equalityDeep(1, '1'))\\n  t.assert(!f.equalityDeep(1, null))\\n\\n  const obj = { b: 5 }\\n  const map1 = new Map()\\n  const map2 = new Map()\\n  const map3 = new Map()\\n  const map4 = new Map()\\n  map1.set('a', obj)\\n  map2.set('a', { b: 5 })\\n  map3.set('b', obj)\\n  map4.set('a', obj)\\n  map4.set('b', obj)\\n\\n  t.assert(f.equalityDeep({ a: 4 }, { a: 4 }))\\n  t.assert(f.equalityDeep({ a: 4, obj: { b: 5 } }, { a: 4, obj }))\\n  t.assert(!f.equalityDeep({ a: 4 }, { a: 4, obj }))\\n  t.assert(f.equalityDeep({ a: [], obj }, { a: [], obj }))\\n  t.assert(!f.equalityDeep({ a: [], obj }, { a: [], obj: undefined }))\\n\\n  t.assert(f.equalityDeep({}, {}))\\n  t.assert(!f.equalityDeep({}, { a: 4 }))\\n\\n  t.assert(f.equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1]))\\n  t.assert(!f.equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 2]))\\n  t.assert(!f.equalityDeep([{ a: 4 }, 1], [{ a: 4 }, 1, 3]))\\n  t.assert(f.equalityDeep([], []))\\n  t.assert(!f.equalityDeep([1], []))\\n\\n  t.assert(f.equalityDeep(map1, map2))\\n  t.assert(!f.equalityDeep(map1, map3))\\n  t.assert(!f.equalityDeep(map1, map4))\\n\\n  const set1 = new Set([1])\\n  const set2 = new Set([true])\\n  const set3 = new Set([1, true])\\n  const set4 = new Set([true])\\n\\n  t.assert(f.equalityDeep(set2, set4))\\n  t.assert(!f.equalityDeep(set1, set2))\\n  t.assert(!f.equalityDeep(set1, set3))\\n  t.assert(!f.equalityDeep(set1, set4))\\n  t.assert(!f.equalityDeep(set2, set3))\\n  t.assert(f.equalityDeep(set2, set4))\\n\\n  const buf1 = Uint8Array.from([1, 2])\\n  const buf2 = Uint8Array.from([1, 3])\\n  const buf3 = Uint8Array.from([1, 2, 3])\\n  const buf4 = Uint8Array.from([1, 2])\\n\\n  t.assert(!f.equalityDeep(buf1, buf2))\\n  t.assert(!f.equalityDeep(buf2, buf3))\\n  t.assert(!f.equalityDeep(buf3, buf4))\\n  t.assert(f.equalityDeep(buf4, buf1))\\n\\n  t.assert(!f.equalityDeep(buf1.buffer, buf2.buffer))\\n  t.assert(!f.equalityDeep(buf2.buffer, buf3.buffer))\\n  t.assert(!f.equalityDeep(buf3.buffer, buf4.buffer))\\n  t.assert(f.equalityDeep(buf4.buffer, buf1.buffer))\\n\\n  t.assert(!f.equalityDeep(buf1, buf4.buffer))\\n}\\n\",\"import * as storage from './storage.js'\\nimport * as t from './testing.js'\\n\\n/**\\n * @param {t.TestCase} tc\\n */\\nexport const testStorageModule = tc => {\\n  const s = storage.varStorage\\n  /**\\n   * @type {any}\\n   */\\n  let lastEvent = null\\n  storage.onChange(event => {\\n    lastEvent = event\\n  })\\n  s.setItem('key', 'value')\\n  t.assert(lastEvent === null)\\n}\\n\",\"import { runTests } from './testing.js'\\nimport * as array from './array.test.js'\\nimport * as logging from './logging.test.js'\\nimport * as string from './string.test.js'\\nimport * as encoding from './encoding.test.js'\\nimport * as diff from './diff.test.js'\\nimport * as testing from './testing.test.js'\\nimport * as indexeddb from './indexeddb.test.js'\\nimport * as prng from './prng.test.js'\\nimport * as log from './logging.js'\\nimport * as statistics from './statistics.test.js'\\nimport * as binary from './binary.test.js'\\nimport * as random from './random.test.js'\\nimport * as promise from './promise.test.js'\\nimport * as queue from './queue.test.js'\\nimport * as map from './map.test.js'\\nimport * as eventloop from './eventloop.test.js'\\nimport * as time from './time.test.js'\\nimport * as pair from './pair.test.js'\\nimport * as object from './object.test.js'\\nimport * as math from './math.test.js'\\nimport * as number from './number.test.js'\\nimport * as buffer from './buffer.test.js'\\nimport * as sort from './sort.test.js'\\nimport * as url from './url.test.js'\\nimport * as metric from './metric.test.js'\\nimport * as func from './function.test.js'\\nimport * as storage from './storage.test.js'\\n\\nimport { isBrowser, isNode } from './environment.js'\\n\\n/* istanbul ignore if */\\nif (isBrowser) {\\n  log.createVConsole(document.body)\\n}\\n\\nrunTests({\\n  array,\\n  logging,\\n  string,\\n  encoding,\\n  diff,\\n  testing,\\n  indexeddb,\\n  prng,\\n  statistics,\\n  binary,\\n  random,\\n  promise,\\n  queue,\\n  map,\\n  eventloop,\\n  time,\\n  pair,\\n  object,\\n  math,\\n  number,\\n  buffer,\\n  sort,\\n  url,\\n  metric,\\n  func,\\n  storage\\n}).then(success => {\\n  /* istanbul ignore next */\\n  if (isNode) {\\n    process.exit(success ? 0 : 1)\\n  }\\n})\\n\"],\"names\":[\"create\",\"map\",\"map.create\",\"string.fromCamelCase\",\"conditions.undefinedToNull\",\"storage.varStorage\",\"forEach\",\"pair.forEach\",\"addEventListener\",\"map.map\",\"queue\",\"enqueue\",\"add\",\"isNaN\",\"math.log10\",\"math.round\",\"math.exp10\",\"metric.prefix\",\"math.floor\",\"every\",\"equalFlat\",\"length\",\"array.equalFlat\",\"object.equalFlat\",\"object.length\",\"object.hasProperty\",\"symbol.create\",\"pair.create\",\"dom.mapToStyleString\",\"env.isNode\",\"env.isBrowser\",\"group\",\"printCanvas\",\"dom.element\",\"dom.text\",\"json.stringify\",\"eventloop.enqueue\",\"dom.append\",\"dom.addEventListener\",\"uint32\",\"binary.BITS32\",\"binary.BITS31\",\"buffer.createUint8ArrayViewFromArrayBuffer\",\"math.max\",\"binary.BITS8\",\"binary.BITS7\",\"binary.BIT8\",\"math.isNegativeZero\",\"binary.BITS6\",\"binary.BIT7\",\"math.min\",\"number.isInteger\",\"string.fromCharCode\",\"encoding.createEncoder\",\"encoding.writeAny\",\"encoding.toUint8Array\",\"decoding.readAny\",\"decoding.createDecoder\",\"math.abs\",\"buffer.createUint8ArrayFromLen\",\"math.ceil\",\"math.add\",\"time.getUnixTime\",\"env.hasConf\",\"env.hasParam\",\"env.getParam\",\"random.uint32\",\"prng.create\",\"log.GREY\",\"log.PURPLE\",\"log.BLUE\",\"log.groupCollapsed\",\"log.group\",\"promise.isPromise\",\"log.printError\",\"log.groupEnd\",\"time.humanizeDuration\",\"array.last\",\"statistics.median\",\"statistics.average\",\"log.print\",\"log.BOLD\",\"log.UNBOLD\",\"log.RED\",\"log.UNCOLOR\",\"log.GREEN\",\"log.printCanvas\",\"object.forEach\",\"object.map\",\"log.printImgBase64\",\"array.appendTo\",\"t.compareArrays\",\"array.flatten\",\"log.ORANGE\",\"t.compareStrings\",\"t.skip\",\"string.utf8TextDecoder\",\"prng.utf16String\",\"t.measureTime\",\"string._encodeUtf8Native\",\"string._encodeUtf8Polyfill\",\"t.compare\",\"string.encodeUtf8\",\"string._decodeUtf8Native\",\"string._decodeUtf8Polyfill\",\"t.assert\",\"prng.int53\",\"number.MIN_SAFE_INTEGER\",\"number.MAX_SAFE_INTEGER\",\"number.LOWEST_INT32\",\"number.HIGHEST_INT32\",\"prng.real53\",\"prng.uint32\",\"prng.uint8Array\",\"prng.oneOf\",\"encoding.writeVarUint\",\"utf8ByteLength\",\"string.utf8ByteLength\",\"encoding.length\",\"t.describe\",\"encoding.writeVarString\",\"decoding.peekVarString\",\"decoding.readVarString\",\"string.decodeUtf8\",\"decoding.readVarUint\",\"encoding.writeVarInt\",\"decoding.readVarInt\",\"prng.int32\",\"decoding.peekVarUint\",\"decoding.peekVarInt\",\"t.info\",\"encoding.writeUint8\",\"encoding.writeUint16\",\"encoding.writeUint32\",\"encoding.setUint8\",\"encoding.setUint16\",\"encoding.setUint32\",\"decoding.peekUint8\",\"decoding.readUint8\",\"decoding.peekUint16\",\"decoding.readUint16\",\"decoding.peekUint32\",\"decoding.readUint32\",\"decoding.readUint8Array\",\"encoding.writeUint8Array\",\"decoding.readVarUint8Array\",\"encoding.writeVarUint8Array\",\"binary.BITS16\",\"decoding.readUint32BigEndian\",\"encoding.writeUint32BigEndian\",\"prng.uint53\",\"decoding.readTailAsUint8Array\",\"encoding.write\",\"buffer.createUint8ArrayFromArrayBuffer\",\"decoding.hasContent\",\"decoding.skip8\",\"decoding.clone\",\"encoding.writeBinaryEncoder\",\"encoding.RleEncoder\",\"decoding.RleDecoder\",\"encoding.RleIntDiffEncoder\",\"decoding.RleIntDiffDecoder\",\"encoding.UintOptRleEncoder\",\"decoding.UintOptRleDecoder\",\"encoding.IntDiffOptRleEncoder\",\"decoding.IntDiffOptRleDecoder\",\"encoding.IntDiffEncoder\",\"decoding.IntDiffDecoder\",\"char\",\"prng.char\",\"prng.word\",\"encoding.StringEncoder\",\"decoding.StringDecoder\",\"object.assign\",\"f.equalityFlat\",\"f.equalityStrict\",\"t.fails\",\"t.compareObjects\",\"t.fail\",\"t.measureTimeAsync\",\"promise.create\",\"t.groupAsync\",\"promise.wait\",\"error.create\",\"promise.all\",\"getStore\",\"idb.createStores\",\"idb.getStore\",\"idb.deleteDB\",\"idb.openDB\",\"idb.put\",\"idb.getAll\",\"idb.getAllKeys\",\"idb.getAllKeysValues\",\"idb.iterate\",\"idb.iterateKeys\",\"idb.createIDBKeyRangeBound\",\"idb.get\",\"idb.del\",\"idb.add\",\"idb.addAutoKey\",\"math.imul\",\"t.group\",\"prng.bool\",\"binary.BIT32\",\"binary.BIT31\",\"canvas\",\"dom.canvas\",\"t.printCanvas\",\"math.isNaN\",\"binary\",\"binary.BITS0\",\"random.uuidv4\",\"t.production\",\"t.extensive\",\"promise.createEmpty\",\"promise.resolve\",\"promise.reject\",\"promise.until\",\"queue.QueueNode\",\"queue.create\",\"queue.isEmpty\",\"queue.dequeue\",\"queue.enqueue\",\"map.setIfUndefined\",\"map.copy\",\"timeout\",\"eventloop.timeout\",\"eventloop.interval\",\"eventloop.animationFrame\",\"eventloop.idleCallback\",\"time.getDate\",\"pair.createReversed\",\"pair.map\",\"object.create\",\"object.every\",\"object.some\",\"number.isNaN\",\"buffer.copyUint8Array\",\"buffer.toBase64\",\"buffer.fromBase64\",\"buffer.decodeAny\",\"buffer.encodeAny\",\"sort.insertionSort\",\"sort.quicksort\",\"prng.uint32Array\",\"url.decodeQueryParams\",\"url.encodeQueryParams\",\"f.equalityDeep\",\"storage.onChange\",\"log.createVConsole\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/test.js.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/testing.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar logging = require('./logging-7cc36806.cjs');\nvar diff = require('./diff-75787d87.cjs');\nvar object = require('./object-dcdd6eed.cjs');\nvar string = require('./string-f3c3d805.cjs');\nvar math = require('./math-08e068f9.cjs');\nvar random = require('./random.cjs');\nvar prng = require('./prng-695120cc.cjs');\nvar statistics = require('./statistics-c2316dca.cjs');\nvar array = require('./array-b2d24238.cjs');\nvar environment = require('./environment-7e2ffaea.cjs');\nvar json = require('./json-092190a1.cjs');\nvar time = require('./time-e00067da.cjs');\nvar promise = require('./promise-f0a086b2.cjs');\nvar isomorphic_js = require('./isomorphic.js');\nrequire('./symbol-c5caa724.cjs');\nrequire('./pair-ab022bc3.cjs');\nrequire('./dom-58958c04.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./eventloop-c60b5658.cjs');\nrequire('./function-f8acb5f5.cjs');\nrequire('./binary-ac8e39e2.cjs');\nrequire('./buffer-ac2cdedf.cjs');\nrequire('./number-24f1eabe.cjs');\nrequire('./conditions-fb475c70.cjs');\nrequire('./storage.cjs');\nrequire('./metric.cjs');\n\n/**\n * Testing framework with support for generating tests.\n *\n * ```js\n * // test.js template for creating a test executable\n * import { runTests } from 'lib0/testing.js'\n * import * as log from 'lib0/logging.js'\n * import * as mod1 from './mod1.test.js'\n * import * as mod2 from './mod2.test.js'\n\n * import { isBrowser, isNode } from 'lib0/environment.js'\n *\n * if (isBrowser) {\n *   // optional: if this is ran in the browser, attach a virtual console to the dom\n *   log.createVConsole(document.body)\n * }\n *\n * runTests({\n *  mod1,\n *  mod2,\n * }).then(success => {\n *   if (isNode) {\n *     process.exit(success ? 0 : 1)\n *   }\n * })\n * ```\n *\n * ```js\n * // mod1.test.js\n * /**\n *  * runTests automatically tests all exported functions that start with \"test\".\n *  * The name of the function should be in camelCase and is used for the logging output.\n *  *\n *  * @param {t.TestCase} tc\n *  *\\/\n * export const testMyFirstTest = tc => {\n *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\n * }\n * ```\n *\n * Now you can simply run `node test.js` to run your test or run test.js in the browser.\n *\n * @module testing\n */\n\nconst extensive = environment.hasConf('extensive');\n\n/* istanbul ignore next */\nconst envSeed = environment.hasParam('--seed') ? Number.parseInt(environment.getParam('--seed', '0')) : null;\n\nclass TestCase {\n  /**\n   * @param {string} moduleName\n   * @param {string} testName\n   */\n  constructor (moduleName, testName) {\n    /**\n     * @type {string}\n     */\n    this.moduleName = moduleName;\n    /**\n     * @type {string}\n     */\n    this.testName = testName;\n    this._seed = null;\n    this._prng = null;\n  }\n\n  resetSeed () {\n    this._seed = null;\n    this._prng = null;\n  }\n\n  /**\n   * @type {number}\n   */\n  /* istanbul ignore next */\n  get seed () {\n    /* istanbul ignore else */\n    if (this._seed === null) {\n      /* istanbul ignore next */\n      this._seed = envSeed === null ? random.uint32() : envSeed;\n    }\n    return this._seed\n  }\n\n  /**\n   * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\n   *\n   * @type {prng.PRNG}\n   */\n  get prng () {\n    /* istanbul ignore else */\n    if (this._prng === null) {\n      this._prng = prng.create(this.seed);\n    }\n    return this._prng\n  }\n}\n\nconst repetitionTime = Number(environment.getParam('--repetition-time', '50'));\n/* istanbul ignore next */\nconst testFilter = environment.hasParam('--filter') ? environment.getParam('--filter', '') : null;\n\n/* istanbul ignore next */\nconst testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*');\n\nconst repeatTestRegex = /^(repeat|repeating)\\s/;\n\n/**\n * @param {string} moduleName\n * @param {string} name\n * @param {function(TestCase):void|Promise<any>} f\n * @param {number} i\n * @param {number} numberOfTests\n */\nconst run = async (moduleName, name, f, i, numberOfTests) => {\n  const uncamelized = string.fromCamelCase(name.slice(4), ' ');\n  const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`);\n  /* istanbul ignore if */\n  if (filtered) {\n    return true\n  }\n  const tc = new TestCase(moduleName, name);\n  const repeat = repeatTestRegex.test(uncamelized);\n  const groupArgs = [logging.GREY, `[${i + 1}/${numberOfTests}] `, logging.PURPLE, `${moduleName}: `, logging.BLUE, uncamelized];\n  /* istanbul ignore next */\n  if (testFilter === null) {\n    logging.groupCollapsed(...groupArgs);\n  } else {\n    logging.group(...groupArgs);\n  }\n  const times = [];\n  const start = isomorphic_js.performance.now();\n  let lastTime = start;\n  let err = null;\n  isomorphic_js.performance.mark(`${name}-start`);\n  do {\n    try {\n      const p = f(tc);\n      if (promise.isPromise(p)) {\n        await p;\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    const currTime = isomorphic_js.performance.now();\n    times.push(currTime - lastTime);\n    lastTime = currTime;\n    if (repeat && err === null && (lastTime - start) < repetitionTime) {\n      tc.resetSeed();\n    } else {\n      break\n    }\n  } while (err === null && (lastTime - start) < repetitionTime)\n  isomorphic_js.performance.mark(`${name}-end`);\n  /* istanbul ignore if */\n  if (err !== null && err.constructor !== SkipError) {\n    logging.printError(err);\n  }\n  isomorphic_js.performance.measure(name, `${name}-start`, `${name}-end`);\n  logging.groupEnd();\n  const duration = lastTime - start;\n  let success = true;\n  times.sort((a, b) => a - b);\n  /* istanbul ignore next */\n  const againMessage = environment.isBrowser\n    ? `     - ${window.location.href}?filter=\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\n    : `\\nrepeat: npm run test -- --filter \"\\\\[${i + 1}/\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`;\n  const timeInfo = (repeat && err === null)\n    ? ` - ${times.length} repetitions in ${time.humanizeDuration(duration)} (best: ${time.humanizeDuration(times[0])}, worst: ${time.humanizeDuration(array.last(times))}, median: ${time.humanizeDuration(statistics.median(times))}, average: ${time.humanizeDuration(statistics.average(times))})`\n    : ` in ${time.humanizeDuration(duration)}`;\n  if (err !== null) {\n    /* istanbul ignore else */\n    if (err.constructor === SkipError) {\n      logging.print(logging.GREY, logging.BOLD, 'Skipped: ', logging.UNBOLD, uncamelized);\n    } else {\n      success = false;\n      logging.print(logging.RED, logging.BOLD, 'Failure: ', logging.UNBOLD, logging.UNCOLOR, uncamelized, logging.GREY, timeInfo, againMessage);\n    }\n  } else {\n    logging.print(logging.GREEN, logging.BOLD, 'Success: ', logging.UNBOLD, logging.UNCOLOR, uncamelized, logging.GREY, timeInfo, againMessage);\n  }\n  return success\n};\n\n/**\n * Describe what you are currently testing. The message will be logged.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} description\n * @param {string} info\n */\nconst describe = (description, info = '') => logging.print(logging.BLUE, description, ' ', logging.GREY, info);\n\n/**\n * Describe the state of the current computation.\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} info\n */\nconst info = info => describe('', info);\n\nconst printDom = logging.printDom;\n\nconst printCanvas = logging.printCanvas;\n\n/**\n * Group outputs in a collapsible category.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.group('subtest 1', () => {\n *     t.describe('this message is part of a collapsible section')\n *   })\n *   await t.groupAsync('subtest async 2', async () => {\n *     await someaction()\n *     t.describe('this message is part of a collapsible section')\n *   })\n * }\n * ```\n *\n * @param {string} description\n * @param {function(void):void} f\n */\nconst group = (description, f) => {\n  logging.group(logging.BLUE, description);\n  try {\n    f();\n  } finally {\n    logging.groupEnd();\n  }\n};\n\n/**\n * Group outputs in a collapsible category.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.group('subtest 1', () => {\n *     t.describe('this message is part of a collapsible section')\n *   })\n *   await t.groupAsync('subtest async 2', async () => {\n *     await someaction()\n *     t.describe('this message is part of a collapsible section')\n *   })\n * }\n * ```\n *\n * @param {string} description\n * @param {function(void):Promise<any>} f\n */\nconst groupAsync = async (description, f) => {\n  logging.group(logging.BLUE, description);\n  try {\n    await f();\n  } finally {\n    logging.groupEnd();\n  }\n};\n\n/**\n * Measure the time that it takes to calculate something.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.measureTime('measurement', () => {\n *     heavyCalculation()\n *   })\n *   await t.groupAsync('async measurement', async () => {\n *     await heavyAsyncCalculation()\n *   })\n * }\n * ```\n *\n * @param {string} message\n * @param {function():void} f\n * @return {number} Returns a promise that resolves the measured duration to apply f\n */\nconst measureTime = (message, f) => {\n  let duration;\n  const start = isomorphic_js.performance.now();\n  try {\n    f();\n  } finally {\n    duration = isomorphic_js.performance.now() - start;\n    logging.print(logging.PURPLE, message, logging.GREY, ` ${time.humanizeDuration(duration)}`);\n  }\n  return duration\n};\n\n/**\n * Measure the time that it takes to calculate something.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.measureTimeAsync('measurement', async () => {\n *     await heavyCalculation()\n *   })\n *   await t.groupAsync('async measurement', async () => {\n *     await heavyAsyncCalculation()\n *   })\n * }\n * ```\n *\n * @param {string} message\n * @param {function():Promise<any>} f\n * @return {Promise<number>} Returns a promise that resolves the measured duration to apply f\n */\nconst measureTimeAsync = async (message, f) => {\n  let duration;\n  const start = isomorphic_js.performance.now();\n  try {\n    await f();\n  } finally {\n    duration = isomorphic_js.performance.now() - start;\n    logging.print(logging.PURPLE, message, logging.GREY, ` ${time.humanizeDuration(duration)}`);\n  }\n  return duration\n};\n\n/**\n * @template T\n * @param {Array<T>} as\n * @param {Array<T>} bs\n * @param {string} [m]\n * @return {boolean}\n */\nconst compareArrays = (as, bs, m = 'Arrays match') => {\n  if (as.length !== bs.length) {\n    fail(m);\n  }\n  for (let i = 0; i < as.length; i++) {\n    if (as[i] !== bs[i]) {\n      fail(m);\n    }\n  }\n  return true\n};\n\n/**\n * @param {string} a\n * @param {string} b\n * @param {string} [m]\n * @throws {TestError} Throws if tests fails\n */\nconst compareStrings = (a, b, m = 'Strings match') => {\n  if (a !== b) {\n    const diff$1 = diff.simpleDiff(a, b);\n    logging.print(logging.GREY, a.slice(0, diff$1.index), logging.RED, a.slice(diff$1.index, diff$1.remove), logging.GREEN, diff$1.insert, logging.GREY, a.slice(diff$1.index + diff$1.remove));\n    fail(m);\n  }\n};\n\n/**\n * @template K,V\n * @param {Object<K,V>} a\n * @param {Object<K,V>} b\n * @param {string} [m]\n * @throws {TestError} Throws if test fails\n */\nconst compareObjects = (a, b, m = 'Objects match') => { object.equalFlat(a, b) || fail(m); };\n\n/**\n * @param {any} constructor\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @throws {TestError}\n */\nconst compareValues = (constructor, a, b, path) => {\n  if (a !== b) {\n    fail(`Values ${json.stringify(a)} and ${json.stringify(b)} don't match (${path})`);\n  }\n  return true\n};\n\n/**\n * @param {string?} message\n * @param {string} reason\n * @param {string} path\n * @throws {TestError}\n */\nconst _failMessage = (message, reason, path) => fail(\n  message === null\n    ? `${reason} ${path}`\n    : `${message} (${reason}) ${path}`\n);\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @param {string?} message\n * @param {function(any,any,any,string,any):boolean} customCompare\n */\nconst _compare = (a, b, path, message, customCompare) => {\n  // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\n  if (a == null || b == null) {\n    return compareValues(null, a, b, path)\n  }\n  if (a.constructor !== b.constructor) {\n    _failMessage(message, 'Constructors don\\'t match', path);\n  }\n  let success = true;\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        _failMessage(message, 'ArrayBuffer lengths match', path);\n      }\n      for (let i = 0; success && i < a.length; i++) {\n        success = success && a[i] === b[i];\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Sets have different number of attributes', path);\n      }\n      // @ts-ignore\n      a.forEach(value => {\n        if (!b.has(value)) {\n          _failMessage(message, `b.${path} does have ${value}`, path);\n        }\n      });\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Maps have different number of attributes', path);\n      }\n      // @ts-ignore\n      a.forEach((value, key) => {\n        if (!b.has(key)) {\n          _failMessage(message, `Property ${path}[\"${key}\"] does not exist on second argument`, path);\n        }\n        _compare(value, b.get(key), `${path}[\"${key}\"]`, message, customCompare);\n      });\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        _failMessage(message, 'Objects have a different number of attributes', path);\n      }\n      object.forEach(a, (value, key) => {\n        if (!object.hasProperty(b, key)) {\n          _failMessage(message, `Property ${path} does not exist on second argument`, path);\n        }\n        _compare(value, b[key], `${path}[\"${key}\"]`, message, customCompare);\n      });\n      break\n    case Array:\n      if (a.length !== b.length) {\n        _failMessage(message, 'Arrays have a different number of attributes', path);\n      }\n      // @ts-ignore\n      a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare));\n      break\n    /* istanbul ignore next */\n    default:\n      if (!customCompare(a.constructor, a, b, path, compareValues)) {\n        _failMessage(message, `Values ${json.stringify(a)} and ${json.stringify(b)} don't match`, path);\n      }\n  }\n  assert(success, message);\n  return true\n};\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @param {string?} [message]\n * @param {function(any,T,T,string,any):boolean} [customCompare]\n */\nconst compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare);\n\n/* istanbul ignore next */\n/**\n * @param {boolean} condition\n * @param {string?} [message]\n * @throws {TestError}\n */\nconst assert = (condition, message = null) => condition || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`);\n\n/**\n * @param {function():void} f\n * @throws {TestError}\n */\nconst fails = f => {\n  let err = null;\n  try {\n    f();\n  } catch (_err) {\n    err = _err;\n    logging.print(logging.GREEN, '⇖ This Error was expected');\n  }\n  /* istanbul ignore if */\n  if (err === null) {\n    fail('Expected this to fail');\n  }\n};\n\n/**\n * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\n */\nconst runTests = async tests => {\n  const numberOfTests = object.map(tests, mod => object.map(mod, f => /* istanbul ignore next */ f ? 1 : 0).reduce(math.add, 0)).reduce(math.add, 0);\n  let successfulTests = 0;\n  let testnumber = 0;\n  const start = isomorphic_js.performance.now();\n  for (const modName in tests) {\n    const mod = tests[modName];\n    for (const fname in mod) {\n      const f = mod[fname];\n      /* istanbul ignore else */\n      if (f) {\n        const repeatEachTest = 1;\n        let success = true;\n        for (let i = 0; success && i < repeatEachTest; i++) {\n          success = await run(modName, fname, f, testnumber, numberOfTests);\n        }\n        testnumber++;\n        /* istanbul ignore else */\n        if (success) {\n          successfulTests++;\n        }\n      }\n    }\n  }\n  const end = isomorphic_js.performance.now();\n  logging.print('');\n  const success = successfulTests === numberOfTests;\n  /* istanbul ignore next */\n  if (success) {\n    /* istanbul ignore next */\n    logging.print(logging.GREEN, logging.BOLD, 'All tests successful!', logging.GREY, logging.UNBOLD, ` in ${time.humanizeDuration(end - start)}`);\n    /* istanbul ignore next */\n    logging.printImgBase64(nyanCatImage, 50);\n  } else {\n    const failedTests = numberOfTests - successfulTests;\n    logging.print(logging.RED, logging.BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`);\n  }\n  return success\n};\n\nclass TestError extends Error {}\n\n/**\n * @param {string} reason\n * @throws {TestError}\n */\nconst fail = reason => {\n  logging.print(logging.RED, logging.BOLD, 'X ', logging.UNBOLD, reason);\n  throw new TestError('Test Failed')\n};\n\nclass SkipError extends Error {}\n\n/**\n * @param {boolean} cond If true, this tests will be skipped\n * @throws {SkipError}\n */\nconst skip = (cond = true) => {\n  if (cond) {\n    throw new SkipError('skipping..')\n  }\n};\n\n// eslint-disable-next-line\nconst nyanCatImage = '';\n\nexports.production = environment.production;\nexports.TestCase = TestCase;\nexports.assert = assert;\nexports.compare = compare;\nexports.compareArrays = compareArrays;\nexports.compareObjects = compareObjects;\nexports.compareStrings = compareStrings;\nexports.describe = describe;\nexports.envSeed = envSeed;\nexports.extensive = extensive;\nexports.fail = fail;\nexports.fails = fails;\nexports.group = group;\nexports.groupAsync = groupAsync;\nexports.info = info;\nexports.measureTime = measureTime;\nexports.measureTimeAsync = measureTimeAsync;\nexports.printCanvas = printCanvas;\nexports.printDom = printDom;\nexports.repetitionTime = repetitionTime;\nexports.run = run;\nexports.runTests = runTests;\nexports.skip = skip;\n///# sourceMappingURL=testing.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/testing.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/testing.cjs.map":{"text":"{\"version\":3,\"file\":\"testing.cjs\",\"sources\":[\"../testing.js\"],\"sourcesContent\":[\"/**\\n * Testing framework with support for generating tests.\\n *\\n * ```js\\n * // test.js template for creating a test executable\\n * import { runTests } from 'lib0/testing.js'\\n * import * as log from 'lib0/logging.js'\\n * import * as mod1 from './mod1.test.js'\\n * import * as mod2 from './mod2.test.js'\\n\\n * import { isBrowser, isNode } from 'lib0/environment.js'\\n *\\n * if (isBrowser) {\\n *   // optional: if this is ran in the browser, attach a virtual console to the dom\\n *   log.createVConsole(document.body)\\n * }\\n *\\n * runTests({\\n *  mod1,\\n *  mod2,\\n * }).then(success => {\\n *   if (isNode) {\\n *     process.exit(success ? 0 : 1)\\n *   }\\n * })\\n * ```\\n *\\n * ```js\\n * // mod1.test.js\\n * /**\\n *  * runTests automatically tests all exported functions that start with \\\"test\\\".\\n *  * The name of the function should be in camelCase and is used for the logging output.\\n *  *\\n *  * @param {t.TestCase} tc\\n *  *\\\\/\\n * export const testMyFirstTest = tc => {\\n *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\\n * }\\n * ```\\n *\\n * Now you can simply run `node test.js` to run your test or run test.js in the browser.\\n *\\n * @module testing\\n */\\n\\nimport * as log from './logging.js'\\nimport { simpleDiff } from './diff.js'\\nimport * as object from './object.js'\\nimport * as string from './string.js'\\nimport * as math from './math.js'\\nimport * as random from './random.js'\\nimport * as prng from './prng.js'\\nimport * as statistics from './statistics.js'\\nimport * as array from './array.js'\\nimport * as env from './environment.js'\\nimport * as json from './json.js'\\nimport * as time from './time.js'\\nimport * as promise from './promise.js'\\n\\nimport { performance } from './isomorphic.js'\\n\\nexport { production } from './environment.js'\\n\\nexport const extensive = env.hasConf('extensive')\\n\\n/* istanbul ignore next */\\nexport const envSeed = env.hasParam('--seed') ? Number.parseInt(env.getParam('--seed', '0')) : null\\n\\nexport class TestCase {\\n  /**\\n   * @param {string} moduleName\\n   * @param {string} testName\\n   */\\n  constructor (moduleName, testName) {\\n    /**\\n     * @type {string}\\n     */\\n    this.moduleName = moduleName\\n    /**\\n     * @type {string}\\n     */\\n    this.testName = testName\\n    this._seed = null\\n    this._prng = null\\n  }\\n\\n  resetSeed () {\\n    this._seed = null\\n    this._prng = null\\n  }\\n\\n  /**\\n   * @type {number}\\n   */\\n  /* istanbul ignore next */\\n  get seed () {\\n    /* istanbul ignore else */\\n    if (this._seed === null) {\\n      /* istanbul ignore next */\\n      this._seed = envSeed === null ? random.uint32() : envSeed\\n    }\\n    return this._seed\\n  }\\n\\n  /**\\n   * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\\n   *\\n   * @type {prng.PRNG}\\n   */\\n  get prng () {\\n    /* istanbul ignore else */\\n    if (this._prng === null) {\\n      this._prng = prng.create(this.seed)\\n    }\\n    return this._prng\\n  }\\n}\\n\\nexport const repetitionTime = Number(env.getParam('--repetition-time', '50'))\\n/* istanbul ignore next */\\nconst testFilter = env.hasParam('--filter') ? env.getParam('--filter', '') : null\\n\\n/* istanbul ignore next */\\nconst testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*')\\n\\nconst repeatTestRegex = /^(repeat|repeating)\\\\s/\\n\\n/**\\n * @param {string} moduleName\\n * @param {string} name\\n * @param {function(TestCase):void|Promise<any>} f\\n * @param {number} i\\n * @param {number} numberOfTests\\n */\\nexport const run = async (moduleName, name, f, i, numberOfTests) => {\\n  const uncamelized = string.fromCamelCase(name.slice(4), ' ')\\n  const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`)\\n  /* istanbul ignore if */\\n  if (filtered) {\\n    return true\\n  }\\n  const tc = new TestCase(moduleName, name)\\n  const repeat = repeatTestRegex.test(uncamelized)\\n  const groupArgs = [log.GREY, `[${i + 1}/${numberOfTests}] `, log.PURPLE, `${moduleName}: `, log.BLUE, uncamelized]\\n  /* istanbul ignore next */\\n  if (testFilter === null) {\\n    log.groupCollapsed(...groupArgs)\\n  } else {\\n    log.group(...groupArgs)\\n  }\\n  const times = []\\n  const start = performance.now()\\n  let lastTime = start\\n  let err = null\\n  performance.mark(`${name}-start`)\\n  do {\\n    try {\\n      const p = f(tc)\\n      if (promise.isPromise(p)) {\\n        await p\\n      }\\n    } catch (_err) {\\n      err = _err\\n    }\\n    const currTime = performance.now()\\n    times.push(currTime - lastTime)\\n    lastTime = currTime\\n    if (repeat && err === null && (lastTime - start) < repetitionTime) {\\n      tc.resetSeed()\\n    } else {\\n      break\\n    }\\n  } while (err === null && (lastTime - start) < repetitionTime)\\n  performance.mark(`${name}-end`)\\n  /* istanbul ignore if */\\n  if (err !== null && err.constructor !== SkipError) {\\n    log.printError(err)\\n  }\\n  performance.measure(name, `${name}-start`, `${name}-end`)\\n  log.groupEnd()\\n  const duration = lastTime - start\\n  let success = true\\n  times.sort((a, b) => a - b)\\n  /* istanbul ignore next */\\n  const againMessage = env.isBrowser\\n    ? `     - ${window.location.href}?filter=\\\\\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\\n    : `\\\\nrepeat: npm run test -- --filter \\\"\\\\\\\\[${i + 1}/\\\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`\\n  const timeInfo = (repeat && err === null)\\n    ? ` - ${times.length} repetitions in ${time.humanizeDuration(duration)} (best: ${time.humanizeDuration(times[0])}, worst: ${time.humanizeDuration(array.last(times))}, median: ${time.humanizeDuration(statistics.median(times))}, average: ${time.humanizeDuration(statistics.average(times))})`\\n    : ` in ${time.humanizeDuration(duration)}`\\n  if (err !== null) {\\n    /* istanbul ignore else */\\n    if (err.constructor === SkipError) {\\n      log.print(log.GREY, log.BOLD, 'Skipped: ', log.UNBOLD, uncamelized)\\n    } else {\\n      success = false\\n      log.print(log.RED, log.BOLD, 'Failure: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\\n    }\\n  } else {\\n    log.print(log.GREEN, log.BOLD, 'Success: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\\n  }\\n  return success\\n}\\n\\n/**\\n * Describe what you are currently testing. The message will be logged.\\n *\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {string} info\\n */\\nexport const describe = (description, info = '') => log.print(log.BLUE, description, ' ', log.GREY, info)\\n\\n/**\\n * Describe the state of the current computation.\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\\n * }\\n * ```\\n *\\n * @param {string} info\\n */\\nexport const info = info => describe('', info)\\n\\nexport const printDom = log.printDom\\n\\nexport const printCanvas = log.printCanvas\\n\\n/**\\n * Group outputs in a collapsible category.\\n *\\n * ```js\\n * export const testMyFirstTest = tc => {\\n *   t.group('subtest 1', () => {\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n *   await t.groupAsync('subtest async 2', async () => {\\n *     await someaction()\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {function(void):void} f\\n */\\nexport const group = (description, f) => {\\n  log.group(log.BLUE, description)\\n  try {\\n    f()\\n  } finally {\\n    log.groupEnd()\\n  }\\n}\\n\\n/**\\n * Group outputs in a collapsible category.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.group('subtest 1', () => {\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n *   await t.groupAsync('subtest async 2', async () => {\\n *     await someaction()\\n *     t.describe('this message is part of a collapsible section')\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} description\\n * @param {function(void):Promise<any>} f\\n */\\nexport const groupAsync = async (description, f) => {\\n  log.group(log.BLUE, description)\\n  try {\\n    await f()\\n  } finally {\\n    log.groupEnd()\\n  }\\n}\\n\\n/**\\n * Measure the time that it takes to calculate something.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.measureTime('measurement', () => {\\n *     heavyCalculation()\\n *   })\\n *   await t.groupAsync('async measurement', async () => {\\n *     await heavyAsyncCalculation()\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} message\\n * @param {function():void} f\\n * @return {number} Returns a promise that resolves the measured duration to apply f\\n */\\nexport const measureTime = (message, f) => {\\n  let duration\\n  const start = performance.now()\\n  try {\\n    f()\\n  } finally {\\n    duration = performance.now() - start\\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\\n  }\\n  return duration\\n}\\n\\n/**\\n * Measure the time that it takes to calculate something.\\n *\\n * ```js\\n * export const testMyFirstTest = async tc => {\\n *   t.measureTimeAsync('measurement', async () => {\\n *     await heavyCalculation()\\n *   })\\n *   await t.groupAsync('async measurement', async () => {\\n *     await heavyAsyncCalculation()\\n *   })\\n * }\\n * ```\\n *\\n * @param {string} message\\n * @param {function():Promise<any>} f\\n * @return {Promise<number>} Returns a promise that resolves the measured duration to apply f\\n */\\nexport const measureTimeAsync = async (message, f) => {\\n  let duration\\n  const start = performance.now()\\n  try {\\n    await f()\\n  } finally {\\n    duration = performance.now() - start\\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\\n  }\\n  return duration\\n}\\n\\n/**\\n * @template T\\n * @param {Array<T>} as\\n * @param {Array<T>} bs\\n * @param {string} [m]\\n * @return {boolean}\\n */\\nexport const compareArrays = (as, bs, m = 'Arrays match') => {\\n  if (as.length !== bs.length) {\\n    fail(m)\\n  }\\n  for (let i = 0; i < as.length; i++) {\\n    if (as[i] !== bs[i]) {\\n      fail(m)\\n    }\\n  }\\n  return true\\n}\\n\\n/**\\n * @param {string} a\\n * @param {string} b\\n * @param {string} [m]\\n * @throws {TestError} Throws if tests fails\\n */\\nexport const compareStrings = (a, b, m = 'Strings match') => {\\n  if (a !== b) {\\n    const diff = simpleDiff(a, b)\\n    log.print(log.GREY, a.slice(0, diff.index), log.RED, a.slice(diff.index, diff.remove), log.GREEN, diff.insert, log.GREY, a.slice(diff.index + diff.remove))\\n    fail(m)\\n  }\\n}\\n\\n/**\\n * @template K,V\\n * @param {Object<K,V>} a\\n * @param {Object<K,V>} b\\n * @param {string} [m]\\n * @throws {TestError} Throws if test fails\\n */\\nexport const compareObjects = (a, b, m = 'Objects match') => { object.equalFlat(a, b) || fail(m) }\\n\\n/**\\n * @param {any} constructor\\n * @param {any} a\\n * @param {any} b\\n * @param {string} path\\n * @throws {TestError}\\n */\\nconst compareValues = (constructor, a, b, path) => {\\n  if (a !== b) {\\n    fail(`Values ${json.stringify(a)} and ${json.stringify(b)} don't match (${path})`)\\n  }\\n  return true\\n}\\n\\n/**\\n * @param {string?} message\\n * @param {string} reason\\n * @param {string} path\\n * @throws {TestError}\\n */\\nconst _failMessage = (message, reason, path) => fail(\\n  message === null\\n    ? `${reason} ${path}`\\n    : `${message} (${reason}) ${path}`\\n)\\n\\n/**\\n * @param {any} a\\n * @param {any} b\\n * @param {string} path\\n * @param {string?} message\\n * @param {function(any,any,any,string,any):boolean} customCompare\\n */\\nconst _compare = (a, b, path, message, customCompare) => {\\n  // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\\n  if (a == null || b == null) {\\n    return compareValues(null, a, b, path)\\n  }\\n  if (a.constructor !== b.constructor) {\\n    _failMessage(message, 'Constructors don\\\\'t match', path)\\n  }\\n  let success = true\\n  switch (a.constructor) {\\n    case ArrayBuffer:\\n      a = new Uint8Array(a)\\n      b = new Uint8Array(b)\\n    // eslint-disable-next-line no-fallthrough\\n    case Uint8Array: {\\n      if (a.byteLength !== b.byteLength) {\\n        _failMessage(message, 'ArrayBuffer lengths match', path)\\n      }\\n      for (let i = 0; success && i < a.length; i++) {\\n        success = success && a[i] === b[i]\\n      }\\n      break\\n    }\\n    case Set: {\\n      if (a.size !== b.size) {\\n        _failMessage(message, 'Sets have different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach(value => {\\n        if (!b.has(value)) {\\n          _failMessage(message, `b.${path} does have ${value}`, path)\\n        }\\n      })\\n      break\\n    }\\n    case Map: {\\n      if (a.size !== b.size) {\\n        _failMessage(message, 'Maps have different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach((value, key) => {\\n        if (!b.has(key)) {\\n          _failMessage(message, `Property ${path}[\\\"${key}\\\"] does not exist on second argument`, path)\\n        }\\n        _compare(value, b.get(key), `${path}[\\\"${key}\\\"]`, message, customCompare)\\n      })\\n      break\\n    }\\n    case Object:\\n      if (object.length(a) !== object.length(b)) {\\n        _failMessage(message, 'Objects have a different number of attributes', path)\\n      }\\n      object.forEach(a, (value, key) => {\\n        if (!object.hasProperty(b, key)) {\\n          _failMessage(message, `Property ${path} does not exist on second argument`, path)\\n        }\\n        _compare(value, b[key], `${path}[\\\"${key}\\\"]`, message, customCompare)\\n      })\\n      break\\n    case Array:\\n      if (a.length !== b.length) {\\n        _failMessage(message, 'Arrays have a different number of attributes', path)\\n      }\\n      // @ts-ignore\\n      a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare))\\n      break\\n    /* istanbul ignore next */\\n    default:\\n      if (!customCompare(a.constructor, a, b, path, compareValues)) {\\n        _failMessage(message, `Values ${json.stringify(a)} and ${json.stringify(b)} don't match`, path)\\n      }\\n  }\\n  assert(success, message)\\n  return true\\n}\\n\\n/**\\n * @template T\\n * @param {T} a\\n * @param {T} b\\n * @param {string?} [message]\\n * @param {function(any,T,T,string,any):boolean} [customCompare]\\n */\\nexport const compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare)\\n\\n/* istanbul ignore next */\\n/**\\n * @param {boolean} condition\\n * @param {string?} [message]\\n * @throws {TestError}\\n */\\nexport const assert = (condition, message = null) => condition || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`)\\n\\n/**\\n * @param {function():void} f\\n * @throws {TestError}\\n */\\nexport const fails = f => {\\n  let err = null\\n  try {\\n    f()\\n  } catch (_err) {\\n    err = _err\\n    log.print(log.GREEN, '⇖ This Error was expected')\\n  }\\n  /* istanbul ignore if */\\n  if (err === null) {\\n    fail('Expected this to fail')\\n  }\\n}\\n\\n/**\\n * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\\n */\\nexport const runTests = async tests => {\\n  const numberOfTests = object.map(tests, mod => object.map(mod, f => /* istanbul ignore next */ f ? 1 : 0).reduce(math.add, 0)).reduce(math.add, 0)\\n  let successfulTests = 0\\n  let testnumber = 0\\n  const start = performance.now()\\n  for (const modName in tests) {\\n    const mod = tests[modName]\\n    for (const fname in mod) {\\n      const f = mod[fname]\\n      /* istanbul ignore else */\\n      if (f) {\\n        const repeatEachTest = 1\\n        let success = true\\n        for (let i = 0; success && i < repeatEachTest; i++) {\\n          success = await run(modName, fname, f, testnumber, numberOfTests)\\n        }\\n        testnumber++\\n        /* istanbul ignore else */\\n        if (success) {\\n          successfulTests++\\n        }\\n      }\\n    }\\n  }\\n  const end = performance.now()\\n  log.print('')\\n  const success = successfulTests === numberOfTests\\n  /* istanbul ignore next */\\n  if (success) {\\n    /* istanbul ignore next */\\n    log.print(log.GREEN, log.BOLD, 'All tests successful!', log.GREY, log.UNBOLD, ` in ${time.humanizeDuration(end - start)}`)\\n    /* istanbul ignore next */\\n    log.printImgBase64(nyanCatImage, 50)\\n  } else {\\n    const failedTests = numberOfTests - successfulTests\\n    log.print(log.RED, log.BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`)\\n  }\\n  return success\\n}\\n\\nclass TestError extends Error {}\\n\\n/**\\n * @param {string} reason\\n * @throws {TestError}\\n */\\nexport const fail = reason => {\\n  log.print(log.RED, log.BOLD, 'X ', log.UNBOLD, reason)\\n  throw new TestError('Test Failed')\\n}\\n\\nclass SkipError extends Error {}\\n\\n/**\\n * @param {boolean} cond If true, this tests will be skipped\\n * @throws {SkipError}\\n */\\nexport const skip = (cond = true) => {\\n  if (cond) {\\n    throw new SkipError('skipping..')\\n  }\\n}\\n\\n// eslint-disable-next-line\\nconst nyanCatImage = ''\\n\"],\"names\":[\"env.hasConf\",\"env.hasParam\",\"env.getParam\",\"random.uint32\",\"prng.create\",\"string.fromCamelCase\",\"log.GREY\",\"log.PURPLE\",\"log.BLUE\",\"log.groupCollapsed\",\"log.group\",\"performance\",\"promise.isPromise\",\"log.printError\",\"log.groupEnd\",\"env.isBrowser\",\"time.humanizeDuration\",\"array.last\",\"statistics.median\",\"statistics.average\",\"log.print\",\"log.BOLD\",\"log.UNBOLD\",\"log.RED\",\"log.UNCOLOR\",\"log.GREEN\",\"log.printDom\",\"log.printCanvas\",\"diff\",\"simpleDiff\",\"object.equalFlat\",\"json.stringify\",\"object.length\",\"object.forEach\",\"object.hasProperty\",\"object.map\",\"math.add\",\"log.printImgBase64\"],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACY,MAAC,SAAS,GAAGA,mBAAW,CAAC,WAAW,EAAC;AACjD;AACA;AACY,MAAC,OAAO,GAAGC,oBAAY,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAACC,oBAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,KAAI;AACnG;AACO,MAAM,QAAQ,CAAC;AACtB;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE;AACrC;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,WAAU;AAChC;AACA;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,GAAG,SAAQ;AAC5B,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;AACrB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;AACrB,GAAG;AACH;AACA,EAAE,SAAS,CAAC,GAAG;AACf,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;AACrB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,IAAI,CAAC,GAAG;AACd;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;AAC7B;AACA,MAAM,IAAI,CAAC,KAAK,GAAG,OAAO,KAAK,IAAI,GAAGC,aAAa,EAAE,GAAG,QAAO;AAC/D,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,IAAI,CAAC,GAAG;AACd;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;AAC7B,MAAM,IAAI,CAAC,KAAK,GAAGC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAC;AACzC,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,GAAG;AACH,CAAC;AACD;AACY,MAAC,cAAc,GAAG,MAAM,CAACF,oBAAY,CAAC,mBAAmB,EAAE,IAAI,CAAC,EAAC;AAC7E;AACA,MAAM,UAAU,GAAGD,oBAAY,CAAC,UAAU,CAAC,GAAGC,oBAAY,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,KAAI;AACjF;AACA;AACA,MAAM,gBAAgB,GAAG,UAAU,KAAK,IAAI,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,EAAC;AACxF;AACA,MAAM,eAAe,GAAG,wBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG,OAAO,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,aAAa,KAAK;AACpE,EAAE,MAAM,WAAW,GAAGG,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAC;AAC9D,EAAE,MAAM,QAAQ,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAC;AACtG;AACA,EAAE,IAAI,QAAQ,EAAE;AAChB,IAAI,OAAO,IAAI;AACf,GAAG;AACH,EAAE,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAC;AAC3C,EAAE,MAAM,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,WAAW,EAAC;AAClD,EAAE,MAAM,SAAS,GAAG,CAACC,YAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAEC,cAAU,EAAE,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,EAAEC,YAAQ,EAAE,WAAW,EAAC;AACpH;AACA,EAAE,IAAI,UAAU,KAAK,IAAI,EAAE;AAC3B,IAAIC,sBAAkB,CAAC,GAAG,SAAS,EAAC;AACpC,GAAG,MAAM;AACT,IAAIC,aAAS,CAAC,GAAG,SAAS,EAAC;AAC3B,GAAG;AACH,EAAE,MAAM,KAAK,GAAG,GAAE;AAClB,EAAE,MAAM,KAAK,GAAGC,yBAAW,CAAC,GAAG,GAAE;AACjC,EAAE,IAAI,QAAQ,GAAG,MAAK;AACtB,EAAE,IAAI,GAAG,GAAG,KAAI;AAChB,EAAEA,yBAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAC;AACnC,EAAE,GAAG;AACL,IAAI,IAAI;AACR,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAC;AACrB,MAAM,IAAIC,iBAAiB,CAAC,CAAC,CAAC,EAAE;AAChC,QAAQ,MAAM,EAAC;AACf,OAAO;AACP,KAAK,CAAC,OAAO,IAAI,EAAE;AACnB,MAAM,GAAG,GAAG,KAAI;AAChB,KAAK;AACL,IAAI,MAAM,QAAQ,GAAGD,yBAAW,CAAC,GAAG,GAAE;AACtC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAC;AACnC,IAAI,QAAQ,GAAG,SAAQ;AACvB,IAAI,IAAI,MAAM,IAAI,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,cAAc,EAAE;AACvE,MAAM,EAAE,CAAC,SAAS,GAAE;AACpB,KAAK,MAAM;AACX,MAAM,KAAK;AACX,KAAK;AACL,GAAG,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,cAAc,CAAC;AAC/D,EAAEA,yBAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAC;AACjC;AACA,EAAE,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;AACrD,IAAIE,kBAAc,CAAC,GAAG,EAAC;AACvB,GAAG;AACH,EAAEF,yBAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAC;AAC3D,EAAEG,gBAAY,GAAE;AAChB,EAAE,MAAM,QAAQ,GAAG,QAAQ,GAAG,MAAK;AACnC,EAAE,IAAI,OAAO,GAAG,KAAI;AACpB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;AAC7B;AACA,EAAE,MAAM,YAAY,GAAGC,qBAAa;AACpC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzG,MAAM,CAAC,uCAAuC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;AAC1G,EAAE,MAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,GAAG,KAAK,IAAI;AAC1C,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAEC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAEA,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAEA,qBAAqB,CAACC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAED,qBAAqB,CAACE,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAEF,qBAAqB,CAACG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACrS,MAAM,CAAC,IAAI,EAAEH,qBAAqB,CAAC,QAAQ,CAAC,CAAC,EAAC;AAC9C,EAAE,IAAI,GAAG,KAAK,IAAI,EAAE;AACpB;AACA,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;AACvC,MAAMI,aAAS,CAACd,YAAQ,EAAEe,YAAQ,EAAE,WAAW,EAAEC,cAAU,EAAE,WAAW,EAAC;AACzE,KAAK,MAAM;AACX,MAAM,OAAO,GAAG,MAAK;AACrB,MAAMF,aAAS,CAACG,WAAO,EAAEF,YAAQ,EAAE,WAAW,EAAEC,cAAU,EAAEE,eAAW,EAAE,WAAW,EAAElB,YAAQ,EAAE,QAAQ,EAAE,YAAY,EAAC;AACvH,KAAK;AACL,GAAG,MAAM;AACT,IAAIc,aAAS,CAACK,aAAS,EAAEJ,YAAQ,EAAE,WAAW,EAAEC,cAAU,EAAEE,eAAW,EAAE,WAAW,EAAElB,YAAQ,EAAE,QAAQ,EAAE,YAAY,EAAC;AACvH,GAAG;AACH,EAAE,OAAO,OAAO;AAChB,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,CAAC,WAAW,EAAE,IAAI,GAAG,EAAE,KAAKc,aAAS,CAACZ,YAAQ,EAAE,WAAW,EAAE,GAAG,EAAEF,YAAQ,EAAE,IAAI,EAAC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,IAAI,IAAI,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAC;AAC9C;AACY,MAAC,QAAQ,GAAGoB,iBAAY;AACpC;AACY,MAAC,WAAW,GAAGC,oBAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK;AACzC,EAAEjB,aAAS,CAACF,YAAQ,EAAE,WAAW,EAAC;AAClC,EAAE,IAAI;AACN,IAAI,CAAC,GAAE;AACP,GAAG,SAAS;AACZ,IAAIM,gBAAY,GAAE;AAClB,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,OAAO,WAAW,EAAE,CAAC,KAAK;AACpD,EAAEJ,aAAS,CAACF,YAAQ,EAAE,WAAW,EAAC;AAClC,EAAE,IAAI;AACN,IAAI,MAAM,CAAC,GAAE;AACb,GAAG,SAAS;AACZ,IAAIM,gBAAY,GAAE;AAClB,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,OAAO,EAAE,CAAC,KAAK;AAC3C,EAAE,IAAI,SAAQ;AACd,EAAE,MAAM,KAAK,GAAGH,yBAAW,CAAC,GAAG,GAAE;AACjC,EAAE,IAAI;AACN,IAAI,CAAC,GAAE;AACP,GAAG,SAAS;AACZ,IAAI,QAAQ,GAAGA,yBAAW,CAAC,GAAG,EAAE,GAAG,MAAK;AACxC,IAAIS,aAAS,CAACb,cAAU,EAAE,OAAO,EAAED,YAAQ,EAAE,CAAC,CAAC,EAAEU,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;AACnF,GAAG;AACH,EAAE,OAAO,QAAQ;AACjB,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,OAAO,OAAO,EAAE,CAAC,KAAK;AACtD,EAAE,IAAI,SAAQ;AACd,EAAE,MAAM,KAAK,GAAGL,yBAAW,CAAC,GAAG,GAAE;AACjC,EAAE,IAAI;AACN,IAAI,MAAM,CAAC,GAAE;AACb,GAAG,SAAS;AACZ,IAAI,QAAQ,GAAGA,yBAAW,CAAC,GAAG,EAAE,GAAG,MAAK;AACxC,IAAIS,aAAS,CAACb,cAAU,EAAE,OAAO,EAAED,YAAQ,EAAE,CAAC,CAAC,EAAEU,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;AACnF,GAAG;AACH,EAAE,OAAO,QAAQ;AACjB,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,aAAa,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,KAAK;AAC7D,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,EAAE;AAC/B,IAAI,IAAI,CAAC,CAAC,EAAC;AACX,GAAG;AACH,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;AACzB,MAAM,IAAI,CAAC,CAAC,EAAC;AACb,KAAK;AACL,GAAG;AACH,EAAE,OAAO,IAAI;AACb,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,eAAe,KAAK;AAC7D,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;AACf,IAAI,MAAMY,MAAI,GAAGC,eAAU,CAAC,CAAC,EAAE,CAAC,EAAC;AACjC,IAAIT,aAAS,CAACd,YAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAEsB,MAAI,CAAC,KAAK,CAAC,EAAEL,WAAO,EAAE,CAAC,CAAC,KAAK,CAACK,MAAI,CAAC,KAAK,EAAEA,MAAI,CAAC,MAAM,CAAC,EAAEH,aAAS,EAAEG,MAAI,CAAC,MAAM,EAAEtB,YAAQ,EAAE,CAAC,CAAC,KAAK,CAACsB,MAAI,CAAC,KAAK,GAAGA,MAAI,CAAC,MAAM,CAAC,EAAC;AAC/J,IAAI,IAAI,CAAC,CAAC,EAAC;AACX,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,eAAe,KAAK,EAAEE,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAC,GAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,GAAG,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK;AACnD,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;AACf,IAAI,IAAI,CAAC,CAAC,OAAO,EAAEC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,EAAEA,cAAc,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC,EAAC;AACtF,GAAG;AACH,EAAE,OAAO,IAAI;AACb,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,KAAK,IAAI;AACpD,EAAE,OAAO,KAAK,IAAI;AAClB,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACzB,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACtC,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,KAAK;AACzD;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AAC9B,IAAI,OAAO,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;AAC1C,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE;AACvC,IAAI,YAAY,CAAC,OAAO,EAAE,2BAA2B,EAAE,IAAI,EAAC;AAC5D,GAAG;AACH,EAAE,IAAI,OAAO,GAAG,KAAI;AACpB,EAAE,QAAQ,CAAC,CAAC,WAAW;AACvB,IAAI,KAAK,WAAW;AACpB,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC;AAC3B,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC;AAC3B;AACA,IAAI,KAAK,UAAU,EAAE;AACrB,MAAM,IAAI,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,EAAE;AACzC,QAAQ,YAAY,CAAC,OAAO,EAAE,2BAA2B,EAAE,IAAI,EAAC;AAChE,OAAO;AACP,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,QAAQ,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;AAC1C,OAAO;AACP,MAAM,KAAK;AACX,KAAK;AACL,IAAI,KAAK,GAAG,EAAE;AACd,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;AAC7B,QAAQ,YAAY,CAAC,OAAO,EAAE,0CAA0C,EAAE,IAAI,EAAC;AAC/E,OAAO;AACP;AACA,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI;AACzB,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC3B,UAAU,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,EAAC;AACrE,SAAS;AACT,OAAO,EAAC;AACR,MAAM,KAAK;AACX,KAAK;AACL,IAAI,KAAK,GAAG,EAAE;AACd,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;AAC7B,QAAQ,YAAY,CAAC,OAAO,EAAE,0CAA0C,EAAE,IAAI,EAAC;AAC/E,OAAO;AACP;AACA,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;AAChC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACzB,UAAU,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,oCAAoC,CAAC,EAAE,IAAI,EAAC;AACrG,SAAS;AACT,QAAQ,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAC;AAChF,OAAO,EAAC;AACR,MAAM,KAAK;AACX,KAAK;AACL,IAAI,KAAK,MAAM;AACf,MAAM,IAAIC,aAAa,CAAC,CAAC,CAAC,KAAKA,aAAa,CAAC,CAAC,CAAC,EAAE;AACjD,QAAQ,YAAY,CAAC,OAAO,EAAE,+CAA+C,EAAE,IAAI,EAAC;AACpF,OAAO;AACP,MAAMC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,KAAK;AACxC,QAAQ,IAAI,CAACC,kBAAkB,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACzC,UAAU,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,kCAAkC,CAAC,EAAE,IAAI,EAAC;AAC3F,SAAS;AACT,QAAQ,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAC;AAC5E,OAAO,EAAC;AACR,MAAM,KAAK;AACX,IAAI,KAAK,KAAK;AACd,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;AACjC,QAAQ,YAAY,CAAC,OAAO,EAAE,8CAA8C,EAAE,IAAI,EAAC;AACnF,OAAO;AACP;AACA,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,aAAa,CAAC,EAAC;AAC7F,MAAM,KAAK;AACX;AACA,IAAI;AACJ,MAAM,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE;AACpE,QAAQ,YAAY,CAAC,OAAO,EAAE,CAAC,OAAO,EAAEH,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,EAAEA,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,IAAI,EAAC;AACvG,OAAO;AACP,GAAG;AACH,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAC;AAC1B,EAAE,OAAO,IAAI;AACb,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,GAAG,IAAI,EAAE,aAAa,GAAG,aAAa,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAC;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,CAAC,SAAS,EAAE,OAAO,GAAG,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC,gBAAgB,EAAE,OAAO,KAAK,IAAI,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC;AACnI;AACA;AACA;AACA;AACA;AACY,MAAC,KAAK,GAAG,CAAC,IAAI;AAC1B,EAAE,IAAI,GAAG,GAAG,KAAI;AAChB,EAAE,IAAI;AACN,IAAI,CAAC,GAAE;AACP,GAAG,CAAC,OAAO,IAAI,EAAE;AACjB,IAAI,GAAG,GAAG,KAAI;AACd,IAAIX,aAAS,CAACK,aAAS,EAAE,2BAA2B,EAAC;AACrD,GAAG;AACH;AACA,EAAE,IAAI,GAAG,KAAK,IAAI,EAAE;AACpB,IAAI,IAAI,CAAC,uBAAuB,EAAC;AACjC,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,MAAM,KAAK,IAAI;AACvC,EAAE,MAAM,aAAa,GAAGU,UAAU,CAAC,KAAK,EAAE,GAAG,IAAIA,UAAU,CAAC,GAAG,EAAE,CAAC,+BAA+B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAACA,QAAQ,EAAE,CAAC,EAAC;AACpJ,EAAE,IAAI,eAAe,GAAG,EAAC;AACzB,EAAE,IAAI,UAAU,GAAG,EAAC;AACpB,EAAE,MAAM,KAAK,GAAGzB,yBAAW,CAAC,GAAG,GAAE;AACjC,EAAE,KAAK,MAAM,OAAO,IAAI,KAAK,EAAE;AAC/B,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,EAAC;AAC9B,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG,EAAE;AAC7B,MAAM,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,EAAC;AAC1B;AACA,MAAM,IAAI,CAAC,EAAE;AACb,QAAQ,MAAM,cAAc,GAAG,EAAC;AAChC,QAAQ,IAAI,OAAO,GAAG,KAAI;AAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;AAC5D,UAAU,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,aAAa,EAAC;AAC3E,SAAS;AACT,QAAQ,UAAU,GAAE;AACpB;AACA,QAAQ,IAAI,OAAO,EAAE;AACrB,UAAU,eAAe,GAAE;AAC3B,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,MAAM,GAAG,GAAGA,yBAAW,CAAC,GAAG,GAAE;AAC/B,EAAES,aAAS,CAAC,EAAE,EAAC;AACf,EAAE,MAAM,OAAO,GAAG,eAAe,KAAK,cAAa;AACnD;AACA,EAAE,IAAI,OAAO,EAAE;AACf;AACA,IAAIA,aAAS,CAACK,aAAS,EAAEJ,YAAQ,EAAE,uBAAuB,EAAEf,YAAQ,EAAEgB,cAAU,EAAE,CAAC,IAAI,EAAEN,qBAAqB,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,EAAC;AAC9H;AACA,IAAIqB,sBAAkB,CAAC,YAAY,EAAE,EAAE,EAAC;AACxC,GAAG,MAAM;AACT,IAAI,MAAM,WAAW,GAAG,aAAa,GAAG,gBAAe;AACvD,IAAIjB,aAAS,CAACG,WAAO,EAAEF,YAAQ,EAAE,CAAC,EAAE,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC;AAC7F,GAAG;AACH,EAAE,OAAO,OAAO;AAChB,EAAC;AACD;AACA,MAAM,SAAS,SAAS,KAAK,CAAC,EAAE;AAChC;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,MAAM,IAAI;AAC9B,EAAED,aAAS,CAACG,WAAO,EAAEF,YAAQ,EAAE,IAAI,EAAEC,cAAU,EAAE,MAAM,EAAC;AACxD,EAAE,MAAM,IAAI,SAAS,CAAC,aAAa,CAAC;AACpC,EAAC;AACD;AACA,MAAM,SAAS,SAAS,KAAK,CAAC,EAAE;AAChC;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK;AACrC,EAAE,IAAI,IAAI,EAAE;AACZ,IAAI,MAAM,IAAI,SAAS,CAAC,YAAY,CAAC;AACrC,GAAG;AACH,EAAC;AACD;AACA;AACA,MAAM,YAAY,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/testing.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/time-e00067da.cjs":{"text":"'use strict';\n\nvar metric = require('./metric.cjs');\nvar math = require('./math-08e068f9.cjs');\n\n/**\n * Utility module to work with time.\n *\n * @module time\n */\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nconst getDate = () => new Date();\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nconst getUnixTime = Date.now;\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nconst humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1);\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000);\n  const seconds = d % 60;\n  const minutes = math.floor(d / 60) % 60;\n  const hours = math.floor(d / 3600) % 24;\n  const days = math.floor(d / 86400);\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n};\n\nvar time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getDate: getDate,\n  getUnixTime: getUnixTime,\n  humanizeDuration: humanizeDuration\n});\n\nexports.getDate = getDate;\nexports.getUnixTime = getUnixTime;\nexports.humanizeDuration = humanizeDuration;\nexports.time = time;\n///# sourceMappingURL=time-e00067da.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/time-e00067da.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/time-e00067da.cjs.map":{"text":"{\"version\":3,\"file\":\"time-e00067da.cjs\",\"sources\":[\"../time.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with time.\\n *\\n * @module time\\n */\\n\\nimport * as metric from './metric.js'\\nimport * as math from './math.js'\\n\\n/**\\n * Return current time.\\n *\\n * @return {Date}\\n */\\nexport const getDate = () => new Date()\\n\\n/**\\n * Return current unix time.\\n *\\n * @return {number}\\n */\\nexport const getUnixTime = Date.now\\n\\n/**\\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\\n *\\n * @param {number} d duration in milliseconds\\n * @return {string} humanized approximation of time\\n */\\nexport const humanizeDuration = d => {\\n  if (d < 60000) {\\n    const p = metric.prefix(d, -1)\\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\\n  }\\n  d = math.floor(d / 1000)\\n  const seconds = d % 60\\n  const minutes = math.floor(d / 60) % 60\\n  const hours = math.floor(d / 3600) % 24\\n  const days = math.floor(d / 86400)\\n  if (days > 0) {\\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\\n  }\\n  if (hours > 0) {\\n    /* istanbul ignore next */\\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\\n  }\\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\\n}\\n\"],\"names\":[\"metric.prefix\",\"math.round\",\"math.floor\"],\"mappings\":\";;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,OAAO,GAAG,MAAM,IAAI,IAAI,GAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,IAAI,CAAC,IAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,CAAC,IAAI;AACrC,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE;AACjB,IAAI,MAAM,CAAC,GAAGA,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;AAClC,IAAI,OAAOC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG;AACvD,GAAG;AACH,EAAE,CAAC,GAAGC,UAAU,CAAC,CAAC,GAAG,IAAI,EAAC;AAC1B,EAAE,MAAM,OAAO,GAAG,CAAC,GAAG,GAAE;AACxB,EAAE,MAAM,OAAO,GAAGA,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAE;AACzC,EAAE,MAAM,KAAK,GAAGA,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAE;AACzC,EAAE,MAAM,IAAI,GAAGA,UAAU,CAAC,CAAC,GAAG,KAAK,EAAC;AACpC,EAAE,IAAI,IAAI,GAAG,CAAC,EAAE;AAChB,IAAI,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,IAAI,GAAG,IAAI,OAAO,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AAC3G,GAAG;AACH,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB;AACA,IAAI,OAAO,KAAK,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,IAAI,GAAG,IAAI,OAAO,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;AACpH,GAAG;AACH,EAAE,OAAO,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;AACnE;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/time-e00067da.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/time.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./metric.cjs');\nrequire('./math-08e068f9.cjs');\nvar time = require('./time-e00067da.cjs');\n\n\n\nexports.getDate = time.getDate;\nexports.getUnixTime = time.getUnixTime;\nexports.humanizeDuration = time.humanizeDuration;\n///# sourceMappingURL=time.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/time.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/time.cjs.map":{"text":"{\"version\":3,\"file\":\"time.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/time.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/tree-92f764b3.cjs":{"text":"'use strict';\n\n/**\n * Red-black-tree implementation.\n *\n * @module tree\n */\n// @ts-nocheck TODO: remove or refactor this file\n\nconst rotate = (tree, parent, newParent, n) => {\n  if (parent === null) {\n    tree.root = newParent;\n    newParent._parent = null;\n  } else if (parent.left === n) {\n    parent.left = newParent;\n  } else if (parent.right === n) {\n    parent.right = newParent;\n  } else {\n    throw new Error('The elements are wrongly connected!')\n  }\n};\n\nclass N {\n  // A created node is always red!\n  constructor (val) {\n    this.val = val;\n    this.color = true;\n    this._left = null;\n    this._right = null;\n    this._parent = null;\n  }\n\n  isRed () { return this.color }\n  isBlack () { return !this.color }\n  redden () { this.color = true; return this }\n  blacken () { this.color = false; return this }\n  get grandparent () {\n    return this.parent.parent\n  }\n\n  get parent () {\n    return this._parent\n  }\n\n  get sibling () {\n    return (this === this.parent.left)\n      ? this.parent.right : this.parent.left\n  }\n\n  get left () {\n    return this._left\n  }\n\n  get right () {\n    return this._right\n  }\n\n  set left (n) {\n    if (n !== null) {\n      n._parent = this;\n    }\n    this._left = n;\n  }\n\n  set right (n) {\n    if (n !== null) {\n      n._parent = this;\n    }\n    this._right = n;\n  }\n\n  rotateLeft (tree) {\n    const parent = this.parent;\n    const newParent = this.right;\n    const newRight = this.right.left;\n    newParent.left = this;\n    this.right = newRight;\n    rotate(tree, parent, newParent, this);\n  }\n\n  next () {\n    if (this.right !== null) {\n      // search the most left node in the right tree\n      var o = this.right;\n      while (o.left !== null) {\n        o = o.left;\n      }\n      return o\n    } else {\n      var p = this;\n      while (p.parent !== null && p !== p.parent.left) {\n        p = p.parent;\n      }\n      return p.parent\n    }\n  }\n\n  prev () {\n    if (this.left !== null) {\n      // search the most right node in the left tree\n      var o = this.left;\n      while (o.right !== null) {\n        o = o.right;\n      }\n      return o\n    } else {\n      var p = this;\n      while (p.parent !== null && p !== p.parent.right) {\n        p = p.parent;\n      }\n      return p.parent\n    }\n  }\n\n  rotateRight (tree) {\n    const parent = this.parent;\n    const newParent = this.left;\n    const newLeft = this.left.right;\n    newParent.right = this;\n    this.left = newLeft;\n    rotate(tree, parent, newParent, this);\n  }\n\n  getUncle () {\n    // we can assume that grandparent exists when this is called!\n    if (this.parent === this.parent.parent.left) {\n      return this.parent.parent.right\n    } else {\n      return this.parent.parent.left\n    }\n  }\n}\n\nconst isBlack = node =>\n  node !== null ? node.isBlack() : true;\n\nconst isRed = (node) =>\n  node !== null ? node.isRed() : false;\n\n/**\n * This is a Red Black Tree implementation\n *\n * @template K,V\n */\nclass Tree {\n  constructor () {\n    this.root = null;\n    this.length = 0;\n  }\n\n  /**\n   * @param {K} id\n   */\n  findNext (id) {\n    var nextID = id.clone();\n    nextID.clock += 1;\n    return this.findWithLowerBound(nextID)\n  }\n\n  /**\n   * @param {K} id\n   */\n  findPrev (id) {\n    const prevID = id.clone();\n    prevID.clock -= 1;\n    return this.findWithUpperBound(prevID)\n  }\n\n  /**\n   * @param {K} from\n   */\n  findNodeWithLowerBound (from) {\n    var o = this.root;\n    if (o === null) {\n      return null\n    } else {\n      while (true) {\n        if (from === null || (from.lessThan(o.val._id) && o.left !== null)) {\n          // o is included in the bound\n          // try to find an element that is closer to the bound\n          o = o.left;\n        } else if (from !== null && o.val._id.lessThan(from)) {\n          // o is not within the bound, maybe one of the right elements is..\n          if (o.right !== null) {\n            o = o.right;\n          } else {\n            // there is no right element. Search for the next bigger element,\n            // this should be within the bounds\n            return o.next()\n          }\n        } else {\n          return o\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {K} to\n   */\n  findNodeWithUpperBound (to) {\n    if (to === undefined) {\n      throw new Error('You must define from!')\n    }\n    var o = this.root;\n    if (o === null) {\n      return null\n    } else {\n      while (true) {\n        if ((to === null || o.val._id.lessThan(to)) && o.right !== null) {\n          // o is included in the bound\n          // try to find an element that is closer to the bound\n          o = o.right;\n        } else if (to !== null && to.lessThan(o.val._id)) {\n          // o is not within the bound, maybe one of the left elements is..\n          if (o.left !== null) {\n            o = o.left;\n          } else {\n            // there is no left element. Search for the prev smaller element,\n            // this should be within the bounds\n            return o.prev()\n          }\n        } else {\n          return o\n        }\n      }\n    }\n  }\n\n  /**\n   * @return {V}\n   */\n  findSmallestNode () {\n    var o = this.root;\n    while (o != null && o.left != null) {\n      o = o.left;\n    }\n    return o\n  }\n\n  /**\n   * @param {K} from\n   * @return {V}\n   */\n  findWithLowerBound (from) {\n    var n = this.findNodeWithLowerBound(from);\n    return n == null ? null : n.val\n  }\n\n  /**\n   * @param {K} to\n   * @return {V}\n   */\n  findWithUpperBound (to) {\n    var n = this.findNodeWithUpperBound(to);\n    return n == null ? null : n.val\n  }\n\n  /**\n   * @param {K} from\n   * @param {V} from\n   * @param {function(V):void} f\n   */\n  iterate (from, to, f) {\n    var o;\n    if (from === null) {\n      o = this.findSmallestNode();\n    } else {\n      o = this.findNodeWithLowerBound(from);\n    }\n    while (\n      o !== null &&\n      (\n        to === null || // eslint-disable-line no-unmodified-loop-condition\n        o.val._id.lessThan(to) ||\n        o.val._id.equals(to)\n      )\n    ) {\n      f(o.val);\n      o = o.next();\n    }\n  }\n\n  /**\n   * @param {K} id\n   * @return {V|null}\n   */\n  find (id) {\n    const n = this.findNode(id);\n    if (n !== null) {\n      return n.val\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * @param {K} id\n   * @return {N<V>|null}\n   */\n  findNode (id) {\n    var o = this.root;\n    if (o === null) {\n      return null\n    } else {\n      while (true) {\n        if (o === null) {\n          return null\n        }\n        if (id.lessThan(o.val._id)) {\n          o = o.left;\n        } else if (o.val._id.lessThan(id)) {\n          o = o.right;\n        } else {\n          return o\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {K} id\n   */\n  delete (id) {\n    var d = this.findNode(id);\n    if (d == null) {\n      // throw new Error('Element does not exist!')\n      return\n    }\n    this.length--;\n    if (d.left !== null && d.right !== null) {\n      // switch d with the greates element in the left subtree.\n      // o should have at most one child.\n      var o = d.left;\n      // find\n      while (o.right !== null) {\n        o = o.right;\n      }\n      // switch\n      d.val = o.val;\n      d = o;\n    }\n    // d has at most one child\n    // let n be the node that replaces d\n    var isFakeChild;\n    var child = d.left || d.right;\n    if (child === null) {\n      isFakeChild = true;\n      child = new N(null);\n      child.blacken();\n      d.right = child;\n    } else {\n      isFakeChild = false;\n    }\n\n    if (d.parent === null) {\n      if (!isFakeChild) {\n        this.root = child;\n        child.blacken();\n        child._parent = null;\n      } else {\n        this.root = null;\n      }\n      return\n    } else if (d.parent.left === d) {\n      d.parent.left = child;\n    } else if (d.parent.right === d) {\n      d.parent.right = child;\n    } else {\n      throw new Error('Impossible!')\n    }\n    if (d.isBlack()) {\n      if (child.isRed()) {\n        child.blacken();\n      } else {\n        this._fixDelete(child);\n      }\n    }\n    this.root.blacken();\n    if (isFakeChild) {\n      if (child.parent.left === child) {\n        child.parent.left = null;\n      } else if (child.parent.right === child) {\n        child.parent.right = null;\n      } else {\n        throw new Error('Impossible #3')\n      }\n    }\n  }\n\n  _fixDelete (n) {\n    if (n.parent === null) {\n      // this can only be called after the first iteration of fixDelete.\n      return\n    }\n    // d was already replaced by the child\n    // d is not the root\n    // d and child are black\n    var sibling = n.sibling;\n    if (isRed(sibling)) {\n      // make sibling the grandfather\n      n.parent.redden();\n      sibling.blacken();\n      if (n === n.parent.left) {\n        n.parent.rotateLeft(this);\n      } else if (n === n.parent.right) {\n        n.parent.rotateRight(this);\n      } else {\n        throw new Error('Impossible #2')\n      }\n      sibling = n.sibling;\n    }\n    // parent, sibling, and children of n are black\n    if (n.parent.isBlack() &&\n      sibling.isBlack() &&\n      isBlack(sibling.left) &&\n      isBlack(sibling.right)\n    ) {\n      sibling.redden();\n      this._fixDelete(n.parent);\n    } else if (n.parent.isRed() &&\n      sibling.isBlack() &&\n      isBlack(sibling.left) &&\n      isBlack(sibling.right)\n    ) {\n      sibling.redden();\n      n.parent.blacken();\n    } else {\n      if (n === n.parent.left &&\n        sibling.isBlack() &&\n        isRed(sibling.left) &&\n        isBlack(sibling.right)\n      ) {\n        sibling.redden();\n        sibling.left.blacken();\n        sibling.rotateRight(this);\n        sibling = n.sibling;\n      } else if (n === n.parent.right &&\n        sibling.isBlack() &&\n        isRed(sibling.right) &&\n        isBlack(sibling.left)\n      ) {\n        sibling.redden();\n        sibling.right.blacken();\n        sibling.rotateLeft(this);\n        sibling = n.sibling;\n      }\n      sibling.color = n.parent.color;\n      n.parent.blacken();\n      if (n === n.parent.left) {\n        sibling.right.blacken();\n        n.parent.rotateLeft(this);\n      } else {\n        sibling.left.blacken();\n        n.parent.rotateRight(this);\n      }\n    }\n  }\n\n  put (v) {\n    var node = new N(v);\n    if (this.root !== null) {\n      var p = this.root; // p abbrev. parent\n      while (true) {\n        if (node.val._id.lessThan(p.val._id)) {\n          if (p.left === null) {\n            p.left = node;\n            break\n          } else {\n            p = p.left;\n          }\n        } else if (p.val._id.lessThan(node.val._id)) {\n          if (p.right === null) {\n            p.right = node;\n            break\n          } else {\n            p = p.right;\n          }\n        } else {\n          p.val = node.val;\n          return p\n        }\n      }\n      this._fixInsert(node);\n    } else {\n      this.root = node;\n    }\n    this.length++;\n    this.root.blacken();\n    return node\n  }\n\n  _fixInsert (n) {\n    if (n.parent === null) {\n      n.blacken();\n      return\n    } else if (n.parent.isBlack()) {\n      return\n    }\n    var uncle = n.getUncle();\n    if (uncle !== null && uncle.isRed()) {\n      // Note: parent: red, uncle: red\n      n.parent.blacken();\n      uncle.blacken();\n      n.grandparent.redden();\n      this._fixInsert(n.grandparent);\n    } else {\n      // Note: parent: red, uncle: black or null\n      // Now we transform the tree in such a way that\n      // either of these holds:\n      //   1) grandparent.left.isRed\n      //     and grandparent.left.left.isRed\n      //   2) grandparent.right.isRed\n      //     and grandparent.right.right.isRed\n      if (n === n.parent.right && n.parent === n.grandparent.left) {\n        n.parent.rotateLeft(this);\n        // Since we rotated and want to use the previous\n        // cases, we need to set n in such a way that\n        // n.parent.isRed again\n        n = n.left;\n      } else if (n === n.parent.left && n.parent === n.grandparent.right) {\n        n.parent.rotateRight(this);\n        // see above\n        n = n.right;\n      }\n      // Case 1) or 2) hold from here on.\n      // Now traverse grandparent, make parent a black node\n      // on the highest level which holds two red nodes.\n      n.parent.blacken();\n      n.grandparent.redden();\n      if (n === n.parent.left) {\n        // Case 1\n        n.grandparent.rotateRight(this);\n      } else {\n        // Case 2\n        n.grandparent.rotateLeft(this);\n      }\n    }\n  }\n}\n\nvar tree = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Tree: Tree\n});\n\nexports.Tree = Tree;\nexports.tree = tree;\n///# sourceMappingURL=tree-92f764b3.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/tree-92f764b3.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/tree-92f764b3.cjs.map":{"text":"{\"version\":3,\"file\":\"tree-92f764b3.cjs\",\"sources\":[\"../tree.js\"],\"sourcesContent\":[\"/**\\n * Red-black-tree implementation.\\n *\\n * @module tree\\n */\\n// @ts-nocheck TODO: remove or refactor this file\\n\\nconst rotate = (tree, parent, newParent, n) => {\\n  if (parent === null) {\\n    tree.root = newParent\\n    newParent._parent = null\\n  } else if (parent.left === n) {\\n    parent.left = newParent\\n  } else if (parent.right === n) {\\n    parent.right = newParent\\n  } else {\\n    throw new Error('The elements are wrongly connected!')\\n  }\\n}\\n\\nclass N {\\n  // A created node is always red!\\n  constructor (val) {\\n    this.val = val\\n    this.color = true\\n    this._left = null\\n    this._right = null\\n    this._parent = null\\n  }\\n\\n  isRed () { return this.color }\\n  isBlack () { return !this.color }\\n  redden () { this.color = true; return this }\\n  blacken () { this.color = false; return this }\\n  get grandparent () {\\n    return this.parent.parent\\n  }\\n\\n  get parent () {\\n    return this._parent\\n  }\\n\\n  get sibling () {\\n    return (this === this.parent.left)\\n      ? this.parent.right : this.parent.left\\n  }\\n\\n  get left () {\\n    return this._left\\n  }\\n\\n  get right () {\\n    return this._right\\n  }\\n\\n  set left (n) {\\n    if (n !== null) {\\n      n._parent = this\\n    }\\n    this._left = n\\n  }\\n\\n  set right (n) {\\n    if (n !== null) {\\n      n._parent = this\\n    }\\n    this._right = n\\n  }\\n\\n  rotateLeft (tree) {\\n    const parent = this.parent\\n    const newParent = this.right\\n    const newRight = this.right.left\\n    newParent.left = this\\n    this.right = newRight\\n    rotate(tree, parent, newParent, this)\\n  }\\n\\n  next () {\\n    if (this.right !== null) {\\n      // search the most left node in the right tree\\n      var o = this.right\\n      while (o.left !== null) {\\n        o = o.left\\n      }\\n      return o\\n    } else {\\n      var p = this\\n      while (p.parent !== null && p !== p.parent.left) {\\n        p = p.parent\\n      }\\n      return p.parent\\n    }\\n  }\\n\\n  prev () {\\n    if (this.left !== null) {\\n      // search the most right node in the left tree\\n      var o = this.left\\n      while (o.right !== null) {\\n        o = o.right\\n      }\\n      return o\\n    } else {\\n      var p = this\\n      while (p.parent !== null && p !== p.parent.right) {\\n        p = p.parent\\n      }\\n      return p.parent\\n    }\\n  }\\n\\n  rotateRight (tree) {\\n    const parent = this.parent\\n    const newParent = this.left\\n    const newLeft = this.left.right\\n    newParent.right = this\\n    this.left = newLeft\\n    rotate(tree, parent, newParent, this)\\n  }\\n\\n  getUncle () {\\n    // we can assume that grandparent exists when this is called!\\n    if (this.parent === this.parent.parent.left) {\\n      return this.parent.parent.right\\n    } else {\\n      return this.parent.parent.left\\n    }\\n  }\\n}\\n\\nconst isBlack = node =>\\n  node !== null ? node.isBlack() : true\\n\\nconst isRed = (node) =>\\n  node !== null ? node.isRed() : false\\n\\n/**\\n * This is a Red Black Tree implementation\\n *\\n * @template K,V\\n */\\nexport class Tree {\\n  constructor () {\\n    this.root = null\\n    this.length = 0\\n  }\\n\\n  /**\\n   * @param {K} id\\n   */\\n  findNext (id) {\\n    var nextID = id.clone()\\n    nextID.clock += 1\\n    return this.findWithLowerBound(nextID)\\n  }\\n\\n  /**\\n   * @param {K} id\\n   */\\n  findPrev (id) {\\n    const prevID = id.clone()\\n    prevID.clock -= 1\\n    return this.findWithUpperBound(prevID)\\n  }\\n\\n  /**\\n   * @param {K} from\\n   */\\n  findNodeWithLowerBound (from) {\\n    var o = this.root\\n    if (o === null) {\\n      return null\\n    } else {\\n      while (true) {\\n        if (from === null || (from.lessThan(o.val._id) && o.left !== null)) {\\n          // o is included in the bound\\n          // try to find an element that is closer to the bound\\n          o = o.left\\n        } else if (from !== null && o.val._id.lessThan(from)) {\\n          // o is not within the bound, maybe one of the right elements is..\\n          if (o.right !== null) {\\n            o = o.right\\n          } else {\\n            // there is no right element. Search for the next bigger element,\\n            // this should be within the bounds\\n            return o.next()\\n          }\\n        } else {\\n          return o\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @param {K} to\\n   */\\n  findNodeWithUpperBound (to) {\\n    if (to === undefined) {\\n      throw new Error('You must define from!')\\n    }\\n    var o = this.root\\n    if (o === null) {\\n      return null\\n    } else {\\n      while (true) {\\n        if ((to === null || o.val._id.lessThan(to)) && o.right !== null) {\\n          // o is included in the bound\\n          // try to find an element that is closer to the bound\\n          o = o.right\\n        } else if (to !== null && to.lessThan(o.val._id)) {\\n          // o is not within the bound, maybe one of the left elements is..\\n          if (o.left !== null) {\\n            o = o.left\\n          } else {\\n            // there is no left element. Search for the prev smaller element,\\n            // this should be within the bounds\\n            return o.prev()\\n          }\\n        } else {\\n          return o\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @return {V}\\n   */\\n  findSmallestNode () {\\n    var o = this.root\\n    while (o != null && o.left != null) {\\n      o = o.left\\n    }\\n    return o\\n  }\\n\\n  /**\\n   * @param {K} from\\n   * @return {V}\\n   */\\n  findWithLowerBound (from) {\\n    var n = this.findNodeWithLowerBound(from)\\n    return n == null ? null : n.val\\n  }\\n\\n  /**\\n   * @param {K} to\\n   * @return {V}\\n   */\\n  findWithUpperBound (to) {\\n    var n = this.findNodeWithUpperBound(to)\\n    return n == null ? null : n.val\\n  }\\n\\n  /**\\n   * @param {K} from\\n   * @param {V} from\\n   * @param {function(V):void} f\\n   */\\n  iterate (from, to, f) {\\n    var o\\n    if (from === null) {\\n      o = this.findSmallestNode()\\n    } else {\\n      o = this.findNodeWithLowerBound(from)\\n    }\\n    while (\\n      o !== null &&\\n      (\\n        to === null || // eslint-disable-line no-unmodified-loop-condition\\n        o.val._id.lessThan(to) ||\\n        o.val._id.equals(to)\\n      )\\n    ) {\\n      f(o.val)\\n      o = o.next()\\n    }\\n  }\\n\\n  /**\\n   * @param {K} id\\n   * @return {V|null}\\n   */\\n  find (id) {\\n    const n = this.findNode(id)\\n    if (n !== null) {\\n      return n.val\\n    } else {\\n      return null\\n    }\\n  }\\n\\n  /**\\n   * @param {K} id\\n   * @return {N<V>|null}\\n   */\\n  findNode (id) {\\n    var o = this.root\\n    if (o === null) {\\n      return null\\n    } else {\\n      while (true) {\\n        if (o === null) {\\n          return null\\n        }\\n        if (id.lessThan(o.val._id)) {\\n          o = o.left\\n        } else if (o.val._id.lessThan(id)) {\\n          o = o.right\\n        } else {\\n          return o\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @param {K} id\\n   */\\n  delete (id) {\\n    var d = this.findNode(id)\\n    if (d == null) {\\n      // throw new Error('Element does not exist!')\\n      return\\n    }\\n    this.length--\\n    if (d.left !== null && d.right !== null) {\\n      // switch d with the greates element in the left subtree.\\n      // o should have at most one child.\\n      var o = d.left\\n      // find\\n      while (o.right !== null) {\\n        o = o.right\\n      }\\n      // switch\\n      d.val = o.val\\n      d = o\\n    }\\n    // d has at most one child\\n    // let n be the node that replaces d\\n    var isFakeChild\\n    var child = d.left || d.right\\n    if (child === null) {\\n      isFakeChild = true\\n      child = new N(null)\\n      child.blacken()\\n      d.right = child\\n    } else {\\n      isFakeChild = false\\n    }\\n\\n    if (d.parent === null) {\\n      if (!isFakeChild) {\\n        this.root = child\\n        child.blacken()\\n        child._parent = null\\n      } else {\\n        this.root = null\\n      }\\n      return\\n    } else if (d.parent.left === d) {\\n      d.parent.left = child\\n    } else if (d.parent.right === d) {\\n      d.parent.right = child\\n    } else {\\n      throw new Error('Impossible!')\\n    }\\n    if (d.isBlack()) {\\n      if (child.isRed()) {\\n        child.blacken()\\n      } else {\\n        this._fixDelete(child)\\n      }\\n    }\\n    this.root.blacken()\\n    if (isFakeChild) {\\n      if (child.parent.left === child) {\\n        child.parent.left = null\\n      } else if (child.parent.right === child) {\\n        child.parent.right = null\\n      } else {\\n        throw new Error('Impossible #3')\\n      }\\n    }\\n  }\\n\\n  _fixDelete (n) {\\n    if (n.parent === null) {\\n      // this can only be called after the first iteration of fixDelete.\\n      return\\n    }\\n    // d was already replaced by the child\\n    // d is not the root\\n    // d and child are black\\n    var sibling = n.sibling\\n    if (isRed(sibling)) {\\n      // make sibling the grandfather\\n      n.parent.redden()\\n      sibling.blacken()\\n      if (n === n.parent.left) {\\n        n.parent.rotateLeft(this)\\n      } else if (n === n.parent.right) {\\n        n.parent.rotateRight(this)\\n      } else {\\n        throw new Error('Impossible #2')\\n      }\\n      sibling = n.sibling\\n    }\\n    // parent, sibling, and children of n are black\\n    if (n.parent.isBlack() &&\\n      sibling.isBlack() &&\\n      isBlack(sibling.left) &&\\n      isBlack(sibling.right)\\n    ) {\\n      sibling.redden()\\n      this._fixDelete(n.parent)\\n    } else if (n.parent.isRed() &&\\n      sibling.isBlack() &&\\n      isBlack(sibling.left) &&\\n      isBlack(sibling.right)\\n    ) {\\n      sibling.redden()\\n      n.parent.blacken()\\n    } else {\\n      if (n === n.parent.left &&\\n        sibling.isBlack() &&\\n        isRed(sibling.left) &&\\n        isBlack(sibling.right)\\n      ) {\\n        sibling.redden()\\n        sibling.left.blacken()\\n        sibling.rotateRight(this)\\n        sibling = n.sibling\\n      } else if (n === n.parent.right &&\\n        sibling.isBlack() &&\\n        isRed(sibling.right) &&\\n        isBlack(sibling.left)\\n      ) {\\n        sibling.redden()\\n        sibling.right.blacken()\\n        sibling.rotateLeft(this)\\n        sibling = n.sibling\\n      }\\n      sibling.color = n.parent.color\\n      n.parent.blacken()\\n      if (n === n.parent.left) {\\n        sibling.right.blacken()\\n        n.parent.rotateLeft(this)\\n      } else {\\n        sibling.left.blacken()\\n        n.parent.rotateRight(this)\\n      }\\n    }\\n  }\\n\\n  put (v) {\\n    var node = new N(v)\\n    if (this.root !== null) {\\n      var p = this.root // p abbrev. parent\\n      while (true) {\\n        if (node.val._id.lessThan(p.val._id)) {\\n          if (p.left === null) {\\n            p.left = node\\n            break\\n          } else {\\n            p = p.left\\n          }\\n        } else if (p.val._id.lessThan(node.val._id)) {\\n          if (p.right === null) {\\n            p.right = node\\n            break\\n          } else {\\n            p = p.right\\n          }\\n        } else {\\n          p.val = node.val\\n          return p\\n        }\\n      }\\n      this._fixInsert(node)\\n    } else {\\n      this.root = node\\n    }\\n    this.length++\\n    this.root.blacken()\\n    return node\\n  }\\n\\n  _fixInsert (n) {\\n    if (n.parent === null) {\\n      n.blacken()\\n      return\\n    } else if (n.parent.isBlack()) {\\n      return\\n    }\\n    var uncle = n.getUncle()\\n    if (uncle !== null && uncle.isRed()) {\\n      // Note: parent: red, uncle: red\\n      n.parent.blacken()\\n      uncle.blacken()\\n      n.grandparent.redden()\\n      this._fixInsert(n.grandparent)\\n    } else {\\n      // Note: parent: red, uncle: black or null\\n      // Now we transform the tree in such a way that\\n      // either of these holds:\\n      //   1) grandparent.left.isRed\\n      //     and grandparent.left.left.isRed\\n      //   2) grandparent.right.isRed\\n      //     and grandparent.right.right.isRed\\n      if (n === n.parent.right && n.parent === n.grandparent.left) {\\n        n.parent.rotateLeft(this)\\n        // Since we rotated and want to use the previous\\n        // cases, we need to set n in such a way that\\n        // n.parent.isRed again\\n        n = n.left\\n      } else if (n === n.parent.left && n.parent === n.grandparent.right) {\\n        n.parent.rotateRight(this)\\n        // see above\\n        n = n.right\\n      }\\n      // Case 1) or 2) hold from here on.\\n      // Now traverse grandparent, make parent a black node\\n      // on the highest level which holds two red nodes.\\n      n.parent.blacken()\\n      n.grandparent.redden()\\n      if (n === n.parent.left) {\\n        // Case 1\\n        n.grandparent.rotateRight(this)\\n      } else {\\n        // Case 2\\n        n.grandparent.rotateLeft(this)\\n      }\\n    }\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/tree-92f764b3.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/tree.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tree = require('./tree-92f764b3.cjs');\n\n\n\nexports.Tree = tree.Tree;\n///# sourceMappingURL=tree.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/tree.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/tree.cjs.map":{"text":"{\"version\":3,\"file\":\"tree.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/tree.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/url.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar object = require('./object-dcdd6eed.cjs');\n\n/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nconst decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {};\n  const urlQuerySplit = url.split('?');\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    const item = pairs[i];\n    if (item.length > 0) {\n      const pair = item.split('=');\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n  }\n  return query\n};\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nconst encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');\n\nexports.decodeQueryParams = decodeQueryParams;\nexports.encodeQueryParams = encodeQueryParams;\n///# sourceMappingURL=url.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/url.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/url.cjs.map":{"text":"{\"version\":3,\"file\":\"url.cjs\",\"sources\":[\"../url.js\"],\"sourcesContent\":[\"/**\\n * Utility module to work with urls.\\n *\\n * @module url\\n */\\n\\nimport * as object from './object.js'\\n\\n/**\\n * Parse query parameters from an url.\\n *\\n * @param {string} url\\n * @return {Object<string,string>}\\n */\\nexport const decodeQueryParams = url => {\\n  /**\\n   * @type {Object<string,string>}\\n   */\\n  const query = {}\\n  const urlQuerySplit = url.split('?')\\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\\n  for (var i = 0; i < pairs.length; i++) {\\n    const item = pairs[i]\\n    if (item.length > 0) {\\n      const pair = item.split('=')\\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\\n    }\\n  }\\n  return query\\n}\\n\\n/**\\n * @param {Object<string,string>} params\\n * @return {string}\\n */\\nexport const encodeQueryParams = params =>\\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\\n\"],\"names\":[\"object.map\"],\"mappings\":\";;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,iBAAiB,GAAG,GAAG,IAAI;AACxC;AACA;AACA;AACA,EAAE,MAAM,KAAK,GAAG,GAAE;AAClB,EAAE,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAC;AACtC,EAAE,MAAM,KAAK,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAC;AAClE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,EAAC;AACzB,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACzB,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC;AAClC,MAAM,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC;AAC5E,KAAK;AACL,GAAG;AACH,EAAE,OAAO,KAAK;AACd,EAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAAC,iBAAiB,GAAG,MAAM;AACvC,EAAEA,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/url.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/websocket-bfe7f545.cjs":{"text":"'use strict';\n\nvar observable = require('./observable.cjs');\nvar time = require('./time-e00067da.cjs');\nvar math = require('./math-08e068f9.cjs');\n\n/* eslint-env browser */\n\nconst reconnectTimeoutBase = 1200;\nconst maxReconnectTimeout = 2500;\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000;\n\n/**\n * @param {WebsocketClient} wsclient\n */\nconst setupWS = (wsclient) => {\n  if (wsclient.shouldConnect && wsclient.ws === null) {\n    const websocket = new WebSocket(wsclient.url);\n    const binaryType = wsclient.binaryType;\n    /**\n     * @type {any}\n     */\n    let pingTimeout = null;\n    if (binaryType) {\n      websocket.binaryType = binaryType;\n    }\n    wsclient.ws = websocket;\n    wsclient.connecting = true;\n    wsclient.connected = false;\n    websocket.onmessage = event => {\n      wsclient.lastMessageReceived = time.getUnixTime();\n      const data = event.data;\n      const message = typeof data === 'string' ? JSON.parse(data) : data;\n      if (message && message.type === 'pong') {\n        clearTimeout(pingTimeout);\n        pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2);\n      }\n      wsclient.emit('message', [message, wsclient]);\n    };\n    /**\n     * @param {any} error\n     */\n    const onclose = error => {\n      if (wsclient.ws !== null) {\n        wsclient.ws = null;\n        wsclient.connecting = false;\n        if (wsclient.connected) {\n          wsclient.connected = false;\n          wsclient.emit('disconnect', [{ type: 'disconnect', error }, wsclient]);\n        } else {\n          wsclient.unsuccessfulReconnects++;\n        }\n        // Start with no reconnect timeout and increase timeout by\n        // log10(wsUnsuccessfulReconnects).\n        // The idea is to increase reconnect timeout slowly and have no reconnect\n        // timeout at the beginning (log(1) = 0)\n        setTimeout(setupWS, math.min(math.log10(wsclient.unsuccessfulReconnects + 1) * reconnectTimeoutBase, maxReconnectTimeout), wsclient);\n      }\n      clearTimeout(pingTimeout);\n    };\n    const sendPing = () => {\n      if (wsclient.ws === websocket) {\n        wsclient.send({\n          type: 'ping'\n        });\n      }\n    };\n    websocket.onclose = () => onclose(null);\n    websocket.onerror = error => onclose(error);\n    websocket.onopen = () => {\n      wsclient.lastMessageReceived = time.getUnixTime();\n      wsclient.connecting = false;\n      wsclient.connected = true;\n      wsclient.unsuccessfulReconnects = 0;\n      wsclient.emit('connect', [{ type: 'connect' }, wsclient]);\n      // set ping\n      pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2);\n    };\n  }\n};\n\n/**\n * @extends Observable<string>\n */\nclass WebsocketClient extends observable.Observable {\n  /**\n   * @param {string} url\n   * @param {object} [opts]\n   * @param {'arraybuffer' | 'blob' | null} [opts.binaryType] Set `ws.binaryType`\n   */\n  constructor (url, { binaryType } = {}) {\n    super();\n    this.url = url;\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null;\n    this.binaryType = binaryType || null;\n    this.connected = false;\n    this.connecting = false;\n    this.unsuccessfulReconnects = 0;\n    this.lastMessageReceived = 0;\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = true;\n    this._checkInterval = setInterval(() => {\n      if (this.connected && messageReconnectTimeout < time.getUnixTime() - this.lastMessageReceived) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        /** @type {WebSocket} */ (this.ws).close();\n      }\n    }, messageReconnectTimeout / 2);\n    setupWS(this);\n  }\n\n  /**\n   * @param {any} message\n   */\n  send (message) {\n    if (this.ws) {\n      this.ws.send(JSON.stringify(message));\n    }\n  }\n\n  destroy () {\n    clearInterval(this._checkInterval);\n    this.disconnect();\n    super.destroy();\n  }\n\n  disconnect () {\n    this.shouldConnect = false;\n    if (this.ws !== null) {\n      this.ws.close();\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true;\n    if (!this.connected && this.ws === null) {\n      setupWS(this);\n    }\n  }\n}\n\nvar websocket = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  WebsocketClient: WebsocketClient\n});\n\nexports.WebsocketClient = WebsocketClient;\nexports.websocket = websocket;\n///# sourceMappingURL=websocket-bfe7f545.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/websocket-bfe7f545.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/websocket-bfe7f545.cjs.map":{"text":"{\"version\":3,\"file\":\"websocket-bfe7f545.cjs\",\"sources\":[\"../websocket.js\"],\"sourcesContent\":[\"/* eslint-env browser */\\n\\n/**\\n * Tiny websocket connection handler.\\n *\\n * Implements exponential backoff reconnects, ping/pong, and a nice event system using [lib0/observable].\\n *\\n * @module websocket\\n */\\n\\nimport { Observable } from './observable.js'\\nimport * as time from './time.js'\\nimport * as math from './math.js'\\n\\nconst reconnectTimeoutBase = 1200\\nconst maxReconnectTimeout = 2500\\n// @todo - this should depend on awareness.outdatedTime\\nconst messageReconnectTimeout = 30000\\n\\n/**\\n * @param {WebsocketClient} wsclient\\n */\\nconst setupWS = (wsclient) => {\\n  if (wsclient.shouldConnect && wsclient.ws === null) {\\n    const websocket = new WebSocket(wsclient.url)\\n    const binaryType = wsclient.binaryType\\n    /**\\n     * @type {any}\\n     */\\n    let pingTimeout = null\\n    if (binaryType) {\\n      websocket.binaryType = binaryType\\n    }\\n    wsclient.ws = websocket\\n    wsclient.connecting = true\\n    wsclient.connected = false\\n    websocket.onmessage = event => {\\n      wsclient.lastMessageReceived = time.getUnixTime()\\n      const data = event.data\\n      const message = typeof data === 'string' ? JSON.parse(data) : data\\n      if (message && message.type === 'pong') {\\n        clearTimeout(pingTimeout)\\n        pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2)\\n      }\\n      wsclient.emit('message', [message, wsclient])\\n    }\\n    /**\\n     * @param {any} error\\n     */\\n    const onclose = error => {\\n      if (wsclient.ws !== null) {\\n        wsclient.ws = null\\n        wsclient.connecting = false\\n        if (wsclient.connected) {\\n          wsclient.connected = false\\n          wsclient.emit('disconnect', [{ type: 'disconnect', error }, wsclient])\\n        } else {\\n          wsclient.unsuccessfulReconnects++\\n        }\\n        // Start with no reconnect timeout and increase timeout by\\n        // log10(wsUnsuccessfulReconnects).\\n        // The idea is to increase reconnect timeout slowly and have no reconnect\\n        // timeout at the beginning (log(1) = 0)\\n        setTimeout(setupWS, math.min(math.log10(wsclient.unsuccessfulReconnects + 1) * reconnectTimeoutBase, maxReconnectTimeout), wsclient)\\n      }\\n      clearTimeout(pingTimeout)\\n    }\\n    const sendPing = () => {\\n      if (wsclient.ws === websocket) {\\n        wsclient.send({\\n          type: 'ping'\\n        })\\n      }\\n    }\\n    websocket.onclose = () => onclose(null)\\n    websocket.onerror = error => onclose(error)\\n    websocket.onopen = () => {\\n      wsclient.lastMessageReceived = time.getUnixTime()\\n      wsclient.connecting = false\\n      wsclient.connected = true\\n      wsclient.unsuccessfulReconnects = 0\\n      wsclient.emit('connect', [{ type: 'connect' }, wsclient])\\n      // set ping\\n      pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2)\\n    }\\n  }\\n}\\n\\n/**\\n * @extends Observable<string>\\n */\\nexport class WebsocketClient extends Observable {\\n  /**\\n   * @param {string} url\\n   * @param {object} [opts]\\n   * @param {'arraybuffer' | 'blob' | null} [opts.binaryType] Set `ws.binaryType`\\n   */\\n  constructor (url, { binaryType } = {}) {\\n    super()\\n    this.url = url\\n    /**\\n     * @type {WebSocket?}\\n     */\\n    this.ws = null\\n    this.binaryType = binaryType || null\\n    this.connected = false\\n    this.connecting = false\\n    this.unsuccessfulReconnects = 0\\n    this.lastMessageReceived = 0\\n    /**\\n     * Whether to connect to other peers or not\\n     * @type {boolean}\\n     */\\n    this.shouldConnect = true\\n    this._checkInterval = setInterval(() => {\\n      if (this.connected && messageReconnectTimeout < time.getUnixTime() - this.lastMessageReceived) {\\n        // no message received in a long time - not even your own awareness\\n        // updates (which are updated every 15 seconds)\\n        /** @type {WebSocket} */ (this.ws).close()\\n      }\\n    }, messageReconnectTimeout / 2)\\n    setupWS(this)\\n  }\\n\\n  /**\\n   * @param {any} message\\n   */\\n  send (message) {\\n    if (this.ws) {\\n      this.ws.send(JSON.stringify(message))\\n    }\\n  }\\n\\n  destroy () {\\n    clearInterval(this._checkInterval)\\n    this.disconnect()\\n    super.destroy()\\n  }\\n\\n  disconnect () {\\n    this.shouldConnect = false\\n    if (this.ws !== null) {\\n      this.ws.close()\\n    }\\n  }\\n\\n  connect () {\\n    this.shouldConnect = true\\n    if (!this.connected && this.ws === null) {\\n      setupWS(this)\\n    }\\n  }\\n}\\n\"],\"names\":[\"time.getUnixTime\",\"math.min\",\"math.log10\",\"Observable\"],\"mappings\":\"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\"}","title":"$:/plugins/commons/yjs/lib0/dist/websocket-bfe7f545.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/websocket.cjs":{"text":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./observable.cjs');\nrequire('./time-e00067da.cjs');\nrequire('./math-08e068f9.cjs');\nvar websocket = require('./websocket-bfe7f545.cjs');\nrequire('./map-28a001c9.cjs');\nrequire('./set-7ae96d21.cjs');\nrequire('./array-b2d24238.cjs');\nrequire('./metric.cjs');\n\n\n\nexports.WebsocketClient = websocket.WebsocketClient;\n///# sourceMappingURL=websocket.cjs.map\n","title":"$:/plugins/commons/yjs/lib0/dist/websocket.cjs","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/websocket.cjs.map":{"text":"{\"version\":3,\"file\":\"websocket.cjs\",\"sources\":[],\"sourcesContent\":[],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;\"}","title":"$:/plugins/commons/yjs/lib0/dist/websocket.cjs.map","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/lib0/","version":"0.1.0"},"$:/plugins/commons/yjs/lib0/dist/isobrowser.js":{"text":"/* eslint-env browser */\nconst perf = typeof performance === 'undefined' ? null : performance\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nconst cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n\nexports.performance = perf\nexports.cryptoRandomBuffer = cryptoRandomBuffer\n","title":"$:/plugins/commons/yjs/lib0/dist/isobrowser.js","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/isomorphic.js","version":"0.2.4"},"$:/plugins/commons/yjs/lib0/dist/isomorphic.js":{"text":"\nconst isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n\nconst isoBrowser = require('./isobrowser.js')\n\nconst perf = isNode ? require('perf_hooks').performance : isoBrowser.performance\nconst nodeCrypto = isNode ? require('crypto') : null\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nconst cryptoRandomBuffer = nodeCrypto\n  // node\n  ? len => nodeCrypto.randomBytes(len).buffer\n  : isoBrowser.cryptoRandomBuffer\n\nexports.performance = perf\nexports.cryptoRandomBuffer = cryptoRandomBuffer\n","title":"$:/plugins/commons/yjs/lib0/dist/isomorphic.js","module-type":"library","type":"application/javascript","source":"https://github.com/dmonad/isomorphic.js","version":"0.2.4"}}}